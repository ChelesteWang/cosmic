var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/App.html",[0,0.021,1,1.557]],["body/classes/App.html",[0,0.014,1,1.55,2,0.451,3,0.398,4,0.348,5,0.348,6,1.564,7,0.18,8,0.686,9,1.464,10,3.534,11,3.073,12,2.107,13,0.87,14,3.947,15,3.947,16,3.947,17,3.947,18,3.947,19,3.947,20,2.917,21,2.917,22,3.947,23,3.947,24,2.917,25,3.947,26,0.641,27,1.564,28,2.101,29,1.424,30,2.917,31,0.929,32,0.045,33,0.929,34,0.706,35,0.929,36,1.761,37,1.917,38,0.774,39,0.718,40,1.701,41,2.38,42,1.917,43,1.917,44,1.37,45,1.667,46,1.917,47,1.917,48,1.917,49,1.917,50,1.917,51,2.917,52,1.917,53,2.917,54,1.917,55,1.917,56,1.917,57,2.917,58,2.564,59,1.917,60,1.917,61,1.351,62,1.157,63,1.564,64,1.157,65,1.917,66,1.917,67,2.917,68,1.917,69,2.917,70,2.917,71,1.917,72,2.917,73,1.917,74,2.917,75,1.917,76,1.019,77,2.917,78,1.331,79,0.903,80,1.331,81,1.331,82,1.157,83,1.481,84,0.398,85,1.564,86,2.026,87,1.917,88,1.917,89,1.917,90,1.917,91,1.917,92,1.917,93,1.917,94,1.917,95,1.917,96,1.917,97,1.641,98,2.917,99,1.917,100,1.917,101,1.917,102,1.917,103,1.917,104,1.917,105,1.917,106,1.917,107,1.917,108,1.331,109,1.917,110,2.38,111,1.917,112,3.22,113,1.917,114,1.656,115,2.026,116,3.947,117,3.22,118,1.917,119,2.917,120,1.917,121,1.917,122,1.917,123,1.917,124,1.917,125,2.452,126,3.947,127,2.741,128,1.859,129,1.917,130,2.917,131,0.903,132,1.331,133,1.917,134,1.331,135,1.917,136,1.564,137,1.917,138,2.881,139,1.917,140,1.917,141,1.917,142,1.917,143,1.917,144,1.917,145,2.917,146,1.917,147,1.917,148,1.917,149,1.917,150,0.015,151,0.022,152,0.015]],["title/classes/AppearanceService.html",[0,0.021,64,1.77]],["body/classes/AppearanceService.html",[0,0.023,2,0.745,3,0.657,4,0.576,5,0.576,7,0.297,8,0.981,9,1.576,13,1.243,29,1.366,31,0.981,32,0.045,33,0.981,34,0.77,35,0.981,38,1.106,39,1.561,40,1.394,44,1.237,45,1.477,58,3.301,61,1.237,62,1.912,63,2.583,64,2.517,84,0.657,108,2.895,150,0.024,151,0.032,152,0.024,153,4.311,154,2.583,155,4.661,156,4.661,157,1.468,158,4.169,159,4.169,160,3.167,161,4.04,162,3.167,163,4.169,164,3.167,165,4.169,166,1.912,167,3.167,168,4.169,169,3.167,170,3.401,171,1.912,172,3.167,173,4.661,174,3.167,175,3.167,176,1.186]],["title/classes/ColorRef.html",[0,0.021,177,2.035]],["body/classes/ColorRef.html",[0,0.023,2,0.751,3,0.663,4,0.58,5,0.58,7,0.3,8,0.986,9,1.652,13,1.25,26,1.067,29,1.369,31,0.986,32,0.045,33,0.986,34,0.716,35,0.986,38,1.112,44,0.847,58,3.115,61,1.112,84,0.663,108,2.217,150,0.024,151,0.032,152,0.024,157,1.242,176,1.86,177,2.91,178,4.32,179,2.604,180,5.398,181,5.398,182,5.398,183,4.042,184,4.191,185,4.191,186,2.227,187,3.192,188,3.192,189,4.191,190,3.192,191,3.192,192,4.679,193,4.191,194,4.191,195,3.192,196,4.679,197,3.192,198,3.192]],["title/interfaces/ISettings.html",[199,1.23,200,2.035]],["body/interfaces/ISettings.html",[3,0.857,4,0.75,5,0.75,7,0.387,8,1.158,32,0.044,34,0.558,38,1.095,40,1.38,61,1.095,84,0.857,97,1.38,150,0.031,151,0.037,152,0.031,199,1.732,200,3.419,201,2.866,202,2.866,203,4.542,204,3.654,205,4.016,206,2.866,207,3.367,208,3.419,209,3.367,210,2.492]],["title/classes/Menu.html",[0,0.021,83,1.23]],["body/classes/Menu.html",[0,0.016,2,0.532,3,0.469,4,0.411,5,0.411,7,0.446,8,0.776,9,1.683,10,3.161,11,2.585,13,0.983,26,0.755,28,1.91,29,1.443,31,1.007,32,0.045,33,1.207,34,0.705,35,1.007,38,1.136,39,1.458,40,1.431,41,2.69,44,1.208,45,1.5,61,1.136,83,1.796,84,0.469,86,2.29,97,1.102,114,0.948,117,1.844,128,2.24,150,0.017,151,0.025,152,0.017,157,1.479,176,1.458,186,1.201,211,1.844,212,3.805,213,2.963,214,3.894,215,4.553,216,3.894,217,3.894,218,4.281,219,4.281,220,2.69,221,3.298,222,3.298,223,2.69,224,2.263,225,3.298,226,2.26,227,2.26,228,2.26,229,2.749,230,2.26,231,2.26,232,4.553,233,2.26,234,2.26,235,2.26,236,2.26,237,3.298,238,3.161,239,2.26,240,3.298,241,2.275,242,3.301,243,2.351,244,2.26,245,3.298,246,2.26,247,2.26,248,1.384,249,2.26,250,1.569,251,2.26,252,2.26,253,2.26,254,2.26,255,2.26,256,2.26,257,2.26,258,2.26,259,2.26,260,2.26,261,2.26,262,2.26,263,1.364,264,2.26,265,2.26,266,2.26,267,3.298,268,2.26,269,2.26,270,2.26]],["title/classes/MenuGroup.html",[0,0.021,12,1.381]],["body/classes/MenuGroup.html",[0,0.024,2,0.767,3,0.676,4,0.592,5,0.592,7,0.306,8,0.999,9,1.588,10,3.607,12,2.001,13,1.267,26,1.089,28,2.179,29,1.378,31,0.999,32,0.045,33,0.999,34,0.677,35,0.999,38,0.865,40,1.089,44,1.127,45,1.267,61,0.865,83,2.354,84,0.676,86,2.263,97,1.58,150,0.025,151,0.032,152,0.025,157,1.413,176,1.22,213,2.565,223,3.465,229,2.565,271,2.509,272,2.658,273,4.726,274,5.008,275,4.248,276,4.248,277,3.258,278,3.258,279,4.248,280,3.258,281,4.248,282,3.258,283,2.658,284,3.258,285,3.258,286,3.258,287,3.258,288,3.258,289,4.248,290,3.258,291,3.258,292,3.258]],["title/classes/MenuItem.html",[0,0.021,128,1.381]],["body/classes/MenuItem.html",[0,0.023,2,0.745,3,0.657,4,0.576,5,0.576,7,0.297,8,0.981,9,1.688,11,1.912,26,1.059,29,1.402,31,0.745,32,0.045,33,0.745,34,0.773,35,0.745,45,0.944,61,0.84,82,2.99,83,1.329,84,1.028,97,1.394,125,3.574,127,3.669,128,2.196,150,0.024,151,0.032,152,0.024,157,1.237,199,1.329,212,3.237,213,2.814,224,2.078,229,2.517,238,2.895,241,2.632,243,1.912,248,1.329,250,2.199,271,2.538,293,1.683,294,3.802,295,3.401,296,4.169,297,3.439,298,3.167,299,3.167,300,3.167,301,3.167,302,2.517,303,2.199,304,1.912,305,2.583,306,2.583,307,2.583,308,2.583,309,2.583,310,2.583]],["title/interfaces/MenuItemConfig.html",[199,1.23,241,1.557]],["body/interfaces/MenuItemConfig.html",[0,0.025,3,0.721,4,0.631,5,0.631,7,0.326,8,1.041,9,1.53,11,2.097,32,0.045,34,0.775,45,1.036,61,0.922,82,3.199,83,1.457,84,1.065,97,1.48,125,3.762,127,3.823,128,2.085,150,0.026,151,0.034,152,0.026,157,0.922,199,1.457,201,2.412,212,2.412,213,2.097,224,2.152,229,2.097,238,2.412,241,2.589,243,2.097,248,1.457,250,2.412,271,1.636,293,1.846,294,2.834,295,2.834,297,3.679,302,2.672,303,2.412,304,2.097,305,2.834,306,2.834,307,2.834,308,2.834,309,2.834,310,2.834]],["title/classes/SplitBoardController.html",[0,0.021,311,1.77]],["body/classes/SplitBoardController.html",[0,0.012,2,0.383,3,0.338,4,0.296,5,0.296,7,0.411,8,0.605,9,1.679,13,0.767,26,0.545,28,0.684,29,1.368,31,0.927,32,0.046,33,0.927,34,0.681,35,0.927,38,1.111,39,1.475,44,1.111,45,1.427,61,0.846,76,1.923,78,1.786,79,0.768,80,1.132,84,0.338,85,1.33,97,1.21,114,1.079,131,2.203,132,2.513,134,1.132,150,0.012,151,0.02,152,0.012,157,1.241,166,1.924,176,1.475,210,1.924,242,3.801,248,0.684,263,2.998,311,1.553,312,2.453,313,1.33,314,3.187,315,3.187,316,3.187,317,3.187,318,3.187,319,3.187,320,4.383,321,4.383,322,3.619,323,2.572,324,2.572,325,2.572,326,2.572,327,3.619,328,1.63,329,2.572,330,1.212,331,1.63,332,1.63,333,1.63,334,1.63,335,1.63,336,1.63,337,1.63,338,1.63,339,2.572,340,3.905,341,1.63,342,3.415,343,2.572,344,1.63,345,2.572,346,4.787,347,1.63,348,3.706,349,2.572,350,1.63,351,1.63,352,0.984,353,2.213,354,3.575,355,2.572,356,2.572,357,1.924,358,1.33,359,3.187,360,1.63,361,3.187,362,1.63,363,3.187,364,3.187,365,3.187,366,1.63,367,1.63,368,1.63,369,1.63,370,1.63,371,1.63,372,1.63,373,1.63,374,1.63,375,1.63,376,1.63,377,1.63,378,2.572,379,2.572,380,1.63,381,1.63,382,1.63,383,1.63,384,1.63,385,3.187,386,0.984,387,4.787,388,1.63,389,1.63,390,1.63,391,1.63,392,1.63,393,1.63,394,1.63,395,3.619,396,2.098,397,1.33,398,1.63,399,2.572,400,1.33,401,1.33,402,2.098,403,1.33,404,1.132,405,1.33,406,1.33,407,4.186,408,4.186,409,2.572,410,3.619,411,2.572,412,3.415,413,2.572,414,1.63,415,2.572,416,0.984,417,1.63,418,0.984,419,2.098,420,1.63,421,1.63]],["title/classes/SplitBoardView.html",[0,0.021,76,1.557]],["body/classes/SplitBoardView.html",[0,0.008,2,0.245,3,0.216,4,0.189,5,0.189,7,0.425,8,0.419,9,1.477,13,0.53,26,0.779,28,1.298,29,1.355,31,1.084,32,0.046,33,1.084,34,0.695,35,1.084,36,1.074,38,0.956,39,1.262,40,1.269,44,1.275,45,1.374,61,0.821,62,0.629,76,0.945,79,2.171,80,0.723,84,0.483,97,1.624,112,1.451,131,1.588,136,1.451,138,1.9,150,0.008,151,0.014,152,0.008,157,1.454,170,1.451,171,0.629,176,1.626,186,0.945,204,0.723,210,0.629,220,2.247,224,0.746,242,3.918,248,1.775,263,1.868,304,0.629,311,1.406,312,2.354,330,1.867,340,3.452,342,3.232,352,2.035,353,1.913,386,0.629,396,2.524,397,2.75,400,0.85,401,0.85,402,0.85,403,2.524,404,2.501,405,0.85,406,0.85,412,4.004,416,2.292,418,2.035,419,0.85,422,0.629,423,1.451,424,2.329,425,2.329,426,3.232,427,2.329,428,2.329,429,1.779,430,1.779,431,1.779,432,2.329,433,1.779,434,2.755,435,1.779,436,1.779,437,1.779,438,1.779,439,1.779,440,1.779,441,1.779,442,1.779,443,1.235,444,1.235,445,1.235,446,1.779,447,3.349,448,1.042,449,1.042,450,1.042,451,1.779,452,1.042,453,2.247,454,0.85,455,1.779,456,1.042,457,1.779,458,1.042,459,1.779,460,3.094,461,1.042,462,1.042,463,1.779,464,1.042,465,1.042,466,1.779,467,4.441,468,4.342,469,4.441,470,1.042,471,1.042,472,1.779,473,3.371,474,1.042,475,1.779,476,1.042,477,1.779,478,1.779,479,1.779,480,2.938,481,2.329,482,2.341,483,2.149,484,1.042,485,1.779,486,1.042,487,1.779,488,1.042,489,1.779,490,1.042,491,1.779,492,1.042,493,0.723,494,0.85,495,0.723,496,0.723,497,0.85,498,0.723,499,0.723,500,1.074,501,0.85,502,1.042,503,0.85,504,0.723,505,0.85,506,1.779,507,0.85,508,1.042,509,1.042,510,1.042,511,0.85,512,1.235,513,1.042,514,1.042,515,1.042,516,1.042,517,1.042,518,1.042,519,1.779,520,1.779,521,1.779,522,1.451,523,2.755,524,1.451,525,1.451,526,1.779,527,1.042,528,1.779,529,1.042,530,2.755,531,1.042,532,1.779,533,1.042,534,1.042,535,1.042,536,1.042,537,1.042,538,1.042,539,1.042,540,2.755,541,3.796,542,1.042,543,1.042,544,1.042,545,1.042,546,1.042,547,1.042,548,1.042,549,1.779,550,3.094,551,1.042,552,1.042,553,1.042,554,1.042,555,1.042,556,1.042,557,0.85,558,1.779,559,0.85,560,1.042,561,1.779,562,1.451,563,1.779,564,1.779,565,1.779,566,1.779,567,1.779,568,1.779,569,1.042,570,1.042,571,1.779,572,1.779,573,1.779,574,1.042,575,1.042,576,3.094,577,1.042,578,1.042,579,1.042,580,1.042,581,2.329,582,1.042,583,1.042,584,1.042,585,3.094,586,1.779,587,2.755,588,2.329,589,1.779,590,1.042,591,1.042,592,1.779,593,1.042,594,1.042]],["title/classes/SplitItemView.html",[0,0.021,79,1.381]],["body/classes/SplitItemView.html",[0,0.013,2,0.428,3,0.378,4,0.331,5,0.331,7,0.171,8,0.659,9,1.608,13,0.836,26,1.143,28,2.167,29,1.448,31,1.109,32,0.045,33,1.109,34,0.713,35,1.109,36,1.692,38,1.163,39,1.553,40,0.608,44,1.371,45,1.521,61,0.907,78,1.264,79,2.064,84,0.378,114,0.763,115,1.264,131,1.321,150,0.014,151,0.021,152,0.014,157,1.497,176,1.28,204,1.946,224,1.977,248,0.763,304,1.099,312,2.524,330,2.221,352,1.099,353,1.946,354,3.384,357,2.646,386,1.099,416,2.505,418,2.505,423,2.287,426,1.484,443,1.946,444,1.946,445,1.946,453,3.133,454,1.484,482,2.881,483,2.881,493,1.264,494,1.484,495,1.264,496,1.264,497,1.484,498,1.264,499,1.264,500,1.692,501,1.484,507,1.484,511,1.484,512,3.17,525,1.484,562,3.724,595,1.264,596,3.419,597,3.419,598,3.419,599,3.841,600,3.841,601,3.841,602,3.841,603,2.803,604,2.803,605,3.841,606,2.803,607,2.803,608,2.803,609,2.803,610,2.803,611,3.841,612,2.287,613,2.803,614,2.803,615,1.82,616,1.82,617,1.82,618,1.82,619,3.841,620,1.82,621,1.82,622,1.82,623,2.803,624,2.803,625,1.82,626,2.803,627,1.82,628,2.803,629,1.82,630,1.82,631,2.803,632,1.82,633,3.841,634,3.419,635,2.803,636,1.82,637,2.803,638,2.803,639,1.82,640,1.82,641,1.484,642,1.82,643,1.82,644,3.419,645,2.803,646,1.82,647,1.82,648,1.82,649,2.803,650,3.419,651,1.82,652,1.82,653,1.82,654,1.82,655,1.82,656,1.82,657,1.82,658,1.82,659,1.82,660,1.82,661,1.82,662,2.803,663,1.82,664,1.82]],["title/classes/Test.html",[0,0.021,665,2.035]],["body/classes/Test.html",[0,0.03,2,0.971,3,0.857,4,0.75,5,0.75,7,0.387,13,1.468,29,1.095,31,0.971,32,0.044,33,0.971,34,0.558,35,0.971,44,1.095,45,1.231,84,0.857,114,2.066,150,0.031,151,0.037,152,0.031,157,1.396,224,2.207,665,3.419,666,3.367,667,4.924,668,4.924,669,4.128,670,4.128,671,4.128]],["title/classes/View.html",[0,0.021,330,1.381]],["body/classes/View.html",[0,0.024,2,0.781,3,0.689,4,0.603,5,0.603,7,0.312,8,1.012,13,1.282,26,1.11,27,3.508,28,2.378,29,1.386,31,1.187,32,0.045,33,1.187,34,0.746,35,1.187,36,3.155,38,0.881,44,1.265,84,0.689,115,2.305,131,2.026,150,0.025,151,0.033,152,0.025,157,1.265,176,1.785,186,1.764,283,2.708,330,2.026,443,2.986,444,2.986,445,2.986,493,2.986,495,2.305,496,2.986,498,2.305,499,2.986,500,3.045,512,3.311,524,2.708,672,2.305,673,4.3,674,3.32,675,3.32,676,3.32,677,2.986,678,3.508,679,3.508,680,3.32,681,3.32,682,3.32]],["title/coverage.html",[683,3.23]],["body/coverage.html",[0,0.039,1,1.805,5,0.428,6,1.921,12,1.601,32,0.045,34,0.318,40,0.787,64,1.421,76,1.251,79,1.109,81,1.635,83,0.988,128,1.109,134,1.635,150,0.018,151,0.026,152,0.018,153,1.921,154,1.921,166,2.635,171,1.421,177,1.635,178,1.921,179,1.921,199,1.425,200,1.635,202,2.359,208,1.635,211,1.921,241,1.251,263,3.545,271,1.878,272,1.921,293,1.805,302,1.421,311,1.421,312,2.056,313,1.921,330,1.109,358,1.921,422,2.051,504,1.635,595,1.635,612,3.775,665,1.635,666,1.921,672,1.635,683,1.921,684,1.921,685,2.354,686,2.354,687,3.56,688,5.802,689,1.921,690,5.793,691,2.771,692,1.921,693,1.921,694,2.771,695,1.921,696,3.397,697,2.354,698,2.354,699,2.354,700,3.95,701,3.95,702,1.921,703,1.921,704,4.627,705,1.921,706,1.921,707,1.921,708,1.921,709,1.921,710,1.921,711,1.921,712,1.921,713,1.921,714,1.921,715,1.921,716,1.921,717,1.921,718,1.921,719,1.921,720,1.921,721,1.921,722,1.921,723,1.921,724,1.921,725,4.364,726,1.921,727,2.354,728,1.921,729,2.359,730,2.354,731,2.354,732,2.354,733,1.921,734,2.354,735,2.354]],["title/dependencies.html",[736,2.468,737,2.44]],["body/dependencies.html",[32,0.045,62,2.505,150,0.032,151,0.038,152,0.032,161,3.385,183,2.881,206,3.662,207,3.385,503,3.385,737,2.881,738,4.149,739,4.149,740,4.149,741,3.385,742,4.149,743,4.149,744,4.149,745,4.149,746,4.149,747,4.149,748,4.149,749,4.149,750,4.149,751,4.149,752,4.149,753,4.149,754,4.149,755,4.149]],["title/miscellaneous/enumerations.html",[756,0.924,757,2.867]],["body/miscellaneous/enumerations.html",[7,0.376,32,0.043,39,2.019,58,2.918,82,2.918,110,3.265,150,0.03,151,0.037,152,0.03,243,2.416,248,1.679,271,1.885,293,2.568,312,2.277,352,2.918,357,3.256,404,2.779,416,2.918,418,2.918,422,2.918,480,3.265,482,3.356,483,3.356,595,3.356,641,3.943,756,1.498,757,3.265,758,4.002,759,3.943,760,3.265,761,4.002,762,4.002]],["title/miscellaneous/functions.html",[756,0.924,763,2.867]],["body/miscellaneous/functions.html",[7,0.376,12,1.885,31,1.222,32,0.043,33,1.222,35,1.222,44,1.282,81,3.356,114,1.679,150,0.03,151,0.037,152,0.03,171,2.918,186,2.568,224,1.679,302,3.135,700,2.779,701,3.356,702,3.943,726,3.265,729,2.779,733,3.265,756,1.498,763,3.265,764,3.265,765,4.002,766,3.265,767,4.002,768,4.002,769,4.002,770,4.002,771,4.002,772,4.833,773,4.833,774,4.002]],["title/index.html",[7,0.232,775,2.013,776,2.013]],["body/index.html",[1,2.242,4,0.855,32,0.039,150,0.024,151,0.032,152,0.024,183,2.24,199,1.353,206,3.464,303,2.24,522,2.631,677,2.24,737,2.93,777,4.988,778,4.703,779,4.219,780,4.219,781,3.225,782,3.225,783,3.225,784,3.225,785,3.225,786,3.225,787,3.225,788,4.988,789,3.225,790,3.225,791,2.631,792,3.225,793,3.225,794,3.225,795,3.225,796,3.225,797,3.225,798,3.225,799,2.631,800,2.24,801,3.225,802,4.219,803,3.225,804,3.225,805,3.225,806,4.219,807,3.225,808,3.225,809,3.225,810,3.225,811,4.703,812,3.225,813,3.225,814,3.225,815,3.225,816,3.225,817,3.225,818,3.225,819,2.24,820,3.225,821,3.225,822,3.225,823,3.225,824,3.225,825,3.225,826,3.225,827,3.225,828,4.703,829,3.225,830,3.225,831,3.225,832,4.703,833,3.225,834,2.631,835,3.225,836,3.225,837,3.225,838,4.703,839,3.225,840,3.225,841,3.225,842,3.225,843,3.225,844,4.703,845,4.219,846,3.225,847,3.225,848,3.225,849,3.225,850,3.225,851,2.631,852,3.225,853,3.225,854,3.225,855,3.225,856,3.225,857,3.442,858,3.225,859,3.225,860,4.219,861,3.225,862,4.219,863,3.225,864,4.219,865,2.631,866,2.631,867,2.631,868,3.225,869,3.225,870,3.225,871,3.225,872,3.225,873,3.225,874,3.225,875,3.225,876,3.225,877,3.225]],["title/license.html",[775,2.013,776,2.013,800,1.714]],["body/license.html",[32,0.035,150,0.028,151,0.035,152,0.028,348,2.964,357,2.194,684,2.964,791,2.964,799,2.964,800,2.523,851,2.964,865,2.964,866,2.964,867,2.964,878,4.974,879,3.633,880,3.633,881,3.633,882,4.554,883,3.633,884,3.633,885,3.633,886,3.633,887,3.633,888,3.633,889,4.554,890,5.672,891,3.633,892,3.633,893,4.974,894,3.633,895,4.554,896,3.633,897,3.633,898,3.715,899,3.633,900,3.633,901,3.633,902,3.633,903,4.554,904,3.633,905,3.633,906,3.633,907,3.633,908,3.633,909,3.633,910,3.633,911,4.554,912,4.554,913,3.633,914,3.633,915,3.633,916,3.633,917,3.633,918,3.633,919,3.633,920,3.633,921,3.633,922,3.633,923,3.633,924,3.633,925,3.633,926,3.633,927,3.633,928,3.633,929,3.633,930,3.633,931,3.633,932,3.633,933,3.633,934,3.633,935,3.633,936,3.633,937,3.633,938,3.633,939,3.633,940,3.633]],["title/modules.html",[819,2.749]],["body/modules.html",[32,0.04,150,0.035,151,0.04,152,0.035,819,3.192]],["title/overview.html",[941,3.23]],["body/overview.html",[2,1.069,32,0.04,132,3.155,150,0.035,151,0.04,152,0.035,201,3.155,941,3.706,942,4.543]],["title/miscellaneous/typealiases.html",[756,0.924,943,3.514]],["body/miscellaneous/typealiases.html",[7,0.407,32,0.043,34,0.585,131,2.041,150,0.033,151,0.038,152,0.033,166,2.615,271,2.041,293,2.692,297,3.518,500,3.058,672,3.008,677,3.008,678,3.533,679,3.533,756,1.622,760,3.533,944,4.332,945,4.332]],["title/miscellaneous/variables.html",[756,0.924,946,2.867]],["body/miscellaneous/variables.html",[1,1.694,7,0.203,12,1.786,32,0.045,34,0.512,38,1.519,39,2.144,40,1.267,97,0.721,114,0.905,150,0.016,151,0.024,152,0.016,202,1.498,203,1.76,205,1.76,208,2.214,209,1.76,210,2.289,312,1.017,386,1.925,422,1.925,447,3.093,504,2.214,505,1.76,557,1.76,559,1.76,687,1.76,689,2.601,691,3.946,692,3.416,693,3.093,694,1.76,695,2.601,700,1.498,701,3.911,703,2.601,705,2.601,706,2.601,707,2.601,708,2.601,709,2.601,710,2.601,711,2.601,712,2.601,713,2.601,714,2.601,715,2.601,716,2.601,717,2.601,718,2.601,719,2.601,720,2.601,721,2.601,722,2.601,723,2.601,724,2.601,728,1.76,729,1.498,741,1.76,756,0.808,759,1.76,764,3.644,766,4.578,834,1.76,857,1.76,898,1.76,946,1.76,947,2.158,948,3.188,949,2.158,950,2.158,951,2.158,952,3.188,953,2.158,954,2.158,955,3.188,956,2.158,957,3.188,958,3.188,959,2.158,960,2.158,961,2.158,962,2.158,963,2.158,964,3.188,965,4.187,966,2.158,967,3.188,968,2.158,969,2.158,970,3.188,971,2.158,972,3.188,973,2.158,974,3.188,975,3.188,976,2.158,977,2.158,978,2.158,979,2.158,980,2.158,981,3.188,982,2.158,983,3.188,984,3.188,985,4.187,986,2.158,987,3.188,988,2.158,989,2.158,990,2.158,991,2.158,992,3.188,993,3.188,994,2.158,995,2.158,996,2.158,997,2.158,998,2.158,999,2.158,1000,2.158,1001,2.158,1002,2.158,1003,2.158,1004,3.791,1005,4.187,1006,2.158,1007,2.158,1008,2.158,1009,2.158,1010,2.158,1011,2.158,1012,2.158,1013,2.158,1014,2.158,1015,2.158,1016,2.158,1017,2.158,1018,2.158,1019,2.158,1020,2.158,1021,2.158,1022,2.158,1023,2.158,1024,3.188]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":263,"title":{},"body":{"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"coverage.html":{}}}],["0.1.13",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":131,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["1.1.5",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["1.6.4",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":704,"title":{},"body":{"coverage.html":{}}}],["1/21",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["1/26",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":612,"title":{},"body":{"classes/SplitItemView.html":{},"coverage.html":{}}}],["11",{"_index":942,"title":{},"body":{"overview.html":{}}}],["15",{"_index":554,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1].root",{"_index":582,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1].root.after(item.root",{"_index":537,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1f1f1f",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":132,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"overview.html":{}}}],["20",{"_index":145,"title":{},"body":{"classes/App.html":{}}}],["2020",{"_index":880,"title":{},"body":{"license.html":{}}}],["272728",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e2f30",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":134,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"coverage.html":{}}}],["3.0.1",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["3.1.3",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":419,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["393939",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3f3f3f",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3px",{"_index":558,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["4",{"_index":358,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["4.0.7",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["4.3.5",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["454545",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["464749",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4px",{"_index":517,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["5",{"_index":410,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["5.1.1",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["5580c0",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5d5f61",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.4",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":146,"title":{},"body":{"classes/App.html":{}}}],["680",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.2",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":552,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["729cd4",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["800",{"_index":614,"title":{},"body":{"classes/SplitItemView.html":{}}}],["808080",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["900",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_bgcolorclassname",{"_index":596,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_growclassname",{"_index":597,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_shrinkclassname",{"_index":598,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_type",{"_index":155,"title":{},"body":{"classes/AppearanceService.html":{}}}],["_waitformergeitem",{"_index":424,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["above",{"_index":910,"title":{},"body":{"license.html":{}}}],["action",{"_index":865,"title":{},"body":{"index.html":{},"license.html":{}}}],["activeexpand",{"_index":322,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["activeid",{"_index":314,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["addcolumn",{"_index":429,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addcolumn(item",{"_index":455,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["added",{"_index":522,"title":{},"body":{"classes/SplitBoardView.html":{},"index.html":{}}}],["addexpandbutton",{"_index":599,"title":{},"body":{"classes/SplitItemView.html":{}}}],["addrow",{"_index":430,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addrow(item",{"_index":457,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["aliases",{"_index":944,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":901,"title":{},"body":{"license.html":{}}}],["anycolor",{"_index":180,"title":{},"body":{"classes/ColorRef.html":{}}}],["anycolorhex",{"_index":774,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":1,"title":{"classes/App.html":{}},"body":{"classes/App.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app(document.body",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.quit",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appearance",{"_index":191,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearanceservice",{"_index":64,"title":{"classes/AppearanceService.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"coverage.html":{}}}],["appearancetype",{"_index":58,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"miscellaneous/enumerations.html":{}}}],["appearancetype.any",{"_index":197,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearancetype.dark",{"_index":108,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{}}}],["appearancetype.light",{"_index":198,"title":{},"body":{"classes/ColorRef.html":{}}}],["append",{"_index":443,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["append(child",{"_index":493,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["application",{"_index":857,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["applysplit",{"_index":431,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["applysplit(direction",{"_index":459,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["aps",{"_index":103,"title":{},"body":{"classes/App.html":{}}}],["aps.onmodechanged((type",{"_index":105,"title":{},"body":{"classes/App.html":{}}}],["arising",{"_index":938,"title":{},"body":{"license.html":{}}}],["array",{"_index":229,"title":{},"body":{"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["associated",{"_index":891,"title":{},"body":{"license.html":{}}}],["authors",{"_index":928,"title":{},"body":{"license.html":{}}}],["auto",{"_index":677,"title":{},"body":{"classes/View.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["automatically",{"_index":868,"title":{},"body":{"index.html":{}}}],["available",{"_index":795,"title":{},"body":{"index.html":{}}}],["bababa",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar.svelte",{"_index":69,"title":{},"body":{"classes/App.html":{}}}],["bg",{"_index":610,"title":{},"body":{"classes/SplitItemView.html":{}}}],["bgcolor",{"_index":703,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["board",{"_index":506,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.controller",{"_index":502,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.controller.ts",{"_index":313,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["board.controller.ts:10",{"_index":336,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:11",{"_index":337,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:12",{"_index":331,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:14",{"_index":332,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:15",{"_index":329,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:28",{"_index":347,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:43",{"_index":350,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:50",{"_index":338,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:58",{"_index":351,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:6",{"_index":335,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:69",{"_index":344,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:7",{"_index":333,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:8",{"_index":334,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:80",{"_index":341,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.view",{"_index":78,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{}}}],["board.view.ts",{"_index":422,"title":{},"body":{"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["board.view.ts:107",{"_index":465,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:112",{"_index":486,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:131",{"_index":488,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:150",{"_index":490,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:159",{"_index":476,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:17",{"_index":450,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:18",{"_index":449,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:19",{"_index":452,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:193",{"_index":470,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:20",{"_index":448,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:21",{"_index":446,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:27",{"_index":471,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:31",{"_index":458,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:42",{"_index":456,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:54",{"_index":474,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:64",{"_index":484,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:67",{"_index":492,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:77",{"_index":462,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:83",{"_index":464,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:95",{"_index":461,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["boolean",{"_index":204,"title":{},"body":{"interfaces/ISettings.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["bootstrap",{"_index":14,"title":{},"body":{"classes/App.html":{}}}],["bordercolor",{"_index":705,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":852,"title":{},"body":{"index.html":{}}}],["browserwindow",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder",{"_index":854,"title":{},"body":{"index.html":{}}}],["building",{"_index":807,"title":{},"body":{"index.html":{}}}],["bundled",{"_index":821,"title":{},"body":{"index.html":{}}}],["button",{"_index":624,"title":{},"body":{"classes/SplitItemView.html":{}}}],["c",{"_index":879,"title":{},"body":{"license.html":{}}}],["c0c0c1",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c4666f",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c6c6c6",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback",{"_index":127,"title":{},"body":{"classes/App.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["cancelformerge",{"_index":432,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["cancelformerge():void",{"_index":544,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["cancelwaitformerge",{"_index":600,"title":{},"body":{"classes/SplitItemView.html":{}}}],["case",{"_index":196,"title":{},"body":{"classes/ColorRef.html":{}}}],["cgray",{"_index":611,"title":{},"body":{"classes/SplitItemView.html":{}}}],["charge",{"_index":886,"title":{},"body":{"license.html":{}}}],["check",{"_index":203,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["checkdirection",{"_index":433,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["checkdirection(type",{"_index":463,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["checkexpandstate",{"_index":323,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["checkexpandstate(clientx",{"_index":339,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["child",{"_index":495,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["children",{"_index":294,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["childs",{"_index":498,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["claim",{"_index":931,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"overview.html":{}}}],["classname",{"_index":633,"title":{},"body":{"classes/SplitItemView.html":{}}}],["clientheight",{"_index":584,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["clientwidth",{"_index":583,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["clientx",{"_index":342,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["clienty",{"_index":340,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["code",{"_index":788,"title":{},"body":{"index.html":{}}}],["col",{"_index":480,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":183,"title":{},"body":{"classes/ColorRef.html":{},"dependencies.html":{},"index.html":{}}}],["color(appearancetype",{"_index":189,"title":{},"body":{"classes/ColorRef.html":{}}}],["color.ts",{"_index":701,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["colorref",{"_index":177,"title":{"classes/ColorRef.html":{}},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["colorsetroot",{"_index":98,"title":{},"body":{"classes/App.html":{}}}],["column",{"_index":398,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["common",{"_index":826,"title":{},"body":{"index.html":{}}}],["community",{"_index":786,"title":{},"body":{"index.html":{}}}],["compilation",{"_index":843,"title":{},"body":{"index.html":{}}}],["compile",{"_index":838,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":860,"title":{},"body":{"index.html":{}}}],["components",{"_index":828,"title":{},"body":{"index.html":{}}}],["concrete",{"_index":781,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":909,"title":{},"body":{"license.html":{}}}],["config",{"_index":238,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["configured",{"_index":856,"title":{},"body":{"index.html":{}}}],["connection",{"_index":939,"title":{},"body":{"license.html":{}}}],["console.log(`test",{"_index":670,"title":{},"body":{"classes/Test.html":{}}}],["console.log(menuitem",{"_index":130,"title":{},"body":{"classes/App.html":{}}}],["console.warn('direction",{"_index":520,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["const",{"_index":97,"title":{},"body":{"classes/App.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"classes/App.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["constructor(anycolor",{"_index":184,"title":{},"body":{"classes/ColorRef.html":{}}}],["constructor(config",{"_index":295,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["constructor(container",{"_index":223,"title":{},"body":{"classes/Menu.html":{},"classes/MenuGroup.html":{}}}],["constructor(private",{"_index":85,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{}}}],["constructor(root",{"_index":27,"title":{},"body":{"classes/App.html":{},"classes/View.html":{}}}],["constructor(view",{"_index":328,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["container",{"_index":10,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{}}}],["containermodule",{"_index":172,"title":{},"body":{"classes/AppearanceService.html":{}}}],["contentview",{"_index":562,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["contentview.classlist.add('flex",{"_index":645,"title":{},"body":{"classes/SplitItemView.html":{}}}],["context",{"_index":11,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["contextisolation",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":935,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":874,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":871,"title":{},"body":{"index.html":{}}}],["controlaccentcolor",{"_index":706,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlbackgroundcolor",{"_index":707,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controldisabledcolor",{"_index":708,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlforbiddencolor",{"_index":709,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlhighlightcolor",{"_index":710,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":425,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["copies",{"_index":903,"title":{},"body":{"license.html":{}}}],["copy",{"_index":889,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":878,"title":{},"body":{"license.html":{}}}],["cosmic",{"_index":777,"title":{},"body":{"index.html":{}}}],["cosmic/core/browser/layout/split",{"_index":77,"title":{},"body":{"classes/App.html":{}}}],["cosmic/core/common/appearance",{"_index":63,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{}}}],["cosmic/workbench/services/appearance",{"_index":65,"title":{},"body":{"classes/App.html":{}}}],["coverage",{"_index":683,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createmenu",{"_index":218,"title":{},"body":{"classes/Menu.html":{}}}],["createwindow",{"_index":689,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["crosshair",{"_index":481,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["current",{"_index":861,"title":{},"body":{"index.html":{}}}],["d00000",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d1905d",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d2r",{"_index":783,"title":{},"body":{"index.html":{}}}],["d7d7d7",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d9d9d9",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":932,"title":{},"body":{"license.html":{}}}],["dark",{"_index":110,"title":{},"body":{"classes/App.html":{},"miscellaneous/enumerations.html":{}}}],["dark:bg",{"_index":613,"title":{},"body":{"classes/SplitItemView.html":{}}}],["darkcolor",{"_index":181,"title":{},"body":{"classes/ColorRef.html":{}}}],["darkcolorhex",{"_index":773,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date.now",{"_index":284,"title":{},"body":{"classes/MenuGroup.html":{}}}],["deal",{"_index":892,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":940,"title":{},"body":{"license.html":{}}}],["debugging",{"_index":863,"title":{},"body":{"index.html":{}}}],["default",{"_index":38,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":209,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["defaultscope",{"_index":87,"title":{},"body":{"classes/App.html":{}}}],["defined",{"_index":29,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{}}}],["dependencies",{"_index":737,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["design",{"_index":778,"title":{},"body":{"index.html":{}}}],["destorysplit",{"_index":434,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["destroy",{"_index":219,"title":{},"body":{"classes/Menu.html":{}}}],["dev",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["develop",{"_index":784,"title":{},"body":{"index.html":{}}}],["development",{"_index":793,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":426,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["directionstyles",{"_index":641,"title":{},"body":{"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["directionstyles[direction",{"_index":663,"title":{},"body":{"classes/SplitItemView.html":{}}}],["directiontype",{"_index":352,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["directiontype.col",{"_index":396,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["directiontype.row",{"_index":402,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["dist/workbench/desktop",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":866,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribution",{"_index":845,"title":{},"body":{"index.html":{}}}],["divided",{"_index":817,"title":{},"body":{"index.html":{}}}],["document.body.classlist.add('mode",{"_index":109,"title":{},"body":{"classes/App.html":{}}}],["document.body.classlist.remove('mode",{"_index":111,"title":{},"body":{"classes/App.html":{}}}],["document.createelement('div",{"_index":283,"title":{},"body":{"classes/MenuGroup.html":{},"classes/View.html":{}}}],["document.createelement('style",{"_index":99,"title":{},"body":{"classes/App.html":{}}}],["document.queryselector('#main",{"_index":120,"title":{},"body":{"classes/App.html":{}}}],["documentation",{"_index":684,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["draft",{"_index":869,"title":{},"body":{"index.html":{}}}],["e",{"_index":482,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["e0e0e0",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":822,"title":{},"body":{"index.html":{}}}],["electron",{"_index":206,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{},"index.html":{}}}],["electron/.exec(process.execpath",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["electronstore",{"_index":205,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["enableremotemodule",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entire",{"_index":815,"title":{},"body":{"index.html":{}}}],["enum",{"_index":304,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["enumerations",{"_index":757,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["event",{"_index":348,"title":{},"body":{"classes/SplitBoardController.html":{},"license.html":{}}}],["event.clientx",{"_index":374,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.clienty",{"_index":361,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.preventdefault",{"_index":375,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.stoppropagation",{"_index":376,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.target",{"_index":368,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["eventemitter2",{"_index":161,"title":{},"body":{"classes/AppearanceService.html":{},"dependencies.html":{}}}],["eventemitter3",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["everyone",{"_index":796,"title":{},"body":{"index.html":{}}}],["evt",{"_index":156,"title":{},"body":{"classes/AppearanceService.html":{}}}],["expand",{"_index":354,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{}}}],["expand.svelte",{"_index":640,"title":{},"body":{"classes/SplitItemView.html":{}}}],["expandactive",{"_index":315,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expanded",{"_index":478,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["expandleavehandler",{"_index":316,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmouseuphandler",{"_index":317,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmovehandler",{"_index":318,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandtype",{"_index":319,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["export",{"_index":84,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{}}}],["express",{"_index":919,"title":{},"body":{"license.html":{}}}],["extends",{"_index":423,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["f2f2f2",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f9f9f9",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":210,"title":{},"body":{"interfaces/ISettings.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["ffae2b",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"coverage.html":{}}}],["file://${join(__dirname",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":867,"title":{},"body":{"index.html":{},"license.html":{}}}],["fitness",{"_index":924,"title":{},"body":{"license.html":{}}}],["flex",{"_index":512,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["flowvalue",{"_index":500,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["fn",{"_index":165,"title":{},"body":{"classes/AppearanceService.html":{}}}],["following",{"_index":908,"title":{},"body":{"license.html":{}}}],["fourthbgcolor",{"_index":711,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":885,"title":{},"body":{"license.html":{}}}],["function",{"_index":166,"title":{},"body":{"classes/AppearanceService.html":{},"classes/SplitBoardController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":763,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":906,"title":{},"body":{"license.html":{}}}],["getexpandresizes",{"_index":435,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["getexpandresizes(index",{"_index":466,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["getmenugroup",{"_index":81,"title":{},"body":{"classes/App.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getmenugroup(header",{"_index":122,"title":{},"body":{"classes/App.html":{}}}],["getmenugroup(target",{"_index":768,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmenuinsatance",{"_index":274,"title":{},"body":{"classes/MenuGroup.html":{}}}],["getting",{"_index":775,"title":{"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":864,"title":{},"body":{"index.html":{}}}],["granted",{"_index":884,"title":{},"body":{"license.html":{}}}],["gridbackgroundcolor",{"_index":712,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":243,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/enumerations.html":{}}}],["group.ts",{"_index":272,"title":{},"body":{"classes/MenuGroup.html":{},"coverage.html":{}}}],["group.ts:12",{"_index":278,"title":{},"body":{"classes/MenuGroup.html":{}}}],["group.ts:21",{"_index":280,"title":{},"body":{"classes/MenuGroup.html":{}}}],["group.ts:4",{"_index":277,"title":{},"body":{"classes/MenuGroup.html":{}}}],["group.ts:5",{"_index":276,"title":{},"body":{"classes/MenuGroup.html":{}}}],["grow",{"_index":634,"title":{},"body":{"classes/SplitItemView.html":{}}}],["guide",{"_index":794,"title":{},"body":{"index.html":{}}}],["gutterstyle",{"_index":556,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["header",{"_index":119,"title":{},"body":{"classes/App.html":{}}}],["height",{"_index":557,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":790,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":883,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":515,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["hide",{"_index":623,"title":{},"body":{"classes/SplitItemView.html":{}}}],["hideexpandbutton",{"_index":601,"title":{},"body":{"classes/SplitItemView.html":{}}}],["holders",{"_index":929,"title":{},"body":{"license.html":{}}}],["hor",{"_index":355,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["horizontal",{"_index":397,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["host",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["htmlelement",{"_index":28,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["http://localhost:5000",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":213,"title":{},"body":{"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["identifier",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["if(pos",{"_index":534,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["implied",{"_index":920,"title":{},"body":{"license.html":{}}}],["import",{"_index":61,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["include",{"_index":825,"title":{},"body":{"index.html":{}}}],["included",{"_index":913,"title":{},"body":{"license.html":{}}}],["including",{"_index":895,"title":{},"body":{"license.html":{}}}],["independently",{"_index":823,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{}}}],["ing",{"_index":779,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":453,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["init",{"_index":220,"title":{},"body":{"classes/Menu.html":{},"classes/SplitBoardView.html":{}}}],["init(name",{"_index":237,"title":{},"body":{"classes/Menu.html":{}}}],["initflowtable",{"_index":15,"title":{},"body":{"classes/App.html":{}}}],["initframe",{"_index":16,"title":{},"body":{"classes/App.html":{}}}],["initial",{"_index":678,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["initmenus",{"_index":17,"title":{},"body":{"classes/App.html":{}}}],["initnavigationbar",{"_index":18,"title":{},"body":{"classes/App.html":{}}}],["initpreferences",{"_index":19,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel",{"_index":20,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel(container",{"_index":51,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel",{"_index":21,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel(container",{"_index":53,"title":{},"body":{"classes/App.html":{}}}],["initstatusbar",{"_index":22,"title":{},"body":{"classes/App.html":{}}}],["initstyle",{"_index":23,"title":{},"body":{"classes/App.html":{}}}],["initstylemode",{"_index":24,"title":{},"body":{"classes/App.html":{}}}],["initstylemode(type",{"_index":57,"title":{},"body":{"classes/App.html":{}}}],["initworkarea",{"_index":25,"title":{},"body":{"classes/App.html":{}}}],["inject",{"_index":171,"title":{},"body":{"classes/AppearanceService.html":{},"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject(token",{"_index":769,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":170,"title":{},"body":{"classes/AppearanceService.html":{},"classes/SplitBoardView.html":{}}}],["insertitemat",{"_index":436,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["insertitemat(item",{"_index":472,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["interface",{"_index":199,"title":{"interfaces/ISettings.html":{},"interfaces/MenuItemConfig.html":{}},"body":{"interfaces/ISettings.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":201,"title":{},"body":{"interfaces/ISettings.html":{},"interfaces/MenuItemConfig.html":{},"overview.html":{}}}],["inversify",{"_index":62,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/SplitBoardView.html":{},"dependencies.html":{}}}],["ipc",{"_index":829,"title":{},"body":{"index.html":{}}}],["isettings",{"_index":200,"title":{"interfaces/ISettings.html":{}},"body":{"interfaces/ISettings.html":{},"coverage.html":{}}}],["isprod",{"_index":691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isshrink",{"_index":602,"title":{},"body":{"classes/SplitItemView.html":{}}}],["issues",{"_index":789,"title":{},"body":{"index.html":{}}}],["item",{"_index":248,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["item.contentview",{"_index":563,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.hideexpandbutton",{"_index":568,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.id",{"_index":291,"title":{},"body":{"classes/MenuGroup.html":{}}}],["item.replacecontent(newboard.root",{"_index":564,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.root",{"_index":370,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientheight",{"_index":406,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.clientwidth",{"_index":401,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.getboundingclientrect().left",{"_index":400,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.getboundingclientrect().top",{"_index":405,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.ts",{"_index":293,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["item.ts:16",{"_index":299,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:17",{"_index":300,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:18",{"_index":301,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:19",{"_index":298,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:20",{"_index":296,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.view",{"_index":80,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.view.ts",{"_index":595,"title":{},"body":{"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["item.view.ts:13",{"_index":616,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:14",{"_index":617,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:15",{"_index":615,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:17",{"_index":618,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:18",{"_index":609,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:27",{"_index":629,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:34",{"_index":627,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:41",{"_index":632,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:48",{"_index":636,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:55",{"_index":625,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:59",{"_index":630,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:66",{"_index":620,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:70",{"_index":622,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:74",{"_index":639,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:80",{"_index":621,"title":{},"body":{"classes/SplitItemView.html":{}}}],["items",{"_index":427,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["join(__dirname",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":918,"title":{},"body":{"license.html":{}}}],["labelcolor",{"_index":713,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["length",{"_index":468,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["liability",{"_index":933,"title":{},"body":{"license.html":{}}}],["liable",{"_index":930,"title":{},"body":{"license.html":{}}}],["license",{"_index":800,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["light",{"_index":762,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lightcolor",{"_index":182,"title":{},"body":{"classes/ColorRef.html":{}}}],["lightcolorhex",{"_index":772,"title":{},"body":{"miscellaneous/functions.html":{}}}],["limitation",{"_index":896,"title":{},"body":{"license.html":{}}}],["limited",{"_index":921,"title":{},"body":{"license.html":{}}}],["linux",{"_index":848,"title":{},"body":{"index.html":{}}}],["live",{"_index":477,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["liveresize",{"_index":324,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["liveresize(clientx",{"_index":343,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["local",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":741,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":695,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error(json.stringify(err",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lowboardroot",{"_index":504,"title":{},"body":{"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["macos",{"_index":846,"title":{},"body":{"index.html":{}}}],["main",{"_index":831,"title":{},"body":{"index.html":{}}}],["mainwindow",{"_index":692,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mainwindow.loadurl(url).catch((err",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.on('closed",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.webcontents.opendevtools",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor",{"_index":702,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makecolor('#000000",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#3f3f3f",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#5580c0",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#729cd4",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#bababa",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c0c0c1",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c4666f",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c6c6c6",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d00000",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d1905d",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d7d7d7",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d9d9d9",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#e0e0e0",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f2f2f2",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f9f9f9",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffae2b",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffffff",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor(anycolorhex",{"_index":771,"title":{},"body":{"miscellaneous/functions.html":{}}}],["map",{"_index":41,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{}}}],["matching",{"_index":151,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":581,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["menu",{"_index":83,"title":{"classes/Menu.html":{}},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menu(menucontainer",{"_index":287,"title":{},"body":{"classes/MenuGroup.html":{}}}],["menu.id",{"_index":292,"title":{},"body":{"classes/MenuGroup.html":{}}}],["menu.init",{"_index":124,"title":{},"body":{"classes/App.html":{}}}],["menu.registeritem({title",{"_index":129,"title":{},"body":{"classes/App.html":{}}}],["menu.removeitem(0",{"_index":133,"title":{},"body":{"classes/App.html":{}}}],["menu.svelte",{"_index":247,"title":{},"body":{"classes/Menu.html":{}}}],["menucommonfunction",{"_index":297,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/typealiases.html":{}}}],["menucontainer",{"_index":282,"title":{},"body":{"classes/MenuGroup.html":{}}}],["menugroup",{"_index":12,"title":{"classes/MenuGroup.html":{}},"body":{"classes/App.html":{},"classes/MenuGroup.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["menuitem",{"_index":128,"title":{"classes/MenuItem.html":{}},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menuitem(config",{"_index":264,"title":{},"body":{"classes/Menu.html":{}}}],["menuitem(menuitem",{"_index":258,"title":{},"body":{"classes/Menu.html":{}}}],["menuitemconfig",{"_index":241,"title":{"interfaces/MenuItemConfig.html":{}},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menuitems",{"_index":214,"title":{},"body":{"classes/Menu.html":{}}}],["menuitemtype",{"_index":82,"title":{},"body":{"classes/App.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/enumerations.html":{}}}],["menuitemtype.group",{"_index":306,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["menuitemtype.item",{"_index":126,"title":{},"body":{"classes/App.html":{}}}],["menusvelte",{"_index":215,"title":{},"body":{"classes/Menu.html":{}}}],["merchantability",{"_index":923,"title":{},"body":{"license.html":{}}}],["merge",{"_index":357,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["metadata",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{}}}],["meuns",{"_index":273,"title":{},"body":{"classes/MenuGroup.html":{}}}],["meunswritable",{"_index":216,"title":{},"body":{"classes/Menu.html":{}}}],["minimum",{"_index":804,"title":{},"body":{"index.html":{}}}],["minsize",{"_index":553,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["miscellaneous",{"_index":756,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":799,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":409,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["modify",{"_index":899,"title":{},"body":{"license.html":{}}}],["modules",{"_index":819,"title":{"modules.html":{}},"body":{"index.html":{},"modules.html":{}}}],["monorepo",{"_index":814,"title":{},"body":{"index.html":{}}}],["more",{"_index":809,"title":{},"body":{"index.html":{}}}],["mousedown",{"_index":377,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["mouseevent",{"_index":346,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["n",{"_index":418,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":33,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"miscellaneous/functions.html":{}}}],["namewritable",{"_index":217,"title":{},"body":{"classes/Menu.html":{}}}],["navigation",{"_index":67,"title":{},"body":{"classes/App.html":{}}}],["navigationbar",{"_index":113,"title":{},"body":{"classes/App.html":{}}}],["new",{"_index":40,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newboard",{"_index":561,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addcolumn(newemptyview",{"_index":570,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addcolumn(newitemview",{"_index":569,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addrow(newemptyview",{"_index":575,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addrow(newitemview",{"_index":574,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.controller.checkexpandstate(clientx",{"_index":572,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.controller.setactivestate(0",{"_index":571,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newemptyview",{"_index":567,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newitem",{"_index":578,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newitemview",{"_index":565,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsize",{"_index":588,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes",{"_index":576,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(newsize",{"_index":590,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(size",{"_index":592,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(sum",{"_index":591,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(w",{"_index":594,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["next",{"_index":839,"title":{},"body":{"index.html":{}}}],["none",{"_index":679,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["noninfringement",{"_index":927,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":808,"title":{},"body":{"index.html":{}}}],["notice",{"_index":911,"title":{},"body":{"license.html":{}}}],["notification",{"_index":693,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nowrap",{"_index":513,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["npm",{"_index":855,"title":{},"body":{"index.html":{}}}],["null",{"_index":447,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":242,"title":{},"body":{"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["number):void",{"_index":530,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["number[]):void",{"_index":548,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["obtaining",{"_index":888,"title":{},"body":{"license.html":{}}}],["offsetx",{"_index":407,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["offsety",{"_index":408,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["ok",{"_index":671,"title":{},"body":{"classes/Test.html":{}}}],["onmodechanged",{"_index":158,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmodechanged(fn",{"_index":163,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmousedown",{"_index":325,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["onmousedown(event",{"_index":345,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["optional",{"_index":35,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"miscellaneous/functions.html":{}}}],["organization",{"_index":875,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":937,"title":{},"body":{"license.html":{}}}],["out",{"_index":851,"title":{},"body":{"index.html":{},"license.html":{}}}],["overflow",{"_index":514,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["overview",{"_index":941,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":736,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":820,"title":{},"body":{"index.html":{}}}],["packaging",{"_index":842,"title":{},"body":{"index.html":{}}}],["page",{"_index":835,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":925,"title":{},"body":{"license.html":{}}}],["permission",{"_index":882,"title":{},"body":{"license.html":{}}}],["permit",{"_index":904,"title":{},"body":{"license.html":{}}}],["person",{"_index":887,"title":{},"body":{"license.html":{}}}],["persons",{"_index":905,"title":{},"body":{"license.html":{}}}],["platform",{"_index":862,"title":{},"body":{"index.html":{}}}],["port",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":915,"title":{},"body":{"license.html":{}}}],["pos",{"_index":473,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["position",{"_index":469,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["possible",{"_index":859,"title":{},"body":{"index.html":{}}}],["practice",{"_index":782,"title":{},"body":{"index.html":{}}}],["preload",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preload.js",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepend",{"_index":444,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["prepend(...childs",{"_index":496,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["print",{"_index":667,"title":{},"body":{"classes/Test.html":{}}}],["print(target",{"_index":668,"title":{},"body":{"classes/Test.html":{}}}],["private",{"_index":9,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["process.env.node_env",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":816,"title":{},"body":{"index.html":{}}}],["project",{"_index":810,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["propertypanel",{"_index":74,"title":{},"body":{"classes/App.html":{}}}],["props",{"_index":116,"title":{},"body":{"classes/App.html":{}}}],["provided",{"_index":916,"title":{},"body":{"license.html":{}}}],["public",{"_index":157,"title":{},"body":{"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{}}}],["publish",{"_index":791,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":926,"title":{},"body":{"license.html":{}}}],["qiansc",{"_index":881,"title":{},"body":{"license.html":{}}}],["quickly",{"_index":858,"title":{},"body":{"index.html":{}}}],["r",{"_index":585,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["readonly",{"_index":212,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["ready",{"_index":844,"title":{},"body":{"index.html":{}}}],["ref.ts",{"_index":179,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["ref.ts:15",{"_index":190,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:5",{"_index":187,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:6",{"_index":188,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:7",{"_index":185,"title":{},"body":{"classes/ColorRef.html":{}}}],["reflect",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["registeritem",{"_index":221,"title":{},"body":{"classes/Menu.html":{}}}],["registeritem(config",{"_index":240,"title":{},"body":{"classes/Menu.html":{}}}],["release",{"_index":870,"title":{},"body":{"index.html":{}}}],["removecolumn(item",{"_index":546,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["removeitem",{"_index":222,"title":{},"body":{"classes/Menu.html":{}}}],["removeitem(index",{"_index":245,"title":{},"body":{"classes/Menu.html":{}}}],["removemenuinstances",{"_index":275,"title":{},"body":{"classes/MenuGroup.html":{}}}],["removemenuinstances(menu",{"_index":279,"title":{},"body":{"classes/MenuGroup.html":{}}}],["removerow(item",{"_index":547,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["replacecontent",{"_index":603,"title":{},"body":{"classes/SplitItemView.html":{}}}],["replacecontent(contentview",{"_index":626,"title":{},"body":{"classes/SplitItemView.html":{}}}],["repository",{"_index":780,"title":{},"body":{"index.html":{}}}],["required",{"_index":803,"title":{},"body":{"index.html":{}}}],["resize",{"_index":412,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["resizeat",{"_index":437,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["resizeat(index",{"_index":475,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["resourcepage",{"_index":72,"title":{},"body":{"classes/App.html":{}}}],["restriction",{"_index":894,"title":{},"body":{"license.html":{}}}],["result",{"_index":150,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":152,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":176,"title":{},"body":{"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["returns",{"_index":44,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":521,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["rights",{"_index":897,"title":{},"body":{"license.html":{}}}],["roadmap",{"_index":792,"title":{},"body":{"index.html":{}}}],["rollup",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":36,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["rounded",{"_index":654,"title":{},"body":{"classes/SplitItemView.html":{}}}],["row",{"_index":404,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":841,"title":{},"body":{"index.html":{}}}],["s",{"_index":483,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["s'):void",{"_index":539,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["script",{"_index":832,"title":{},"body":{"index.html":{}}}],["secondarybgcolor",{"_index":714,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["secondarylabelcolor",{"_index":715,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":872,"title":{},"body":{"index.html":{}}}],["sell",{"_index":902,"title":{},"body":{"license.html":{}}}],["server",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":66,"title":{},"body":{"classes/App.html":{}}}],["service.ts",{"_index":154,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":160,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:11",{"_index":162,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:13",{"_index":169,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:19",{"_index":164,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:23",{"_index":167,"title":{},"body":{"classes/AppearanceService.html":{}}}],["set",{"_index":877,"title":{},"body":{"index.html":{}}}],["setactivestate",{"_index":326,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setactivestate(index",{"_index":349,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setcontent",{"_index":604,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setcontent(contentview",{"_index":628,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setcursor",{"_index":438,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["setcursor(type",{"_index":479,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["setdefaultclass",{"_index":605,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setflow",{"_index":445,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setflow(type",{"_index":499,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setgrow",{"_index":606,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setgrow(classname",{"_index":631,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setshrink",{"_index":607,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setshrink(classname",{"_index":635,"title":{},"body":{"classes/SplitItemView.html":{}}}],["settings",{"_index":208,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shall",{"_index":912,"title":{},"body":{"license.html":{}}}],["shrink",{"_index":637,"title":{},"body":{"classes/SplitItemView.html":{}}}],["similar",{"_index":813,"title":{},"body":{"index.html":{}}}],["singleton",{"_index":88,"title":{},"body":{"classes/App.html":{}}}],["size",{"_index":587,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["sizes",{"_index":460,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["smelte",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["snapoffset",{"_index":555,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["software",{"_index":890,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"index.html":{}}}],["split",{"_index":353,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["split(array.prototype.slice.call(this.root.children",{"_index":551,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["split.instance",{"_index":451,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["split.js",{"_index":503,"title":{},"body":{"classes/SplitBoardView.html":{},"dependencies.html":{}}}],["splitboard",{"_index":135,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view0",{"_index":141,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view1",{"_index":142,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view2",{"_index":143,"title":{},"body":{"classes/App.html":{}}}],["splitboard.applysplit('horizontal",{"_index":144,"title":{},"body":{"classes/App.html":{}}}],["splitboardcontroller",{"_index":311,"title":{"classes/SplitBoardController.html":{}},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"coverage.html":{}}}],["splitboardcontroller(this",{"_index":510,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitboardview",{"_index":76,"title":{"classes/SplitBoardView.html":{}},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"coverage.html":{}}}],["splitboardview().setflow('1",{"_index":136,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["splitcolumnat",{"_index":439,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitcolumnat(index",{"_index":485,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitexpand",{"_index":619,"title":{},"body":{"classes/SplitItemView.html":{}}}],["splitinstance",{"_index":428,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splititemview",{"_index":79,"title":{"classes/SplitItemView.html":{}},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{}}}],["splititemview().setcontent(contentview",{"_index":566,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splititemview().setcontent(document.createelement('div",{"_index":138,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["splititemview):void",{"_index":518,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitrowat",{"_index":440,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitrowat(index",{"_index":487,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["src/.../appearance.ts",{"_index":758,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../index.ts",{"_index":764,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../inject.ts",{"_index":765,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.ts",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu",{"_index":760,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../settings.ts",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../split",{"_index":759,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../ui",{"_index":766,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":767,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../view.ts",{"_index":945,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app",{"_index":830,"title":{},"body":{"index.html":{}}}],["src/app/index.ts",{"_index":687,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/logger.ts",{"_index":694,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/settings.ts",{"_index":202,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core",{"_index":824,"title":{},"body":{"index.html":{}}}],["src/core/browser/layout/split",{"_index":312,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/style/ui",{"_index":700,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/view.ts",{"_index":672,"title":{},"body":{"classes/View.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/browser/view.ts:13",{"_index":674,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:17",{"_index":675,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:4",{"_index":673,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:8",{"_index":676,"title":{},"body":{"classes/View.html":{}}}],["src/core/common/appearance.ts",{"_index":761,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/common/color",{"_index":178,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["src/core/components",{"_index":837,"title":{},"body":{"index.html":{}}}],["src/core/parts/ioc/inject.ts",{"_index":726,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/core/parts/test.ts",{"_index":666,"title":{},"body":{"classes/Test.html":{},"coverage.html":{}}}],["src/core/parts/test.ts:2",{"_index":669,"title":{},"body":{"classes/Test.html":{}}}],["src/workbench",{"_index":833,"title":{},"body":{"index.html":{}}}],["src/workbench/desktop/app.ts",{"_index":6,"title":{},"body":{"classes/App.html":{},"coverage.html":{}}}],["src/workbench/desktop/app.ts:104",{"_index":54,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:112",{"_index":52,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:120",{"_index":60,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:124",{"_index":55,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:14",{"_index":37,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:15",{"_index":42,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:16",{"_index":30,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:23",{"_index":43,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:29",{"_index":50,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:33",{"_index":56,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:43",{"_index":59,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:51",{"_index":47,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:56",{"_index":49,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:66",{"_index":48,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:89",{"_index":46,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/main.ts",{"_index":728,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/desktop/menu/index.ts",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/desktop/menu/menu",{"_index":271,"title":{},"body":{"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/workbench/desktop/menu/menu.ts",{"_index":211,"title":{},"body":{"classes/Menu.html":{},"coverage.html":{}}}],["src/workbench/desktop/menu/menu.ts:10",{"_index":230,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:11",{"_index":231,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:12",{"_index":227,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:13",{"_index":233,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:14",{"_index":225,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:23",{"_index":239,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:31",{"_index":236,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:38",{"_index":244,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:43",{"_index":246,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:49",{"_index":235,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:7",{"_index":226,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:8",{"_index":228,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:9",{"_index":234,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/utils/utils.ts",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/workbench/services/appearance",{"_index":153,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["standard",{"_index":798,"title":{},"body":{"index.html":{}}}],["start",{"_index":467,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["started",{"_index":776,"title":{"index.html":{},"license.html":{}},"body":{}}],["starttoexpand",{"_index":441,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["starttoexpand(index",{"_index":489,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["startx",{"_index":320,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["starty",{"_index":321,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["statements",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["statically",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statusbar",{"_index":70,"title":{},"body":{"classes/App.html":{}}}],["step",{"_index":840,"title":{},"body":{"index.html":{}}}],["sth",{"_index":112,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["store",{"_index":207,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{}}}],["storybook",{"_index":836,"title":{},"body":{"index.html":{}}}],["string",{"_index":224,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"miscellaneous/functions.html":{}}}],["structure",{"_index":811,"title":{},"body":{"index.html":{}}}],["subject",{"_index":907,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":900,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":914,"title":{},"body":{"license.html":{}}}],["such",{"_index":827,"title":{},"body":{"index.html":{}}}],["sum",{"_index":586,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["super",{"_index":507,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["support",{"_index":850,"title":{},"body":{"index.html":{}}}],["svelte/store",{"_index":249,"title":{},"body":{"classes/Menu.html":{}}}],["switch(appearancetype",{"_index":195,"title":{},"body":{"classes/ColorRef.html":{}}}],["symbol.for('flowtableroot",{"_index":505,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["systembluecolor",{"_index":716,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemgraycolor",{"_index":717,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemorangecolor",{"_index":718,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systempinkcolor",{"_index":719,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemredcolor",{"_index":720,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemyellowcolor",{"_index":721,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":114,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["target.classlist.contains('split",{"_index":372,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["target.parentelement",{"_index":371,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["template",{"_index":802,"title":{},"body":{"index.html":{}}}],["tertiarybgcolor",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tertiarylabelcolor",{"_index":723,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":665,"title":{"classes/Test.html":{}},"body":{"classes/Test.html":{},"coverage.html":{}}}],["textfieldbackground",{"_index":724,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["this._growclassname",{"_index":650,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._shrinkclassname",{"_index":649,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._type",{"_index":173,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this._waitformergeitem",{"_index":540,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this._waitformergeitem.cancelwaitformerge",{"_index":545,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.activeexpand",{"_index":380,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.activeid",{"_index":381,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.addexpandbutton",{"_index":642,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.anycolor",{"_index":192,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.applysplit",{"_index":529,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.applysplit('vertical",{"_index":527,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.applysplit(this.direction",{"_index":580,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.callback",{"_index":310,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.cancelformerge",{"_index":542,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.cancelwaitformerge",{"_index":660,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.checkdirection(directiontype.col",{"_index":528,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.checkdirection(directiontype.row",{"_index":519,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.checkexpandstate(event.clientx",{"_index":362,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.children",{"_index":307,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.container",{"_index":86,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{}}}],["this.container.append(menucontainer",{"_index":286,"title":{},"body":{"classes/MenuGroup.html":{}}}],["this.container.bind(appearanceservice).to(appearanceservice",{"_index":95,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(colorset).to(colorset",{"_index":96,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(colorsetroot).todynamicvalue",{"_index":100,"title":{},"body":{"classes/App.html":{}}}],["this.container.firstchild",{"_index":260,"title":{},"body":{"classes/Menu.html":{}}}],["this.container.get(appearanceservice",{"_index":104,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(colorset",{"_index":102,"title":{},"body":{"classes/App.html":{}}}],["this.container.removechild(menu.container",{"_index":289,"title":{},"body":{"classes/MenuGroup.html":{}}}],["this.container.removechild(this.container.firstchild",{"_index":261,"title":{},"body":{"classes/Menu.html":{}}}],["this.contentview",{"_index":644,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.context",{"_index":117,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{}}}],["this.context.set('container",{"_index":89,"title":{},"body":{"classes/App.html":{}}}],["this.context.set('menus",{"_index":252,"title":{},"body":{"classes/Menu.html":{}}}],["this.context.set('name",{"_index":254,"title":{},"body":{"classes/Menu.html":{}}}],["this.controller",{"_index":509,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.createmenu",{"_index":259,"title":{},"body":{"classes/Menu.html":{}}}],["this.darkcolor",{"_index":194,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.destorysplit",{"_index":549,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.direction",{"_index":523,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.evt.emit('onmodechanged",{"_index":174,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.evt.on('onmodechanged",{"_index":175,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.expand",{"_index":658,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.expandhidden",{"_index":659,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.mergedirection",{"_index":662,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expandactive",{"_index":385,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandleavehandler",{"_index":363,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmouseuphandler",{"_index":365,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmovehandler",{"_index":359,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandtype",{"_index":387,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.getexpandresizes(index",{"_index":577,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.id",{"_index":250,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.init",{"_index":508,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.initflowtable",{"_index":93,"title":{},"body":{"classes/App.html":{}}}],["this.initmenus",{"_index":118,"title":{},"body":{"classes/App.html":{}}}],["this.initnavigationbar",{"_index":92,"title":{},"body":{"classes/App.html":{}}}],["this.initpreferences",{"_index":90,"title":{},"body":{"classes/App.html":{}}}],["this.initpropertypanel(view2.contentview",{"_index":149,"title":{},"body":{"classes/App.html":{}}}],["this.initresourcepanel(view0.contentview",{"_index":148,"title":{},"body":{"classes/App.html":{}}}],["this.initstatusbar",{"_index":94,"title":{},"body":{"classes/App.html":{}}}],["this.initstyle",{"_index":91,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(appearancetype.dark",{"_index":107,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(type",{"_index":106,"title":{},"body":{"classes/App.html":{}}}],["this.insertitemat(item",{"_index":526,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.insertitemat(newitem",{"_index":579,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items.length",{"_index":532,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items.splice(pos",{"_index":533,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[index",{"_index":541,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[index].waitformerge(direction",{"_index":543,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[pos",{"_index":536,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.lightcolor",{"_index":193,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.liveresize(event.clientx",{"_index":360,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.menugroup",{"_index":121,"title":{},"body":{"classes/App.html":{}}}],["this.menugroup.getmenuinsatance",{"_index":123,"title":{},"body":{"classes/App.html":{}}}],["this.menuitems",{"_index":251,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.filter((_",{"_index":268,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.push(new",{"_index":257,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.splice(index",{"_index":262,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems[index",{"_index":266,"title":{},"body":{"classes/Menu.html":{}}}],["this.menusvelte",{"_index":269,"title":{},"body":{"classes/Menu.html":{}}}],["this.meuns",{"_index":281,"title":{},"body":{"classes/MenuGroup.html":{}}}],["this.meuns.filter(item",{"_index":290,"title":{},"body":{"classes/MenuGroup.html":{}}}],["this.meuns.length",{"_index":285,"title":{},"body":{"classes/MenuGroup.html":{}}}],["this.meuns.push(menu",{"_index":288,"title":{},"body":{"classes/MenuGroup.html":{}}}],["this.meunswritable",{"_index":253,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set([...this.menuitems",{"_index":265,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set(this.menuitems",{"_index":267,"title":{},"body":{"classes/Menu.html":{}}}],["this.name",{"_index":256,"title":{},"body":{"classes/Menu.html":{}}}],["this.namewritable",{"_index":255,"title":{},"body":{"classes/Menu.html":{}}}],["this.namewritable.set(this.name",{"_index":270,"title":{},"body":{"classes/Menu.html":{}}}],["this.onmousedown(event",{"_index":367,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.prepend(contentview",{"_index":646,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root",{"_index":115,"title":{},"body":{"classes/App.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["this.root.appendchild(child",{"_index":681,"title":{},"body":{"classes/View.html":{}}}],["this.root.appendchild(colorsetroot",{"_index":101,"title":{},"body":{"classes/App.html":{}}}],["this.root.appendchild(item.root",{"_index":535,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.root.appendchild(splitboard.root",{"_index":147,"title":{},"body":{"classes/App.html":{}}}],["this.root.classlist.add('flex",{"_index":525,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["this.root.classlist.add('relative",{"_index":656,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('split",{"_index":511,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["this.root.classlist.add('wait",{"_index":661,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(...this._bgcolorclassname",{"_index":657,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(`flex",{"_index":680,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.add(this._growclassname",{"_index":651,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(this._shrinkclassname",{"_index":653,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove('flex",{"_index":524,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/View.html":{}}}],["this.root.classlist.remove('wait",{"_index":664,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._growclassname",{"_index":652,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._shrinkclassname",{"_index":648,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.prepend(...childs",{"_index":682,"title":{},"body":{"classes/View.html":{}}}],["this.root.replacechild(contentview",{"_index":647,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.style.cursor",{"_index":538,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.root.style.margin",{"_index":516,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.setactivestate(index",{"_index":373,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.setdefaultclass",{"_index":643,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.splitinstance",{"_index":550,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.destroy",{"_index":560,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.getsizes().foreach((size",{"_index":589,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.setsizes(newsizes",{"_index":593,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.starttoexpand(index",{"_index":573,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.startx",{"_index":378,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.starty",{"_index":379,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.title",{"_index":308,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.type",{"_index":309,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.unactiveexpand",{"_index":364,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.cancelformerge",{"_index":392,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.direction",{"_index":395,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items.foreach((item",{"_index":369,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items[this.activeid",{"_index":394,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.resizeat(this.activeid",{"_index":399,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousedown",{"_index":366,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseleave",{"_index":383,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousemove",{"_index":382,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseup",{"_index":384,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseleave",{"_index":390,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mousemove",{"_index":389,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseup",{"_index":391,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor",{"_index":393,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('col",{"_index":411,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('crosshair",{"_index":388,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('n",{"_index":417,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('row",{"_index":413,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('w",{"_index":414,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitcolumnat(this.activeid",{"_index":420,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitrowat(this.activeid",{"_index":421,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.waitformergeatitem(this.activeid",{"_index":415,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["three",{"_index":818,"title":{},"body":{"index.html":{}}}],["title",{"_index":125,"title":{},"body":{"classes/App.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["title!:string",{"_index":305,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["together",{"_index":785,"title":{},"body":{"index.html":{}}}],["token",{"_index":770,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tort",{"_index":936,"title":{},"body":{"license.html":{}}}],["true",{"_index":386,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":34,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":943,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/color",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["ui/components/navigation/navigation",{"_index":68,"title":{},"body":{"classes/App.html":{}}}],["ui/components/property/proterty.svelte",{"_index":75,"title":{},"body":{"classes/App.html":{}}}],["ui/components/resource/resource.svelte",{"_index":73,"title":{},"body":{"classes/App.html":{}}}],["ui/components/status/status",{"_index":71,"title":{},"body":{"classes/App.html":{}}}],["unactiveexpand",{"_index":327,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["undefined",{"_index":531,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["under",{"_index":797,"title":{},"body":{"index.html":{}}}],["update",{"_index":849,"title":{},"body":{"index.html":{}}}],["updatemode",{"_index":159,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updatemode(type",{"_index":168,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updater",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["url",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":898,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":806,"title":{},"body":{"index.html":{}}}],["user",{"_index":876,"title":{},"body":{"index.html":{}}}],["using",{"_index":853,"title":{},"body":{"index.html":{}}}],["utils",{"_index":303,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"index.html":{}}}],["uuid",{"_index":302,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["value",{"_index":39,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":946,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":356,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["version",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":403,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["very",{"_index":812,"title":{},"body":{"index.html":{}}}],["view",{"_index":330,"title":{"classes/View.html":{}},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"coverage.html":{}}}],["view0",{"_index":137,"title":{},"body":{"classes/App.html":{}}}],["view1",{"_index":139,"title":{},"body":{"classes/App.html":{}}}],["view2",{"_index":140,"title":{},"body":{"classes/App.html":{}}}],["view:13",{"_index":494,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:17",{"_index":497,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:4",{"_index":454,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:8",{"_index":501,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["vite",{"_index":805,"title":{},"body":{"index.html":{}}}],["void",{"_index":45,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{}}}],["w",{"_index":416,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["waitformerge",{"_index":608,"title":{},"body":{"classes/SplitItemView.html":{}}}],["waitformerge(direction",{"_index":638,"title":{},"body":{"classes/SplitItemView.html":{}}}],["waitformergeatitem",{"_index":442,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["waitformergeatitem(index",{"_index":491,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["warranties",{"_index":922,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":917,"title":{},"body":{"license.html":{}}}],["web",{"_index":834,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["webpreferences",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whether",{"_index":934,"title":{},"body":{"license.html":{}}}],["width",{"_index":559,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["wiki",{"_index":873,"title":{},"body":{"index.html":{}}}],["windows",{"_index":847,"title":{},"body":{"index.html":{}}}],["without",{"_index":893,"title":{},"body":{"license.html":{}}}],["work",{"_index":787,"title":{},"body":{"index.html":{}}}],["works",{"_index":801,"title":{},"body":{"index.html":{}}}],["writable",{"_index":232,"title":{},"body":{"classes/Menu.html":{}}}],["xl",{"_index":655,"title":{},"body":{"classes/SplitItemView.html":{}}}],["yes",{"_index":186,"title":{},"body":{"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/SplitBoardView.html":{},"classes/View.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/App.html":{"url":"classes/App.html","title":"class - App","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/app.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                context\n                            \n                            \n                                    Private\n                                menuGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bootstrap\n                            \n                            \n                                initFlowTable\n                            \n                            \n                                initFrame\n                            \n                            \n                                initMenus\n                            \n                            \n                                initNavigationBar\n                            \n                            \n                                initPreferences\n                            \n                            \n                                initPropertyPanel\n                            \n                            \n                                initResourcePanel\n                            \n                            \n                                initStatusBar\n                            \n                            \n                                initStyle\n                            \n                            \n                                initStyleMode\n                            \n                            \n                                initWorkArea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/app.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Container\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFlowTable\n                        \n                    \n                \n            \n            \n                \ninitFlowTable()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFrame\n                        \n                    \n                \n            \n            \n                \ninitFrame()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initMenus\n                        \n                    \n                \n            \n            \n                \ninitMenus()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNavigationBar\n                        \n                    \n                \n            \n            \n                \ninitNavigationBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPreferences\n                        \n                    \n                \n            \n            \n                \ninitPreferences()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPropertyPanel\n                        \n                    \n                \n            \n            \n                \ninitPropertyPanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initResourcePanel\n                        \n                    \n                \n            \n            \n                \ninitResourcePanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStatusBar\n                        \n                    \n                \n            \n            \n                \ninitStatusBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyle\n                        \n                    \n                \n            \n            \n                \ninitStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyleMode\n                        \n                    \n                \n            \n            \n                \ninitStyleMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initWorkArea\n                        \n                    \n                \n            \n            \n                \ninitWorkArea()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Container } from 'inversify';\nimport { AppearanceType } from '@cosmic/core/common/appearance';\nimport { AppearanceService } from '@cosmic/workbench/services/appearance-service';\nimport Navigation from '../ui/components/navigation/navigation-bar.svelte';\nimport StatusBar from '../ui/components/status/status-bar.svelte';\nimport ResourcePage from '../ui/components/resource/resource.svelte';\nimport PropertyPanel from '../ui/components/property/proterty.svelte';\nimport SplitBoardView from '@cosmic/core/browser/layout/split-board.view';\nimport SplitItemView from '@cosmic/core/browser/layout/split-item.view';\nimport getMenuGroup, {MenuItemType} from './menu';\nimport type { MenuGroup } from './menu';\n\nexport default class App {\n  private container: Container;\n  private context = new Map();\n  private menuGroup!: MenuGroup;\n  constructor(private root: HTMLElement) {\n    this.container = new Container({ defaultScope: 'Singleton' });\n    this.context.set('container', this.container);\n    this.initPreferences();\n    this.initStyle();\n  }\n  bootstrap(): void {\n    this.initNavigationBar();\n    this.initFlowTable();\n    this.initStatusBar();\n  }\n\n  initPreferences(): void {\n    this.container.bind(AppearanceService).to(AppearanceService);\n  }\n\n  initStyle(): void {\n    // this.container.bind(ColorSet).to(ColorSet);\n    // const colorSetRoot = document.createElement('style');\n    // this.container.bind(ColorSetRoot).toDynamicValue(() => colorSetRoot);\n    // this.root.appendChild(colorSetRoot);\n    // this.container.get(ColorSet);\n    const aps = this.container.get(AppearanceService);\n    aps.onModeChanged((type: AppearanceType) => this.initStyleMode(type));\n    this.initStyleMode(AppearanceType.dark);\n  }\n  initStyleMode(type: AppearanceType): void {\n    if (type === AppearanceType.dark) {\n      document.body.classList.add('mode-dark');\n    } else {\n      document.body.classList.remove('mode-dark');\n    }\n  }\n\n  initFrame(): void {\n    // to do sth.\n\n  }\n\n  initNavigationBar(): void {\n    // to do sth.\n    const navigationBar = new Navigation({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    this.initMenus();\n  }\n\n  initMenus(): void {\n    const header = document.querySelector('#main-header');\n    this.menuGroup = getMenuGroup(header as HTMLElement);\n    const menu = this.menuGroup.getMenuInsatance();\n    menu.init('测试', [{\n      title: '请打开文件',\n      type: MenuItemType.item,\n      callback: (menuItem, context) => {\n        menu.registerItem({title: '文件', type: MenuItemType.item, callback: (menuItem, context) => console.log(menuItem)}, 1);\n      },\n    }, {\n      title: '测试2',\n      type: MenuItemType.item,\n      callback: (menuItem, context) => {\n        menu.removeItem(0);\n      },\n    }, {\n      title: '测试3',\n      type: MenuItemType.item,\n      callback: (menuItem, context) => console.log(menuItem),\n    }]);\n  }\n\n  initFlowTable(): void {\n    const splitBoard = new SplitBoardView().setFlow('1');\n    const view0 = new SplitItemView().setContent(document.createElement('div'));\n    const view1 = new SplitItemView().setContent(document.createElement('div'));\n    const view2 = new SplitItemView().setContent(document.createElement('div'));\n    splitBoard.addColumn(view0);\n    splitBoard.addColumn(view1);\n    splitBoard.addColumn(view2);\n    splitBoard.applySplit('horizontal', [20, 60, 20]);\n\n    this.root.appendChild(splitBoard.root);\n    this.initResourcePanel(view0.contentView);\n    this.initPropertyPanel(view2.contentView);\n  }\n\n  initResourcePanel(container: HTMLElement): void {\n    new ResourcePage({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initPropertyPanel(container: HTMLElement): void {\n    new PropertyPanel({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initWorkArea(): void {\n    // to do sth.\n  }\n\n  initStatusBar(): void {\n    new StatusBar({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    // to do sth.\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppearanceService.html":{"url":"classes/AppearanceService.html","title":"class - AppearanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppearanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/appearance-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Private\n                                evt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onModeChanged\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                updateMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppearanceType\n\n                    \n                \n                \n                    \n                        Default value : AppearanceType.dark\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        evt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter2()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onModeChanged\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModeChanged(fn: (type: AppearanceType) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        type\n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject, ContainerModule } from 'inversify';\nimport { EventEmitter2 } from 'eventemitter2';\n\nimport { AppearanceType } from '@cosmic/core/common/appearance';\n\n\n@injectable()\n/** 外观设置服务 */\nexport class AppearanceService {\n  private _type: AppearanceType = AppearanceType.dark;\n  private evt = new EventEmitter2()\n\n  public updateMode(type: AppearanceType) {\n    if (this._type !== type) {\n      this._type = type;\n      this.evt.emit('onModeChanged', type);\n    }\n  }\n  public onModeChanged(fn: (type: AppearanceType) => void) {\n    this.evt.on('onModeChanged', fn);\n\n  }\n  public type() {\n    return this._type;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColorRef.html":{"url":"classes/ColorRef.html","title":"class - ColorRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColorRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/common/color-ref.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                anyColor\n                            \n                            \n                                    Private\n                                darkColor\n                            \n                            \n                                    Private\n                                lightColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                color\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(anyColor: Color, lightColor?: Color, darkColor?: Color)\n                    \n                \n                        \n                            \n                                Defined in src/core/common/color-ref.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        anyColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lightColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        darkColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        anyColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        darkColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lightColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        color\n                        \n                    \n                \n            \n            \n                \n                    \n                    color(appearanceType: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/common/color-ref.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appearanceType\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type * as Color from 'color';\nimport { AppearanceType } from './appearance';\n\nexport default class ColorRef {\n  private anyColor: Color;\n  private lightColor: Color;\n  private darkColor: Color;\n\n  constructor(anyColor: Color, lightColor?: Color, darkColor?: Color) {\n    this.anyColor =  anyColor;\n    this.lightColor = lightColor || anyColor;\n    this.darkColor = darkColor || anyColor;\n  }\n\n  public color(appearanceType: AppearanceType) {\n    switch(appearanceType) {\n      case AppearanceType.any:\n        return this.anyColor;\n      case AppearanceType.light:\n        return this.lightColor;\n      case AppearanceType.dark:\n        return this.darkColor;\n      default:\n        return this.anyColor;\n    }\n  }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISettings.html":{"url":"interfaces/ISettings.html","title":"interface - ISettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/settings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            check\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import ElectronStore from 'electron-store';\n\ninterface ISettings {\n  check: boolean;\n}\n\nconst settings = new ElectronStore({\n  defaults: {\n    check: false,\n  },\n});\n\nexport default settings;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Menu.html":{"url":"classes/Menu.html","title":"class - Menu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Menu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                container\n                            \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                menuItems\n                            \n                            \n                                    Private\n                                menuSvelte\n                            \n                            \n                                    Private\n                                    Readonly\n                                meunsWritable\n                            \n                            \n                                    Private\n                                name\n                            \n                            \n                                    Private\n                                    Readonly\n                                nameWritable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMenu\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                registerItem\n                            \n                            \n                                    Public\n                                removeItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: HTMLElement, id: string)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/menu/menu.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuSvelte\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        meunsWritable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : writable([])\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        nameWritable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : writable('')\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(name: string, config: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerItem(config: MenuItemConfig, index: number, group?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                MenuItemConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItem(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MenuItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import MenuSvelte from './menu.svelte';\nimport type { MenuItemConfig } from './menu-item';\nimport { MenuItem } from './menu-item';\nimport { writable } from 'svelte/store';\n\nexport default class Menu {\n    public readonly container!: HTMLElement;\n    public readonly id!: string;\n    private name!: string;\n    private menuItems!: Array;\n    private menuSvelte: any;\n    private readonly context = new Map();\n    private readonly meunsWritable =  writable([]);\n    private readonly nameWritable =  writable('');\n    constructor(container: HTMLElement, id: string) {\n        this.container = container;\n        this.id = id;\n        this.menuItems = [];\n        this.context.set('menus', this.meunsWritable);\n        this.context.set('name', this.nameWritable);\n    }\n\n    public init(name: string, config: Array): void {\n        this.name = name;\n        for (const menuItem of config) {\n            this.menuItems.push(new MenuItem(menuItem));\n        }\n        return this.createMenu();\n    }\n\n    public destroy(): void {\n        while (this.container.firstChild) {\n            this.container.removeChild(this.container.firstChild);\n        }\n        return;\n    }\n\n    public registerItem(config: MenuItemConfig, index: number, group?: string): void {\n        this.menuItems.splice(index, 0, new MenuItem(config));\n        this.meunsWritable.set([...this.menuItems]);\n    }\n\n    public removeItem(index: number): MenuItem {\n        const menuItem = this.menuItems[index];\n        this.meunsWritable.set(this.menuItems = this.menuItems.filter((_, i) => index !== i));\n        return menuItem;\n    }\n\n    private createMenu(): void {\n        this.menuSvelte = new MenuSvelte({\n            target: this.container,\n            context: this.context,\n        });\n        this.nameWritable.set(this.name);\n        this.meunsWritable.set(this.menuItems);\n    }\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuGroup.html":{"url":"classes/MenuGroup.html","title":"class - MenuGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu-group.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                meuns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMenuInsatance\n                            \n                            \n                                    Public\n                                removeMenuInstances\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/menu/menu-group.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-group.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        meuns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-group.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getMenuInsatance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenuInsatance()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu-group.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Menu\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeMenuInstances\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeMenuInstances(menu: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu-group.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Menu from './menu';\n\nexport default class MenuGroup {\n    private container!: HTMLElement;\n    private meuns!: Array;\n    constructor(container: HTMLElement) {\n        this.container = container;\n        this.meuns = [];\n    }\n\n\n    public getMenuInsatance(): Menu {\n        const menuContainer = document.createElement('div');\n        const id = Date.now() + '' + this.meuns.length;\n        this.container.append(menuContainer);\n        const menu = new Menu(menuContainer, id);\n        this.meuns.push(menu);\n        return menu;\n    }\n\n    public removeMenuInstances(menu: Menu): void {\n        this.container.removeChild(menu.container);\n        this.meuns = this.meuns.filter(item => item.id === menu.id);\n        this.container.removeChild(menu.container);\n    }\n\n    \n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItem.html":{"url":"classes/MenuItem.html","title":"class - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu-item.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                callback\n                            \n                            \n                                    Private\n                                children\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                title\n                            \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MenuItemConfig)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/menu/menu-item.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MenuItemConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        callback\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuCommonFunction\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItemType\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {uuid} from '../utils';\nexport const enum MenuItemType {\n    group,\n    item\n}\n\nexport type MenuCommonFunction = (menu: MenuItem, context: any) => void;\n\nexport interface MenuItemConfig {\n    title: string;\n    type: MenuItemType;\n    callback: MenuCommonFunction\n}\n\nexport class MenuItem {\n    public readonly id!: string;\n    private title!:string;\n    private type!: MenuItemType;\n    private callback: MenuCommonFunction;\n    private children!: Array;\n    constructor(config: MenuItemConfig) {\n        this.id = uuid();\n        const {title, type, callback} = config;\n        if (type === MenuItemType.group) {\n            this.children = [];\n        }\n        this.title = title;\n        this.type = type;\n        this.callback = callback;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemConfig.html":{"url":"interfaces/MenuItemConfig.html","title":"interface - MenuItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu-item.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         MenuCommonFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuCommonFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         MenuItemType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItemType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {uuid} from '../utils';\nexport const enum MenuItemType {\n    group,\n    item\n}\n\nexport type MenuCommonFunction = (menu: MenuItem, context: any) => void;\n\nexport interface MenuItemConfig {\n    title: string;\n    type: MenuItemType;\n    callback: MenuCommonFunction\n}\n\nexport class MenuItem {\n    public readonly id!: string;\n    private title!:string;\n    private type!: MenuItemType;\n    private callback: MenuCommonFunction;\n    private children!: Array;\n    constructor(config: MenuItemConfig) {\n        this.id = uuid();\n        const {title, type, callback} = config;\n        if (type === MenuItemType.group) {\n            this.children = [];\n        }\n        this.title = title;\n        this.type = type;\n        this.callback = callback;\n    }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardController.html":{"url":"classes/SplitBoardController.html","title":"class - SplitBoardController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeId\n                            \n                            \n                                    Private\n                                expandActive\n                            \n                            \n                                    Private\n                                expandLeaveHandler\n                            \n                            \n                                    Private\n                                expandMouseUpHandler\n                            \n                            \n                                    Private\n                                expandMoveHandler\n                            \n                            \n                                    Private\n                                expandType\n                            \n                            \n                                    Private\n                                startX\n                            \n                            \n                                    Private\n                                startY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeExpand\n                            \n                            \n                                    Public\n                                checkExpandState\n                            \n                            \n                                    Private\n                                liveResize\n                            \n                            \n                                    Public\n                                onMouseDown\n                            \n                            \n                                    Public\n                                setActiveState\n                            \n                            \n                                    Private\n                                unactiveExpand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(view: SplitBoardView)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.controller.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        view\n                                                  \n                                                        \n                                                                        SplitBoardView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandLeaveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMouseUpHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMoveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        activeExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    activeExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkExpandState\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkExpandState(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        liveResize\n                        \n                    \n                \n            \n            \n                \n                    \n                    liveResize(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onMouseDown\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseDown(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setActiveState\n                        \n                    \n                \n            \n            \n                \n                    \n                    setActiveState(index: number, startX: number, startY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        unactiveExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    unactiveExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { directionType } from './split-board.view';\nimport type SplitBoardView from './split-board.view';\nimport type SplitItemView from './split-item.view';\n\nexport default class SplitBoardController {\n    private expandMoveHandler!: (event: MouseEvent) => void;\n    private expandLeaveHandler!: (event: MouseEvent) => void;\n    private expandMouseUpHandler!: (event: MouseEvent) => void;\n\n    private startX = 0;\n    private startY = 0;\n    private activeId = -1;\n\n    private expandActive = false;\n    private expandType = 0; // 是否超过偏移值 0 / 1 expand hor | 2 expand ver | 3 merge hor | 4 merge ver\n\n    constructor(private view: SplitBoardView) {\n        this.expandMoveHandler = (event: MouseEvent) => {\n            this.liveResize(event.clientX, event.clientY);\n            this.checkExpandState(event.clientX, event.clientY);\n        };\n        this.expandLeaveHandler = (event: MouseEvent) => { this.unactiveExpand(); };\n        this.expandMouseUpHandler = (event: MouseEvent) => { this.unactiveExpand(); };\n        this.view.root.addEventListener('mousedown', (event: MouseEvent) => {\n            this.onMouseDown(event);\n        });\n    }\n    public onMouseDown(event: MouseEvent): void {\n        const target = event.target as HTMLElement;\n        let index = -1;\n        this.view.items.forEach((item, i) => {\n            if (target && item.root == target.parentElement && target.classList.contains('split-expand')) index = i;\n        });\n        if (index === -1) {\n            return;\n        }\n        if (index > -1) {\n            this.setActiveState(index, event.clientX, event.clientY);\n        }\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    public setActiveState(index: number, startX: number, startY: number) {\n        // 锚点mousedown\n        this.startX = startX;\n        this.startY = startY;\n        this.activeExpand();\n        this.activeId = index;\n    }\n    private activeExpand() {\n        this.view.root.addEventListener('mousemove', this.expandMoveHandler);\n        this.view.root.addEventListener('mouseleave', this.expandLeaveHandler);\n        this.view.root.addEventListener('mouseup', this.expandMouseUpHandler);\n        this.expandActive = true;\n        this.expandType = 0;\n        this.view.setCursor('crosshair');\n    }\n    private unactiveExpand() {\n        if (this.expandActive) {\n            this.view.root.removeEventListener('mousemove', this.expandMoveHandler);\n            this.view.root.removeEventListener('mouseleave', this.expandLeaveHandler);\n            this.view.root.removeEventListener('mouseup', this.expandMouseUpHandler);\n            this.view.cancelForMerge();\n            this.expandActive = false;\n            this.expandType = 0;\n            this.view.setCursor('');\n        }\n    }\n    private liveResize(clientX: number, clientY: number) {\n        const item = this.view.items[this.activeId];\n        if (this.expandType == 1 && this.view.direction == directionType.col) {\n            // horizontal expand column\n            this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n        } else if (this.expandType == 2 && this.view.direction == directionType.row) {\n            // vertical expand row\n            this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n        }\n\n    }\n    public checkExpandState(clientX: number, clientY: number) {\n        const offsetX = this.startX - clientX;\n        const offsetY = this.startY - clientY;\n        /** expand mode */\n        if (this.expandType == 0 && offsetX > 0 && offsetY > 0 && (offsetX > 5 || offsetY > 5)) {\n            if (offsetX > offsetY) {\n                this.view.setCursor('col-resize');\n            } else {\n                this.view.setCursor('row-resize');\n            }\n        }\n        /** merge mode */\n        if (offsetX  5) {\n            this.view.setCursor('w-resize');\n            this.view.waitForMergeAtItem(this.activeId, 'w');\n            return;\n        }\n\n        if (offsetY  5) {\n            this.view.setCursor('n-resize');\n            this.view.waitForMergeAtItem(this.activeId, 'n');\n            return;\n        }\n\n        if (this.expandType) return;\n        /** do expand */\n        if (offsetX > 30) {\n            this.expandType = 1;\n            this.view.setCursor('col-resize');\n            this.view.splitColumnAt(this.activeId, clientX, clientY);\n            return;\n        }\n        if (offsetY > 30) {\n            this.expandType = 2;\n            this.view.setCursor('row-resize');\n            this.view.splitRowAt(this.activeId, clientX, clientY);\n        }\n        if (\n            (this.expandType == 1 && this.view.direction == directionType.row) ||\n            (this.expandType == 2 && this.view.direction == directionType.col)\n        ) {\n            this.unactiveExpand();\n        }\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardView.html":{"url":"classes/SplitBoardView.html","title":"class - SplitBoardView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _waitForMergeItem\n                            \n                            \n                                    Public\n                                controller\n                            \n                            \n                                    Public\n                                direction\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Private\n                                splitInstance\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addColumn\n                            \n                            \n                                    Public\n                                addRow\n                            \n                            \n                                    Public\n                                applySplit\n                            \n                            \n                                    Public\n                                cancelForMerge\n                            \n                            \n                                    Private\n                                checkDirection\n                            \n                            \n                                    Private\n                                destorySplit\n                            \n                            \n                                    Private\n                                getExpandResizes\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Public\n                                insertItemAt\n                            \n                            \n                                    Public\n                                resizeAt\n                            \n                            \n                                    Public\n                                setCursor\n                            \n                            \n                                    Public\n                                splitColumnAt\n                            \n                            \n                                    Public\n                                splitRowAt\n                            \n                            \n                                    Private\n                                startToExpand\n                            \n                            \n                                    Public\n                                waitForMergeAtItem\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.view.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _waitForMergeItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitItemView | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        controller\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SplitBoardController\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        direction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         directionType\n\n                    \n                \n                \n                    \n                        Default value : directionType.col\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitItemView[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        splitInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Split.Instance | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addColumn\n                        \n                    \n                \n            \n            \n                \n                    \n                    addColumn(item: SplitItemView)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addRow\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRow(item: SplitItemView)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applySplit\n                        \n                    \n                \n            \n            \n                \n                    \n                    applySplit(direction: \"vertical\" | \"horizontal\", sizes?: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"vertical\" | \"horizontal\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'horizontal'\n                                    \n\n                                \n                                \n                                    sizes\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkDirection\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkDirection(type: directionType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                directionType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        destorySplit\n                        \n                    \n                \n            \n            \n                \n                    \n                    destorySplit()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getExpandResizes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getExpandResizes(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        insertItemAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertItemAt(item: SplitItemView, pos?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pos\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resizeAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    resizeAt(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:159\n                \n            \n\n\n            \n                \n                    live resize after expanded\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCursor\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCursor(type: string | \"row-resize\" | \"col-resize\" | \"crosshair\" | \"e-resize\" | \"w-resize\" | \"s-resize\" | \"n-resize\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            string | \"row-resize\" | \"col-resize\" | \"crosshair\" | \"e-resize\" | \"w-resize\" | \"s-resize\" | \"n-resize\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        splitColumnAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    splitColumnAt(index: number, clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        splitRowAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    splitRowAt(index: number, clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        startToExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    startToExpand(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMergeAtItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMergeAtItem(index: number, direction: \"w\" | \"e\" | \"n\" | \"s\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"n\" | \"s\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view'; \nimport { injectable, inject } from 'inversify';\nimport SplitItemView from './split-item.view';\nimport SplitBoardController from './split-board.controller';\nimport Split from 'split.js';\n\nexport const lowBoardRoot = Symbol.for('FlowTableRoot');\n\nexport enum directionType {\n    'col',\n    'row'\n}\n\n@injectable()\n/** Split Board View */\nexport default class SplitBoardView extends View {\n    public items: SplitItemView[] = [];\n    public direction : directionType = directionType.col;\n    private splitInstance: Split.Instance | null = null;\n    public controller: SplitBoardController;\n    private _waitForMergeItem: SplitItemView | null = null;\n    constructor() {\n        super();\n        this.init();\n        this.controller = new SplitBoardController(this);\n    }\n    private init() {\n        this.root.classList.add('split-board', 'flex', 'flex-nowrap', 'overflow-hidden');\n        // this.root.style.margin = '0 4px';\n    }\n    public addRow(item: SplitItemView):void {\n        if (!this.checkDirection(directionType.row)) {\n            console.warn('direction is not right when added row', item);\n            return;\n        }\n        this.direction = directionType.row;\n        this.root.classList.remove('flex-row');\n        this.root.classList.add('flex-col');\n        this.insertItemAt(item);\n        this.applySplit('vertical');\n    }\n    public addColumn(item: SplitItemView): void {\n        if (!this.checkDirection(directionType.col)) {\n            console.warn('direction is not right when added col', item);\n            return;\n        }\n        this.direction = directionType.col;\n        this.root.classList.remove('flex-col');\n        this.root.classList.add('flex-row');\n        this.insertItemAt(item);\n        this.applySplit();\n\n    }\n    public insertItemAt(item: SplitItemView, pos?: number):void {\n        pos = pos === undefined ? this.items.length : pos;\n        this.items.splice(pos, 0, item);\n        if(pos == 0) {\n            this.root.appendChild(item.root);\n        } else {\n            this.items[pos-1].root.after(item.root);\n        }\n    }\n\n    public setCursor(type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize' = ''):void {\n        this.root.style.cursor = type;\n    }\n    public waitForMergeAtItem(index: number, direction: 'w' | 'e' | 'n' | 's'):void {\n        if (this._waitForMergeItem== this.items[index]) {\n            return;\n        }\n        this.cancelForMerge();\n        if (this.items[index]) {\n            this.items[index].waitForMerge(direction);\n            this._waitForMergeItem = this.items[index];\n        }\n    }\n    public cancelForMerge():void {\n        if (this._waitForMergeItem) {\n            this._waitForMergeItem.cancelWaitForMerge();\n            this._waitForMergeItem = null;\n        }\n    }\n    private checkDirection(type: directionType) {\n        if (this.items.length > 1 && this.direction !== type) {\n            return false;\n        }\n        return true;\n    }\n    // public removeColumn(item: SplitItemView) {\n    //     // do sth.\n    // }\n    // public removeRow(item: SplitItemView) {\n    //     // do sth.\n    // }\n    public applySplit(direction: 'vertical' | 'horizontal' = 'horizontal', sizes?: number[]):void {\n        this.destorySplit();\n        this.splitInstance = Split(Array.prototype.slice.call(this.root.children), {\n            sizes,\n            // sizes: [30, 70],\n            minSize: 15,\n            direction,\n            snapOffset: 0,\n            gutterStyle: () => direction == 'vertical' ? {height: '3px'} : {width: '3px'},\n        });\n    }\n\n    private destorySplit() {\n        this.splitInstance && this.splitInstance.destroy();\n        this.splitInstance = null;\n    }\n    // 切分列\n    public splitColumnAt(index: number, clientX: number, clientY: number):void {\n        const item = this.items[index];\n        if (!this.checkDirection(directionType.col)) { // 列切分行\n            const newBoard = new SplitBoardView().setFlow('1');\n            const contentView = item.contentView;\n            item.replaceContent(newBoard.root);\n            const newItemView = new SplitItemView().setContent(contentView);\n            const newEmptyView = new SplitItemView().setContent(document.createElement('div'));\n            item.hideExpandButton(); // 不再使用该item的拉伸按钮\n            newBoard.addColumn(newItemView);\n            // newBoard.addColumn(newEmptyView);\n            newBoard.controller.setActiveState(0, clientX, clientY);\n            newBoard.controller.checkExpandState(clientX, clientY);\n            return;\n        }\n        // 列扩展列\n        this.startToExpand(index, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n    }\n    // 切分行\n    public splitRowAt(index: number, clientX: number, clientY: number):void {\n        const item = this.items[index];\n        if (!this.checkDirection(directionType.row)) { // 行切分列\n            const newBoard = new SplitBoardView().setFlow('1');\n            const contentView = item.contentView;\n            item.replaceContent(newBoard.root);\n            const newItemView = new SplitItemView().setContent(contentView);\n            const newEmptyView = new SplitItemView().setContent(document.createElement('div'));\n            item.hideExpandButton(); // 不再使用该item的拉伸按钮\n            newBoard.addRow(newItemView);\n            // newBoard.addRow(newEmptyView);\n            newBoard.controller.setActiveState(0, clientX, clientY);\n            newBoard.controller.checkExpandState(clientX, clientY);\n            return;\n        }\n        // 行切分行\n        this.startToExpand(index, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n    }\n\n    private startToExpand(index: number, start: number, length: number, position: number) {\n        const newSizes = this.getExpandResizes(index, start, length, position);\n        const newItem = new SplitItemView().setContent(document.createElement('div'));\n        this.destorySplit();\n        this.insertItemAt(newItem, index + 1);\n        this.applySplit(this.direction == directionType.col ? 'horizontal' : 'vertical', newSizes);\n    }\n\n    /** live resize after expanded  */\n    public resizeAt(index: number, start: number, length: number, position: number):void {\n        if (!this.splitInstance) return;\n        // const item = this.items[index];\n        let max = length;\n        if (this.items[index +1]) {\n            max += this.items[index +1].root[\n                this.direction == directionType.col ? 'clientWidth': 'clientHeight'\n            ];\n        }\n        const r = (position - start) / max;\n        if (position - start  {\n            sum += size;\n            if (i == index || i == index +1) return;\n            other += size;\n        });\n        let newSize = 0;\n        const newSizes: number[] = [];\n        this.splitInstance.getSizes().forEach((size, i) => {\n            if (index == i) {\n                newSize = (sum - other) * r;\n                newSizes.push(newSize);\n            } else if (index + 1 == i) {\n                newSizes.push(sum - other - newSize);\n            }else if (index !== i) {\n                newSizes.push(size);\n            }\n        });\n        this.splitInstance.setSizes(newSizes);\n    }\n\n\n    private getExpandResizes(index: number, start: number, length: number, position: number) {\n        const r =  (position - start) / length;\n        if (r = 1) return;\n        const newSizes: number[] = [];\n        this.splitInstance && this.splitInstance.getSizes().forEach((size, i) => {\n            if (index !== i) {\n                newSizes.push(size);\n                return;\n            }\n            const w =  size * r;\n            newSizes.push(w, size-w);\n        });\n        return newSizes;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitItemView.html":{"url":"classes/SplitItemView.html","title":"class - SplitItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-item.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-item.view.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitExpand\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:70\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view';\nimport { directionType } from './split-board.view';\nimport SplitExpand from './split-expand.svelte';\n\nenum directionStyles {\n    'w' = 'merge-w',\n    'e' = 'merge-e',\n    's' = 'merge-s',\n    'n' = 'merge-n'\n}\n\nexport default class SplitItemView extends View {\n    private _growClassName = '';\n    private _shrinkClassName = '';\n    private _bgColorClassName: string[] = ['bg-cgray-100', 'dark:bg-cgray-800'];\n\n    public contentView!: HTMLElement;\n    private expand!: SplitExpand;\n\n    constructor() {\n        super();\n        this.addExpandButton();\n        this.setDefaultClass();\n\n    }\n\n    public setContent(contentView: HTMLElement): SplitItemView {\n        this.contentView = contentView;\n        this.root.classList.add('split-item', 'flex');\n        contentView.classList.add('flex', 'flex-1');\n        return this.prepend(contentView);\n    }\n\n    public replaceContent(contentView: HTMLElement): SplitItemView {\n        this.root.replaceChild(contentView, this.contentView);\n        this.contentView = contentView;\n        contentView.classList.add('flex', 'flex-1');\n        return this;\n    }\n\n    public setGrow(className = 'flex-grow'): void {\n        this.root.classList.remove(this._shrinkClassName);\n        this._shrinkClassName = '';\n        this._growClassName = className;\n        this.root.classList.add(this._growClassName);\n    }\n\n    public setShrink(className = 'flex-shrink'): void {\n        this.root.classList.remove(this._growClassName);\n        this._growClassName = '';\n        this._shrinkClassName = className;\n        this.root.classList.add(this._shrinkClassName);\n    }\n\n    public isShrink(): boolean {\n        return !!this._growClassName;\n    }\n\n    private setDefaultClass() {\n        this.root.classList.add('flex-grow', 'rounded-xl');\n        this.root.classList.add('relative');\n        this.root.classList.add(...this._bgColorClassName);\n\n    }\n\n    private addExpandButton() {\n        this.expand = new SplitExpand({ target: this.root });\n    }\n    /** To hide expand button */\n    public hideExpandButton(): void {\n        this.expand.expandHidden = true;\n    }\n\n    public waitForMerge(direction: 'w' | 'e' | 's' | 'n'): void {\n        this.cancelWaitForMerge();\n        this.root.classList.add('wait-for-merge');\n        this.expand.mergeDirection = directionStyles[direction];\n    }\n\n    public cancelWaitForMerge(): void {\n        this.root.classList.remove('wait-for-merge');\n        this.expand.mergeDirection = '';\n    }\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Test.html":{"url":"classes/Test.html","title":"class - Test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Test\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/test.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                print\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        print\n                        \n                    \n                \n            \n            \n                \n                    \n                    print(target: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/test.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Test {\n  public print(target: string) {\n    console.log(`test ok: ${target}`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/View.html":{"url":"classes/View.html","title":"class - View","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  View\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/view.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root?: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/view.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/view.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        type FlowValue = '1' | 'auto' | 'initial' | 'none';\n\nexport default class View {\n    public root: HTMLElement;\n    constructor(root?: HTMLElement) {\n        this.root = root || document.createElement('div');\n    }\n    setFlow(type: FlowValue) {\n        this.root.classList.remove('flex-1', 'flex-auto', 'flex-initial', 'flex-none');\n        this.root.classList.add(`flex-${type}`);\n        return this;\n    }\n    append(child: HTMLElement) {\n        this.root.appendChild(child);\n        return this;\n    }\n    prepend(...childs: HTMLElement[]) {\n        this.root.prepend(...childs);\n        return this;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            createWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            mainWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            notification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            interface\n            ISettings\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            variable\n            settings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.controller.ts\n            \n            class\n            SplitBoardController\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            class\n            SplitBoardView\n            \n                3 %\n                (1/26)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            variable\n            lowBoardRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-item.view.ts\n            \n            class\n            SplitItemView\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            function\n            makeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BgColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BorderColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlAccentColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlBackgroundColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlDisabledColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlForbiddenColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlHighlightColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            FourthBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            GridBackgroundColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            LabelColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemBlueColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemGrayColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemOrangeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemPinkColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemRedColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemYellowColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TextFieldBackground\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/view.ts\n            \n            class\n            View\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/color-ref.ts\n            \n            class\n            ColorRef\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/parts/ioc/inject.ts\n            \n            function\n            inject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/test.ts\n            \n            class\n            Test\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/workbench/desktop/app.ts\n            \n            class\n            App\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/workbench/desktop/main.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/index.ts\n            \n            function\n            getMenuGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/index.ts\n            \n            variable\n            menuGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu-group.ts\n            \n            class\n            MenuGroup\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu-item.ts\n            \n            class\n            MenuItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu-item.ts\n            \n            interface\n            MenuItemConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu.ts\n            \n            class\n            Menu\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/workbench/desktop/utils/utils.ts\n            \n            function\n            uuid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/services/appearance-service.ts\n            \n            class\n            AppearanceService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @types/color : ^3.0.1\n        \n            color : ^3.1.3\n        \n            electron-log : ^4.3.1\n        \n            electron-store : ^7.0.2\n        \n            electron-updater : ^4.3.5\n        \n            eventemitter2 : ^6.4.4\n        \n            eventemitter3 : ^4.0.7\n        \n            inversify : ^5.1.1\n        \n            reflect-metadata : ^0.1.13\n        \n            smelte : ^1.1.5\n        \n            split.js : ^1.6.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppearanceType   (src/.../appearance.ts)\n                        \n                        \n                            directionStyles   (src/.../split-item.view.ts)\n                        \n                        \n                            directionType   (src/.../split-board.view.ts)\n                        \n                        \n                            MenuItemType   (src/.../menu-item.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/common/appearance.ts\n    \n        \n            \n                \n                    \n                        \n                        AppearanceType\n                    \n                \n                    \n                        \n                            模式类型\n\n                        \n                    \n                        \n                            \n                                 any\n                            \n                        \n                        \n                            \n                                 light\n                            \n                        \n                        \n                            \n                                 dark\n                            \n                        \n            \n        \n\n    src/core/browser/layout/split-item.view.ts\n    \n        \n            \n                \n                    \n                        \n                        directionStyles\n                    \n                \n                        \n                            \n                                 w\n                            \n                        \n                        \n                            \n                                Value : merge-w\n                            \n                        \n                        \n                            \n                                 e\n                            \n                        \n                        \n                            \n                                Value : merge-e\n                            \n                        \n                        \n                            \n                                 s\n                            \n                        \n                        \n                            \n                                Value : merge-s\n                            \n                        \n                        \n                            \n                                 n\n                            \n                        \n                        \n                            \n                                Value : merge-n\n                            \n                        \n            \n        \n\n    src/core/browser/layout/split-board.view.ts\n    \n        \n            \n                \n                    \n                        \n                        directionType\n                    \n                \n                        \n                            \n                                 col\n                            \n                        \n                        \n                            \n                                 row\n                            \n                        \n            \n        \n\n    src/workbench/desktop/menu/menu-item.ts\n    \n        \n            \n                \n                    \n                        \n                        MenuItemType\n                    \n                \n                        \n                            \n                                 group\n                            \n                        \n                        \n                            \n                                 item\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getMenuGroup   (src/.../index.ts)\n                        \n                        \n                            inject   (src/.../inject.ts)\n                        \n                        \n                            makeColor   (src/.../ui-color.ts)\n                        \n                        \n                            uuid   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/menu/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getMenuGroup\n                        \n                    \n                \n            \n            \n                \ngetMenuGroup(target)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MenuGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/core/parts/ioc/inject.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inject\n                        \n                    \n                \n            \n            \n                \ninject(token)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        makeColor\n                        \n                    \n                \n            \n            \n                \nmakeColor(anyColorHex, lightColorHex?, darkColorHex?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anyColorHex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    darkColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/workbench/desktop/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n            \n                \nuuid()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCosmic Design\n\n\n\n\n\n🚧 ing...\n\nThe Repository\nCosmic design is a concrete practice of D2R.\nThis repository is where we develop it together with the community. Not only do we work on code and issues here, we also publish our roadmap , development guide. This source code is available to everyone under the standard MIT license.\nAbout Cosmic Design\n\n🚧 ing...\n\nHow it works\nThe template required a minimum dependencies. Only Vite is used for building, nothing more.\nProject Structure\nThe structure of this template is very similar to the structure of a monorepo.\nThe entire source code of the program is divided into three modules (packages) that are bundled each independently:\n\nsrc/core\nInclude common dependencies, such as components, utils, ipc.\nsrc/app\nElectron main script.\nsrc/workbench\nElectron web page.\n\nCosmic Components\n\nComponents StoryBook\nsrc/core/components\n\nCompile App\nNext step is run  packaging and compilation a ready for distribution Electron app for macOS, Windows and Linux with \"auto update\" support out of the box. \nTo do this, using the electron-builder:\n\nIn npm script compile: This script is configured to compile the application as quickly as possible. It is not ready for distribution, is compiled only for the current platform and is used for debugging.\nIn GitHub Action: The application is compiled for any platform and ready-to-distribute files are automatically added to the draft GitHub release. \n\nContribution\nSee Wiki Contributing\n\nSource Code Organization\nUser Interface\nColor Set\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 qiansc\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FlowValue   (src/.../view.ts)\n                        \n                        \n                            MenuCommonFunction   (src/.../menu-item.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/browser/view.ts\n    \n    \n        \n            \n                \n                    \n                    FlowValue\n                \n            \n            \n                \n                        \"1\" | \"auto\" | \"initial\" | \"none\"\n\n                \n            \n        \n    \n    src/workbench/desktop/menu/menu-item.ts\n    \n    \n        \n            \n                \n                    \n                    MenuCommonFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (src/.../main.ts)\n                        \n                        \n                            BgColor   (src/.../ui-color.ts)\n                        \n                        \n                            BorderColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlAccentColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlDisabledColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlForbiddenColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlHighlightColor   (src/.../ui-color.ts)\n                        \n                        \n                            createWindow   (src/.../index.ts)\n                        \n                        \n                            FourthBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            GridBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            isProd   (src/.../index.ts)\n                        \n                        \n                            isProd   (src/.../logger.ts)\n                        \n                        \n                            LabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            logger   (src/.../logger.ts)\n                        \n                        \n                            lowBoardRoot   (src/.../split-board.view.ts)\n                        \n                        \n                            mainWindow   (src/.../index.ts)\n                        \n                        \n                            menuGroup   (src/.../index.ts)\n                        \n                        \n                            notification   (src/.../index.ts)\n                        \n                        \n                            SecondaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            SecondaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            settings   (src/.../settings.ts)\n                        \n                        \n                            SystemBlueColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemGrayColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemOrangeColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemPinkColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemRedColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemYellowColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            TextFieldBackground   (src/.../ui-color.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new App(document.body)\n                    \n                \n\n\n        \n    \n\n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#E0E0E0', '#E0E0E0', '#1F1F1F')\n                    \n                \n\n            \n                \n                    三级背景色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BorderColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D9D9D9', '#D9D9D9', '#D9D9D9')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlAccentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#5580c0', '#5580c0', '#5580c0')\n                    \n                \n\n            \n                \n                    高亮色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#FFFFFF', '#5D5F61')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlDisabledColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F9F9F9', '#F9F9F9', '#464749')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlForbiddenColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlHighlightColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#ffae2b', '#ffae2b', '#ffae2b')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FourthBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#BABABA', '#BABABA', '#454545')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GridBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F2F2F2', '#F2F2F2', '#2E2F30')\n                    \n                \n\n            \n                \n                    组件色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#E0E0E0')\n                    \n                \n\n            \n                \n                    三级标签色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D7D7D7', '#D7D7D7', '#272728')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#808080')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemBlueColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#729cd4', '#729cd4', '#729cd4')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemGrayColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c0c0c1', '#c0c0c1', '#c0c0c1')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemOrangeColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemPinkColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c4666f', '#c4666f', '#c4666f')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemRedColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemYellowColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n            \n                \n                    辅助色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#C6C6C6', '#C6C6C6', '#393939')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#3F3F3F', '#3F3F3F', '#3F3F3F')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TextFieldBackground\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#F2F2F2', '#454545')\n                    \n                \n\n\n        \n    \n\n    src/app/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createWindow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  mainWindow = new BrowserWindow({\n    width: 900,\n    height: 680,\n    webPreferences: {\n      devTools: isProd ? false : true,\n      contextIsolation: true,\n      enableRemoteModule: false,\n      preload:  join(__dirname, 'preload.js'),\n    },\n  });\n\n  const url =\n    // process.env.NODE_ENV === \"production\"\n    isProd\n      ? // in production, use the statically build version of our application\n      `file://${join(__dirname, 'dist/workbench/desktop/', 'index.html')}`\n      : // in dev, target the host and port of the local rollup web server\n      'http://localhost:5000';\n\n  mainWindow.loadURL(url).catch((err: any) => {\n    logger.error(JSON.stringify(err));\n    app.quit();\n  });\n\n  if (!isProd) mainWindow.webContents.openDevTools();\n\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BrowserWindow | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Notification | null\n\n                    \n                \n\n\n        \n    \n\n    src/app/utils/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log\n                    \n                \n\n\n        \n    \n\n    src/core/browser/layout/split-board.view.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lowBoardRoot\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('FlowTableRoot')\n                    \n                \n\n\n        \n    \n\n    src/workbench/desktop/menu/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        menuGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n\n\n        \n    \n\n    src/app/utils/settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ElectronStore({\n  defaults: {\n    check: false,\n  },\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
