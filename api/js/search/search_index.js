var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/App.html",[0,0.08,1,1.742]],["body/classes/App.html",[0,0.055,1,1.8,2,0.363,3,0.323,4,0.285,5,0.285,6,1.76,7,0.151,8,0.611,9,1.026,10,3.917,11,2.825,12,0.911,13,4.299,14,4.299,15,4.299,16,4.299,17,4.299,18,4.299,19,3.207,20,3.207,21,4.299,22,4.299,23,3.207,24,4.299,25,0.664,26,1.76,27,2.466,28,1.341,29,3.207,30,1.006,31,0.037,32,1.006,33,0.589,34,0.818,35,2.018,36,2.127,37,0.751,38,0.801,39,2.067,40,2.654,41,2.127,42,1.58,43,1.269,44,2.127,45,2.127,46,2.127,47,2.127,48,2.127,49,3.207,50,2.127,51,3.207,52,2.127,53,2.127,54,2.127,55,3.207,56,2.902,57,2.127,58,2.127,59,1.559,60,1.194,61,1.76,62,1.338,63,2.127,64,2.654,65,1.194,66,1.76,67,0.881,68,2.29,69,2.127,70,2.127,71,3.207,72,2.127,73,3.207,74,3.207,75,2.127,76,3.207,77,2.127,78,3.207,79,2.127,80,1.194,81,3.207,82,1.519,83,1.074,84,1.519,85,0.323,86,1.519,87,2.29,88,2.127,89,2.127,90,2.127,91,2.127,92,2.127,93,2.127,94,2.127,95,2.127,96,2.127,97,2.127,98,2.127,99,1.394,100,3.207,101,2.127,102,2.127,103,2.127,104,2.127,105,2.127,106,2.127,107,2.127,108,2.127,109,2.127,110,1.519,111,2.127,112,2.654,113,2.127,114,3.557,115,2.127,116,2.17,117,2.29,118,4.299,119,3.557,120,2.127,121,3.207,122,2.127,123,2.127,124,2.127,125,2.127,126,0.881,127,2.127,128,2.127,129,2.127,130,1.76,131,2.127,132,3.195,133,2.127,134,2.127,135,2.127,136,2.127,137,2.127,138,2.127,139,3.207,140,2.127,141,2.127,142,2.127,143,2.127,144,0.012,145,0.019,146,0.012]],["title/classes/AppearanceService.html",[0,0.08,62,1.952]],["body/classes/AppearanceService.html",[0,0.086,2,0.568,3,0.505,4,0.446,5,0.446,7,0.236,8,0.839,9,1.189,12,1.252,28,1.28,30,1.031,31,0.037,32,1.031,33,0.711,34,0.839,37,1.031,38,1.661,39,1.661,42,1.404,43,1.112,56,3.661,59,1.404,60,1.869,61,2.756,62,2.773,85,0.505,110,3.147,144,0.02,145,0.026,146,0.02,147,4.651,148,2.377,149,4.94,150,4.94,151,1.121,152,4.408,153,4.408,154,3.33,155,4.351,156,3.33,157,4.408,158,3.33,159,4.408,160,2.095,161,3.33,162,4.408,163,2.756,164,3.147,165,2.095,166,3.33,167,4.94,168,3.33,169,3.33,170,1.38]],["title/classes/BaseMenu.html",[0,0.08,171,2.215]],["body/classes/BaseMenu.html",[0,0.098,2,0.648,3,0.577,4,0.51,5,0.51,7,0.27,8,0.914,9,1.113,12,1.365,25,1.188,28,1.232,30,1.124,31,0.037,32,1.124,33,0.668,34,0.914,42,1.08,43,0.804,59,1.365,64,3.147,65,3.104,66,3.147,67,1.576,85,0.577,86,2.715,126,2.291,144,0.022,145,0.028,146,0.022,151,1.002,171,3.429,172,3.479,173,4.576,174,3.147,175,5.264,176,4.803,177,3.803,178,4.803,179,4.803,180,4.803,181,2.658,182,3.803,183,3.974,184,3.803,185,3.803,186,3.803,187,3.803]],["title/classes/ColorRef.html",[0,0.08,188,2.215]],["body/classes/ColorRef.html",[0,0.086,2,0.571,3,0.509,4,0.449,5,0.449,7,0.238,8,0.843,9,1.247,12,1.258,25,1.046,28,1.283,30,1.036,31,0.037,32,1.036,33,0.659,34,0.843,37,1.036,42,0.952,56,3.542,59,1.258,85,0.509,110,2.392,144,0.02,145,0.026,146,0.02,151,0.944,170,2.184,188,3.16,189,4.659,190,2.773,191,5.741,192,5.741,193,5.741,194,4.432,195,4.426,196,4.426,197,2.484,198,3.351,199,3.351,200,4.426,201,3.351,202,3.351,203,4.956,204,4.426,205,4.426,206,3.351,207,4.956,208,3.351,209,3.351]],["title/interfaces/ISettings.html",[210,0.726,211,2.215]],["body/interfaces/ISettings.html",[3,0.665,4,0.587,5,0.587,7,0.311,8,0.998,31,0.036,33,0.513,37,1.026,39,1.652,59,1.246,85,0.665,99,1.132,144,0.026,145,0.031,146,0.026,210,1.026,211,3.742,212,2.213,213,3.13,214,4.914,215,4.003,216,4.337,217,3.13,218,3.627,219,3.742,220,3.627,221,2.758]],["title/classes/Menu.html",[0,0.08,126,1.286]],["body/classes/Menu.html",[0,0.061,2,0.402,3,0.357,4,0.315,5,0.315,7,0.357,8,0.659,9,1.271,10,3.437,11,2.537,12,0.983,25,0.735,27,2.198,28,1.354,30,1.058,31,0.037,32,1.275,33,0.648,34,0.86,37,1.058,38,1.545,39,1.703,40,2.862,42,1.368,43,1.129,59,1.284,67,1.699,85,0.357,87,2.469,99,0.893,116,1.189,119,1.948,126,1.872,144,0.014,145,0.02,146,0.014,151,1.13,170,1.699,181,2.627,183,3.393,197,1.322,222,1.948,223,4.162,224,2.156,225,4.814,226,4.1,227,4.1,228,4.519,229,4.519,230,2.862,231,3.459,232,3.459,233,3.459,234,1.791,235,3.459,236,2.354,237,2.354,238,2.354,239,2.996,240,2.354,241,2.354,242,4.814,243,2.354,244,2.354,245,2.354,246,2.354,247,3.459,248,3.028,249,2.354,250,3.459,251,2.086,252,2.354,253,3.459,254,2.354,255,2.354,256,1.433,257,2.354,258,1.681,259,2.354,260,2.354,261,2.354,262,2.354,263,2.354,264,2.354,265,2.354,266,2.354,267,2.354,268,2.354,269,2.354,270,2.354,271,0.887,272,2.354,273,2.354,274,2.354,275,2.354,276,2.354,277,2.354,278,2.354,279,2.354]],["title/classes/MenuGroupService.html",[0,0.08,65,1.742]],["body/classes/MenuGroupService.html",[0,0.082,2,0.545,3,0.485,4,0.428,5,0.428,7,0.227,8,0.817,9,1.175,10,3.852,12,1.219,25,1.512,27,2.464,28,1.3,30,1.004,31,0.037,32,1.004,33,0.606,34,0.817,39,1.205,42,1.376,43,1.094,59,1.219,60,1.795,65,2.408,67,2.351,85,0.485,87,3.063,99,1.25,126,2.467,144,0.019,145,0.025,146,0.019,148,2.283,151,1.112,163,2.646,164,3.063,170,1.778,224,1.778,280,4.696,281,4.841,282,5.174,283,4.29,284,4.29,285,4.29,286,3.198,287,3.198,288,4.29,289,4.29,290,3.198,291,3.198,292,4.29,293,3.198,294,2.646,295,3.198,296,3.198,297,3.198,298,3.198,299,3.198,300,4.29,301,3.198,302,3.198,303,3.198]],["title/classes/MenuItem.html",[0,0.08,239,1.742]],["body/classes/MenuItem.html",[0,0.084,2,0.555,3,0.494,4,0.436,5,0.436,7,0.231,8,0.827,9,1.272,11,1.828,25,1.017,28,1.307,30,0.762,31,0.037,32,0.762,33,0.712,34,0.62,43,0.689,59,0.925,67,1.349,85,0.791,99,0.84,126,1.349,144,0.019,145,0.025,146,0.019,151,0.93,181,2.631,210,0.762,223,3.488,224,2.024,234,1.744,239,3.047,248,2.731,256,1.349,258,2.324,304,3.2,305,1.828,306,3.987,307,4.043,308,3.987,309,3.593,310,4.342,311,3.721,312,3.256,313,3.256,314,3.256,315,3.721,316,3.256,317,2.731,318,2.324,319,2.324,320,2.694,321,2.694,322,2.048,323,2.694,324,2.324,325,2.694,326,2.694,327,2.694,328,2.694]],["title/interfaces/MenuItemConfig.html",[181,1.567,210,0.726]],["body/interfaces/MenuItemConfig.html",[0,0.09,3,0.532,4,0.47,5,0.47,7,0.249,8,0.868,9,1.134,11,1.967,31,0.037,33,0.716,34,0.868,43,0.741,59,0.996,67,1.452,85,0.814,99,0.905,126,1.452,144,0.021,145,0.027,146,0.021,151,0.667,181,2.557,210,0.82,212,1.769,223,2.502,224,1.452,234,1.837,239,2.843,248,2.204,256,1.452,258,2.502,304,1.967,305,1.967,306,4.143,307,2.9,308,4.143,309,2.9,311,3.97,315,3.97,317,2.867,318,2.502,319,2.502,320,2.9,321,2.9,322,2.204,323,4.439,324,2.502,325,2.9,326,2.9,327,2.9,328,2.9]],["title/classes/SplitBoardController.html",[0,0.08,329,1.952]],["body/classes/SplitBoardController.html",[0,0.044,2,0.288,3,0.256,4,0.226,5,0.226,7,0.328,8,0.51,9,1.268,12,0.762,25,0.527,27,0.77,28,1.281,30,0.97,31,0.038,32,0.97,33,0.625,34,0.789,37,1.032,38,1.561,42,1.253,43,1.072,59,0.947,80,2.132,82,1.914,83,0.852,84,1.204,85,0.256,86,1.204,99,0.981,116,1.353,144,0.01,145,0.016,146,0.01,151,0.941,160,2.098,170,1.717,221,2.098,251,2.412,256,0.699,271,1.982,329,1.686,330,2.791,331,1.396,332,3.335,333,3.335,334,3.335,335,3.335,336,3.335,337,3.335,338,4.625,339,4.625,340,3.798,341,2.68,342,2.68,343,2.68,344,2.68,345,3.798,346,1.687,347,2.68,348,1.353,349,2.775,350,1.687,351,1.687,352,1.687,353,1.687,354,1.687,355,1.687,356,1.687,357,1.687,358,2.68,359,4.192,360,1.687,361,3.651,362,2.68,363,1.687,364,2.68,365,5.066,366,1.687,367,3.971,368,2.68,369,1.687,370,1.687,371,1.061,372,2.381,373,3.827,374,2.68,375,3.798,376,2.68,377,1.396,378,2.098,379,1.396,380,3.335,381,1.687,382,3.335,383,1.687,384,3.335,385,3.335,386,3.335,387,1.687,388,1.687,389,1.687,390,1.687,391,1.687,392,1.687,393,1.687,394,1.687,395,1.687,396,1.687,397,1.687,398,1.687,399,2.68,400,2.68,401,1.687,402,1.687,403,1.687,404,1.687,405,1.687,406,3.335,407,1.061,408,5.066,409,1.687,410,1.687,411,1.687,412,1.687,413,1.687,414,1.687,415,1.687,416,3.798,417,2.218,418,1.396,419,1.687,420,2.68,421,1.396,422,1.396,423,2.218,424,1.396,425,1.204,426,1.396,427,1.396,428,4.412,429,4.412,430,2.68,431,3.143,432,2.68,433,3.651,434,2.68,435,1.687,436,2.68,437,1.061,438,1.687,439,1.061,440,2.218,441,1.687,442,1.687]],["title/classes/SplitBoardView.html",[0,0.08,80,1.742]],["body/classes/SplitBoardView.html",[0,0.027,2,0.181,3,0.161,4,0.142,5,0.142,7,0.338,8,0.347,9,1.107,12,0.518,25,0.749,27,1.465,28,1.264,30,1.135,31,0.038,32,1.135,33,0.641,34,0.923,35,1.146,37,0.878,38,1.321,39,1.493,42,1.439,43,1.126,59,0.912,60,0.594,80,1.023,83,2.489,84,0.756,85,0.364,99,1.323,114,1.508,130,1.508,132,1.984,144,0.006,145,0.011,146,0.006,151,1.108,164,1.301,165,0.666,170,1.889,197,1.023,215,0.756,221,0.666,230,2.357,234,0.569,251,2.502,256,1.839,271,1.209,322,0.666,329,1.508,330,2.666,348,2.092,349,1.968,359,3.672,361,3.429,371,2.205,372,2.033,407,0.666,417,2.656,418,2.901,421,0.876,422,0.876,423,0.876,424,2.656,425,2.68,426,0.876,427,0.876,433,4.288,437,2.493,439,2.205,440,0.876,443,0.666,444,1.508,445,2.398,446,2.398,447,3.429,448,1.984,449,2.398,450,1.822,451,1.822,452,1.822,453,2.848,454,1.822,455,2.848,456,1.822,457,1.822,458,1.822,459,2.398,460,1.822,461,1.822,462,1.822,463,1.822,464,1.301,465,1.301,466,1.301,467,1.822,468,3.559,469,1.059,470,1.059,471,1.059,472,1.822,473,1.059,474,2.357,475,0.876,476,1.822,477,1.059,478,1.822,479,1.059,480,1.822,481,3.209,482,1.059,483,1.059,484,1.822,485,1.059,486,1.059,487,1.822,488,4.666,489,4.559,490,4.666,491,1.059,492,1.059,493,1.822,494,3.753,495,1.059,496,1.822,497,1.059,498,1.822,499,1.822,500,1.059,501,3.106,502,2.398,503,2.503,504,2.205,505,1.059,506,1.822,507,1.059,508,1.822,509,1.059,510,1.822,511,1.059,512,1.822,513,1.059,514,0.756,515,0.876,516,0.756,517,0.756,518,0.876,519,0.756,520,0.756,521,1.146,522,0.876,523,1.059,524,0.876,525,0.756,526,0.876,527,1.822,528,0.876,529,1.059,530,1.059,531,1.059,532,0.876,533,1.301,534,1.059,535,1.059,536,1.059,537,1.059,538,1.059,539,1.822,540,1.822,541,1.822,542,1.508,543,2.398,544,1.508,545,1.508,546,1.822,547,1.059,548,1.822,549,1.059,550,0.535,551,1.822,552,1.059,553,1.059,554,1.059,555,1.059,556,1.059,557,2.848,558,3.963,559,1.059,560,1.059,561,1.059,562,1.059,563,1.059,564,1.822,565,3.209,566,1.059,567,1.059,568,1.059,569,1.059,570,1.059,571,1.059,572,0.876,573,1.822,574,0.876,575,1.059,576,1.822,577,1.508,578,1.822,579,1.822,580,1.822,581,1.822,582,1.822,583,1.822,584,1.059,585,1.059,586,1.822,587,1.822,588,1.822,589,1.059,590,1.059,591,3.209,592,1.059,593,1.059,594,1.059,595,1.059,596,2.398,597,1.059,598,1.059,599,1.059,600,3.209,601,1.822,602,2.848,603,2.398,604,1.822,605,1.059,606,1.059,607,1.822,608,1.059,609,1.059]],["title/classes/SplitItemView.html",[0,0.08,83,1.567]],["body/classes/SplitItemView.html",[0,0.049,2,0.322,3,0.286,4,0.253,5,0.253,7,0.134,8,0.557,9,1.213,12,0.832,25,1.12,27,2.503,28,1.358,30,1.167,31,0.037,32,1.167,33,0.656,34,0.95,35,1.841,37,1.082,38,1.647,39,0.711,42,1.558,43,1.144,59,1.019,82,1.347,83,2.335,85,0.286,116,0.953,117,1.347,144,0.011,145,0.017,146,0.011,151,1.144,170,1.485,215,2.09,234,1.557,256,0.782,322,1.187,330,2.875,348,2.518,349,1.643,371,1.187,372,2.09,373,3.618,378,2.91,407,1.187,437,2.75,439,2.75,444,2.422,447,1.562,464,2.09,465,2.09,466,2.09,474,3.343,475,1.562,503,3.121,504,2.75,514,1.347,515,1.562,516,1.347,517,1.347,518,1.562,519,1.347,520,1.347,521,1.841,522,1.562,528,1.562,532,1.562,533,3.445,545,1.562,577,3.993,610,1.347,611,3.585,612,3.585,613,3.585,614,4.039,615,4.039,616,4.039,617,4.039,618,2.927,619,2.927,620,4.039,621,2.927,622,2.927,623,2.927,624,2.927,625,2.927,626,4.039,627,1.336,628,2.927,629,1.478,630,1.887,631,1.887,632,1.887,633,1.887,634,4.039,635,1.887,636,1.887,637,1.887,638,2.927,639,2.927,640,1.887,641,2.927,642,1.887,643,2.927,644,1.887,645,1.887,646,2.927,647,1.887,648,4.039,649,3.585,650,2.927,651,1.887,652,2.927,653,2.927,654,1.887,655,1.887,656,1.562,657,1.887,658,1.887,659,3.585,660,2.927,661,1.887,662,1.887,663,1.887,664,2.927,665,3.585,666,1.887,667,1.887,668,1.887,669,1.887,670,1.887,671,1.887,672,1.887,673,1.887,674,1.887,675,1.887,676,1.887,677,2.927,678,1.887,679,1.887]],["title/classes/Test.html",[0,0.08,680,2.215]],["body/classes/Test.html",[0,0.113,2,0.748,3,0.665,4,0.587,5,0.587,7,0.311,12,1.489,28,1.026,30,1.026,31,0.036,32,1.026,33,0.513,34,0.835,42,1.246,43,0.927,85,0.665,116,2.646,144,0.026,145,0.031,146,0.026,151,1.068,234,1.751,680,3.742,681,3.627,682,5.241,683,5.241,684,4.384,685,4.384,686,4.384]],["title/classes/View.html",[0,0.08,348,1.567]],["body/classes/View.html",[0,0.09,2,0.596,3,0.531,4,0.469,5,0.469,7,0.248,8,0.867,12,1.293,25,1.092,26,3.766,27,2.759,28,1.3,30,1.254,31,0.037,32,1.254,33,0.689,34,1.02,35,3.495,37,0.818,42,1.438,85,0.531,117,2.496,144,0.021,145,0.027,146,0.021,151,0.963,170,2.096,197,1.963,294,2.894,348,2.298,349,2.555,464,3.249,465,3.249,466,3.249,514,3.249,516,2.496,517,3.249,519,2.496,520,3.249,521,3.371,533,3.612,544,2.894,687,2.496,688,4.551,689,3.497,690,3.497,691,3.497,692,3.249,693,3.766,694,3.766,695,3.497,696,3.497,697,3.497]],["title/interfaces/WeightMap.html",[210,0.726,698,1.417]],["body/interfaces/WeightMap.html",[0,0.121,2,0.628,3,0.559,4,0.493,5,0.493,7,0.334,9,1.097,28,0.861,31,0.037,37,0.861,43,0.995,85,0.559,99,1.214,144,0.022,145,0.028,146,0.022,151,0.896,210,1.213,212,1.859,224,1.949,234,1.763,251,2.148,271,1.387,550,1.859,627,1.681,629,1.859,698,2.578,699,2.375,700,1.859,701,3.681,702,3.681,703,2.375,704,2.916,705,2.316,706,2.375,707,2.066,708,2.066,709,2.066,710,2.066,711,2.066,712,2.066,713,2.066,714,2.066,715,1.859,716,2.316,717,2.316,718,2.316,719,2.959,720,2.316,721,2.316,722,2.316,723,2.316,724,2.066,725,2.316,726,2.316,727,2.316,728,2.316]],["title/classes/classBuilder.html",[0,0.08,715,1.567]],["body/classes/classBuilder.html",[0,0.106,2,0.703,3,0.457,4,0.404,5,0.404,7,0.292,8,0.784,9,1.22,12,1.171,25,0.941,28,1.277,30,1.181,31,0.037,32,1.181,33,0.619,34,0.961,37,0.964,38,1.135,42,1.434,43,1.118,85,0.457,99,1.063,144,0.018,145,0.024,146,0.018,151,1.039,210,1.099,224,1.707,234,1.576,248,2.954,251,1.707,271,1.135,550,1.521,627,1.375,629,1.521,698,2.597,699,2.821,700,1.521,703,2.08,704,3.067,705,1.895,706,2.08,707,1.691,708,1.691,709,1.691,710,1.691,711,1.691,712,1.691,713,1.691,714,1.691,715,2.08,716,2.954,717,2.591,718,1.895,719,2.591,720,3.175,721,1.895,722,2.591,723,2.591,724,1.691,725,1.895,726,1.895,727,1.895,728,1.895,729,4.119,730,4.119,731,4.119,732,4.119,733,3.012,734,3.012,735,3.012,736,3.012,737,3.012,738,3.012]],["title/interfaces/classConfig.html",[210,0.726,703,1.567]],["body/interfaces/classConfig.html",[0,0.145,2,0.614,3,0.546,4,0.482,5,0.482,7,0.329,8,0.883,9,1.085,31,0.037,33,0.543,37,0.842,43,0.981,85,0.546,99,1.197,144,0.021,145,0.027,146,0.021,151,0.883,210,1.2,212,1.817,224,2.323,234,1.848,251,1.921,271,1.356,550,1.817,627,1.643,629,1.817,698,2.474,699,1.817,700,1.817,703,2.59,704,2.898,705,2.264,706,2.341,707,2.02,708,2.02,709,2.02,710,2.02,711,2.02,712,2.02,713,2.02,714,2.02,715,1.817,716,2.264,717,2.264,718,2.264,719,2.917,720,2.264,721,2.264,722,2.264,723,2.264,724,2.02,725,2.264,726,2.264,727,2.264,728,2.264]],["title/coverage.html",[739,3.479]],["body/coverage.html",[0,0.147,1,1.919,5,0.31,6,1.917,31,0.037,33,0.271,39,0.873,62,1.458,65,1.301,67,0.96,68,1.654,80,1.301,83,1.17,126,0.96,144,0.014,145,0.02,146,0.014,147,1.917,148,2.441,160,2.151,165,1.458,171,1.654,172,2.151,173,1.917,174,1.917,181,1.17,188,1.654,189,1.917,190,1.917,210,1.119,211,1.654,213,2.441,219,1.654,222,1.917,239,1.301,271,2.362,280,1.917,304,1.919,305,1.919,317,1.458,329,1.458,330,2.264,331,1.917,348,1.17,377,1.917,379,1.917,443,2.151,525,1.654,610,1.654,627,2.184,680,1.654,681,1.917,687,1.654,698,1.058,699,2.415,700,2.415,703,1.17,704,1.17,706,1.17,715,1.17,739,1.917,740,1.917,741,2.317,742,2.317,743,3.711,744,6.177,745,1.917,746,6.156,747,2.829,748,1.917,749,1.917,750,2.829,751,1.917,752,3.419,753,4.062,754,2.317,755,3.419,756,3.419,757,2.317,758,2.317,759,4.298,760,4.298,761,1.917,762,1.917,763,4.783,764,1.917,765,1.917,766,1.917,767,1.917,768,1.917,769,1.917,770,1.917,771,1.917,772,1.917,773,1.917,774,1.917,775,1.917,776,1.917,777,1.917,778,1.917,779,1.917,780,1.917,781,1.917,782,1.917,783,1.917,784,4.062,785,1.917,786,1.654,787,1.917,788,2.317,789,2.317,790,1.917,791,2.317,792,2.317]],["title/dependencies.html",[793,2.606,794,2.658]],["body/dependencies.html",[31,0.037,60,2.474,144,0.026,145,0.031,146,0.026,155,3.647,194,3.147,217,4.012,218,3.647,524,3.647,794,3.147,795,4.408,796,4.408,797,4.408,798,3.647,799,4.408,800,4.408,801,4.408,802,4.408,803,4.408,804,4.408,805,4.408,806,4.408,807,4.408,808,4.408,809,4.408,810,4.408,811,4.408,812,4.408]],["title/miscellaneous/enumerations.html",[813,1.08,814,3.081]],["body/miscellaneous/enumerations.html",[7,0.301,31,0.036,38,2.166,56,3.234,67,1.759,112,3.513,144,0.025,145,0.03,146,0.025,256,1.759,304,2.383,305,2.886,315,3.67,330,2.596,371,3.234,378,3.615,425,3.03,437,3.234,439,3.234,443,3.234,501,3.513,503,3.67,504,3.234,610,3.67,656,4.254,813,1.759,814,3.513,815,4.245,816,4.254,817,3.513,818,4.245,819,4.245]],["title/miscellaneous/functions.html",[813,1.08,820,3.081]],["body/miscellaneous/functions.html",[7,0.319,30,1.245,31,0.034,32,1.245,34,1.013,144,0.026,145,0.031,146,0.026,165,3.346,197,2.986,759,3.208,760,3.798,761,4.402,785,3.719,813,1.862,820,3.719,821,4.494,822,3.719,823,4.494,824,4.494,825,4.494,826,5.319,827,5.319,828,4.494]],["title/index.html",[7,0.185,829,2.157,830,2.157]],["body/index.html",[1,2.505,4,0.668,31,0.032,144,0.02,145,0.026,146,0.02,194,2.423,210,0.794,217,3.782,318,2.423,542,2.808,692,2.423,794,3.186,831,5.297,832,4.986,833,4.463,834,4.463,835,3.393,836,3.393,837,3.393,838,3.393,839,3.393,840,3.393,841,3.393,842,5.297,843,3.393,844,3.393,845,2.808,846,3.393,847,3.393,848,3.393,849,3.393,850,3.393,851,3.393,852,3.393,853,2.808,854,2.423,855,3.393,856,4.463,857,3.393,858,3.393,859,3.393,860,4.463,861,3.393,862,3.393,863,3.393,864,3.393,865,4.986,866,3.393,867,3.393,868,3.393,869,3.393,870,3.393,871,3.393,872,3.393,873,2.423,874,3.393,875,3.393,876,3.393,877,3.393,878,3.393,879,3.393,880,3.393,881,3.393,882,4.986,883,3.393,884,3.393,885,3.393,886,4.986,887,3.393,888,2.808,889,3.393,890,3.393,891,3.393,892,4.986,893,3.393,894,3.393,895,3.393,896,3.393,897,3.393,898,4.986,899,4.463,900,3.393,901,3.393,902,3.393,903,3.393,904,3.393,905,2.808,906,3.393,907,3.393,908,3.393,909,3.393,910,3.393,911,3.693,912,3.393,913,3.393,914,4.463,915,3.393,916,4.463,917,3.393,918,4.463,919,2.808,920,2.808,921,2.808,922,3.393,923,3.393,924,3.393,925,3.393,926,3.393,927,3.393,928,3.393,929,3.393,930,3.393,931,3.393]],["title/license.html",[829,2.157,830,2.157,854,1.861]],["body/license.html",[31,0.028,144,0.023,145,0.028,146,0.023,367,3.177,378,2.415,724,2.155,740,3.177,845,3.177,853,3.177,854,2.741,905,3.177,919,3.177,920,3.177,921,3.177,932,5.287,933,3.839,934,3.839,935,4.832,936,3.839,937,3.839,938,3.839,939,3.839,940,3.839,941,3.839,942,4.832,943,6.047,944,3.839,945,3.839,946,5.287,947,3.839,948,4.832,949,3.839,950,3.839,951,3.998,952,3.839,953,3.839,954,3.839,955,3.839,956,4.832,957,3.839,958,3.839,959,3.839,960,3.839,961,3.839,962,3.839,963,3.839,964,4.832,965,4.832,966,3.839,967,3.839,968,3.839,969,3.839,970,3.839,971,3.839,972,3.839,973,3.839,974,3.839,975,3.839,976,3.839,977,3.839,978,3.839,979,3.839,980,3.839,981,3.839,982,3.839,983,3.839,984,3.839,985,3.839,986,3.839,987,3.839,988,3.839,989,3.839,990,3.839,991,3.839,992,3.839,993,3.839]],["title/modules.html",[873,3.001]],["body/modules.html",[31,0.033,144,0.029,145,0.033,146,0.029,873,3.502]],["title/overview.html",[994,3.479]],["body/overview.html",[2,0.826,31,0.033,144,0.028,145,0.033,146,0.028,212,2.447,431,4.01,994,4.01,995,4.846]],["title/interfaces/stateConfig.html",[210,0.726,704,1.567]],["body/interfaces/stateConfig.html",[0,0.118,2,0.917,3,0.535,4,0.473,5,0.473,7,0.325,8,0.871,9,1.075,31,0.037,33,0.595,34,0.871,37,0.825,43,0.968,85,0.535,99,1.182,144,0.021,145,0.027,146,0.021,151,0.871,210,1.189,212,1.781,224,2.309,234,1.783,251,2.228,271,1.329,550,1.781,627,1.611,629,1.781,698,2.455,699,1.781,700,1.781,703,2.715,704,2.935,705,3.383,706,2.311,707,1.98,708,1.98,709,1.98,710,1.98,711,1.98,712,1.98,713,1.98,714,1.98,715,1.781,716,2.219,717,2.219,718,2.219,719,2.879,720,2.219,721,2.219,722,2.219,723,2.219,724,1.98,725,2.219,726,2.219,727,2.219,728,2.219]],["title/miscellaneous/typealiases.html",[813,1.08,996,3.723]],["body/miscellaneous/typealiases.html",[7,0.321,31,0.035,33,0.625,144,0.027,145,0.031,146,0.027,160,2.843,172,2.843,304,2.537,305,2.996,311,3.81,349,2.537,521,3.357,687,3.226,692,3.226,693,3.74,694,3.74,786,3.226,813,1.872,817,3.74,997,4.519,998,4.416,999,3.74,1000,4.519,1001,4.519]],["title/miscellaneous/variables.html",[813,1.08,1002,3.081]],["body/miscellaneous/variables.html",[1,1.681,7,0.138,11,2.628,31,0.037,33,0.571,37,1.421,38,2.282,39,1.376,68,2.138,99,0.943,116,0.982,144,0.011,145,0.018,146,0.011,172,1.223,213,1.388,214,1.609,216,1.609,219,2.138,220,1.609,221,2.298,234,0.935,251,0.806,256,1.514,271,0.733,306,2.608,308,2.93,317,1.884,319,2.608,324,2.608,330,0.982,407,1.884,443,1.884,448,1.609,468,3.023,504,1.223,525,2.138,526,1.609,550,0.982,572,1.609,574,1.609,627,0.888,629,0.982,698,0.888,699,0.982,700,1.512,706,1.512,707,1.091,708,1.091,709,1.091,710,1.091,711,1.091,712,1.091,713,1.091,714,1.091,743,1.609,745,2.478,747,4.036,748,3.396,749,3.023,750,1.609,751,2.478,759,1.388,760,4.203,762,2.478,764,2.478,765,2.478,766,2.478,767,2.478,768,2.478,769,2.478,770,2.478,771,2.478,772,2.478,773,2.478,774,2.478,775,2.478,776,2.478,777,2.478,778,2.478,779,2.478,780,2.478,781,2.478,782,2.478,783,2.478,786,1.388,787,1.609,790,1.609,798,1.609,813,0.806,816,1.609,822,4.849,888,1.609,911,1.609,951,1.609,998,1.609,999,1.609,1002,1.609,1003,1.944,1004,4.104,1005,1.944,1006,2.995,1007,1.944,1008,1.944,1009,1.944,1010,3.653,1011,3.653,1012,1.944,1013,2.995,1014,1.944,1015,1.944,1016,2.995,1017,1.944,1018,2.995,1019,2.995,1020,1.944,1021,1.944,1022,1.944,1023,1.944,1024,1.944,1025,2.995,1026,4.104,1027,1.944,1028,2.995,1029,1.944,1030,1.944,1031,2.995,1032,1.944,1033,2.995,1034,1.944,1035,2.995,1036,2.995,1037,1.944,1038,1.944,1039,1.944,1040,1.944,1041,1.944,1042,2.995,1043,1.944,1044,2.995,1045,2.995,1046,4.104,1047,1.944,1048,2.995,1049,1.944,1050,1.944,1051,1.944,1052,1.944,1053,2.995,1054,2.995,1055,1.944,1056,1.944,1057,1.944,1058,1.944,1059,1.944,1060,1.944,1061,1.944,1062,1.944,1063,1.944,1064,1.944,1065,3.653,1066,4.104,1067,1.944,1068,1.944,1069,1.944,1070,1.944,1071,1.944,1072,1.944,1073,1.944,1074,1.944,1075,1.944,1076,1.944,1077,1.944,1078,1.944,1079,1.944,1080,1.944,1081,1.944,1082,1.944,1083,1.944,1084,1.944,1085,2.995,1086,1.944,1087,1.944]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":271,"title":{},"body":{"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":788,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":784,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0123456789abcdef",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":349,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["1.1.5",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["1.6.4",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["1/21",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["1/26",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":627,"title":{},"body":{"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["13",{"_index":995,"title":{},"body":{"overview.html":{}}}],["15",{"_index":569,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1].root.after(item.root",{"_index":555,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1].root[this.direction",{"_index":597,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1f1f1f",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":375,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["2.2.0",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":139,"title":{},"body":{"classes/App.html":{}}}],["200",{"_index":707,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["2020",{"_index":933,"title":{},"body":{"license.html":{}}}],["272728",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e2f30",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":377,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["3.0.1",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["3.1.3",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":440,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["300",{"_index":709,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["393939",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3f3f3f",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3px",{"_index":573,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["4",{"_index":379,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["4.3.1",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["4.3.5",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":711,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["454545",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["464749",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4px",{"_index":538,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["5",{"_index":431,"title":{},"body":{"classes/SplitBoardController.html":{},"overview.html":{}}}],["5.1.1",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["5580c0",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5d5f61",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.4",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":140,"title":{},"body":{"classes/App.html":{}}}],["600",{"_index":713,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["680",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.2",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":567,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["729cd4",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["800",{"_index":629,"title":{},"body":{"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["808080",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["900",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_bgcolorclassname",{"_index":611,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_growclassname",{"_index":612,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_shrinkclassname",{"_index":613,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_type",{"_index":149,"title":{},"body":{"classes/AppearanceService.html":{}}}],["_waitformergeitem",{"_index":445,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["above",{"_index":963,"title":{},"body":{"license.html":{}}}],["action",{"_index":919,"title":{},"body":{"index.html":{},"license.html":{}}}],["active",{"_index":712,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["activeexpand",{"_index":340,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["activeid",{"_index":332,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["addcolumn",{"_index":450,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addcolumn(item",{"_index":476,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addconfig",{"_index":729,"title":{},"body":{"classes/classBuilder.html":{}}}],["addconfig(config",{"_index":722,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["added",{"_index":542,"title":{},"body":{"classes/SplitBoardView.html":{},"index.html":{}}}],["addexpandbutton",{"_index":614,"title":{},"body":{"classes/SplitItemView.html":{}}}],["addrow",{"_index":451,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addrow(item",{"_index":478,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["aliases",{"_index":997,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":954,"title":{},"body":{"license.html":{}}}],["anycolor",{"_index":191,"title":{},"body":{"classes/ColorRef.html":{}}}],["anycolorhex",{"_index":828,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":1,"title":{"classes/App.html":{}},"body":{"classes/App.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app(document.body",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.quit",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appearance",{"_index":202,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearanceservice",{"_index":62,"title":{"classes/AppearanceService.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"coverage.html":{}}}],["appearancetype",{"_index":56,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"miscellaneous/enumerations.html":{}}}],["appearancetype.any",{"_index":208,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearancetype.dark",{"_index":110,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{}}}],["appearancetype.light",{"_index":209,"title":{},"body":{"classes/ColorRef.html":{}}}],["append",{"_index":464,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["append(child",{"_index":514,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["application",{"_index":911,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["applicationmenus",{"_index":68,"title":{},"body":{"classes/App.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationmenustype",{"_index":998,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["applysplit",{"_index":452,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["applysplit(direction",{"_index":480,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["aps",{"_index":105,"title":{},"body":{"classes/App.html":{}}}],["aps.onmodechanged((type",{"_index":107,"title":{},"body":{"classes/App.html":{}}}],["arising",{"_index":991,"title":{},"body":{"license.html":{}}}],["associated",{"_index":944,"title":{},"body":{"license.html":{}}}],["authors",{"_index":981,"title":{},"body":{"license.html":{}}}],["auto",{"_index":692,"title":{},"body":{"classes/View.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["automatically",{"_index":922,"title":{},"body":{"index.html":{}}}],["available",{"_index":849,"title":{},"body":{"index.html":{}}}],["bababa",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar.svelte",{"_index":73,"title":{},"body":{"classes/App.html":{}}}],["base",{"_index":69,"title":{},"body":{"classes/App.html":{}}}],["basemenu",{"_index":171,"title":{"classes/BaseMenu.html":{}},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["bg",{"_index":625,"title":{},"body":{"classes/SplitItemView.html":{}}}],["bgcolor",{"_index":762,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["board",{"_index":527,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.controller",{"_index":523,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.controller.ts",{"_index":331,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["board.controller.ts:10",{"_index":355,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:11",{"_index":356,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:12",{"_index":350,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:14",{"_index":351,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:15",{"_index":347,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:32",{"_index":366,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:47",{"_index":369,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:54",{"_index":357,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:6",{"_index":354,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:62",{"_index":370,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:7",{"_index":352,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:73",{"_index":363,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:8",{"_index":353,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:83",{"_index":360,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.view",{"_index":82,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{}}}],["board.view.ts",{"_index":443,"title":{},"body":{"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["board.view.ts:108",{"_index":486,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:113",{"_index":507,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:133",{"_index":509,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:153",{"_index":511,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:162",{"_index":497,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:17",{"_index":471,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:18",{"_index":470,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:19",{"_index":473,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:194",{"_index":491,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:20",{"_index":469,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:21",{"_index":467,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:27",{"_index":492,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:31",{"_index":479,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:42",{"_index":477,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:53",{"_index":495,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:63",{"_index":505,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:68",{"_index":513,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:78",{"_index":483,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:84",{"_index":485,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:96",{"_index":482,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["boolean",{"_index":215,"title":{},"body":{"interfaces/ISettings.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["bootstrap",{"_index":13,"title":{},"body":{"classes/App.html":{}}}],["bordercolor",{"_index":764,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":906,"title":{},"body":{"index.html":{}}}],["browserwindow",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder",{"_index":908,"title":{},"body":{"index.html":{}}}],["builder.ts",{"_index":700,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["builder.ts:11",{"_index":702,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["builder.ts:24",{"_index":732,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:30",{"_index":735,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:33",{"_index":734,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:36",{"_index":736,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:44",{"_index":738,"title":{},"body":{"classes/classBuilder.html":{}}}],["building",{"_index":861,"title":{},"body":{"index.html":{}}}],["bundled",{"_index":875,"title":{},"body":{"index.html":{}}}],["button",{"_index":639,"title":{},"body":{"classes/SplitItemView.html":{}}}],["c",{"_index":724,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"license.html":{},"interfaces/stateConfig.html":{}}}],["c0c0c1",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c4666f",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c6c6c6",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback",{"_index":306,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["cancelformerge",{"_index":453,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["cancelwaitformerge",{"_index":615,"title":{},"body":{"classes/SplitItemView.html":{}}}],["case",{"_index":207,"title":{},"body":{"classes/ColorRef.html":{}}}],["cgray",{"_index":626,"title":{},"body":{"classes/SplitItemView.html":{}}}],["charge",{"_index":939,"title":{},"body":{"license.html":{}}}],["check",{"_index":214,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["checkdirection",{"_index":454,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["checkdirection(type",{"_index":484,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["checkexpandstate",{"_index":341,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["checkexpandstate(clientx",{"_index":358,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["child",{"_index":516,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["children",{"_index":307,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["childs",{"_index":519,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["claim",{"_index":984,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classbuilder",{"_index":715,"title":{"classes/classBuilder.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classconfig",{"_index":703,"title":{"interfaces/classConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["classname",{"_index":648,"title":{},"body":{"classes/SplitItemView.html":{}}}],["clear",{"_index":720,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["clientheight",{"_index":599,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["clientwidth",{"_index":598,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["clientx",{"_index":361,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["clienty",{"_index":359,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["code",{"_index":842,"title":{},"body":{"index.html":{}}}],["col",{"_index":501,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":194,"title":{},"body":{"classes/ColorRef.html":{},"dependencies.html":{},"index.html":{}}}],["color(appearancetype",{"_index":200,"title":{},"body":{"classes/ColorRef.html":{}}}],["color.ts",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["colorref",{"_index":188,"title":{"classes/ColorRef.html":{}},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["colorsetroot",{"_index":100,"title":{},"body":{"classes/App.html":{}}}],["column",{"_index":419,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["command",{"_index":323,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["common",{"_index":880,"title":{},"body":{"index.html":{}}}],["community",{"_index":840,"title":{},"body":{"index.html":{}}}],["compilation",{"_index":897,"title":{},"body":{"index.html":{}}}],["compile",{"_index":892,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":914,"title":{},"body":{"index.html":{}}}],["components",{"_index":882,"title":{},"body":{"index.html":{}}}],["concrete",{"_index":835,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":962,"title":{},"body":{"license.html":{}}}],["config",{"_index":248,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/classBuilder.html":{}}}],["configs",{"_index":733,"title":{},"body":{"classes/classBuilder.html":{}}}],["configs.foreach((config",{"_index":718,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["configured",{"_index":910,"title":{},"body":{"index.html":{}}}],["connection",{"_index":992,"title":{},"body":{"license.html":{}}}],["console",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(`test",{"_index":685,"title":{},"body":{"classes/Test.html":{}}}],["console.log(item",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.warn('direction",{"_index":540,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["const",{"_index":99,"title":{},"body":{"classes/App.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{}}}],["constructor(anycolor",{"_index":195,"title":{},"body":{"classes/ColorRef.html":{}}}],["constructor(config",{"_index":309,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["constructor(configs",{"_index":717,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["constructor(container",{"_index":233,"title":{},"body":{"classes/Menu.html":{}}}],["constructor(groupmenuservice",{"_index":177,"title":{},"body":{"classes/BaseMenu.html":{}}}],["constructor(private",{"_index":86,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/SplitBoardController.html":{}}}],["constructor(root",{"_index":26,"title":{},"body":{"classes/App.html":{},"classes/View.html":{}}}],["constructor(view",{"_index":346,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["container",{"_index":10,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{}}}],["containermodule",{"_index":166,"title":{},"body":{"classes/AppearanceService.html":{}}}],["contentview",{"_index":577,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["contentview.classlist.add('flex",{"_index":660,"title":{},"body":{"classes/SplitItemView.html":{}}}],["context",{"_index":11,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["contextisolation",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":988,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":928,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":925,"title":{},"body":{"index.html":{}}}],["controlaccentcolor",{"_index":765,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlbackgroundcolor",{"_index":766,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controldisabledcolor",{"_index":767,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlforbiddencolor",{"_index":768,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlhighlightcolor",{"_index":769,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":446,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["copies",{"_index":956,"title":{},"body":{"license.html":{}}}],["copy",{"_index":942,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":932,"title":{},"body":{"license.html":{}}}],["cosmic",{"_index":831,"title":{},"body":{"index.html":{}}}],["cosmic/core/browser/layout/split",{"_index":81,"title":{},"body":{"classes/App.html":{}}}],["cosmic/core/common/appearance",{"_index":61,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{}}}],["cosmic/workbench/services/appearance",{"_index":63,"title":{},"body":{"classes/App.html":{}}}],["cosmic/workbench/services/menu",{"_index":66,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["coverage",{"_index":739,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createmenu",{"_index":228,"title":{},"body":{"classes/Menu.html":{}}}],["createwindow",{"_index":745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["crosshair",{"_index":502,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["current",{"_index":915,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":726,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["d00000",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d1905d",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d2r",{"_index":837,"title":{},"body":{"index.html":{}}}],["d7d7d7",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d9d9d9",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":985,"title":{},"body":{"license.html":{}}}],["dark",{"_index":112,"title":{},"body":{"classes/App.html":{},"miscellaneous/enumerations.html":{}}}],["dark:bg",{"_index":628,"title":{},"body":{"classes/SplitItemView.html":{}}}],["darkcolor",{"_index":192,"title":{},"body":{"classes/ColorRef.html":{}}}],["darkcolorhex",{"_index":827,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date.now",{"_index":295,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["deal",{"_index":945,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":993,"title":{},"body":{"license.html":{}}}],["debugging",{"_index":917,"title":{},"body":{"index.html":{}}}],["default",{"_index":37,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":220,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["defaultscope",{"_index":88,"title":{},"body":{"classes/App.html":{}}}],["defaultweightmap",{"_index":706,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{}}}],["dependencies",{"_index":794,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["design",{"_index":832,"title":{},"body":{"index.html":{}}}],["desktop/menu",{"_index":291,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["destorysplit",{"_index":455,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["destroy",{"_index":229,"title":{},"body":{"classes/Menu.html":{}}}],["dev",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["develop",{"_index":838,"title":{},"body":{"index.html":{}}}],["development",{"_index":847,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":447,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["directionstyles",{"_index":656,"title":{},"body":{"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["directionstyles[direction",{"_index":678,"title":{},"body":{"classes/SplitItemView.html":{}}}],["directiontype",{"_index":371,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["directiontype.col",{"_index":417,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["directiontype.row",{"_index":423,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["disable",{"_index":320,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["disabled",{"_index":714,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["dist/workbench/desktop",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":920,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribution",{"_index":899,"title":{},"body":{"index.html":{}}}],["divided",{"_index":871,"title":{},"body":{"index.html":{}}}],["document.body.classlist.add('mode",{"_index":111,"title":{},"body":{"classes/App.html":{}}}],["document.body.classlist.remove('mode",{"_index":113,"title":{},"body":{"classes/App.html":{}}}],["document.createelement('div",{"_index":294,"title":{},"body":{"classes/MenuGroupService.html":{},"classes/View.html":{}}}],["document.createelement('style",{"_index":101,"title":{},"body":{"classes/App.html":{}}}],["document.queryselector('#main",{"_index":122,"title":{},"body":{"classes/App.html":{}}}],["documentation",{"_index":740,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["draft",{"_index":923,"title":{},"body":{"index.html":{}}}],["e",{"_index":503,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["e0e0e0",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":876,"title":{},"body":{"index.html":{}}}],["electron",{"_index":217,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{},"index.html":{}}}],["electron/.exec(process.execpath",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["electronstore",{"_index":216,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["enableremotemodule",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entire",{"_index":869,"title":{},"body":{"index.html":{}}}],["enum",{"_index":322,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["enumerations",{"_index":814,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eslint",{"_index":319,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":367,"title":{},"body":{"classes/SplitBoardController.html":{},"license.html":{}}}],["event.clientx",{"_index":395,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.clienty",{"_index":382,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.preventdefault",{"_index":396,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.stoppropagation",{"_index":397,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.target",{"_index":389,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["eventemitter2",{"_index":155,"title":{},"body":{"classes/AppearanceService.html":{},"dependencies.html":{}}}],["everyone",{"_index":850,"title":{},"body":{"index.html":{}}}],["evt",{"_index":150,"title":{},"body":{"classes/AppearanceService.html":{}}}],["expand",{"_index":373,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{}}}],["expand.svelte",{"_index":655,"title":{},"body":{"classes/SplitItemView.html":{}}}],["expandactive",{"_index":333,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expanded",{"_index":499,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["expandleavehandler",{"_index":334,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmouseuphandler",{"_index":335,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmovehandler",{"_index":336,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandtype",{"_index":337,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["export",{"_index":85,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["express",{"_index":972,"title":{},"body":{"license.html":{}}}],["extends",{"_index":444,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["f2f2f2",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f9f9f9",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":221,"title":{},"body":{"interfaces/ISettings.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["ffae2b",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["file://${join(__dirname",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":921,"title":{},"body":{"index.html":{},"license.html":{}}}],["fitness",{"_index":977,"title":{},"body":{"license.html":{}}}],["flex",{"_index":533,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["flowvalue",{"_index":521,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["fn",{"_index":159,"title":{},"body":{"classes/AppearanceService.html":{}}}],["focus",{"_index":708,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":961,"title":{},"body":{"license.html":{}}}],["fourthbgcolor",{"_index":770,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":938,"title":{},"body":{"license.html":{}}}],["function",{"_index":160,"title":{},"body":{"classes/AppearanceService.html":{},"classes/SplitBoardController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":820,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":959,"title":{},"body":{"license.html":{}}}],["getexpandresizes",{"_index":456,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["getexpandresizes(index",{"_index":487,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["getmenuinsatance",{"_index":282,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["getting",{"_index":829,"title":{"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":918,"title":{},"body":{"index.html":{}}}],["granted",{"_index":937,"title":{},"body":{"license.html":{}}}],["gridbackgroundcolor",{"_index":771,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":67,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["groupmenu",{"_index":123,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.getmenuinsatance().init(menu.title",{"_index":127,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.initcontainer(header",{"_index":125,"title":{},"body":{"classes/App.html":{}}}],["groupmenuservice",{"_index":179,"title":{},"body":{"classes/BaseMenu.html":{}}}],["grow",{"_index":649,"title":{},"body":{"classes/SplitItemView.html":{}}}],["guide",{"_index":848,"title":{},"body":{"index.html":{}}}],["gutterstyle",{"_index":571,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["header",{"_index":121,"title":{},"body":{"classes/App.html":{}}}],["height",{"_index":572,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":844,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":936,"title":{},"body":{"license.html":{}}}],["hexdigits",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hidden",{"_index":536,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["hide",{"_index":638,"title":{},"body":{"classes/SplitItemView.html":{}}}],["hideexpandbutton",{"_index":616,"title":{},"body":{"classes/SplitItemView.html":{}}}],["holders",{"_index":982,"title":{},"body":{"license.html":{}}}],["hor",{"_index":374,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["horizontal",{"_index":418,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["host",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hover",{"_index":710,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["htmlelement",{"_index":27,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["http://localhost:5000",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":224,"title":{},"body":{"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["identifier",{"_index":741,"title":{},"body":{"coverage.html":{}}}],["implied",{"_index":973,"title":{},"body":{"license.html":{}}}],["import",{"_index":59,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["include",{"_index":879,"title":{},"body":{"index.html":{}}}],["included",{"_index":966,"title":{},"body":{"license.html":{}}}],["including",{"_index":948,"title":{},"body":{"license.html":{}}}],["independently",{"_index":877,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indexable",{"_index":701,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["ing",{"_index":833,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":474,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["init",{"_index":230,"title":{},"body":{"classes/Menu.html":{},"classes/SplitBoardView.html":{}}}],["init(name",{"_index":247,"title":{},"body":{"classes/Menu.html":{}}}],["initcontainer",{"_index":283,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["initcontainer(container",{"_index":288,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["initflowtable",{"_index":14,"title":{},"body":{"classes/App.html":{}}}],["initframe",{"_index":15,"title":{},"body":{"classes/App.html":{}}}],["initial",{"_index":693,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["initmenu",{"_index":176,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenu(menuitems",{"_index":180,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenus",{"_index":16,"title":{},"body":{"classes/App.html":{}}}],["initnavigationbar",{"_index":17,"title":{},"body":{"classes/App.html":{}}}],["initpreferences",{"_index":18,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel",{"_index":19,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel(container",{"_index":49,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel",{"_index":20,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel(container",{"_index":51,"title":{},"body":{"classes/App.html":{}}}],["initstatusbar",{"_index":21,"title":{},"body":{"classes/App.html":{}}}],["initstyle",{"_index":22,"title":{},"body":{"classes/App.html":{}}}],["initstylemode",{"_index":23,"title":{},"body":{"classes/App.html":{}}}],["initstylemode(type",{"_index":55,"title":{},"body":{"classes/App.html":{}}}],["initworkarea",{"_index":24,"title":{},"body":{"classes/App.html":{}}}],["inject",{"_index":165,"title":{},"body":{"classes/AppearanceService.html":{},"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject(token",{"_index":823,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":164,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardView.html":{}}}],["insertconfig",{"_index":730,"title":{},"body":{"classes/classBuilder.html":{}}}],["insertconfig(config",{"_index":723,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["insertitemat",{"_index":457,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["insertitemat(item",{"_index":493,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["interface",{"_index":210,"title":{"interfaces/ISettings.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}},"body":{"interfaces/ISettings.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["interfaces",{"_index":212,"title":{},"body":{"interfaces/ISettings.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["inversify",{"_index":60,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardView.html":{},"dependencies.html":{}}}],["ipc",{"_index":883,"title":{},"body":{"index.html":{}}}],["isettings",{"_index":211,"title":{"interfaces/ISettings.html":{}},"body":{"interfaces/ISettings.html":{},"coverage.html":{}}}],["isprod",{"_index":747,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isshrink",{"_index":617,"title":{},"body":{"classes/SplitItemView.html":{}}}],["issues",{"_index":843,"title":{},"body":{"index.html":{}}}],["item",{"_index":256,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["item.contentview",{"_index":578,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.hideexpandbutton",{"_index":583,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.id",{"_index":302,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["item.replacecontent(newboard.root",{"_index":579,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.root",{"_index":391,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientheight",{"_index":427,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.clientwidth",{"_index":422,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.getboundingclientrect().left",{"_index":421,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.getboundingclientrect().top",{"_index":426,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.ts",{"_index":305,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["item.ts:18",{"_index":313,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:19",{"_index":314,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:20",{"_index":316,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:21",{"_index":312,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:22",{"_index":310,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.view",{"_index":84,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.view.ts",{"_index":610,"title":{},"body":{"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["item.view.ts:13",{"_index":631,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:14",{"_index":632,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:15",{"_index":630,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:17",{"_index":633,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:18",{"_index":624,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:26",{"_index":644,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:33",{"_index":642,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:40",{"_index":647,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:47",{"_index":651,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:54",{"_index":640,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:58",{"_index":645,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:64",{"_index":635,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:68",{"_index":637,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:72",{"_index":654,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:78",{"_index":636,"title":{},"body":{"classes/SplitItemView.html":{}}}],["items",{"_index":448,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["join(__dirname",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keycode",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["kind",{"_index":971,"title":{},"body":{"license.html":{}}}],["labelcolor",{"_index":772,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["length",{"_index":489,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["liability",{"_index":986,"title":{},"body":{"license.html":{}}}],["liable",{"_index":983,"title":{},"body":{"license.html":{}}}],["license",{"_index":854,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["light",{"_index":819,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lightcolor",{"_index":193,"title":{},"body":{"classes/ColorRef.html":{}}}],["lightcolorhex",{"_index":826,"title":{},"body":{"miscellaneous/functions.html":{}}}],["limitation",{"_index":949,"title":{},"body":{"license.html":{}}}],["limited",{"_index":974,"title":{},"body":{"license.html":{}}}],["linux",{"_index":902,"title":{},"body":{"index.html":{}}}],["literal",{"_index":1001,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["live",{"_index":498,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["liveresize",{"_index":342,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["liveresize(clientx",{"_index":362,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["local",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":798,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":751,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error(json.stringify(err",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lowboardroot",{"_index":525,"title":{},"body":{"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["macos",{"_index":900,"title":{},"body":{"index.html":{}}}],["main",{"_index":885,"title":{},"body":{"index.html":{}}}],["mainwindow",{"_index":748,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mainwindow.loadurl(url).catch((err",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.on('closed",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.webcontents.opendevtools",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor",{"_index":761,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makecolor('#000000",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#3f3f3f",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#5580c0",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#729cd4",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#bababa",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c0c0c1",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c4666f",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c6c6c6",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d00000",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d1905d",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d7d7d7",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d9d9d9",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#e0e0e0",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f2f2f2",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f9f9f9",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffae2b",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffffff",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor(anycolorhex",{"_index":825,"title":{},"body":{"miscellaneous/functions.html":{}}}],["map",{"_index":40,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{}}}],["matching",{"_index":145,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":596,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["menu",{"_index":126,"title":{"classes/Menu.html":{}},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menu(menucontainer",{"_index":298,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menu.id",{"_index":303,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menu.items",{"_index":128,"title":{},"body":{"classes/App.html":{}}}],["menu.svelte",{"_index":255,"title":{},"body":{"classes/Menu.html":{}}}],["menu.ts",{"_index":174,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["menu.ts:5",{"_index":178,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu.ts:9",{"_index":182,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu/base",{"_index":173,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["menu/config",{"_index":70,"title":{},"body":{"classes/App.html":{}}}],["menu/config.ts",{"_index":786,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menucommonfunction",{"_index":311,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/typealiases.html":{}}}],["menucontainer",{"_index":293,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menugroupservice",{"_index":65,"title":{"classes/MenuGroupService.html":{}},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/MenuGroupService.html":{},"coverage.html":{}}}],["menuinstance",{"_index":175,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuitem",{"_index":239,"title":{"classes/MenuItem.html":{}},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menuitem(config",{"_index":272,"title":{},"body":{"classes/Menu.html":{}}}],["menuitem(menuitem",{"_index":266,"title":{},"body":{"classes/Menu.html":{}}}],["menuitemconfig",{"_index":181,"title":{"interfaces/MenuItemConfig.html":{}},"body":{"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menuitemconfig[]):void",{"_index":184,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuitems",{"_index":183,"title":{},"body":{"classes/BaseMenu.html":{},"classes/Menu.html":{}}}],["menuitemtype",{"_index":315,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/enumerations.html":{}}}],["menuitemtype.group",{"_index":324,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["menusvelte",{"_index":225,"title":{},"body":{"classes/Menu.html":{}}}],["merchantability",{"_index":976,"title":{},"body":{"license.html":{}}}],["merge",{"_index":378,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["metadata",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":12,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{}}}],["meuns",{"_index":281,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["meunswritable",{"_index":226,"title":{},"body":{"classes/Menu.html":{}}}],["minimum",{"_index":858,"title":{},"body":{"index.html":{}}}],["minsize",{"_index":568,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["miscellaneous",{"_index":813,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":853,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":430,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["modify",{"_index":952,"title":{},"body":{"license.html":{}}}],["modules",{"_index":873,"title":{"modules.html":{}},"body":{"index.html":{},"modules.html":{}}}],["monorepo",{"_index":868,"title":{},"body":{"index.html":{}}}],["more",{"_index":863,"title":{},"body":{"index.html":{}}}],["mousedown",{"_index":398,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["mouseevent",{"_index":365,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["n",{"_index":439,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":32,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["namewritable",{"_index":227,"title":{},"body":{"classes/Menu.html":{}}}],["navigation",{"_index":71,"title":{},"body":{"classes/App.html":{}}}],["navigationbar",{"_index":115,"title":{},"body":{"classes/App.html":{}}}],["new",{"_index":39,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newboard",{"_index":576,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addcolumn(newemptyview",{"_index":585,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addcolumn(newitemview",{"_index":584,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addrow(newemptyview",{"_index":590,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addrow(newitemview",{"_index":589,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.controller.checkexpandstate(clientx",{"_index":587,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.controller.setactivestate(0",{"_index":586,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newemptyview",{"_index":582,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newitem",{"_index":593,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newitemview",{"_index":580,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsize",{"_index":603,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes",{"_index":591,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(newsize",{"_index":605,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(size",{"_index":607,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(sum",{"_index":606,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(w",{"_index":609,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["next",{"_index":893,"title":{},"body":{"index.html":{}}}],["none",{"_index":694,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["noninfringement",{"_index":980,"title":{},"body":{"license.html":{}}}],["normalizeweight",{"_index":731,"title":{},"body":{"classes/classBuilder.html":{}}}],["normalizeweight(config",{"_index":737,"title":{},"body":{"classes/classBuilder.html":{}}}],["nothing",{"_index":862,"title":{},"body":{"index.html":{}}}],["notice",{"_index":964,"title":{},"body":{"license.html":{}}}],["notification",{"_index":749,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nowrap",{"_index":534,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["npm",{"_index":909,"title":{},"body":{"index.html":{}}}],["null",{"_index":468,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":251,"title":{},"body":{"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":941,"title":{},"body":{"license.html":{}}}],["offsetx",{"_index":428,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["offsety",{"_index":429,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["ok",{"_index":686,"title":{},"body":{"classes/Test.html":{}}}],["onmodechanged",{"_index":152,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmodechanged(fn",{"_index":157,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmousedown",{"_index":343,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["onmousedown(event",{"_index":364,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["optional",{"_index":34,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{}}}],["orderedconfigs",{"_index":716,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["organization",{"_index":929,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":990,"title":{},"body":{"license.html":{}}}],["out",{"_index":905,"title":{},"body":{"index.html":{},"license.html":{}}}],["overflow",{"_index":535,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["overview",{"_index":994,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":793,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":874,"title":{},"body":{"index.html":{}}}],["packaging",{"_index":896,"title":{},"body":{"index.html":{}}}],["page",{"_index":889,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":30,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":978,"title":{},"body":{"license.html":{}}}],["permission",{"_index":935,"title":{},"body":{"license.html":{}}}],["permit",{"_index":957,"title":{},"body":{"license.html":{}}}],["person",{"_index":940,"title":{},"body":{"license.html":{}}}],["persons",{"_index":958,"title":{},"body":{"license.html":{}}}],["platform",{"_index":916,"title":{},"body":{"index.html":{}}}],["port",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":968,"title":{},"body":{"license.html":{}}}],["pos",{"_index":494,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["position",{"_index":490,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["possible",{"_index":913,"title":{},"body":{"index.html":{}}}],["practice",{"_index":836,"title":{},"body":{"index.html":{}}}],["preload",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preload.js",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepend",{"_index":465,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["prepend(...childs",{"_index":517,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["print",{"_index":682,"title":{},"body":{"classes/Test.html":{}}}],["print(target",{"_index":683,"title":{},"body":{"classes/Test.html":{}}}],["private",{"_index":9,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["process.env.node_env",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":870,"title":{},"body":{"index.html":{}}}],["project",{"_index":864,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["propertypanel",{"_index":78,"title":{},"body":{"classes/App.html":{}}}],["props",{"_index":118,"title":{},"body":{"classes/App.html":{}}}],["provided",{"_index":969,"title":{},"body":{"license.html":{}}}],["public",{"_index":151,"title":{},"body":{"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["publish",{"_index":845,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":979,"title":{},"body":{"license.html":{}}}],["qiansc",{"_index":934,"title":{},"body":{"license.html":{}}}],["quickly",{"_index":912,"title":{},"body":{"index.html":{}}}],["r",{"_index":600,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["readonly",{"_index":223,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["ready",{"_index":898,"title":{},"body":{"index.html":{}}}],["ref.ts",{"_index":190,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["ref.ts:15",{"_index":201,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:5",{"_index":198,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:6",{"_index":199,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:7",{"_index":196,"title":{},"body":{"classes/ColorRef.html":{}}}],["reflect",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["registeritem",{"_index":231,"title":{},"body":{"classes/Menu.html":{}}}],["registeritem(config",{"_index":250,"title":{},"body":{"classes/Menu.html":{}}}],["release",{"_index":924,"title":{},"body":{"index.html":{}}}],["removecolumn(item",{"_index":562,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["removeitem",{"_index":232,"title":{},"body":{"classes/Menu.html":{}}}],["removeitem(index",{"_index":253,"title":{},"body":{"classes/Menu.html":{}}}],["removemenuinstances",{"_index":284,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["removemenuinstances(menu",{"_index":289,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["removerow(item",{"_index":563,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["replacecontent",{"_index":618,"title":{},"body":{"classes/SplitItemView.html":{}}}],["replacecontent(contentview",{"_index":641,"title":{},"body":{"classes/SplitItemView.html":{}}}],["repository",{"_index":834,"title":{},"body":{"index.html":{}}}],["required",{"_index":857,"title":{},"body":{"index.html":{}}}],["resize",{"_index":433,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["resizeat",{"_index":458,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["resizeat(index",{"_index":496,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["resourcepage",{"_index":76,"title":{},"body":{"classes/App.html":{}}}],["restriction",{"_index":947,"title":{},"body":{"license.html":{}}}],["result",{"_index":144,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":146,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":170,"title":{},"body":{"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["returns",{"_index":42,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{}}}],["right",{"_index":541,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["rights",{"_index":950,"title":{},"body":{"license.html":{}}}],["roadmap",{"_index":846,"title":{},"body":{"index.html":{}}}],["rollup",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":35,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["rounded",{"_index":669,"title":{},"body":{"classes/SplitItemView.html":{}}}],["row",{"_index":425,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":895,"title":{},"body":{"index.html":{}}}],["s",{"_index":504,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["script",{"_index":886,"title":{},"body":{"index.html":{}}}],["secondarybgcolor",{"_index":773,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["secondarylabelcolor",{"_index":774,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":926,"title":{},"body":{"index.html":{}}}],["sell",{"_index":955,"title":{},"body":{"license.html":{}}}],["server",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":64,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["service.ts",{"_index":148,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":156,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:12",{"_index":163,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{}}}],["service.ts:18",{"_index":158,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:19",{"_index":287,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:21",{"_index":161,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:28",{"_index":290,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:6",{"_index":286,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:7",{"_index":285,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:9",{"_index":154,"title":{},"body":{"classes/AppearanceService.html":{}}}],["set",{"_index":931,"title":{},"body":{"index.html":{}}}],["setactivestate",{"_index":344,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setactivestate(index",{"_index":368,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setcontent",{"_index":619,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setcontent(contentview",{"_index":643,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setcursor",{"_index":459,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["setcursor(type",{"_index":500,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["setdefaultclass",{"_index":620,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setflow",{"_index":466,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setflow(type",{"_index":520,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setgrow",{"_index":621,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setgrow(classname",{"_index":646,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setshrink",{"_index":622,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setshrink(classname",{"_index":650,"title":{},"body":{"classes/SplitItemView.html":{}}}],["settings",{"_index":219,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shadow",{"_index":321,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["shall",{"_index":965,"title":{},"body":{"license.html":{}}}],["shrink",{"_index":652,"title":{},"body":{"classes/SplitItemView.html":{}}}],["similar",{"_index":867,"title":{},"body":{"index.html":{}}}],["singleton",{"_index":89,"title":{},"body":{"classes/App.html":{}}}],["size",{"_index":602,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["sizes",{"_index":481,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["smelte",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["snapoffset",{"_index":570,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["software",{"_index":943,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["split",{"_index":372,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["split(array.prototype.slice.call(this.root.children",{"_index":566,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["split.instance",{"_index":472,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["split.js",{"_index":524,"title":{},"body":{"classes/SplitBoardView.html":{},"dependencies.html":{}}}],["splitboard",{"_index":129,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view0",{"_index":135,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view1",{"_index":136,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view2",{"_index":137,"title":{},"body":{"classes/App.html":{}}}],["splitboard.applysplit('horizontal",{"_index":138,"title":{},"body":{"classes/App.html":{}}}],["splitboardcontroller",{"_index":329,"title":{"classes/SplitBoardController.html":{}},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"coverage.html":{}}}],["splitboardcontroller(this",{"_index":531,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitboardview",{"_index":80,"title":{"classes/SplitBoardView.html":{}},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"coverage.html":{}}}],["splitboardview().setflow('1",{"_index":130,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["splitcolumnat",{"_index":460,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitcolumnat(index",{"_index":506,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitexpand",{"_index":634,"title":{},"body":{"classes/SplitItemView.html":{}}}],["splitinstance",{"_index":449,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splititemview",{"_index":83,"title":{"classes/SplitItemView.html":{}},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{}}}],["splititemview().setcontent(contentview",{"_index":581,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splititemview().setcontent(document.createelement('div",{"_index":132,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["splitrowat",{"_index":461,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitrowat(index",{"_index":508,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["src/.../appearance.ts",{"_index":815,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../class",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.ts",{"_index":999,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inject.ts",{"_index":821,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.ts",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu",{"_index":817,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../settings.ts",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../split",{"_index":816,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../ui",{"_index":822,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../view.ts",{"_index":1000,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app",{"_index":884,"title":{},"body":{"index.html":{}}}],["src/app/index.ts",{"_index":743,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/logger.ts",{"_index":750,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/settings.ts",{"_index":213,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core",{"_index":878,"title":{},"body":{"index.html":{}}}],["src/core/browser/class",{"_index":699,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/layout/split",{"_index":330,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/style/ui",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/view.ts",{"_index":687,"title":{},"body":{"classes/View.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/browser/view.ts:13",{"_index":689,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:17",{"_index":690,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:4",{"_index":688,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:8",{"_index":691,"title":{},"body":{"classes/View.html":{}}}],["src/core/common/appearance.ts",{"_index":818,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/common/color",{"_index":189,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["src/core/components",{"_index":891,"title":{},"body":{"index.html":{}}}],["src/core/parts/ioc/inject.ts",{"_index":785,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/core/parts/test.ts",{"_index":681,"title":{},"body":{"classes/Test.html":{},"coverage.html":{}}}],["src/core/parts/test.ts:2",{"_index":684,"title":{},"body":{"classes/Test.html":{}}}],["src/workbench",{"_index":887,"title":{},"body":{"index.html":{}}}],["src/workbench/desktop/app.ts",{"_index":6,"title":{},"body":{"classes/App.html":{},"coverage.html":{}}}],["src/workbench/desktop/app.ts:104",{"_index":58,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:108",{"_index":53,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:13",{"_index":36,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:14",{"_index":29,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:21",{"_index":41,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:27",{"_index":48,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:32",{"_index":54,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:42",{"_index":57,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:50",{"_index":45,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:54",{"_index":47,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:64",{"_index":46,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:73",{"_index":44,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:88",{"_index":52,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:96",{"_index":50,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/base",{"_index":172,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/desktop/main.ts",{"_index":787,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/desktop/menu/menu",{"_index":304,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/workbench/desktop/menu/menu.ts",{"_index":222,"title":{},"body":{"classes/Menu.html":{},"coverage.html":{}}}],["src/workbench/desktop/menu/menu.ts:10",{"_index":240,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:11",{"_index":241,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:12",{"_index":237,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:13",{"_index":243,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:14",{"_index":235,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:23",{"_index":249,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:31",{"_index":246,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:38",{"_index":252,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:43",{"_index":254,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:49",{"_index":245,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:7",{"_index":236,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:8",{"_index":238,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:9",{"_index":244,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/utils/utils.ts",{"_index":790,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/services/appearance",{"_index":147,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["src/workbench/services/menu",{"_index":280,"title":{},"body":{"classes/MenuGroupService.html":{},"coverage.html":{}}}],["standard",{"_index":852,"title":{},"body":{"index.html":{}}}],["start",{"_index":488,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["started",{"_index":830,"title":{"index.html":{},"license.html":{}},"body":{}}],["starttoexpand",{"_index":462,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["starttoexpand(index",{"_index":510,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["startx",{"_index":338,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["starty",{"_index":339,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["stateconfig",{"_index":704,"title":{"interfaces/stateConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["statements",{"_index":742,"title":{},"body":{"coverage.html":{}}}],["statically",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statusbar",{"_index":74,"title":{},"body":{"classes/App.html":{}}}],["step",{"_index":894,"title":{},"body":{"index.html":{}}}],["sth",{"_index":114,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["store",{"_index":218,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{}}}],["storybook",{"_index":890,"title":{},"body":{"index.html":{}}}],["string",{"_index":234,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":865,"title":{},"body":{"index.html":{}}}],["subject",{"_index":960,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":953,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":967,"title":{},"body":{"license.html":{}}}],["such",{"_index":881,"title":{},"body":{"index.html":{}}}],["sum",{"_index":601,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["super",{"_index":528,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["support",{"_index":904,"title":{},"body":{"index.html":{}}}],["svelte/store",{"_index":257,"title":{},"body":{"classes/Menu.html":{}}}],["switch",{"_index":206,"title":{},"body":{"classes/ColorRef.html":{}}}],["symbol.for('flowtableroot",{"_index":526,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["systembluecolor",{"_index":775,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemgraycolor",{"_index":776,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemorangecolor",{"_index":777,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systempinkcolor",{"_index":778,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemredcolor",{"_index":779,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemyellowcolor",{"_index":780,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":116,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"miscellaneous/variables.html":{}}}],["target.classlist.contains('split",{"_index":393,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["target.parentelement",{"_index":392,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["template",{"_index":856,"title":{},"body":{"index.html":{}}}],["tertiarybgcolor",{"_index":781,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tertiarylabelcolor",{"_index":782,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":680,"title":{"classes/Test.html":{}},"body":{"classes/Test.html":{},"coverage.html":{}}}],["textfieldbackground",{"_index":783,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["this._growclassname",{"_index":665,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._shrinkclassname",{"_index":664,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._type",{"_index":167,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this._waitformergeitem",{"_index":557,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this._waitformergeitem.cancelwaitformerge",{"_index":561,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.activeexpand",{"_index":401,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.activeid",{"_index":402,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.addexpandbutton",{"_index":657,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.anycolor",{"_index":203,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.applysplit",{"_index":549,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.applysplit('vertical",{"_index":547,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.applysplit(this.direction",{"_index":595,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.callback",{"_index":328,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.cancelformerge",{"_index":559,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.cancelwaitformerge",{"_index":675,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.checkdirection(directiontype.col",{"_index":548,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.checkdirection(directiontype.row",{"_index":539,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.checkexpandstate(event.clientx",{"_index":383,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.children",{"_index":325,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.container",{"_index":87,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{}}}],["this.container.append(menucontainer",{"_index":297,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.container.bind(appearanceservice).to(appearanceservice",{"_index":96,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(colorset).to(colorset",{"_index":98,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(colorsetroot).todynamicvalue",{"_index":102,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(menugroupservice).to(menugroupservice",{"_index":97,"title":{},"body":{"classes/App.html":{}}}],["this.container.firstchild",{"_index":268,"title":{},"body":{"classes/Menu.html":{}}}],["this.container.get(appearanceservice",{"_index":106,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(colorset",{"_index":104,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(menugroupservice",{"_index":124,"title":{},"body":{"classes/App.html":{}}}],["this.container.removechild(menu.container",{"_index":300,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.container.removechild(this.container.firstchild",{"_index":269,"title":{},"body":{"classes/Menu.html":{}}}],["this.contentview",{"_index":659,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.context",{"_index":119,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{}}}],["this.context.set('container",{"_index":90,"title":{},"body":{"classes/App.html":{}}}],["this.context.set('menus",{"_index":260,"title":{},"body":{"classes/Menu.html":{}}}],["this.context.set('name",{"_index":262,"title":{},"body":{"classes/Menu.html":{}}}],["this.controller",{"_index":530,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.createmenu",{"_index":267,"title":{},"body":{"classes/Menu.html":{}}}],["this.darkcolor",{"_index":205,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.destorysplit",{"_index":564,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.direction",{"_index":543,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.evt.emit('onmodechanged",{"_index":168,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.evt.on('onmodechanged",{"_index":169,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.expand",{"_index":673,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.expandhidden",{"_index":674,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.mergedirection",{"_index":677,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expandactive",{"_index":406,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandleavehandler",{"_index":384,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmouseuphandler",{"_index":386,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmovehandler",{"_index":380,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandtype",{"_index":408,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.getexpandresizes(index",{"_index":592,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.groupmenuservice.getmenuinsatance",{"_index":186,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.id",{"_index":258,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.init",{"_index":529,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.initflowtable",{"_index":94,"title":{},"body":{"classes/App.html":{}}}],["this.initmenus",{"_index":120,"title":{},"body":{"classes/App.html":{}}}],["this.initnavigationbar",{"_index":93,"title":{},"body":{"classes/App.html":{}}}],["this.initpreferences",{"_index":91,"title":{},"body":{"classes/App.html":{}}}],["this.initpropertypanel(view2.contentview",{"_index":143,"title":{},"body":{"classes/App.html":{}}}],["this.initresourcepanel(view0.contentview",{"_index":142,"title":{},"body":{"classes/App.html":{}}}],["this.initstatusbar",{"_index":95,"title":{},"body":{"classes/App.html":{}}}],["this.initstyle",{"_index":92,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(appearancetype.dark",{"_index":109,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(type",{"_index":108,"title":{},"body":{"classes/App.html":{}}}],["this.insertconfig(config",{"_index":719,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.insertitemat(item",{"_index":546,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.insertitemat(newitem",{"_index":594,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items.length",{"_index":551,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items.splice(pos",{"_index":552,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[index",{"_index":558,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[index].waitformerge(direction",{"_index":560,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[pos",{"_index":554,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.lightcolor",{"_index":204,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.liveresize(event.clientx",{"_index":381,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.menuinstance",{"_index":185,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.menuinstance.init",{"_index":187,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.menuitems",{"_index":259,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.filter((_",{"_index":276,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.push(new",{"_index":265,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.splice(index",{"_index":270,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems[index",{"_index":274,"title":{},"body":{"classes/Menu.html":{}}}],["this.menusvelte",{"_index":277,"title":{},"body":{"classes/Menu.html":{}}}],["this.meuns",{"_index":292,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meuns.filter(item",{"_index":301,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meuns.length",{"_index":296,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meuns.push(menu",{"_index":299,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meunswritable",{"_index":261,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set((this.menuitems",{"_index":275,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set([...this.menuitems",{"_index":273,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set(this.menuitems",{"_index":279,"title":{},"body":{"classes/Menu.html":{}}}],["this.name",{"_index":264,"title":{},"body":{"classes/Menu.html":{}}}],["this.namewritable",{"_index":263,"title":{},"body":{"classes/Menu.html":{}}}],["this.namewritable.set(this.name",{"_index":278,"title":{},"body":{"classes/Menu.html":{}}}],["this.normalizeweight(config",{"_index":725,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.onmousedown(event",{"_index":388,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.orderedconfigs",{"_index":721,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor",{"_index":727,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor].weight",{"_index":728,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.prepend(contentview",{"_index":661,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root",{"_index":117,"title":{},"body":{"classes/App.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["this.root.appendchild(child",{"_index":696,"title":{},"body":{"classes/View.html":{}}}],["this.root.appendchild(colorsetroot",{"_index":103,"title":{},"body":{"classes/App.html":{}}}],["this.root.appendchild(item.root",{"_index":553,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.root.appendchild(splitboard.root",{"_index":141,"title":{},"body":{"classes/App.html":{}}}],["this.root.classlist.add('flex",{"_index":545,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["this.root.classlist.add('relative",{"_index":671,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('split",{"_index":532,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["this.root.classlist.add('wait",{"_index":676,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(...this._bgcolorclassname",{"_index":672,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(`flex",{"_index":695,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.add(this._growclassname",{"_index":666,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(this._shrinkclassname",{"_index":668,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove('flex",{"_index":544,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/View.html":{}}}],["this.root.classlist.remove('wait",{"_index":679,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._growclassname",{"_index":667,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._shrinkclassname",{"_index":663,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.prepend(...childs",{"_index":697,"title":{},"body":{"classes/View.html":{}}}],["this.root.replacechild(contentview",{"_index":662,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.style.cursor",{"_index":556,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.root.style.margin",{"_index":537,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.setactivestate(index",{"_index":394,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.setdefaultclass",{"_index":658,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.splitinstance",{"_index":565,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.destroy",{"_index":575,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.getsizes().foreach((size",{"_index":604,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.setsizes(newsizes",{"_index":608,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.starttoexpand(index",{"_index":588,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.startx",{"_index":399,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.starty",{"_index":400,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.title",{"_index":326,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.type",{"_index":327,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.unactiveexpand",{"_index":385,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.cancelformerge",{"_index":413,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.direction",{"_index":416,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items.foreach((item",{"_index":390,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items[this.activeid",{"_index":415,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.resizeat(this.activeid",{"_index":420,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousedown",{"_index":387,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseleave",{"_index":404,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousemove",{"_index":403,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseup",{"_index":405,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseleave",{"_index":411,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mousemove",{"_index":410,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseup",{"_index":412,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor",{"_index":414,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('col",{"_index":432,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('crosshair",{"_index":409,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('n",{"_index":438,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('row",{"_index":434,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('w",{"_index":435,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitcolumnat(this.activeid",{"_index":441,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitrowat(this.activeid",{"_index":442,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.waitformergeatitem(this.activeid",{"_index":436,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["three",{"_index":872,"title":{},"body":{"index.html":{}}}],["title",{"_index":308,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["together",{"_index":839,"title":{},"body":{"index.html":{}}}],["token",{"_index":824,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tort",{"_index":989,"title":{},"body":{"license.html":{}}}],["true",{"_index":407,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":33,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":996,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/color",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["ui/components/navigation/navigation",{"_index":72,"title":{},"body":{"classes/App.html":{}}}],["ui/components/property/proterty.svelte",{"_index":79,"title":{},"body":{"classes/App.html":{}}}],["ui/components/resource/resource.svelte",{"_index":77,"title":{},"body":{"classes/App.html":{}}}],["ui/components/status/status",{"_index":75,"title":{},"body":{"classes/App.html":{}}}],["unactiveexpand",{"_index":345,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["undefined",{"_index":550,"title":{},"body":{"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":851,"title":{},"body":{"index.html":{}}}],["update",{"_index":903,"title":{},"body":{"index.html":{}}}],["updatemode",{"_index":153,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updatemode(type",{"_index":162,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updater",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["url",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":951,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":860,"title":{},"body":{"index.html":{}}}],["user",{"_index":930,"title":{},"body":{"index.html":{}}}],["using",{"_index":907,"title":{},"body":{"index.html":{}}}],["utils",{"_index":318,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"index.html":{}}}],["uuid",{"_index":317,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":38,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/classBuilder.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":744,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1002,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":376,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["version",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":424,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["very",{"_index":866,"title":{},"body":{"index.html":{}}}],["view",{"_index":348,"title":{"classes/View.html":{}},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"coverage.html":{}}}],["view0",{"_index":131,"title":{},"body":{"classes/App.html":{}}}],["view1",{"_index":133,"title":{},"body":{"classes/App.html":{}}}],["view2",{"_index":134,"title":{},"body":{"classes/App.html":{}}}],["view:13",{"_index":515,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:17",{"_index":518,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:4",{"_index":475,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:8",{"_index":522,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["vite",{"_index":859,"title":{},"body":{"index.html":{}}}],["void",{"_index":43,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["w",{"_index":437,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["waitformerge",{"_index":623,"title":{},"body":{"classes/SplitItemView.html":{}}}],["waitformerge(direction",{"_index":653,"title":{},"body":{"classes/SplitItemView.html":{}}}],["waitformergeatitem",{"_index":463,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["waitformergeatitem(index",{"_index":512,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["warranties",{"_index":975,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":970,"title":{},"body":{"license.html":{}}}],["web",{"_index":888,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["webpreferences",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":705,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["weightmap",{"_index":698,"title":{"interfaces/WeightMap.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["whether",{"_index":987,"title":{},"body":{"license.html":{}}}],["width",{"_index":574,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["wiki",{"_index":927,"title":{},"body":{"index.html":{}}}],["windows",{"_index":901,"title":{},"body":{"index.html":{}}}],["without",{"_index":946,"title":{},"body":{"license.html":{}}}],["work",{"_index":841,"title":{},"body":{"index.html":{}}}],["works",{"_index":855,"title":{},"body":{"index.html":{}}}],["writable",{"_index":242,"title":{},"body":{"classes/Menu.html":{}}}],["xl",{"_index":670,"title":{},"body":{"classes/SplitItemView.html":{}}}],["yes",{"_index":197,"title":{},"body":{"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/SplitBoardView.html":{},"classes/View.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/App.html":{"url":"classes/App.html","title":"class - App","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/app.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                context\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bootstrap\n                            \n                            \n                                initFlowTable\n                            \n                            \n                                initFrame\n                            \n                            \n                                initMenus\n                            \n                            \n                                initNavigationBar\n                            \n                            \n                                initPreferences\n                            \n                            \n                                initPropertyPanel\n                            \n                            \n                                initResourcePanel\n                            \n                            \n                                initStatusBar\n                            \n                            \n                                initStyle\n                            \n                            \n                                initStyleMode\n                            \n                            \n                                initWorkArea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/app.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Container\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFlowTable\n                        \n                    \n                \n            \n            \n                \ninitFlowTable()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFrame\n                        \n                    \n                \n            \n            \n                \ninitFrame()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initMenus\n                        \n                    \n                \n            \n            \n                \ninitMenus()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNavigationBar\n                        \n                    \n                \n            \n            \n                \ninitNavigationBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPreferences\n                        \n                    \n                \n            \n            \n                \ninitPreferences()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPropertyPanel\n                        \n                    \n                \n            \n            \n                \ninitPropertyPanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initResourcePanel\n                        \n                    \n                \n            \n            \n                \ninitResourcePanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStatusBar\n                        \n                    \n                \n            \n            \n                \ninitStatusBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyle\n                        \n                    \n                \n            \n            \n                \ninitStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyleMode\n                        \n                    \n                \n            \n            \n                \ninitStyleMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initWorkArea\n                        \n                    \n                \n            \n            \n                \ninitWorkArea()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Container } from 'inversify';\nimport { AppearanceType } from '@cosmic/core/common/appearance';\nimport { AppearanceService } from '@cosmic/workbench/services/appearance-service';\nimport { MenuGroupService } from '@cosmic/workbench/services/menu-group-service';\nimport {applicationMenus} from './base-menu/config';\nimport Navigation from '../ui/components/navigation/navigation-bar.svelte';\nimport StatusBar from '../ui/components/status/status-bar.svelte';\nimport ResourcePage from '../ui/components/resource/resource.svelte';\nimport PropertyPanel from '../ui/components/property/proterty.svelte';\nimport SplitBoardView from '@cosmic/core/browser/layout/split-board.view';\nimport SplitItemView from '@cosmic/core/browser/layout/split-item.view';\nexport default class App {\n  private container: Container;\n  private context = new Map();\n  constructor(private root: HTMLElement) {\n    this.container = new Container({ defaultScope: 'Singleton' });\n    this.context.set('container', this.container);\n    this.initPreferences();\n    this.initStyle();\n  }\n  bootstrap(): void {\n    this.initNavigationBar();\n    this.initFlowTable();\n    this.initStatusBar();\n  }\n\n  initPreferences(): void {\n    this.container.bind(AppearanceService).to(AppearanceService);\n    this.container.bind(MenuGroupService).to(MenuGroupService);\n  }\n\n  initStyle(): void {\n    // this.container.bind(ColorSet).to(ColorSet);\n    // const colorSetRoot = document.createElement('style');\n    // this.container.bind(ColorSetRoot).toDynamicValue(() => colorSetRoot);\n    // this.root.appendChild(colorSetRoot);\n    // this.container.get(ColorSet);\n    const aps = this.container.get(AppearanceService);\n    aps.onModeChanged((type: AppearanceType) => this.initStyleMode(type));\n    this.initStyleMode(AppearanceType.dark);\n  }\n  initStyleMode(type: AppearanceType): void {\n    if (type === AppearanceType.dark) {\n      document.body.classList.add('mode-dark');\n    } else {\n      document.body.classList.remove('mode-dark');\n    }\n  }\n\n  initFrame(): void {\n    // to do sth.\n  }\n\n  initNavigationBar(): void {\n    // to do sth.\n    const navigationBar = new Navigation({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    this.initMenus();\n  }\n\n  initMenus(): void {\n    const header = document.querySelector('#main-header');\n    const groupMenu = this.container.get(MenuGroupService);\n    groupMenu.initContainer(header as HTMLElement);\n    for (const menu of applicationMenus) {\n      groupMenu.getMenuInsatance().init(menu.title, menu.items);\n    }\n  }\n\n  initFlowTable(): void {\n    const splitBoard = new SplitBoardView().setFlow('1');\n    const view0 = new SplitItemView().setContent(document.createElement('div'));\n    const view1 = new SplitItemView().setContent(document.createElement('div'));\n    const view2 = new SplitItemView().setContent(document.createElement('div'));\n    splitBoard.addColumn(view0);\n    splitBoard.addColumn(view1);\n    splitBoard.addColumn(view2);\n    splitBoard.applySplit('horizontal', [20, 60, 20]);\n\n    this.root.appendChild(splitBoard.root);\n    this.initResourcePanel(view0.contentView);\n    this.initPropertyPanel(view2.contentView);\n  }\n\n  initResourcePanel(container: HTMLElement): void {\n    new ResourcePage({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initPropertyPanel(container: HTMLElement): void {\n    new PropertyPanel({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initWorkArea(): void {\n    // to do sth.\n  }\n\n  initStatusBar(): void {\n    new StatusBar({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    // to do sth.\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppearanceService.html":{"url":"classes/AppearanceService.html","title":"class - AppearanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppearanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/appearance-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Private\n                                evt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onModeChanged\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                updateMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppearanceType\n\n                    \n                \n                \n                    \n                        Default value : AppearanceType.dark\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        evt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter2()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onModeChanged\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModeChanged(fn: (type: AppearanceType) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        type\n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject, ContainerModule } from 'inversify';\nimport { EventEmitter2 } from 'eventemitter2';\n\nimport { AppearanceType } from '@cosmic/core/common/appearance';\n\n@injectable()\n/** 外观设置服务 */\nexport class AppearanceService {\n  private _type: AppearanceType = AppearanceType.dark;\n  private evt = new EventEmitter2();\n\n  public updateMode(type: AppearanceType) {\n    if (this._type !== type) {\n      this._type = type;\n      this.evt.emit('onModeChanged', type);\n    }\n  }\n  public onModeChanged(fn: (type: AppearanceType) => void) {\n    this.evt.on('onModeChanged', fn);\n  }\n  public type() {\n    return this._type;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseMenu.html":{"url":"classes/BaseMenu.html","title":"class - BaseMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/base-menu/base-menu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                menuInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(groupMenuService: MenuGroupService)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/base-menu/base-menu.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupMenuService\n                                                  \n                                                        \n                                                                        MenuGroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/base-menu/base-menu.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    initMenu(menuItems: MenuItemConfig[])\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/base-menu/base-menu.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuItems\n                                    \n                                                MenuItemConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { MenuGroupService } from '@cosmic/workbench/services/menu-group-service';\nimport type { Menu, MenuItemConfig } from '../menu';\n\nexport class BaseMenu {\n    private menuInstance!: Menu;\n    constructor(private groupMenuService: MenuGroupService) {\n    }\n\n    public initMenu(menuItems: MenuItemConfig[]):void {\n        this.menuInstance = this.groupMenuService.getMenuInsatance();\n        this.menuInstance.init('文件', menuItems);\n        \n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColorRef.html":{"url":"classes/ColorRef.html","title":"class - ColorRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColorRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/common/color-ref.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                anyColor\n                            \n                            \n                                    Private\n                                darkColor\n                            \n                            \n                                    Private\n                                lightColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                color\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(anyColor: Color, lightColor?: Color, darkColor?: Color)\n                    \n                \n                        \n                            \n                                Defined in src/core/common/color-ref.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        anyColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lightColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        darkColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        anyColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        darkColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lightColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        color\n                        \n                    \n                \n            \n            \n                \n                    \n                    color(appearanceType: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/common/color-ref.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appearanceType\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type * as Color from 'color';\nimport { AppearanceType } from './appearance';\n\nexport default class ColorRef {\n  private anyColor: Color;\n  private lightColor: Color;\n  private darkColor: Color;\n\n  constructor(anyColor: Color, lightColor?: Color, darkColor?: Color) {\n    this.anyColor = anyColor;\n    this.lightColor = lightColor || anyColor;\n    this.darkColor = darkColor || anyColor;\n  }\n\n  public color(appearanceType: AppearanceType) {\n    switch (appearanceType) {\n      case AppearanceType.any:\n        return this.anyColor;\n      case AppearanceType.light:\n        return this.lightColor;\n      case AppearanceType.dark:\n        return this.darkColor;\n      default:\n        return this.anyColor;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISettings.html":{"url":"interfaces/ISettings.html","title":"interface - ISettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/settings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            check\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import ElectronStore from 'electron-store';\n\ninterface ISettings {\n  check: boolean;\n}\n\nconst settings = new ElectronStore({\n  defaults: {\n    check: false,\n  },\n});\n\nexport default settings;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Menu.html":{"url":"classes/Menu.html","title":"class - Menu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Menu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                container\n                            \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                menuItems\n                            \n                            \n                                    Private\n                                menuSvelte\n                            \n                            \n                                    Private\n                                    Readonly\n                                meunsWritable\n                            \n                            \n                                    Private\n                                name\n                            \n                            \n                                    Private\n                                    Readonly\n                                nameWritable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMenu\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                registerItem\n                            \n                            \n                                    Public\n                                removeItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: HTMLElement, id: string)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/menu/menu.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuSvelte\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        meunsWritable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : writable([])\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        nameWritable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : writable('')\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(name: string, config: MenuItemConfig[])\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                MenuItemConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerItem(config: MenuItemConfig, index: number, group?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                MenuItemConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItem(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MenuItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import MenuSvelte from './menu.svelte';\nimport type { MenuItemConfig } from './menu-item';\nimport { MenuItem } from './menu-item';\nimport { writable } from 'svelte/store';\n\nexport default class Menu {\n  public readonly container!: HTMLElement;\n  public readonly id!: string;\n  private name!: string;\n  private menuItems!: MenuItem[];\n  private menuSvelte: any;\n  private readonly context = new Map();\n  private readonly meunsWritable = writable([]);\n  private readonly nameWritable = writable('');\n  constructor(container: HTMLElement, id: string) {\n    this.container = container;\n    this.id = id;\n    this.menuItems = [];\n    this.context.set('menus', this.meunsWritable);\n    this.context.set('name', this.nameWritable);\n  }\n\n  public init(name: string, config: MenuItemConfig[]): void {\n    this.name = name;\n    for (const menuItem of config) {\n      this.menuItems.push(new MenuItem(menuItem));\n    }\n    return this.createMenu();\n  }\n\n  public destroy(): void {\n    while (this.container.firstChild) {\n      this.container.removeChild(this.container.firstChild);\n    }\n    return;\n  }\n\n  public registerItem(config: MenuItemConfig, index: number, group?: string): void {\n    this.menuItems.splice(index, 0, new MenuItem(config));\n    this.meunsWritable.set([...this.menuItems]);\n  }\n\n  public removeItem(index: number): MenuItem {\n    const menuItem = this.menuItems[index];\n    this.meunsWritable.set((this.menuItems = this.menuItems.filter((_, i) => index !== i)));\n    return menuItem;\n  }\n\n  private createMenu(): void {\n    this.menuSvelte = new MenuSvelte({\n      target: this.container,\n      context: this.context,\n    });\n    this.nameWritable.set(this.name);\n    this.meunsWritable.set(this.menuItems);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuGroupService.html":{"url":"classes/MenuGroupService.html","title":"class - MenuGroupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuGroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/menu-group-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                meuns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMenuInsatance\n                            \n                            \n                                    Public\n                                initContainer\n                            \n                            \n                                    Public\n                                removeMenuInstances\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/workbench/services/menu-group-service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/menu-group-service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        meuns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/menu-group-service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getMenuInsatance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenuInsatance()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/menu-group-service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Menu\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initContainer\n                        \n                    \n                \n            \n            \n                \n                    \n                    initContainer(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/menu-group-service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeMenuInstances\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeMenuInstances(menu: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/menu-group-service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\nimport { Menu } from '../desktop/menu';\n\n@injectable()\nexport class MenuGroupService {\n    private container!: HTMLElement;\n    private meuns!: Menu[];\n    constructor() {\n        this.meuns = [];\n    }\n\n    public initContainer(container: HTMLElement): void {\n        if (this.container) {\n            return;\n        }\n        this.container = container;\n    }\n\n    public getMenuInsatance(): Menu {\n        const menuContainer = document.createElement('div');\n        const id = Date.now() + '' + this.meuns.length;\n        this.container.append(menuContainer);\n        const menu = new Menu(menuContainer, id);\n        this.meuns.push(menu);\n        return menu;\n    }\n\n    public removeMenuInstances(menu: Menu): void {\n        this.container.removeChild(menu.container);\n        this.meuns = this.meuns.filter(item => item.id === menu.id);\n        this.container.removeChild(menu.container);\n    }\n\n\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItem.html":{"url":"classes/MenuItem.html","title":"class - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu-item.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                callback\n                            \n                            \n                                    Private\n                                children\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                title\n                            \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MenuItemConfig)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/menu/menu-item.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MenuItemConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        callback\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuCommonFunction\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItemType\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { uuid } from '../utils';\n/* eslint-disable no-shadow */\nexport enum MenuItemType {\n  group,\n  item,\n}\n\nexport type MenuCommonFunction = (menu: MenuItem, context: any) => void;\n\nexport interface MenuItemConfig {\n    title: string;\n    type: MenuItemType;\n    callback: MenuCommonFunction;\n    command?: string;\n}\n\nexport class MenuItem {\n  public readonly id!: string;\n  private title!: string;\n  private type!: MenuItemType;\n  private callback: MenuCommonFunction;\n  private children!: MenuItem[];\n  constructor(config: MenuItemConfig) {\n    this.id = uuid();\n    const { title, type, callback } = config;\n    if (type === MenuItemType.group) {\n      this.children = [];\n    }\n    this.title = title;\n    this.type = type;\n    this.callback = callback;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemConfig.html":{"url":"interfaces/MenuItemConfig.html","title":"interface - MenuItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu-item.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            command\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         MenuCommonFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuCommonFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         MenuItemType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItemType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { uuid } from '../utils';\n/* eslint-disable no-shadow */\nexport enum MenuItemType {\n  group,\n  item,\n}\n\nexport type MenuCommonFunction = (menu: MenuItem, context: any) => void;\n\nexport interface MenuItemConfig {\n    title: string;\n    type: MenuItemType;\n    callback: MenuCommonFunction;\n    command?: string;\n}\n\nexport class MenuItem {\n  public readonly id!: string;\n  private title!: string;\n  private type!: MenuItemType;\n  private callback: MenuCommonFunction;\n  private children!: MenuItem[];\n  constructor(config: MenuItemConfig) {\n    this.id = uuid();\n    const { title, type, callback } = config;\n    if (type === MenuItemType.group) {\n      this.children = [];\n    }\n    this.title = title;\n    this.type = type;\n    this.callback = callback;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardController.html":{"url":"classes/SplitBoardController.html","title":"class - SplitBoardController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeId\n                            \n                            \n                                    Private\n                                expandActive\n                            \n                            \n                                    Private\n                                expandLeaveHandler\n                            \n                            \n                                    Private\n                                expandMouseUpHandler\n                            \n                            \n                                    Private\n                                expandMoveHandler\n                            \n                            \n                                    Private\n                                expandType\n                            \n                            \n                                    Private\n                                startX\n                            \n                            \n                                    Private\n                                startY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeExpand\n                            \n                            \n                                    Public\n                                checkExpandState\n                            \n                            \n                                    Private\n                                liveResize\n                            \n                            \n                                    Public\n                                onMouseDown\n                            \n                            \n                                    Public\n                                setActiveState\n                            \n                            \n                                    Private\n                                unactiveExpand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(view: SplitBoardView)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.controller.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        view\n                                                  \n                                                        \n                                                                        SplitBoardView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandLeaveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMouseUpHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMoveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        activeExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    activeExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkExpandState\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkExpandState(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        liveResize\n                        \n                    \n                \n            \n            \n                \n                    \n                    liveResize(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onMouseDown\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseDown(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setActiveState\n                        \n                    \n                \n            \n            \n                \n                    \n                    setActiveState(index: number, startX: number, startY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        unactiveExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    unactiveExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { directionType } from './split-board.view';\nimport type SplitBoardView from './split-board.view';\nimport type SplitItemView from './split-item.view';\n\nexport default class SplitBoardController {\n  private expandMoveHandler!: (event: MouseEvent) => void;\n  private expandLeaveHandler!: (event: MouseEvent) => void;\n  private expandMouseUpHandler!: (event: MouseEvent) => void;\n\n  private startX = 0;\n  private startY = 0;\n  private activeId = -1;\n\n  private expandActive = false;\n  private expandType = 0; // 是否超过偏移值 0 / 1 expand hor | 2 expand ver | 3 merge hor | 4 merge ver\n\n  constructor(private view: SplitBoardView) {\n    this.expandMoveHandler = (event: MouseEvent) => {\n      this.liveResize(event.clientX, event.clientY);\n      this.checkExpandState(event.clientX, event.clientY);\n    };\n    this.expandLeaveHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.expandMouseUpHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.view.root.addEventListener('mousedown', (event: MouseEvent) => {\n      this.onMouseDown(event);\n    });\n  }\n  public onMouseDown(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    let index = -1;\n    this.view.items.forEach((item, i) => {\n      if (target && item.root == target.parentElement && target.classList.contains('split-expand')) index = i;\n    });\n    if (index === -1) {\n      return;\n    }\n    if (index > -1) {\n      this.setActiveState(index, event.clientX, event.clientY);\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  public setActiveState(index: number, startX: number, startY: number) {\n    // 锚点mousedown\n    this.startX = startX;\n    this.startY = startY;\n    this.activeExpand();\n    this.activeId = index;\n  }\n  private activeExpand() {\n    this.view.root.addEventListener('mousemove', this.expandMoveHandler);\n    this.view.root.addEventListener('mouseleave', this.expandLeaveHandler);\n    this.view.root.addEventListener('mouseup', this.expandMouseUpHandler);\n    this.expandActive = true;\n    this.expandType = 0;\n    this.view.setCursor('crosshair');\n  }\n  private unactiveExpand() {\n    if (this.expandActive) {\n      this.view.root.removeEventListener('mousemove', this.expandMoveHandler);\n      this.view.root.removeEventListener('mouseleave', this.expandLeaveHandler);\n      this.view.root.removeEventListener('mouseup', this.expandMouseUpHandler);\n      this.view.cancelForMerge();\n      this.expandActive = false;\n      this.expandType = 0;\n      this.view.setCursor('');\n    }\n  }\n  private liveResize(clientX: number, clientY: number) {\n    const item = this.view.items[this.activeId];\n    if (this.expandType == 1 && this.view.direction == directionType.col) {\n      // horizontal expand column\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n    } else if (this.expandType == 2 && this.view.direction == directionType.row) {\n      // vertical expand row\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n    }\n  }\n  public checkExpandState(clientX: number, clientY: number) {\n    const offsetX = this.startX - clientX;\n    const offsetY = this.startY - clientY;\n    /** expand mode */\n    if (this.expandType == 0 && offsetX > 0 && offsetY > 0 && (offsetX > 5 || offsetY > 5)) {\n      if (offsetX > offsetY) {\n        this.view.setCursor('col-resize');\n      } else {\n        this.view.setCursor('row-resize');\n      }\n    }\n    /** merge mode */\n    if (offsetX  5) {\n      this.view.setCursor('w-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'w');\n      return;\n    }\n\n    if (offsetY  5) {\n      this.view.setCursor('n-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'n');\n      return;\n    }\n\n    if (this.expandType) return;\n    /** do expand */\n    if (offsetX > 30) {\n      this.expandType = 1;\n      this.view.setCursor('col-resize');\n      this.view.splitColumnAt(this.activeId, clientX, clientY);\n      return;\n    }\n    if (offsetY > 30) {\n      this.expandType = 2;\n      this.view.setCursor('row-resize');\n      this.view.splitRowAt(this.activeId, clientX, clientY);\n    }\n    if (\n      (this.expandType == 1 && this.view.direction == directionType.row) ||\n      (this.expandType == 2 && this.view.direction == directionType.col)\n    ) {\n      this.unactiveExpand();\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardView.html":{"url":"classes/SplitBoardView.html","title":"class - SplitBoardView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _waitForMergeItem\n                            \n                            \n                                    Public\n                                controller\n                            \n                            \n                                    Public\n                                direction\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Private\n                                splitInstance\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addColumn\n                            \n                            \n                                    Public\n                                addRow\n                            \n                            \n                                    Public\n                                applySplit\n                            \n                            \n                                    Public\n                                cancelForMerge\n                            \n                            \n                                    Private\n                                checkDirection\n                            \n                            \n                                    Private\n                                destorySplit\n                            \n                            \n                                    Private\n                                getExpandResizes\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Public\n                                insertItemAt\n                            \n                            \n                                    Public\n                                resizeAt\n                            \n                            \n                                    Public\n                                setCursor\n                            \n                            \n                                    Public\n                                splitColumnAt\n                            \n                            \n                                    Public\n                                splitRowAt\n                            \n                            \n                                    Private\n                                startToExpand\n                            \n                            \n                                    Public\n                                waitForMergeAtItem\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.view.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _waitForMergeItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitItemView | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        controller\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SplitBoardController\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        direction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         directionType\n\n                    \n                \n                \n                    \n                        Default value : directionType.col\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitItemView[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        splitInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Split.Instance | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addColumn\n                        \n                    \n                \n            \n            \n                \n                    \n                    addColumn(item: SplitItemView)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addRow\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRow(item: SplitItemView)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applySplit\n                        \n                    \n                \n            \n            \n                \n                    \n                    applySplit(direction: \"vertical\" | \"horizontal\", sizes?: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"vertical\" | \"horizontal\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'horizontal'\n                                    \n\n                                \n                                \n                                    sizes\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkDirection\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkDirection(type: directionType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                directionType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        destorySplit\n                        \n                    \n                \n            \n            \n                \n                    \n                    destorySplit()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getExpandResizes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getExpandResizes(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        insertItemAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertItemAt(item: SplitItemView, pos?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pos\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resizeAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    resizeAt(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:162\n                \n            \n\n\n            \n                \n                    live resize after expanded\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCursor\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCursor(type: string | \"row-resize\" | \"col-resize\" | \"crosshair\" | \"e-resize\" | \"w-resize\" | \"s-resize\" | \"n-resize\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            string | \"row-resize\" | \"col-resize\" | \"crosshair\" | \"e-resize\" | \"w-resize\" | \"s-resize\" | \"n-resize\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        splitColumnAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    splitColumnAt(index: number, clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        splitRowAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    splitRowAt(index: number, clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        startToExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    startToExpand(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMergeAtItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMergeAtItem(index: number, direction: \"w\" | \"e\" | \"n\" | \"s\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"n\" | \"s\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view';\nimport { injectable, inject } from 'inversify';\nimport SplitItemView from './split-item.view';\nimport SplitBoardController from './split-board.controller';\nimport Split from 'split.js';\n\nexport const lowBoardRoot = Symbol.for('FlowTableRoot');\n\nexport enum directionType {\n  'col',\n  'row',\n}\n\n@injectable()\n/** Split Board View */\nexport default class SplitBoardView extends View {\n  public items: SplitItemView[] = [];\n  public direction: directionType = directionType.col;\n  private splitInstance: Split.Instance | null = null;\n  public controller: SplitBoardController;\n  private _waitForMergeItem: SplitItemView | null = null;\n  constructor() {\n    super();\n    this.init();\n    this.controller = new SplitBoardController(this);\n  }\n  private init() {\n    this.root.classList.add('split-board', 'flex', 'flex-nowrap', 'overflow-hidden');\n    // this.root.style.margin = '0 4px';\n  }\n  public addRow(item: SplitItemView): void {\n    if (!this.checkDirection(directionType.row)) {\n      console.warn('direction is not right when added row', item);\n      return;\n    }\n    this.direction = directionType.row;\n    this.root.classList.remove('flex-row');\n    this.root.classList.add('flex-col');\n    this.insertItemAt(item);\n    this.applySplit('vertical');\n  }\n  public addColumn(item: SplitItemView): void {\n    if (!this.checkDirection(directionType.col)) {\n      console.warn('direction is not right when added col', item);\n      return;\n    }\n    this.direction = directionType.col;\n    this.root.classList.remove('flex-col');\n    this.root.classList.add('flex-row');\n    this.insertItemAt(item);\n    this.applySplit();\n  }\n  public insertItemAt(item: SplitItemView, pos?: number): void {\n    pos = pos === undefined ? this.items.length : pos;\n    this.items.splice(pos, 0, item);\n    if (pos == 0) {\n      this.root.appendChild(item.root);\n    } else {\n      this.items[pos - 1].root.after(item.root);\n    }\n  }\n\n  public setCursor(\n    type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize' = ''\n  ): void {\n    this.root.style.cursor = type;\n  }\n  public waitForMergeAtItem(index: number, direction: 'w' | 'e' | 'n' | 's'): void {\n    if (this._waitForMergeItem == this.items[index]) {\n      return;\n    }\n    this.cancelForMerge();\n    if (this.items[index]) {\n      this.items[index].waitForMerge(direction);\n      this._waitForMergeItem = this.items[index];\n    }\n  }\n  public cancelForMerge(): void {\n    if (this._waitForMergeItem) {\n      this._waitForMergeItem.cancelWaitForMerge();\n      this._waitForMergeItem = null;\n    }\n  }\n  private checkDirection(type: directionType) {\n    if (this.items.length > 1 && this.direction !== type) {\n      return false;\n    }\n    return true;\n  }\n  // public removeColumn(item: SplitItemView) {\n  //     // do sth.\n  // }\n  // public removeRow(item: SplitItemView) {\n  //     // do sth.\n  // }\n  public applySplit(direction: 'vertical' | 'horizontal' = 'horizontal', sizes?: number[]): void {\n    this.destorySplit();\n    this.splitInstance = Split(Array.prototype.slice.call(this.root.children), {\n      sizes,\n      // sizes: [30, 70],\n      minSize: 15,\n      direction,\n      snapOffset: 0,\n      gutterStyle: () => (direction == 'vertical' ? { height: '3px' } : { width: '3px' }),\n    });\n  }\n\n  private destorySplit() {\n    this.splitInstance && this.splitInstance.destroy();\n    this.splitInstance = null;\n  }\n  // 切分列\n  public splitColumnAt(index: number, clientX: number, clientY: number): void {\n    const item = this.items[index];\n    if (!this.checkDirection(directionType.col)) {\n      // 列切分行\n      const newBoard = new SplitBoardView().setFlow('1');\n      const contentView = item.contentView;\n      item.replaceContent(newBoard.root);\n      const newItemView = new SplitItemView().setContent(contentView);\n      const newEmptyView = new SplitItemView().setContent(document.createElement('div'));\n      item.hideExpandButton(); // 不再使用该item的拉伸按钮\n      newBoard.addColumn(newItemView);\n      // newBoard.addColumn(newEmptyView);\n      newBoard.controller.setActiveState(0, clientX, clientY);\n      newBoard.controller.checkExpandState(clientX, clientY);\n      return;\n    }\n    // 列扩展列\n    this.startToExpand(index, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n  }\n  // 切分行\n  public splitRowAt(index: number, clientX: number, clientY: number): void {\n    const item = this.items[index];\n    if (!this.checkDirection(directionType.row)) {\n      // 行切分列\n      const newBoard = new SplitBoardView().setFlow('1');\n      const contentView = item.contentView;\n      item.replaceContent(newBoard.root);\n      const newItemView = new SplitItemView().setContent(contentView);\n      const newEmptyView = new SplitItemView().setContent(document.createElement('div'));\n      item.hideExpandButton(); // 不再使用该item的拉伸按钮\n      newBoard.addRow(newItemView);\n      // newBoard.addRow(newEmptyView);\n      newBoard.controller.setActiveState(0, clientX, clientY);\n      newBoard.controller.checkExpandState(clientX, clientY);\n      return;\n    }\n    // 行切分行\n    this.startToExpand(index, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n  }\n\n  private startToExpand(index: number, start: number, length: number, position: number) {\n    const newSizes = this.getExpandResizes(index, start, length, position);\n    const newItem = new SplitItemView().setContent(document.createElement('div'));\n    this.destorySplit();\n    this.insertItemAt(newItem, index + 1);\n    this.applySplit(this.direction == directionType.col ? 'horizontal' : 'vertical', newSizes);\n  }\n\n  /** live resize after expanded  */\n  public resizeAt(index: number, start: number, length: number, position: number): void {\n    if (!this.splitInstance) return;\n    // const item = this.items[index];\n    let max = length;\n    if (this.items[index + 1]) {\n      max += this.items[index + 1].root[this.direction == directionType.col ? 'clientWidth' : 'clientHeight'];\n    }\n    const r = (position - start) / max;\n    if (position - start  {\n      sum += size;\n      if (i == index || i == index + 1) return;\n      other += size;\n    });\n    let newSize = 0;\n    const newSizes: number[] = [];\n    this.splitInstance.getSizes().forEach((size, i) => {\n      if (index == i) {\n        newSize = (sum - other) * r;\n        newSizes.push(newSize);\n      } else if (index + 1 == i) {\n        newSizes.push(sum - other - newSize);\n      } else if (index !== i) {\n        newSizes.push(size);\n      }\n    });\n    this.splitInstance.setSizes(newSizes);\n  }\n\n  private getExpandResizes(index: number, start: number, length: number, position: number) {\n    const r = (position - start) / length;\n    if (r = 1) return;\n    const newSizes: number[] = [];\n    this.splitInstance &&\n      this.splitInstance.getSizes().forEach((size, i) => {\n        if (index !== i) {\n          newSizes.push(size);\n          return;\n        }\n        const w = size * r;\n        newSizes.push(w, size - w);\n      });\n    return newSizes;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitItemView.html":{"url":"classes/SplitItemView.html","title":"class - SplitItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-item.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-item.view.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitExpand\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:68\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view';\nimport { directionType } from './split-board.view';\nimport SplitExpand from './split-expand.svelte';\n\nenum directionStyles {\n  'w' = 'merge-w',\n  'e' = 'merge-e',\n  's' = 'merge-s',\n  'n' = 'merge-n',\n}\n\nexport default class SplitItemView extends View {\n  private _growClassName = '';\n  private _shrinkClassName = '';\n  private _bgColorClassName: string[] = ['bg-cgray-100', 'dark:bg-cgray-800'];\n\n  public contentView!: HTMLElement;\n  private expand!: SplitExpand;\n\n  constructor() {\n    super();\n    this.addExpandButton();\n    this.setDefaultClass();\n  }\n\n  public setContent(contentView: HTMLElement): SplitItemView {\n    this.contentView = contentView;\n    this.root.classList.add('split-item', 'flex');\n    contentView.classList.add('flex', 'flex-1');\n    return this.prepend(contentView);\n  }\n\n  public replaceContent(contentView: HTMLElement): SplitItemView {\n    this.root.replaceChild(contentView, this.contentView);\n    this.contentView = contentView;\n    contentView.classList.add('flex', 'flex-1');\n    return this;\n  }\n\n  public setGrow(className = 'flex-grow'): void {\n    this.root.classList.remove(this._shrinkClassName);\n    this._shrinkClassName = '';\n    this._growClassName = className;\n    this.root.classList.add(this._growClassName);\n  }\n\n  public setShrink(className = 'flex-shrink'): void {\n    this.root.classList.remove(this._growClassName);\n    this._growClassName = '';\n    this._shrinkClassName = className;\n    this.root.classList.add(this._shrinkClassName);\n  }\n\n  public isShrink(): boolean {\n    return !!this._growClassName;\n  }\n\n  private setDefaultClass() {\n    this.root.classList.add('flex-grow', 'rounded-xl');\n    this.root.classList.add('relative');\n    this.root.classList.add(...this._bgColorClassName);\n  }\n\n  private addExpandButton() {\n    this.expand = new SplitExpand({ target: this.root });\n  }\n  /** To hide expand button */\n  public hideExpandButton(): void {\n    this.expand.expandHidden = true;\n  }\n\n  public waitForMerge(direction: 'w' | 'e' | 's' | 'n'): void {\n    this.cancelWaitForMerge();\n    this.root.classList.add('wait-for-merge');\n    this.expand.mergeDirection = directionStyles[direction];\n  }\n\n  public cancelWaitForMerge(): void {\n    this.root.classList.remove('wait-for-merge');\n    this.expand.mergeDirection = '';\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Test.html":{"url":"classes/Test.html","title":"class - Test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Test\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/test.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                print\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        print\n                        \n                    \n                \n            \n            \n                \n                    \n                    print(target: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/test.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Test {\n  public print(target: string) {\n    console.log(`test ok: ${target}`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/View.html":{"url":"classes/View.html","title":"class - View","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  View\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/view.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root?: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/view.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/view.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        type FlowValue = '1' | 'auto' | 'initial' | 'none';\n\nexport default class View {\n  public root: HTMLElement;\n  constructor(root?: HTMLElement) {\n    this.root = root || document.createElement('div');\n  }\n  setFlow(type: FlowValue) {\n    this.root.classList.remove('flex-1', 'flex-auto', 'flex-initial', 'flex-none');\n    this.root.classList.add(`flex-${type}`);\n    return this;\n  }\n  append(child: HTMLElement) {\n    this.root.appendChild(child);\n    return this;\n  }\n  prepend(...childs: HTMLElement[]) {\n    this.root.prepend(...childs);\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeightMap.html":{"url":"interfaces/WeightMap.html","title":"interface - WeightMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WeightMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [index: string]:        number\n\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:11\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/classBuilder.html":{"url":"classes/classBuilder.html","title":"class - classBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  classBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                orderedConfigs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addConfig\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Private\n                                insertConfig\n                            \n                            \n                                    Private\n                                normalizeWeight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configs: stateConfig[], weightMap: WeightMap)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                        stateConfig[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weightMap\n                                                  \n                                                        \n                                                                        WeightMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orderedConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         stateConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/class-builder.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    addConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        normalizeWeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    normalizeWeight(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         stateConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/classConfig.html":{"url":"interfaces/classConfig.html","title":"interface - classConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  classConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            createWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            mainWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            notification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            interface\n            ISettings\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            variable\n            settings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            class\n            classBuilder\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            classConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            stateConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            WeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            variable\n            defaultWeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.controller.ts\n            \n            class\n            SplitBoardController\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            class\n            SplitBoardView\n            \n                3 %\n                (1/26)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            variable\n            lowBoardRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-item.view.ts\n            \n            class\n            SplitItemView\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            function\n            makeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BgColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BorderColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlAccentColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlBackgroundColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlDisabledColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlForbiddenColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlHighlightColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            FourthBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            GridBackgroundColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            LabelColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemBlueColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemGrayColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemOrangeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemPinkColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemRedColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemYellowColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TextFieldBackground\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/view.ts\n            \n            class\n            View\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/color-ref.ts\n            \n            class\n            ColorRef\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/parts/ioc/inject.ts\n            \n            function\n            inject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/test.ts\n            \n            class\n            Test\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/workbench/desktop/app.ts\n            \n            class\n            App\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/workbench/desktop/base-menu/base-menu.ts\n            \n            class\n            BaseMenu\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/workbench/desktop/base-menu/config.ts\n            \n            variable\n            applicationMenus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/desktop/main.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu-item.ts\n            \n            class\n            MenuItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu-item.ts\n            \n            interface\n            MenuItemConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu.ts\n            \n            class\n            Menu\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/workbench/desktop/utils/utils.ts\n            \n            variable\n            uuid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/services/appearance-service.ts\n            \n            class\n            AppearanceService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/workbench/services/menu-group-service.ts\n            \n            class\n            MenuGroupService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @types/color : ^3.0.1\n        \n            color : ^3.1.3\n        \n            electron-log : ^4.3.1\n        \n            electron-store : ^7.0.2\n        \n            electron-updater : ^4.3.5\n        \n            eventemitter2 : ^6.4.4\n        \n            inversify : ^5.1.1\n        \n            keycode : ^2.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            smelte : ^1.1.5\n        \n            split.js : ^1.6.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppearanceType   (src/.../appearance.ts)\n                        \n                        \n                            directionStyles   (src/.../split-item.view.ts)\n                        \n                        \n                            directionType   (src/.../split-board.view.ts)\n                        \n                        \n                            MenuItemType   (src/.../menu-item.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/common/appearance.ts\n    \n        \n            \n                \n                    \n                        \n                        AppearanceType\n                    \n                \n                    \n                        \n                            模式类型\n\n                        \n                    \n                        \n                            \n                                 any\n                            \n                        \n                        \n                            \n                                 light\n                            \n                        \n                        \n                            \n                                 dark\n                            \n                        \n            \n        \n\n    src/core/browser/layout/split-item.view.ts\n    \n        \n            \n                \n                    \n                        \n                        directionStyles\n                    \n                \n                        \n                            \n                                 w\n                            \n                        \n                        \n                            \n                                Value : merge-w\n                            \n                        \n                        \n                            \n                                 e\n                            \n                        \n                        \n                            \n                                Value : merge-e\n                            \n                        \n                        \n                            \n                                 s\n                            \n                        \n                        \n                            \n                                Value : merge-s\n                            \n                        \n                        \n                            \n                                 n\n                            \n                        \n                        \n                            \n                                Value : merge-n\n                            \n                        \n            \n        \n\n    src/core/browser/layout/split-board.view.ts\n    \n        \n            \n                \n                    \n                        \n                        directionType\n                    \n                \n                        \n                            \n                                 col\n                            \n                        \n                        \n                            \n                                 row\n                            \n                        \n            \n        \n\n    src/workbench/desktop/menu/menu-item.ts\n    \n        \n            \n                \n                    \n                        \n                        MenuItemType\n                    \n                \n                        \n                            \n                                 group\n                            \n                        \n                        \n                            \n                                 item\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            inject   (src/.../inject.ts)\n                        \n                        \n                            makeColor   (src/.../ui-color.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/parts/ioc/inject.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inject\n                        \n                    \n                \n            \n            \n                \ninject(token)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        makeColor\n                        \n                    \n                \n            \n            \n                \nmakeColor(anyColorHex, lightColorHex?, darkColorHex?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anyColorHex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    darkColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCosmic Design\n\n\n\n\n\n\n🚧 ing...\n\nThe Repository\nCosmic design is a concrete practice of D2R.\nThis repository is where we develop it together with the community. Not only do we work on code and issues here, we also publish our roadmap , development guide. This source code is available to everyone under the standard MIT license.\nAbout Cosmic Design\n\n🚧 ing...\n\nHow it works\nThe template required a minimum dependencies. Only Vite is used for building, nothing more.\nProject Structure\nThe structure of this template is very similar to the structure of a monorepo.\nThe entire source code of the program is divided into three modules (packages) that are bundled each independently:\n\nsrc/core\nInclude common dependencies, such as components, utils, ipc.\nsrc/app\nElectron main script.\nsrc/workbench\nElectron web page.\n\nCosmic Components\n\nComponents StoryBook\nsrc/core/components\n\nCompile App\nNext step is run packaging and compilation a ready for distribution Electron app for macOS, Windows and Linux with \"auto update\" support out of the box.\nTo do this, using the electron-builder:\n\nIn npm script compile: This script is configured to compile the application as quickly as possible. It is not ready for distribution, is compiled only for the current platform and is used for debugging.\nIn GitHub Action: The application is compiled for any platform and ready-to-distribute files are automatically added to the draft GitHub release.\n\nContribution\nSee Wiki Contributing\n\nSource Code Organization\nUser Interface\nColor Set\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 qiansc\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/stateConfig.html":{"url":"interfaces/stateConfig.html","title":"interface - stateConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  stateConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:         classConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         classConfig[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationMenusType   (src/.../config.ts)\n                        \n                        \n                            FlowValue   (src/.../view.ts)\n                        \n                        \n                            MenuCommonFunction   (src/.../menu-item.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/base-menu/config.ts\n    \n    \n        \n            \n                \n                    \n                    ApplicationMenusType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/core/browser/view.ts\n    \n    \n        \n            \n                \n                    \n                    FlowValue\n                \n            \n            \n                \n                        \"1\" | \"auto\" | \"initial\" | \"none\"\n\n                \n            \n        \n    \n    src/workbench/desktop/menu/menu-item.ts\n    \n    \n        \n            \n                \n                    \n                    MenuCommonFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (src/.../main.ts)\n                        \n                        \n                            applicationMenus   (src/.../config.ts)\n                        \n                        \n                            BgColor   (src/.../ui-color.ts)\n                        \n                        \n                            BorderColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlAccentColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlDisabledColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlForbiddenColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlHighlightColor   (src/.../ui-color.ts)\n                        \n                        \n                            createWindow   (src/.../index.ts)\n                        \n                        \n                            defaultWeightMap   (src/.../class-builder.ts)\n                        \n                        \n                            FourthBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            GridBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            isProd   (src/.../index.ts)\n                        \n                        \n                            isProd   (src/.../logger.ts)\n                        \n                        \n                            LabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            logger   (src/.../logger.ts)\n                        \n                        \n                            lowBoardRoot   (src/.../split-board.view.ts)\n                        \n                        \n                            mainWindow   (src/.../index.ts)\n                        \n                        \n                            notification   (src/.../index.ts)\n                        \n                        \n                            SecondaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            SecondaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            settings   (src/.../settings.ts)\n                        \n                        \n                            SystemBlueColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemGrayColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemOrangeColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemPinkColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemRedColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemYellowColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            TextFieldBackground   (src/.../ui-color.ts)\n                        \n                        \n                            uuid   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new App(document.body)\n                    \n                \n\n\n        \n    \n\n    src/workbench/desktop/base-menu/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applicationMenus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationMenusType[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        title: '文件',\n        items: [\n            {\n                title: '打开文件',\n                type: MenuItemType.group,\n                /* eslint no-console: \"off\" */\n                callback: (item, context) => console.log(item, context),\n            },\n            {\n                title: '保存',\n                type: MenuItemType.group,\n                /* eslint no-console: \"off\" */\n                callback: (item, context) => console.log(item, context),\n            },\n\n            {\n                title: '另存为',\n                type: MenuItemType.group,\n                /* eslint no-console: \"off\" */\n                callback: (item, context) => console.log(item, context),\n            },\n        ],\n    },\n]\n                    \n                \n\n\n        \n    \n\n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#E0E0E0', '#E0E0E0', '#1F1F1F')\n                    \n                \n\n            \n                \n                    三级背景色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BorderColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D9D9D9', '#D9D9D9', '#D9D9D9')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlAccentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#5580c0', '#5580c0', '#5580c0')\n                    \n                \n\n            \n                \n                    高亮色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#FFFFFF', '#5D5F61')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlDisabledColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F9F9F9', '#F9F9F9', '#464749')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlForbiddenColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlHighlightColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#ffae2b', '#ffae2b', '#ffae2b')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FourthBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#BABABA', '#BABABA', '#454545')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GridBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F2F2F2', '#F2F2F2', '#2E2F30')\n                    \n                \n\n            \n                \n                    组件色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#E0E0E0')\n                    \n                \n\n            \n                \n                    三级标签色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D7D7D7', '#D7D7D7', '#272728')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#808080')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemBlueColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#729cd4', '#729cd4', '#729cd4')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemGrayColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c0c0c1', '#c0c0c1', '#c0c0c1')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemOrangeColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemPinkColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c4666f', '#c4666f', '#c4666f')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemRedColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemYellowColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n            \n                \n                    辅助色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#C6C6C6', '#C6C6C6', '#393939')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#3F3F3F', '#3F3F3F', '#3F3F3F')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TextFieldBackground\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#F2F2F2', '#454545')\n                    \n                \n\n\n        \n    \n\n    src/app/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createWindow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  mainWindow = new BrowserWindow({\n    width: 900,\n    height: 680,\n    webPreferences: {\n      devTools: isProd ? false : true,\n      contextIsolation: true,\n      enableRemoteModule: false,\n      preload: join(__dirname, 'preload.js'),\n    },\n  });\n\n  const url =\n    // process.env.NODE_ENV === \"production\"\n    isProd\n      ? // in production, use the statically build version of our application\n        `file://${join(__dirname, 'dist/workbench/desktop/', 'index.html')}`\n      : // in dev, target the host and port of the local rollup web server\n        'http://localhost:5000';\n\n  mainWindow.loadURL(url).catch((err: any) => {\n    logger.error(JSON.stringify(err));\n    app.quit();\n  });\n\n  if (!isProd) mainWindow.webContents.openDevTools();\n\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BrowserWindow | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Notification | null\n\n                    \n                \n\n\n        \n    \n\n    src/core/browser/class-builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultWeightMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WeightMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/utils/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log\n                    \n                \n\n\n        \n    \n\n    src/core/browser/layout/split-board.view.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lowBoardRoot\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('FlowTableRoot')\n                    \n                \n\n\n        \n    \n\n    src/app/utils/settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ElectronStore({\n  defaults: {\n    check: false,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/workbench/desktop/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): string => {\n  const s: string[] | number[] = [];\n  const hexDigits = '0123456789abcdef';\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
