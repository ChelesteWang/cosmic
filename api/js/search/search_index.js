var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/App.html",[0,0.188,1,2.189]],["body/classes/App.html",[0,0.12,1,2.146,2,0.291,3,0.17,4,0.152,5,0.152,6,1.91,7,0.1,8,0.351,9,1.061,10,4.668,11,2.986,12,0.867,13,2.19,14,4.741,15,4.741,16,4.741,17,4.741,18,4.741,19,4.741,20,3.459,21,3.459,22,4.741,23,4.741,24,3.459,25,4.741,26,0.909,27,1.91,28,2.32,29,1.122,30,3.459,31,1.119,32,0.024,33,1.119,34,0.427,35,0.99,36,2.349,37,2.245,38,0.679,39,0.909,40,1.548,41,2.603,42,2.245,43,1.399,44,2.245,45,1.148,46,2.245,47,2.245,48,2.245,49,2.245,50,3.459,51,2.245,52,3.459,53,2.245,54,2.245,55,2.245,56,3.459,57,3.477,58,2.245,59,2.245,60,1.014,61,0.909,62,1.91,63,1.944,64,1.035,65,1.317,66,1.19,67,1.525,68,2.245,69,2.943,70,1.91,71,2.245,72,1.91,73,3.459,74,1.393,75,2.245,76,3.459,77,2.245,78,3.459,79,3.459,80,2.245,81,3.459,82,2.245,83,2.349,84,2.245,85,1.91,86,2.245,87,0.17,88,1.393,89,3.459,90,2.245,91,1.69,92,2.245,93,2.245,94,2.245,95,2.245,96,2.245,97,2.603,98,2.245,99,1.591,100,2.245,101,2.245,102,2.146,103,2.245,104,2.245,105,1.69,106,2.245,107,2.245,108,2.245,109,2.245,110,2.245,111,2.245,112,2.245,113,2.245,114,2.245,115,2.245,116,1.69,117,2.245,118,2.943,119,2.245,120,4.741,121,2.245,122,2.339,123,2.603,124,1.804,125,3.567,126,2.245,127,3.459,128,2.245,129,2.245,130,2.245,131,2.245,132,1.525,133,2.245,134,2.245,135,0.007,136,0.011,137,0.007]],["title/classes/AppearanceService.html",[0,0.188,67,2.395]],["body/classes/AppearanceService.html",[0,0.193,2,0.471,3,0.275,4,0.245,5,0.245,7,0.161,8,0.497,9,1.253,12,1.228,29,1.068,31,1.156,32,0.023,33,1.156,34,0.526,35,1.023,38,0.961,39,1.983,40,1.303,43,1.232,45,1.023,57,4.508,60,0.893,61,1.469,62,3.087,67,3.326,87,0.275,116,3.685,135,0.012,136,0.016,137,0.012,138,5.433,139,3.087,140,5.543,141,5.543,142,1.588,143,4.897,144,4.897,145,3.628,146,5.049,147,3.628,148,4.897,149,3.628,150,4.897,151,2.074,152,3.628,153,4.897,154,3.628,155,2.257,156,1.922,157,3.628,158,5.543,159,3.628,160,3.628,161,0.91]],["title/classes/Base.html",[0,0.188,74,2.189]],["body/classes/Base.html",[0,0.266,2,0.649,3,0.379,4,0.338,5,0.338,7,0.223,8,0.61,11,3.721,29,0.862,32,0.022,34,0.455,60,0.806,74,3.729,87,0.379,135,0.016,136,0.019,137,0.016,162,2.594,163,2.594,164,4.255,165,5.483,166,5.001,167,3.763]],["title/classes/BaseMenu.html",[0,0.188,168,2.654]],["body/classes/BaseMenu.html",[0,0.224,2,0.547,3,0.319,4,0.285,5,0.285,7,0.187,8,0.548,9,1.17,12,1.354,26,1.705,29,1.028,31,1.275,32,0.023,33,1.275,34,0.492,35,1.128,43,0.936,45,0.931,60,0.87,69,3.583,70,5.352,72,3.583,87,0.319,88,2.613,132,4.418,135,0.013,136,0.017,137,0.013,142,1.408,168,4.065,169,4.272,170,5.352,171,3.583,172,5.964,173,5.402,174,4.211,175,5.402,176,5.402,177,5.402,178,6.291,179,4.211,180,5.402,181,4.211,182,4.211,183,4.211]],["title/classes/ColorRef.html",[0,0.188,184,2.654]],["body/classes/ColorRef.html",[0,0.195,2,0.474,3,0.277,4,0.247,5,0.247,7,0.163,8,0.499,9,1.322,12,1.234,26,1.48,29,1.071,31,1.162,32,0.023,33,1.162,34,0.484,35,1.028,38,0.965,43,0.812,57,4.345,60,0.793,87,0.277,116,2.749,135,0.012,136,0.016,137,0.012,142,1.313,161,1.492,184,3.702,185,5.444,186,3.108,187,6.54,188,6.54,189,6.54,190,4.844,191,4.92,192,4.92,193,3.702,194,3.654,195,3.654,196,4.92,197,3.654,198,3.654,199,5.563,200,4.92,201,4.92,202,2.749,203,4.186,204,3.654,205,3.654]],["title/classes/Context.html",[0,0.188,11,1.869]],["body/classes/Context.html",[0,0.204,2,0.497,3,0.29,4,0.259,5,0.259,7,0.171,8,0.515,9,1.273,11,2.691,12,1.273,26,1.552,29,1.118,31,0.905,32,0.023,33,0.905,34,0.478,35,0.8,43,1.129,45,0.875,60,0.617,87,0.29,135,0.012,136,0.016,137,0.012,142,1.345,161,0.961,162,2.856,163,2.856,206,3.26,207,6.72,208,5.37,209,7.01,210,5.161,211,6.067,212,5.079,213,4.494,214,5.079,215,3.832,216,3.832,217,3.832,218,3.832,219,2.602,220,3.832,221,3.832,222,5.079,223,3.832,224,3.832]],["title/classes/Controller.html",[0,0.188,65,1.343]],["body/classes/Controller.html",[0,0.224,2,0.545,3,0.318,4,0.284,5,0.284,7,0.187,12,1.352,28,2.052,29,1.12,32,0.023,43,1.444,45,1.083,60,0.677,61,1.701,65,2.052,87,0.318,135,0.013,136,0.017,137,0.013,155,2.485,167,4.729,225,3.573,226,1.774,227,3.1,228,3.1,229,2.896,230,3.1,231,4.2,232,4.2,233,4.2,234,4.2,235,4.2,236,5.956,237,4.2,238,4.2,239,2.606,240,4.2,241,4.2,242,4.2,243,5.392]],["title/classes/CornerMixin.html",[0,0.188,244,2.189]],["body/classes/CornerMixin.html",[0,0.318,2,0.643,3,0.375,4,0.335,5,0.335,7,0.22,8,0.607,29,0.854,32,0.022,34,0.375,87,0.452,135,0.016,136,0.019,137,0.016,162,2.579,163,2.579,244,3.708,245,3.728,246,5.46,247,2.202,248,4.954,249,3.074,250,4.215,251,4.215,252,4.215,253,4.215]],["title/classes/DefaultShapeMixin.html",[0,0.188,254,2.395]],["body/classes/DefaultShapeMixin.html",[0,0.265,2,0.645,3,0.376,4,0.336,5,0.336,32,0.023,60,1.075,87,0.376,135,0.016,136,0.019,137,0.016,162,2.145,163,2.145,244,3.083,249,3.715,254,4.066,255,4.228,256,4.228,257,3.739,258,3.739,259,4.969,260,4.066,261,4.969,262,4.066,263,4.969,264,1.579,265,4.969]],["title/classes/GeometryMixin.html",[0,0.188,262,2.395]],["body/classes/GeometryMixin.html",[0,0.158,2,0.385,3,0.224,4,0.2,5,0.2,7,0.132,8,0.432,11,2.637,29,1.125,31,1.005,32,0.023,33,1.005,34,0.487,35,0.889,38,0.835,39,1.723,40,1.132,43,0.945,45,0.733,60,0.685,74,3.572,87,0.224,99,1.535,125,2.231,135,0.009,136,0.014,137,0.009,161,1.067,162,2.816,163,2.816,165,3.62,190,2.013,208,2.522,213,2.013,219,2.013,247,1.728,262,2.889,264,1.352,266,2.522,267,4.626,268,4.976,269,4.976,270,4.976,271,4.976,272,3.62,273,5.758,274,5.437,275,5.252,276,2.965,277,4.255,278,4.255,279,4.255,280,2.965,281,2.965,282,2.965,283,2.965,284,1.366,285,2.965,286,2.965,287,2.965,288,2.965,289,2.337,290,2.965,291,2.965,292,2.965,293,2.965,294,2.965,295,3.745,296,2.522,297,3.62,298,2.965,299,4.255,300,4.976,301,4.255,302,2.965,303,2.965,304,2.965,305,2.965,306,2.965,307,2.522,308,2.965,309,3.202,310,2.965,311,2.965,312,2.965,313,2.965,314,2.965,315,4.255,316,2.965,317,2.965,318,2.965,319,2.965,320,2.965,321,2.965,322,2.965,323,2.965]],["title/interfaces/ISettings.html",[324,0.568,325,2.654]],["body/interfaces/ISettings.html",[3,0.375,4,0.335,5,0.335,7,0.22,8,0.607,32,0.023,34,0.375,38,0.972,40,1.318,60,0.798,87,0.375,99,1.399,135,0.016,136,0.019,137,0.016,324,0.798,325,4.497,326,2.006,327,3.728,328,5.803,329,4.829,330,5.085,331,3.728,332,4.215,333,4.497,334,4.215,335,3.728]],["title/interfaces/ISplitBoardView.html",[324,0.568,336,2.189]],["body/interfaces/ISplitBoardView.html",[3,0.261,4,0.233,5,0.233,7,0.28,8,0.48,32,0.023,34,0.515,45,1.084,60,0.762,87,0.409,135,0.011,136,0.015,137,0.011,151,3.918,226,1.64,247,2.178,264,1.502,324,0.762,326,1.395,336,2.933,337,2.34,338,4.942,339,4.134,340,4.942,341,4.942,342,4.942,343,4.942,344,4.942,345,4.942,346,2.865,347,3.321,348,2.593,349,2.931,350,2.593,351,2.933,352,2.703,353,1.7,354,2.593,355,2.931,356,2.505,357,4.732,358,2.931,359,2.933,360,2.703,361,2.703,362,2.703,363,2.931,364,2.931,365,2.931,366,3.558,367,3.558]],["title/interfaces/ItemGenerateDelegate.html",[324,0.568,353,1.74]],["body/interfaces/ItemGenerateDelegate.html",[3,0.294,4,0.262,5,0.262,7,0.29,8,0.52,32,0.023,34,0.461,45,1.122,60,0.825,87,0.434,135,0.012,136,0.016,137,0.012,151,2.927,226,1.618,247,2.219,264,1.233,324,0.825,326,1.571,336,2.407,337,2.634,338,3.3,339,3.477,340,3.3,341,3.3,342,3.3,343,3.3,344,3.3,345,3.3,346,2.526,347,2.927,348,2.919,349,3.3,350,2.919,351,3.177,352,2.927,353,2.526,354,4.587,355,3.3,356,2.713,357,4.898,358,3.3,359,3.177,360,2.927,361,2.927,362,2.927,363,3.3,364,3.3,365,3.3,366,3.853,367,3.853]],["title/classes/LayoutMixin.html",[0,0.188,260,2.395]],["body/classes/LayoutMixin.html",[0,0.257,2,0.627,3,0.366,4,0.327,5,0.327,7,0.215,8,0.597,29,1.015,32,0.023,34,0.446,87,0.366,135,0.015,136,0.019,137,0.015,162,2.74,163,2.74,247,2.189,260,3.998,295,3.636,368,4.111,369,6.349,370,6.349,371,4.832,372,4.832,373,4.111,374,3.636,375,3.636]],["title/classes/MenuBar.html",[0,0.188,376,2.395]],["body/classes/MenuBar.html",[0,0.159,2,0.386,3,0.225,4,0.201,5,0.201,7,0.132,8,0.433,9,1.069,12,1.07,13,2.43,28,1.624,29,1.126,31,0.703,32,0.023,33,0.703,34,0.436,35,0.622,38,0.584,40,0.792,43,1.405,45,0.939,60,0.929,61,1.205,63,1.371,64,1.371,65,2.406,66,2.26,87,0.225,99,1.204,124,2.073,132,3.916,135,0.01,136,0.014,137,0.01,142,1.177,155,1.966,156,1.577,161,1.366,169,4.075,226,1.538,227,2.46,228,2.46,229,2.51,230,2.46,264,1.356,284,2.657,289,1.528,324,0.479,346,1.468,353,1.468,376,2.897,377,2.239,378,2.439,379,2.02,380,2.851,381,2.51,382,2.26,383,2.51,384,2.976,385,4.075,386,2.976,387,2.976,388,2.26,389,2.104,390,2.976,391,2.976,392,4.243,393,2.976,394,2.976,395,1.847,396,1.847,397,1.847,398,1.468,399,1.847,400,2.532,401,3.21,402,2.021,403,2.104,404,2.532,405,2.532,406,2.532,407,2.532,408,2.532,409,2.532,410,2.532,411,2.532,412,2.532,413,2.532]],["title/interfaces/MenuProps.html",[324,0.568,385,2.395]],["body/interfaces/MenuProps.html",[0,0.2,3,0.284,4,0.254,5,0.254,7,0.167,8,0.509,9,0.984,13,2.031,28,1.43,32,0.024,34,0.427,38,0.737,40,1,60,1.01,61,1.522,63,1.732,64,1.732,65,1.909,66,2.657,87,0.284,99,1.416,124,1.43,132,4.259,135,0.012,136,0.016,137,0.012,142,0.887,155,2.311,156,1.991,161,1.509,169,2.552,226,1.061,229,1.732,264,1.194,289,2.021,324,0.605,326,1.522,346,1.854,353,1.854,376,2.552,377,2.828,378,2.148,379,2.031,380,2.148,381,1.732,383,1.732,385,4.088,389,1.854,392,5.336,398,1.854,399,2.332,400,3.197,401,3.773,402,2.552,403,2.473,404,3.197,405,3.197,406,3.197,407,3.197,408,3.197,409,3.197,410,3.197,411,3.197,412,3.197,413,3.197]],["title/interfaces/Module.html",[324,0.568,379,1.428]],["body/interfaces/Module.html",[3,0.346,4,0.309,5,0.309,7,0.203,8,0.577,32,0.023,34,0.49,87,0.346,124,2.537,135,0.015,136,0.018,137,0.015,151,3.885,324,0.736,326,1.849,356,3.531,379,2.302,381,2.985,382,3.433,383,2.985,414,3.884,415,5.685,416,5.685,417,5.685,418,4.278]],["title/interfaces/ModuleConfig.html",[324,0.568,398,1.74]],["body/interfaces/ModuleConfig.html",[0,0.197,3,0.28,4,0.25,5,0.25,7,0.165,8,0.504,9,0.727,10,4.216,13,1.501,32,0.023,34,0.424,40,1.322,41,3.737,60,0.903,61,2.011,63,1.707,87,0.376,88,2.299,91,3.737,97,3.737,99,1.402,124,1.41,135,0.012,136,0.016,137,0.012,155,2.289,161,1.501,202,2.788,203,4.216,289,2.35,324,0.597,326,1.501,379,2.736,398,2.45,403,2.953,419,2.788,420,2.788,421,3.152,422,3.152,423,3.152,424,2.788,425,3.152,426,2.632,427,3.152,428,4.226,429,5.093,430,4.226,431,4.226,432,3.152,433,3.152,434,3.152,435,3.152,436,4.767,437,3.152,438,3.152,439,3.152,440,3.152,441,3.152,442,3.152,443,3.152,444,3.152,445,3.152,446,3.152,447,3.152,448,3.152,449,3.152]],["title/classes/ModuleFactory.html",[0,0.188,63,1.625]],["body/classes/ModuleFactory.html",[0,0.157,2,0.383,3,0.224,4,0.2,5,0.2,7,0.131,8,0.431,9,0.974,10,4.504,12,1.064,13,2.011,26,1.196,29,1.032,31,1.357,32,0.023,33,1.357,34,0.478,35,1.201,38,0.833,39,1.718,40,1.321,41,4.085,43,1.206,45,0.509,60,0.8,61,1.718,63,1.955,87,0.321,88,1.833,91,4.085,97,3.193,99,1.198,124,1.89,135,0.009,136,0.014,137,0.009,155,1.955,161,1.361,202,2.223,203,3.737,289,2.41,324,0.476,379,2.673,388,1.565,398,1.457,403,1.457,419,4.64,420,2.223,421,2.513,422,2.513,423,2.513,424,2.223,425,2.513,426,2.876,427,3.61,428,4.618,429,5.246,430,4.618,431,3.61,432,2.513,433,2.513,434,2.513,435,2.513,436,4.225,437,2.513,438,2.513,439,3.61,440,2.513,441,3.61,442,2.513,443,3.61,444,2.513,445,2.513,446,2.513,447,2.513,448,2.513,449,2.513,450,4.243,451,4.243,452,4.243,453,2.954,454,2.954,455,2.954,456,2.954,457,4.618,458,2.954,459,2.954,460,2.954]],["title/classes/ModuleItem.html",[0,0.188,461,2.189]],["body/classes/ModuleItem.html",[0,0.121,2,0.296,3,0.172,4,0.154,5,0.154,7,0.101,8,0.355,9,1.239,12,0.877,28,2.329,29,1.18,31,1.38,32,0.023,33,1.38,34,0.508,35,1.221,36,2.375,38,1.011,39,2.087,40,0.606,43,1.437,45,0.976,60,0.564,64,1.05,66,1.207,87,0.172,99,0.643,135,0.007,136,0.011,137,0.007,142,1.659,161,0.571,226,1.349,264,1.112,284,3.095,289,2.147,329,1.714,339,1.547,347,3.86,359,2.17,360,2,361,2,362,2,379,2.203,418,2.632,457,3.623,461,2.964,462,4.385,463,1.938,464,4.258,465,2.976,466,2.976,467,2.976,468,4.064,469,3.204,470,4.777,471,3.623,472,3.623,473,3.623,474,3.623,475,2.976,476,2.976,477,3.623,478,2.976,479,2.976,480,2.976,481,2.632,482,2.632,483,2.632,484,2.278,485,2.278,486,2.278,487,1.938,488,2.976,489,1.124,490,1.938,491,1.207,492,2.278,493,2.278,494,2.278,495,2.278,496,1.938,497,2.278,498,1.938,499,2.278,500,2.278,501,2.278,502,2.278,503,1.938,504,1.938,505,2.278,506,1.938,507,2.278,508,1.938,509,2.278,510,2.278,511,1.938,512,2.278,513,2.976,514,2.632,515,1.938,516,1.938,517,2.278,518,1.938,519,1.938,520,2.278,521,1.714,522,1.938,523,1.714,524,1.714,525,1.938,526,1.714,527,1.714,528,2.375,529,1.938,530,2.17,531,1.714,532,2.278]],["title/classes/PropertyPanel.html",[0,0.188,83,2.395]],["body/classes/PropertyPanel.html",[0,0.179,2,0.436,3,0.254,4,0.227,5,0.227,7,0.149,8,0.471,9,1.127,12,1.164,13,2.327,28,1.278,29,1.176,31,1.096,32,0.023,33,1.096,34,0.457,35,0.97,38,0.659,40,0.893,43,1.47,45,0.99,60,0.748,64,1.547,65,2.296,83,3.154,87,0.254,122,2.291,124,2.027,135,0.011,136,0.015,137,0.011,142,1.539,161,1.164,226,1.503,227,2.626,228,2.626,229,2.453,230,2.626,239,3.304,264,1.476,284,3.144,356,2.821,380,2.655,381,2.453,382,2.461,383,2.647,388,2.461,389,1.656,395,2.083,396,2.083,397,2.083,533,2.856,534,2.856,535,3.829,536,3.154,537,3.154,538,2.526,539,2.28,540,2.526,541,3.495,542,3.154,543,2.526,544,2.526,545,2.526,546,2.28,547,2.28,548,3.495,549,2.526]],["title/classes/Rectangle.html",[0,0.188,550,2.654]],["body/classes/Rectangle.html",[0,0.137,2,0.334,3,0.195,4,0.174,5,0.174,7,0.114,8,0.389,9,1.273,11,3.129,12,0.961,26,1.042,29,1.13,31,1.2,32,0.023,33,1.2,34,0.501,35,1.062,38,0.752,39,1.042,40,0.684,43,1.208,45,0.982,60,0.876,87,0.195,99,1.535,125,1.936,135,0.008,136,0.012,137,0.008,161,1.149,162,2.857,163,2.857,210,4.323,213,1.747,219,1.747,247,2.136,254,1.747,256,3.262,257,1.936,258,1.936,264,0.817,267,2.188,272,3.262,275,2.188,289,0.921,295,2.886,296,2.188,309,3.824,373,3.901,374,4.09,375,4.09,378,2.192,550,3.824,551,2.188,552,4.585,553,4.585,554,4.585,555,4.585,556,5.082,557,5.435,558,3.835,559,3.835,560,2.572,561,4.585,562,2.572,563,2.572,564,2.572,565,2.572,566,2.572,567,2.572,568,2.572,569,2.572,570,2.572,571,2.572,572,2.572,573,2.572,574,2.572,575,2.572,576,2.572,577,2.572,578,2.572,579,2.572,580,2.572,581,1.747,582,4.585,583,2.572,584,4.585,585,4.585,586,2.572,587,5.082,588,2.572,589,2.572,590,3.835,591,3.835,592,3.835,593,3.835,594,3.835,595,2.572,596,2.572,597,2.572,598,2.572,599,1.747,600,1.936,601,2.572,602,3.835,603,2.572,604,2.572,605,2.572]],["title/classes/RectangleCornerMixin.html",[0,0.188,249,2.189]],["body/classes/RectangleCornerMixin.html",[0,0.303,2,0.593,3,0.346,4,0.309,5,0.309,7,0.203,8,0.577,29,1.117,32,0.023,34,0.49,87,0.43,135,0.015,136,0.018,137,0.015,162,2.876,163,2.876,244,2.833,245,3.436,246,3.884,247,2.232,249,3.527,250,5.267,251,5.267,252,5.267,253,5.267,606,4.566,607,4.566,608,4.566,609,4.566]],["title/classes/ResourceExplorer.html",[0,0.188,610,2.654]],["body/classes/ResourceExplorer.html",[0,0.179,2,0.436,3,0.254,4,0.227,5,0.227,7,0.149,8,0.471,9,1.127,12,1.164,13,2.327,28,1.278,29,1.176,31,1.096,32,0.023,33,1.096,34,0.457,35,0.97,38,0.659,40,0.893,43,1.47,45,0.99,60,0.748,64,1.547,65,2.296,87,0.254,122,2.291,124,2.027,135,0.011,136,0.015,137,0.011,142,1.539,161,1.164,226,1.503,227,2.626,228,2.626,229,2.453,230,2.626,239,3.304,264,1.476,284,3.144,356,2.821,380,2.655,381,2.453,382,2.461,383,2.647,388,2.461,389,1.656,395,2.083,396,2.083,397,2.083,535,3.829,536,3.154,537,3.154,538,2.526,539,2.28,540,2.526,541,3.495,542,3.154,543,2.526,544,2.526,545,2.526,546,2.28,547,2.28,548,3.495,549,2.526,610,3.495,611,2.856,612,2.856]],["title/classes/ShapeCanvas.html",[0,0.188,613,2.654]],["body/classes/ShapeCanvas.html",[0,0.179,2,0.436,3,0.254,4,0.227,5,0.227,7,0.149,8,0.471,9,1.127,12,1.164,13,2.327,28,1.278,29,1.176,31,1.096,32,0.023,33,1.096,34,0.457,35,0.97,38,0.659,40,0.893,43,1.47,45,0.99,60,0.748,64,1.547,65,2.296,87,0.254,122,2.291,124,2.027,135,0.011,136,0.015,137,0.011,142,1.539,161,1.164,226,1.503,227,2.626,228,2.626,229,2.453,230,2.626,239,3.304,264,1.476,284,3.144,356,2.821,380,2.655,381,2.453,382,2.461,383,2.647,388,2.461,389,1.656,395,2.083,396,2.083,397,2.083,535,3.829,536,3.154,537,3.154,538,2.526,539,2.28,540,2.526,541,3.495,542,3.154,543,2.526,544,2.526,545,2.526,546,2.28,547,2.28,548,3.495,549,2.526,613,3.495,614,2.856,615,2.856]],["title/classes/SplitBoardController.html",[0,0.188,616,2.654]],["body/classes/SplitBoardController.html",[0,0.093,2,0.227,3,0.133,4,0.118,5,0.118,7,0.228,8,0.288,9,1.343,12,0.712,26,0.709,28,0.666,29,1.064,31,1.071,32,0.024,33,1.071,34,0.461,35,0.948,38,0.953,39,1.837,43,1.079,45,0.976,60,0.458,87,0.133,88,1.086,99,1.165,122,1.401,135,0.006,136,0.009,137,0.006,142,1.301,151,2.049,161,1.137,226,0.802,247,2.104,335,2.698,336,2.56,346,0.864,352,1.001,357,3.655,360,1.001,362,1.001,366,3.655,367,4.26,469,3.851,530,1.086,599,1.189,616,2.138,617,3.873,618,1.489,619,3.585,620,3.585,621,3.585,622,3.585,623,3.585,624,3.585,625,5.117,626,5.117,627,4.125,628,2.841,629,2.841,630,2.841,631,2.841,632,4.125,633,1.751,634,2.841,635,3.741,636,1.751,637,1.751,638,1.751,639,1.751,640,1.751,641,3.129,642,1.751,643,1.751,644,1.751,645,2.841,646,1.751,647,2.841,648,1.751,649,2.841,650,5.662,651,1.751,652,4.535,653,2.841,654,1.751,655,1.751,656,2.841,657,4.125,658,2.841,659,1.489,660,2.435,661,1.489,662,3.585,663,1.751,664,3.585,665,1.751,666,3.585,667,3.585,668,3.585,669,1.751,670,1.751,671,1.751,672,1.751,673,1.751,674,1.751,675,1.751,676,1.751,677,1.751,678,1.751,679,1.751,680,1.751,681,2.841,682,2.841,683,1.751,684,1.751,685,1.751,686,1.751,687,1.751,688,3.585,689,5.662,690,1.751,691,1.751,692,1.751,693,1.751,694,1.751,695,1.751,696,1.751,697,4.125,698,2.138,699,1.317,700,1.751,701,2.841,702,1.751,703,1.751,704,2.841,705,1.317,706,1.751,707,1.751,708,4.858,709,4.858,710,2.841,711,4.125,712,2.841,713,2.841,714,1.751,715,2.841,716,1.751,717,2.841,718,1.751,719,1.751]],["title/classes/SplitItemView.html",[0,0.188,347,2.016]],["body/classes/SplitItemView.html",[0,0.105,2,0.256,3,0.149,4,0.133,5,0.133,7,0.088,8,0.318,9,1.278,12,0.784,26,1.574,28,2.356,29,1.138,31,1.315,32,0.023,33,1.315,34,0.48,35,1.164,36,2.125,38,1.006,39,1.952,40,0.525,43,1.376,45,1.051,60,0.504,87,0.149,122,0.974,123,1.486,135,0.006,136,0.01,137,0.006,142,1.621,161,0.974,226,1.573,264,0.994,284,2.037,289,1.995,329,2.355,339,1.341,347,2.931,348,1.486,350,1.486,359,2.99,360,2.755,361,2.755,362,2.755,465,3.306,466,3.306,467,3.306,468,4.57,469,3.626,471,3.761,472,3.761,473,3.761,474,3.761,475,2.662,476,2.662,477,3.761,478,2.662,479,2.662,480,2.662,481,2.355,482,2.355,483,2.355,487,2.662,488,3.761,489,1.543,490,2.662,491,1.658,496,3.761,498,1.68,503,2.662,504,2.662,506,2.662,508,2.662,511,2.662,513,3.761,514,4.042,515,3.306,516,2.662,518,2.662,519,2.662,521,1.486,522,1.68,523,1.486,524,1.486,525,1.68,526,1.486,527,1.486,528,2.125,529,1.68,530,1.225,581,1.341,599,1.341,617,4.009,635,2.125,660,3.481,720,1.486,721,3.129,722,1.975,723,1.975,724,1.975,725,1.975,726,1.975,727,1.975,728,1.975,729,1.975,730,1.975,731,1.975,732,1.975,733,1.975,734,1.975,735,1.975,736,1.975,737,1.68,738,1.975,739,1.975,740,3.886,741,1.975,742,3.129,743,1.975,744,1.975,745,1.975,746,3.129,747,3.886,748,1.975,749,1.975,750,1.975,751,1.975,752,1.975,753,1.975,754,1.975,755,1.975,756,1.975,757,1.975,758,1.975,759,1.975,760,3.129,761,1.975,762,1.975]],["title/classes/SvelteModule.html",[0,0.188,535,2.016]],["body/classes/SvelteModule.html",[0,0.159,2,0.388,3,0.227,4,0.202,5,0.202,7,0.133,8,0.435,9,1.18,12,1.074,13,2.435,28,1.63,29,1.152,31,1.011,32,0.023,33,1.011,34,0.469,35,0.895,43,1.432,45,0.941,60,0.88,61,1.212,65,2.41,66,1.586,87,0.227,122,1.476,124,2.199,135,0.01,136,0.014,137,0.01,142,1.579,155,1.974,161,1.254,167,4.658,226,1.542,227,2.468,228,2.468,229,2.516,230,2.468,239,3.104,264,1.361,284,2.663,356,3.28,378,2.449,379,2.212,380,2.86,381,2.516,382,2.27,383,2.516,388,2.27,389,2.113,395,1.857,396,1.857,397,1.857,401,3.764,402,2.033,535,2.449,536,3.397,537,2.909,539,3.924,542,2.909,546,2.033,547,2.033,763,5.386,764,2.546,765,2.993,766,2.993,767,2.993,768,2.993,769,2.993,770,2.993,771,2.993,772,2.993,773,2.252,774,2.993,775,2.993,776,2.993,777,2.993,778,2.993]],["title/classes/View.html",[0,0.188,226,0.996]],["body/classes/View.html",[0,0.204,2,0.497,3,0.29,4,0.259,5,0.259,7,0.171,8,0.515,12,1.273,26,1.552,27,4.321,28,2.635,29,1.088,31,1.432,32,0.023,33,1.432,34,0.509,35,1.267,36,4.286,38,0.752,43,1.266,87,0.29,123,2.883,135,0.012,136,0.016,137,0.012,142,1.345,161,1.428,193,2.883,226,1.434,402,2.602,481,3.822,482,3.822,483,3.822,514,4.287,521,3.822,523,2.883,524,3.822,526,2.883,527,3.822,528,4.12,635,3.449,779,2.883,780,5.079,781,3.832,782,3.832,783,3.832,784,3.822,785,4.321,786,4.321,787,3.832,788,3.832,789,3.832,790,3.832]],["title/interfaces/WeightMap.html",[324,0.568,791,1.869]],["body/interfaces/WeightMap.html",[0,0.281,2,0.527,3,0.307,4,0.274,5,0.274,7,0.235,9,1.15,29,0.7,32,0.023,38,0.796,45,0.909,87,0.307,99,1.489,135,0.013,136,0.017,137,0.013,142,1.245,247,1.862,289,2.303,324,0.944,326,1.644,403,2.602,489,2.002,491,2.151,641,2.151,791,3.407,792,3.015,793,2.32,794,4.059,795,4.059,796,3.015,797,3.768,798,2.756,799,3.015,800,2.518,801,2.518,802,2.518,803,2.518,804,2.518,805,2.518,806,2.518,807,2.518,808,2.518,809,2.32,810,2.756,811,2.756,812,2.756,813,3.582,814,2.756,815,2.756,816,2.756,817,2.756,818,2.518,819,2.756,820,2.756,821,2.756,822,2.756]],["title/classes/Workbench.html",[0,0.188,102,2.189]],["body/classes/Workbench.html",[0,0.121,2,0.294,3,0.171,4,0.153,5,0.153,7,0.229,8,0.353,9,1.065,12,0.873,13,2.198,26,0.917,29,1.101,31,1.002,32,0.024,33,1.002,34,0.471,35,0.886,38,0.444,40,0.927,43,1.33,45,1.006,60,0.828,61,0.917,63,2.907,64,1.044,65,2.326,66,1.845,87,0.171,99,1.451,102,2.161,105,2.62,124,1.957,135,0.007,136,0.011,137,0.007,142,1.281,155,1.605,156,1.2,161,1.289,226,1.596,227,2.349,228,2.349,229,2.194,230,2.349,247,1.725,264,1.107,284,2.369,324,0.365,346,1.117,351,2.161,352,1.991,353,2.093,354,2.62,378,1.991,379,2.363,381,2.194,382,1.845,383,2.194,388,1.845,389,1.718,398,1.718,399,2.632,426,2.248,461,3.189,530,2.955,531,1.704,581,1.538,698,1.704,699,1.704,705,1.704,773,1.704,823,1.704,824,3.61,825,2.265,826,3.482,827,3.686,828,2.265,829,2.265,830,2.265,831,2.963,832,2.265,833,2.265,834,2.265,835,3.61,836,3.61,837,2.265,838,2.265,839,2.265,840,2.265,841,2.265,842,1.927,843,1.927,844,1.927,845,1.927,846,1.927,847,1.927,848,2.963,849,1.927,850,2.963,851,1.927,852,2.963,853,1.927,854,1.927,855,1.927,856,1.927,857,1.927,858,1.927,859,1.927,860,2.963,861,1.927,862,1.927,863,2.963,864,2.963,865,4.052,866,1.927,867,1.927,868,1.927,869,1.927,870,1.927,871,1.927,872,1.927,873,1.927,874,1.927,875,1.927,876,1.927,877,1.927,878,1.927]],["title/interfaces/WorkbenchProps.html",[324,0.568,827,2.395]],["body/interfaces/WorkbenchProps.html",[0,0.148,3,0.211,4,0.188,5,0.188,7,0.214,8,0.412,9,0.797,13,1.645,32,0.024,34,0.493,35,0.849,38,0.546,40,1.081,45,0.91,60,0.904,61,1.126,63,2.701,64,1.282,65,2.009,66,2.152,87,0.211,99,1.585,102,1.726,105,3.057,124,1.546,135,0.009,136,0.013,137,0.009,142,0.959,155,1.872,156,1.474,161,1.407,226,1.355,227,1.372,228,1.372,229,1.282,230,1.372,247,1.924,264,0.884,324,0.448,326,1.126,346,1.372,351,2.978,352,2.743,353,2.004,378,1.59,379,2.452,381,1.282,383,1.282,389,1.372,398,2.603,399,2.521,426,2.974,461,2.978,530,3.275,531,2.093,581,1.889,698,2.093,699,2.093,705,2.093,773,2.093,823,2.093,824,2.366,827,3.584,831,2.366,835,4.776,836,4.776,842,2.366,843,2.366,844,2.366,845,2.366,846,2.366,847,2.366,848,3.456,849,2.366,850,3.456,851,2.366,852,3.456,853,2.366,854,2.366,855,2.366,856,2.366,857,2.366,858,2.366,859,2.366,860,3.456,861,2.366,862,2.366,863,3.456,864,3.456,865,4.49,866,2.366,867,2.366,868,2.366,869,2.366,870,2.366,871,2.366,872,2.366,873,2.366,874,2.366,875,2.366,876,2.366,877,2.366,878,2.366]],["title/classes/classBuilder.html",[0,0.188,809,2.016]],["body/classes/classBuilder.html",[0,0.242,2,0.589,3,0.246,4,0.219,5,0.219,7,0.202,8,0.46,9,1.289,12,1.137,26,1.315,29,1.064,31,1.337,32,0.023,33,1.337,34,0.451,35,1.183,38,0.89,39,1.315,43,1.258,45,1.027,85,4.45,87,0.246,99,1.281,135,0.01,136,0.014,137,0.01,142,1.457,247,1.442,289,2.028,324,0.843,403,2.238,489,1.601,491,1.72,641,1.72,791,3.425,792,3.622,793,1.856,796,2.594,797,3.977,798,2.205,799,2.594,800,2.014,801,2.014,802,2.014,803,2.014,804,2.014,805,2.014,806,2.014,807,2.014,808,2.014,809,2.594,810,3.552,811,3.081,812,2.205,813,3.081,814,3.845,815,2.205,816,3.081,817,3.081,818,2.014,819,2.205,820,2.205,821,2.205,822,2.205,879,4.537,880,4.537,881,4.537,882,4.537,883,3.246,884,3.246,885,3.246,886,3.246,887,3.246,888,3.246]],["title/interfaces/classConfig.html",[324,0.568,796,2.016]],["body/interfaces/classConfig.html",[0,0.34,2,0.514,3,0.3,4,0.267,5,0.267,7,0.231,8,0.526,9,1.136,32,0.023,34,0.393,38,0.776,45,0.894,87,0.3,99,1.465,135,0.013,136,0.017,137,0.013,142,1.225,247,1.649,289,2.423,324,0.933,326,1.602,403,3.146,489,1.952,491,2.097,641,2.097,791,3.255,792,2.262,793,2.262,796,3.309,797,3.742,798,2.687,799,2.966,800,2.455,801,2.455,802,2.455,803,2.455,804,2.455,805,2.455,806,2.455,807,2.455,808,2.455,809,2.262,810,2.687,811,2.687,812,2.687,813,3.523,814,2.687,815,2.687,816,2.687,817,2.687,818,2.455,819,2.687,820,2.687,821,2.687,822,2.687]],["title/coverage.html",[889,4.087]],["body/coverage.html",[0,0.363,1,1.983,5,0.137,6,1.726,11,1.075,32,0.023,34,0.154,40,0.54,63,0.935,65,0.772,67,1.377,74,1.258,83,1.377,102,1.258,135,0.006,136,0.01,137,0.006,138,1.726,139,1.726,151,2.261,156,1.075,162,2.497,163,2.497,164,1.726,168,1.526,169,2.685,170,1.726,171,1.726,184,1.526,185,1.726,186,1.726,206,1.726,225,1.726,226,0.573,244,1.258,245,2.405,249,1.258,254,1.377,255,1.726,260,1.377,262,1.377,266,1.726,324,0.954,325,1.526,327,2.405,333,1.526,336,1.258,337,2.17,347,1.159,353,1,368,1.726,376,1.377,377,2.405,379,0.821,385,1.377,398,1,399,1.258,414,1.726,419,2.405,420,2.405,461,1.258,462,1.726,463,1.726,489,2.408,533,1.726,534,1.726,535,1.159,550,1.526,551,1.726,610,1.526,611,1.726,612,1.726,613,1.526,614,1.726,615,1.726,616,1.526,617,2.784,618,1.726,641,3.823,659,1.726,661,2.719,720,1.526,763,1.726,764,1.726,779,1.526,791,1.075,792,2.791,793,2.791,796,1.159,797,1.159,799,1.159,809,1.159,823,2.405,827,1.377,889,1.726,890,1.726,891,2.028,892,2.028,893,3.818,894,6.942,895,1.726,896,6.942,897,2.719,898,1.726,899,1.726,900,2.719,901,1.726,902,5.186,903,4.487,904,3.196,905,3.196,906,4.487,907,3.196,908,2.719,909,2.028,910,1.726,911,2.028,912,2.028,913,5.045,914,5.045,915,1.726,916,1.726,917,4.882,918,1.726,919,1.726,920,1.726,921,1.726,922,1.726,923,1.726,924,1.726,925,1.726,926,1.726,927,1.726,928,1.726,929,1.726,930,1.726,931,1.726,932,1.726,933,1.726,934,1.726,935,1.726,936,1.726,937,1.726,938,1.726,939,1.726,940,1.726,941,2.028,942,2.028,943,4.487,944,1.726,945,1.726,946,1.726,947,3.196,948,2.028,949,2.028,950,2.028,951,2.028,952,1.726,953,2.028,954,2.028]],["title/dependencies.html",[955,2.95,956,3.19]],["body/dependencies.html",[32,0.023,61,1.969,135,0.016,136,0.019,137,0.016,146,4.136,190,3.302,213,3.302,219,3.302,257,3.659,258,3.659,331,4.79,332,4.136,956,3.659,957,4.862,958,4.862,959,4.862,960,4.862,961,4.136,962,4.862,963,4.862,964,4.862,965,4.862,966,4.862,967,4.862,968,4.862,969,4.862,970,4.862,971,4.862,972,4.862,973,4.862,974,4.862,975,4.862,976,4.862,977,4.862]],["title/miscellaneous/enumerations.html",[978,1.455,979,3.607]],["body/miscellaneous/enumerations.html",[7,0.219,32,0.022,39,2.693,57,4.043,118,4.188,135,0.016,136,0.019,137,0.016,337,3.343,346,2.937,351,3.054,352,2.814,359,3.694,360,3.403,361,3.403,362,3.403,617,3.054,660,4.516,720,4.48,737,5.065,978,2.428,979,4.188,980,4.923,981,4.188,982,4.923,983,4.923,984,4.923]],["title/miscellaneous/functions.html",[978,1.455,985,3.607]],["body/miscellaneous/functions.html",[7,0.217,31,1.398,32,0.022,33,1.398,35,1.237,43,1.084,45,0.841,135,0.016,136,0.019,137,0.016,156,3.137,162,2.105,163,2.105,193,4.455,418,3.67,913,3.67,914,4.455,915,5.037,940,4.149,944,4.149,945,5.037,946,5.423,978,2.406,985,4.149,986,4.877,987,4.877,988,4.149,989,4.877,990,4.877,991,4.877,992,5.92,993,5.92,994,4.877]],["title/index.html",[7,0.131,995,2.51,996,2.51]],["body/index.html",[1,3.067,4,0.377,32,0.02,135,0.012,136,0.016,137,0.012,190,2.498,297,3.13,307,3.13,309,2.769,324,0.593,331,4.491,424,2.769,426,2.619,784,2.769,956,3.72,997,5.969,998,5.583,999,4.943,1000,4.943,1001,3.679,1002,3.679,1003,3.679,1004,3.679,1005,3.679,1006,3.679,1007,3.679,1008,5.969,1009,3.679,1010,3.679,1011,3.13,1012,3.679,1013,3.679,1014,3.679,1015,3.679,1016,3.679,1017,3.679,1018,3.679,1019,3.13,1020,2.769,1021,3.679,1022,4.943,1023,3.679,1024,3.679,1025,3.679,1026,4.943,1027,3.679,1028,3.679,1029,3.679,1030,5.583,1031,3.679,1032,3.679,1033,3.679,1034,3.679,1035,3.679,1036,3.679,1037,3.679,1038,3.679,1039,3.679,1040,3.679,1041,3.679,1042,3.679,1043,3.679,1044,3.679,1045,3.679,1046,5.583,1047,3.679,1048,3.679,1049,3.679,1050,3.679,1051,5.583,1052,3.679,1053,3.679,1054,3.679,1055,3.13,1056,3.679,1057,3.679,1058,3.679,1059,5.583,1060,3.679,1061,3.679,1062,3.679,1063,3.679,1064,5.583,1065,4.943,1066,3.679,1067,3.679,1068,3.679,1069,3.679,1070,3.13,1071,3.679,1072,3.679,1073,3.679,1074,3.679,1075,3.679,1076,4.206,1077,3.679,1078,3.679,1079,4.943,1080,3.679,1081,4.943,1082,3.679,1083,4.943,1084,3.13,1085,3.13,1086,3.13,1087,3.679,1088,3.679,1089,3.679,1090,3.679,1091,3.679,1092,3.679,1093,3.679,1094,3.679,1095,3.679,1096,3.679]],["title/license.html",[995,2.51,996,2.51,1020,2.22]],["body/license.html",[32,0.017,135,0.014,136,0.017,137,0.014,600,4.093,652,3.621,660,2.891,818,2.641,890,3.621,1011,3.621,1019,3.621,1020,3.203,1070,3.621,1084,3.621,1085,3.621,1086,3.621,1097,5.994,1098,4.257,1099,4.257,1100,5.439,1101,4.257,1102,4.257,1103,4.257,1104,4.257,1105,4.257,1106,4.257,1107,5.439,1108,6.938,1109,4.257,1110,4.257,1111,5.994,1112,4.257,1113,5.439,1114,4.257,1115,4.257,1116,4.257,1117,4.257,1118,4.257,1119,4.257,1120,5.439,1121,4.257,1122,4.257,1123,4.257,1124,4.257,1125,4.257,1126,4.257,1127,4.257,1128,5.439,1129,5.439,1130,4.257,1131,4.257,1132,4.257,1133,4.257,1134,4.257,1135,4.257,1136,4.257,1137,4.257,1138,4.257,1139,4.257,1140,4.257,1141,4.257,1142,4.257,1143,4.257,1144,4.257,1145,4.257,1146,4.257,1147,4.257,1148,4.257,1149,4.257,1150,4.257,1151,4.257,1152,4.257,1153,4.257,1154,4.257,1155,4.257,1156,4.257,1157,4.257]],["title/modules.html",[426,2.546]],["body/modules.html",[32,0.021,135,0.018,136,0.021,137,0.018,426,2.992]],["title/overview.html",[1158,4.087]],["body/overview.html",[2,0.723,32,0.02,135,0.018,136,0.02,137,0.018,326,2.255,1158,4.737,1159,5.568,1160,5.568]],["title/interfaces/stateConfig.html",[324,0.568,797,2.016]],["body/interfaces/stateConfig.html",[0,0.272,2,0.79,3,0.293,4,0.261,5,0.261,7,0.228,8,0.519,9,1.123,32,0.023,34,0.433,35,1.068,38,0.759,45,0.881,87,0.293,99,1.443,135,0.012,136,0.016,137,0.012,142,1.207,247,1.935,289,2.33,324,0.922,326,1.567,403,3.124,489,1.909,491,2.05,641,2.05,791,3.227,792,2.212,793,2.212,796,3.481,797,3.792,798,4.136,799,2.922,800,2.401,801,2.401,802,2.401,803,2.401,804,2.401,805,2.401,806,2.401,807,2.401,808,2.401,809,2.212,810,2.627,811,2.627,812,2.627,813,3.471,814,2.627,815,2.627,816,2.627,817,2.627,818,2.401,819,2.627,820,2.627,821,2.627,822,2.627]],["title/miscellaneous/typealiases.html",[978,1.455,1161,4.24]],["body/miscellaneous/typealiases.html",[7,0.239,32,0.022,34,0.407,135,0.017,136,0.02,137,0.017,528,4.261,635,3.651,779,4.046,784,4.046,785,4.575,786,4.575,978,2.652,1162,5.377,1163,5.377]],["title/miscellaneous/variables.html",[978,1.455,1164,3.607]],["body/miscellaneous/variables.html",[1,2.123,7,0.099,32,0.023,34,0.317,38,1.371,39,2.824,40,1.113,99,1.181,122,1.092,135,0.007,136,0.011,137,0.007,247,0.703,289,1.225,327,1.666,328,1.883,330,1.883,333,2.575,334,1.883,335,3.147,361,1.266,374,1.666,375,1.666,489,1.092,491,1.173,599,2.324,600,1.666,617,1.374,641,1.173,791,1.173,792,1.266,793,1.956,799,1.956,800,1.374,801,1.374,802,1.374,803,1.374,804,1.374,805,1.374,806,1.374,807,1.374,808,1.374,893,1.883,895,2.911,897,4.77,898,4.003,899,3.558,900,1.883,901,2.911,908,2.911,910,2.911,913,1.666,914,5.109,916,2.911,918,2.911,919,2.911,920,2.911,921,2.911,922,2.911,923,2.911,924,2.911,925,2.911,926,2.911,927,2.911,928,2.911,929,2.911,930,2.911,931,2.911,932,2.911,933,2.911,934,2.911,935,2.911,936,2.911,937,2.911,938,1.883,939,2.911,952,1.883,961,1.883,978,1.092,981,1.883,988,5.75,1055,1.883,1076,1.883,1164,1.883,1165,2.214,1166,4.706,1167,2.214,1168,3.422,1169,2.214,1170,2.214,1171,2.214,1172,2.214,1173,3.422,1174,2.214,1175,2.214,1176,3.422,1177,2.214,1178,3.422,1179,3.422,1180,2.214,1181,2.214,1182,2.214,1183,2.214,1184,2.214,1185,3.422,1186,4.706,1187,2.214,1188,3.422,1189,2.214,1190,2.214,1191,3.422,1192,2.214,1193,3.422,1194,2.214,1195,3.422,1196,3.422,1197,2.214,1198,2.214,1199,2.214,1200,2.214,1201,2.214,1202,3.422,1203,2.214,1204,3.422,1205,3.422,1206,4.706,1207,2.214,1208,3.422,1209,2.214,1210,2.214,1211,2.214,1212,2.214,1213,3.422,1214,3.422,1215,2.214,1216,2.214,1217,2.214,1218,2.214,1219,2.214,1220,2.214,1221,2.214,1222,2.214,1223,2.214,1224,2.214,1225,4.182,1226,4.706,1227,2.214,1228,2.214,1229,2.214,1230,2.214,1231,2.214,1232,2.214,1233,2.214,1234,2.214,1235,2.214,1236,2.214,1237,2.214,1238,2.214,1239,2.214,1240,2.214,1241,2.214,1242,2.214,1243,2.214,1244,2.214,1245,4.182,1246,3.422,1247,2.214,1248,2.214,1249,2.214]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":641,"title":{},"body":{"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["0.28.1",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":896,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0123456789abcdef",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":635,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["1.1.5",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["1.6.4",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["1/21",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["1/24",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["1/28",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1160,"title":{},"body":{"overview.html":{}}}],["100",{"_index":489,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["1f1f1f",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":657,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["2.2.0",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":801,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["2020",{"_index":1098,"title":{},"body":{"license.html":{}}}],["26",{"_index":1159,"title":{},"body":{"overview.html":{}}}],["272728",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e2f30",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":659,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["3.0.1",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["3.1.3",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":717,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["300",{"_index":803,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["393939",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3f3f3f",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":661,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["4.3.1",{"_index":962,"title":{},"body":{"dependencies.html":{}}}],["4.3.5",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":805,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["454545",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["464749",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":711,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["5.1.1",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["5580c0",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5d5f61",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["6.4.4",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":807,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["680",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.2",{"_index":963,"title":{},"body":{"dependencies.html":{}}}],["729cd4",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["800",{"_index":491,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["808080",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["900",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_bgcolorclassname",{"_index":465,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["_growclassname",{"_index":466,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["_height",{"_index":553,"title":{},"body":{"classes/Rectangle.html":{}}}],["_shrinkclassname",{"_index":467,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["_type",{"_index":140,"title":{},"body":{"classes/AppearanceService.html":{}}}],["_view",{"_index":380,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["_width",{"_index":554,"title":{},"body":{"classes/Rectangle.html":{}}}],["ability",{"_index":422,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["above",{"_index":1127,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":167,"title":{},"body":{"classes/Base.html":{},"classes/Controller.html":{},"classes/SvelteModule.html":{}}}],["accessors",{"_index":272,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{}}}],["action",{"_index":1084,"title":{},"body":{"index.html":{},"license.html":{}}}],["active",{"_index":806,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["activeexpand",{"_index":627,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["activeid",{"_index":619,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["add",{"_index":450,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["add(moduleid",{"_index":427,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["addconfig",{"_index":879,"title":{},"body":{"classes/classBuilder.html":{}}}],["addconfig(config",{"_index":816,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["added",{"_index":1088,"title":{},"body":{"index.html":{}}}],["addexpandbutton",{"_index":471,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["aliases",{"_index":1162,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":1118,"title":{},"body":{"license.html":{}}}],["anycolor",{"_index":187,"title":{},"body":{"classes/ColorRef.html":{}}}],["anycolorhex",{"_index":994,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":1,"title":{"classes/App.html":{}},"body":{"classes/App.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app(document.body",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.quit",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appearance",{"_index":198,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearanceservice",{"_index":67,"title":{"classes/AppearanceService.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"coverage.html":{}}}],["appearancetype",{"_index":57,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"miscellaneous/enumerations.html":{}}}],["appearancetype.any",{"_index":204,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearancetype.dark",{"_index":116,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{}}}],["appearancetype.light",{"_index":205,"title":{},"body":{"classes/ColorRef.html":{}}}],["appeared",{"_index":242,"title":{},"body":{"classes/Controller.html":{}}}],["append",{"_index":481,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["append(child",{"_index":521,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["appending",{"_index":238,"title":{},"body":{"classes/Controller.html":{}}}],["application",{"_index":1076,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["applicationmenus",{"_index":73,"title":{},"body":{"classes/App.html":{}}}],["aps",{"_index":111,"title":{},"body":{"classes/App.html":{}}}],["aps.onmodechanged((type",{"_index":113,"title":{},"body":{"classes/App.html":{}}}],["arising",{"_index":1155,"title":{},"body":{"license.html":{}}}],["array",{"_index":298,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["associated",{"_index":1109,"title":{},"body":{"license.html":{}}}],["async",{"_index":13,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["authors",{"_index":1145,"title":{},"body":{"license.html":{}}}],["auto",{"_index":784,"title":{},"body":{"classes/View.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["automatically",{"_index":1087,"title":{},"body":{"index.html":{}}}],["available",{"_index":1015,"title":{},"body":{"index.html":{}}}],["await",{"_index":97,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["bababa",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["background",{"_index":273,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["background(background",{"_index":310,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["bar.svelte",{"_index":78,"title":{},"body":{"classes/App.html":{}}}],["base",{"_index":74,"title":{"classes/Base.html":{}},"body":{"classes/App.html":{},"classes/Base.html":{},"classes/GeometryMixin.html":{},"coverage.html":{}}}],["base:4",{"_index":285,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["basemenu",{"_index":168,"title":{"classes/BaseMenu.html":{}},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["bg",{"_index":487,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["bgcolor",{"_index":916,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["board.controller.ts",{"_index":618,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["board.controller.ts:10",{"_index":643,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:11",{"_index":636,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:13",{"_index":637,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:14",{"_index":634,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:31",{"_index":651,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:46",{"_index":654,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:5",{"_index":640,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:53",{"_index":644,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:6",{"_index":638,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:61",{"_index":655,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:7",{"_index":639,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:72",{"_index":648,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:82",{"_index":646,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:9",{"_index":642,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.view.ts",{"_index":908,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":329,"title":{},"body":{"interfaces/ISettings.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["bootstrap",{"_index":14,"title":{},"body":{"classes/App.html":{}}}],["border",{"_index":274,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["border(border",{"_index":318,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["bordercolor",{"_index":918,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["borderraidus",{"_index":557,"title":{},"body":{"classes/Rectangle.html":{}}}],["borderraidus(borderraidus",{"_index":588,"title":{},"body":{"classes/Rectangle.html":{}}}],["bottom",{"_index":594,"title":{},"body":{"classes/Rectangle.html":{}}}],["bottomleftradius",{"_index":252,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["bottomrightradius",{"_index":253,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["box",{"_index":1071,"title":{},"body":{"index.html":{}}}],["break",{"_index":436,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["browserwindow",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder",{"_index":1073,"title":{},"body":{"index.html":{}}}],["builder.ts",{"_index":793,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["builder.ts:11",{"_index":795,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["builder.ts:24",{"_index":882,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:30",{"_index":885,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:33",{"_index":884,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:36",{"_index":886,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:44",{"_index":888,"title":{},"body":{"classes/classBuilder.html":{}}}],["building",{"_index":1027,"title":{},"body":{"index.html":{}}}],["bundled",{"_index":1039,"title":{},"body":{"index.html":{}}}],["button",{"_index":504,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["c",{"_index":818,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"license.html":{},"interfaces/stateConfig.html":{}}}],["c0c0c1",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c4666f",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c6c6c6",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":423,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["cancelformerge",{"_index":338,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["cancelwaitformerge",{"_index":472,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["canvas",{"_index":207,"title":{},"body":{"classes/Context.html":{}}}],["canvas/index.ts",{"_index":615,"title":{},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["canvas/skia",{"_index":163,"title":{},"body":{"classes/Base.html":{},"classes/Context.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["canvaskit",{"_index":213,"title":{},"body":{"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/Rectangle.html":{},"dependencies.html":{}}}],["case",{"_index":203,"title":{},"body":{"classes/ColorRef.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["center",{"_index":277,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["cgray",{"_index":488,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["charge",{"_index":1104,"title":{},"body":{"license.html":{}}}],["check",{"_index":328,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["checkexpandstate",{"_index":628,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["checkexpandstate(clientx",{"_index":645,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["child",{"_index":523,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["childs",{"_index":526,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["ck",{"_index":208,"title":{},"body":{"classes/Context.html":{},"classes/GeometryMixin.html":{}}}],["ck.paint",{"_index":319,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["claim",{"_index":1148,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classbuilder",{"_index":809,"title":{"classes/classBuilder.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classconfig",{"_index":796,"title":{"interfaces/classConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["classname",{"_index":513,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["clear",{"_index":814,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["clientx",{"_index":366,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{}}}],["clienty",{"_index":367,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{}}}],["clone",{"_index":470,"title":{},"body":{"classes/ModuleItem.html":{}}}],["code",{"_index":1008,"title":{},"body":{"index.html":{}}}],["col",{"_index":351,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":190,"title":{},"body":{"classes/ColorRef.html":{},"classes/GeometryMixin.html":{},"dependencies.html":{},"index.html":{}}}],["color(appearancetype",{"_index":196,"title":{},"body":{"classes/ColorRef.html":{}}}],["color.ts",{"_index":914,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["colorref",{"_index":184,"title":{"classes/ColorRef.html":{}},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["column",{"_index":700,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["common",{"_index":1044,"title":{},"body":{"index.html":{}}}],["community",{"_index":1006,"title":{},"body":{"index.html":{}}}],["comp",{"_index":536,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["compilation",{"_index":1063,"title":{},"body":{"index.html":{}}}],["compile",{"_index":1059,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":1079,"title":{},"body":{"index.html":{}}}],["completed",{"_index":865,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["component",{"_index":548,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["components",{"_index":1046,"title":{},"body":{"index.html":{}}}],["concrete",{"_index":1001,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1126,"title":{},"body":{"license.html":{}}}],["config",{"_index":85,"title":{},"body":{"classes/App.html":{},"classes/classBuilder.html":{}}}],["config.workbench",{"_index":104,"title":{},"body":{"classes/App.html":{}}}],["configs",{"_index":883,"title":{},"body":{"classes/classBuilder.html":{}}}],["configs.foreach((config",{"_index":812,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["configured",{"_index":1075,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1156,"title":{},"body":{"license.html":{}}}],["const",{"_index":99,"title":{},"body":{"classes/App.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/Rectangle.html":{},"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/ModuleFactory.html":{},"classes/Rectangle.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["constructor(@inject('modulefactory",{"_index":842,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["constructor(anycolor",{"_index":191,"title":{},"body":{"classes/ColorRef.html":{}}}],["constructor(ck",{"_index":212,"title":{},"body":{"classes/Context.html":{}}}],["constructor(configs",{"_index":811,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["constructor(container",{"_index":453,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["constructor(context",{"_index":558,"title":{},"body":{"classes/Rectangle.html":{}}}],["constructor(groupmenuservice",{"_index":174,"title":{},"body":{"classes/BaseMenu.html":{}}}],["constructor(modulefactory",{"_index":825,"title":{},"body":{"classes/Workbench.html":{}}}],["constructor(private",{"_index":88,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SplitBoardController.html":{}}}],["constructor(root",{"_index":27,"title":{},"body":{"classes/App.html":{},"classes/View.html":{}}}],["constructor(view",{"_index":633,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["container",{"_index":10,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["containermodule",{"_index":157,"title":{},"body":{"classes/AppearanceService.html":{}}}],["contentview",{"_index":468,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["contentview.classlist.add('flex",{"_index":742,"title":{},"body":{"classes/SplitItemView.html":{}}}],["context",{"_index":11,"title":{"classes/Context.html":{}},"body":{"classes/App.html":{},"classes/Base.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/Rectangle.html":{},"coverage.html":{}}}],["contextisolation",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":1152,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1094,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":1091,"title":{},"body":{"index.html":{}}}],["controlaccentcolor",{"_index":919,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlbackgroundcolor",{"_index":920,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controldisabledcolor",{"_index":921,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlforbiddencolor",{"_index":922,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlhighlightcolor",{"_index":923,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":65,"title":{"classes/Controller.html":{}},"body":{"classes/App.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["controller:10",{"_index":395,"title":{},"body":{"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:12",{"_index":546,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:14",{"_index":397,"title":{},"body":{"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:16",{"_index":393,"title":{},"body":{"classes/MenuBar.html":{}}}],["controller:17",{"_index":396,"title":{},"body":{"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:23",{"_index":394,"title":{},"body":{"classes/MenuBar.html":{}}}],["controller:24",{"_index":547,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:28",{"_index":837,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:47",{"_index":840,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:61",{"_index":838,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:65",{"_index":841,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:68",{"_index":839,"title":{},"body":{"classes/Workbench.html":{}}}],["copies",{"_index":1120,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1107,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1097,"title":{},"body":{"license.html":{}}}],["corner",{"_index":259,"title":{},"body":{"classes/DefaultShapeMixin.html":{}}}],["cornermixin",{"_index":244,"title":{"classes/CornerMixin.html":{}},"body":{"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{}}}],["cornerradius",{"_index":246,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["cosmic",{"_index":997,"title":{},"body":{"index.html":{}}}],["cosmic/core/browser",{"_index":66,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["cosmic/core/common",{"_index":62,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{}}}],["cosmic/core/parts",{"_index":64,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["cosmic/workbench/services/appearance",{"_index":68,"title":{},"body":{"classes/App.html":{}}}],["cosmic/workbench/services/menu",{"_index":71,"title":{},"body":{"classes/App.html":{}}}],["coverage",{"_index":889,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createwindow",{"_index":895,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["crosshair",{"_index":358,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["current",{"_index":1080,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":820,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["d00000",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d1905d",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d2r",{"_index":1003,"title":{},"body":{"index.html":{}}}],["d7d7d7",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d9d9d9",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":1149,"title":{},"body":{"license.html":{}}}],["dark",{"_index":118,"title":{},"body":{"classes/App.html":{},"miscellaneous/enumerations.html":{}}}],["dark:bg",{"_index":490,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["darkcolor",{"_index":188,"title":{},"body":{"classes/ColorRef.html":{}}}],["darkcolorhex",{"_index":993,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dashpattern",{"_index":302,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["date.now",{"_index":404,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["deal",{"_index":1110,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1157,"title":{},"body":{"license.html":{}}}],["debugging",{"_index":1082,"title":{},"body":{"index.html":{}}}],["default",{"_index":38,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":334,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["defaultscope",{"_index":90,"title":{},"body":{"classes/App.html":{}}}],["defaultshapemixin",{"_index":254,"title":{"classes/DefaultShapeMixin.html":{}},"body":{"classes/DefaultShapeMixin.html":{},"classes/Rectangle.html":{},"coverage.html":{}}}],["defaultweightmap",{"_index":799,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["dependencies",{"_index":956,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["design",{"_index":998,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":381,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["dev",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["develop",{"_index":1004,"title":{},"body":{"index.html":{}}}],["development",{"_index":1013,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":339,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["directionstyles",{"_index":737,"title":{},"body":{"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["directionstyles[direction",{"_index":761,"title":{},"body":{"classes/SplitItemView.html":{}}}],["directiontype",{"_index":346,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["directiontype.col",{"_index":698,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["directiontype.row",{"_index":704,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["directiontype[props.type",{"_index":849,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["disabled",{"_index":808,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["disappear",{"_index":243,"title":{},"body":{"classes/Controller.html":{}}}],["dist/workbench/desktop",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":1085,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribution",{"_index":1065,"title":{},"body":{"index.html":{}}}],["divided",{"_index":1036,"title":{},"body":{"index.html":{}}}],["document.body.classlist.add('mode",{"_index":117,"title":{},"body":{"classes/App.html":{}}}],["document.body.classlist.remove('mode",{"_index":119,"title":{},"body":{"classes/App.html":{}}}],["document.createelement('div",{"_index":402,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/SvelteModule.html":{},"classes/View.html":{}}}],["document.queryselector('#main",{"_index":128,"title":{},"body":{"classes/App.html":{}}}],["documentation",{"_index":890,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":240,"title":{},"body":{"classes/Controller.html":{}}}],["draft",{"_index":1089,"title":{},"body":{"index.html":{}}}],["draw",{"_index":210,"title":{},"body":{"classes/Context.html":{},"classes/Rectangle.html":{}}}],["e",{"_index":359,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["e0e0e0",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":1040,"title":{},"body":{"index.html":{}}}],["electron",{"_index":331,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{},"index.html":{}}}],["electron/.exec(process.execpath",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["electronstore",{"_index":330,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":239,"title":{},"body":{"classes/Controller.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["enableremotemodule",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entire",{"_index":1034,"title":{},"body":{"index.html":{}}}],["enum",{"_index":350,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitItemView.html":{}}}],["enumerations",{"_index":979,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["es",{"_index":425,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["event",{"_index":652,"title":{},"body":{"classes/SplitBoardController.html":{},"license.html":{}}}],["event.clientx",{"_index":677,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.clienty",{"_index":664,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.preventdefault",{"_index":678,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.stoppropagation",{"_index":679,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.target",{"_index":671,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["eventemitter2",{"_index":146,"title":{},"body":{"classes/AppearanceService.html":{},"dependencies.html":{}}}],["everyone",{"_index":1016,"title":{},"body":{"index.html":{}}}],["evt",{"_index":141,"title":{},"body":{"classes/AppearanceService.html":{}}}],["exist",{"_index":451,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["exist(moduleid",{"_index":441,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["expand",{"_index":469,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{}}}],["expand.svelte",{"_index":736,"title":{},"body":{"classes/SplitItemView.html":{}}}],["expandactive",{"_index":620,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandleavehandler",{"_index":621,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmouseuphandler",{"_index":622,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmovehandler",{"_index":623,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandnewitem",{"_index":354,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Workbench.html":{}}}],["expandnewitem(view",{"_index":831,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["expandtype",{"_index":624,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["explorer/index.ts",{"_index":612,"title":{},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["export",{"_index":87,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["express",{"_index":1136,"title":{},"body":{"license.html":{}}}],["extends",{"_index":264,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["f2f2f2",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f9f9f9",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factory.ts",{"_index":420,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"coverage.html":{}}}],["factory.ts:11",{"_index":454,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:13",{"_index":455,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:14",{"_index":456,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:30",{"_index":459,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:33",{"_index":458,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:36",{"_index":460,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["false",{"_index":335,"title":{},"body":{"interfaces/ISettings.html":{},"classes/SplitBoardController.html":{},"miscellaneous/variables.html":{}}}],["ffae2b",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["file://${join(__dirname",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":1086,"title":{},"body":{"index.html":{},"license.html":{}}}],["fills",{"_index":267,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{}}}],["fillstyleid",{"_index":304,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["fitness",{"_index":1141,"title":{},"body":{"license.html":{}}}],["flex",{"_index":514,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["flowvalue",{"_index":528,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["fn",{"_index":150,"title":{},"body":{"classes/AppearanceService.html":{}}}],["focus",{"_index":802,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":1125,"title":{},"body":{"license.html":{}}}],["fourthbgcolor",{"_index":924,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":1103,"title":{},"body":{"license.html":{}}}],["function",{"_index":151,"title":{},"body":{"classes/AppearanceService.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/Module.html":{},"classes/SplitBoardController.html":{},"coverage.html":{}}}],["functions",{"_index":985,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1123,"title":{},"body":{"license.html":{}}}],["geometry",{"_index":263,"title":{},"body":{"classes/DefaultShapeMixin.html":{}}}],["geometrymixin",{"_index":262,"title":{"classes/GeometryMixin.html":{}},"body":{"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"coverage.html":{}}}],["get(moduleid",{"_index":439,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["getbackground",{"_index":286,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["getborder",{"_index":291,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["getborderraidus",{"_index":574,"title":{},"body":{"classes/Rectangle.html":{}}}],["getcanvas",{"_index":211,"title":{},"body":{"classes/Context.html":{}}}],["getcanvaskit",{"_index":946,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getheight",{"_index":570,"title":{},"body":{"classes/Rectangle.html":{}}}],["getting",{"_index":995,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwidth",{"_index":566,"title":{},"body":{"classes/Rectangle.html":{}}}],["github",{"_index":1083,"title":{},"body":{"index.html":{}}}],["going",{"_index":236,"title":{},"body":{"classes/Controller.html":{}}}],["granted",{"_index":1102,"title":{},"body":{"license.html":{}}}],["gridbackgroundcolor",{"_index":925,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":72,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["group/base",{"_index":170,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["group/index.ts",{"_index":377,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["group/index.ts:13",{"_index":386,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:15",{"_index":384,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:19",{"_index":390,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:28",{"_index":391,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:31",{"_index":387,"title":{},"body":{"classes/MenuBar.html":{}}}],["groupmenu",{"_index":129,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.getmenuinsatance().init(menu.title",{"_index":133,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.initcontainer(header",{"_index":131,"title":{},"body":{"classes/App.html":{}}}],["groupmenuservice",{"_index":176,"title":{},"body":{"classes/BaseMenu.html":{}}}],["grow",{"_index":515,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["guide",{"_index":1014,"title":{},"body":{"index.html":{}}}],["handle",{"_index":601,"title":{},"body":{"classes/Rectangle.html":{}}}],["header",{"_index":127,"title":{},"body":{"classes/App.html":{}}}],["height",{"_index":375,"title":{},"body":{"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"miscellaneous/variables.html":{}}}],["height(height",{"_index":586,"title":{},"body":{"classes/Rectangle.html":{}}}],["here",{"_index":1010,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1101,"title":{},"body":{"license.html":{}}}],["hexdigits",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hide",{"_index":503,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["hideexpandbutton",{"_index":473,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["holders",{"_index":1146,"title":{},"body":{"license.html":{}}}],["hor",{"_index":656,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["horizontal",{"_index":699,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["host",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hover",{"_index":804,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["htmlelement",{"_index":28,"title":{},"body":{"classes/App.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{}}}],["http://localhost:5000/workbench/desktop",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":403,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["identifier",{"_index":891,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":378,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Rectangle.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["implied",{"_index":1137,"title":{},"body":{"license.html":{}}}],["import",{"_index":60,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["import(moduleid).then((modulesource",{"_index":444,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["include",{"_index":1043,"title":{},"body":{"index.html":{}}}],["included",{"_index":1130,"title":{},"body":{"license.html":{}}}],["including",{"_index":1113,"title":{},"body":{"license.html":{}}}],["independently",{"_index":1041,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index.svelte",{"_index":549,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["indexable",{"_index":794,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["ing",{"_index":999,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":284,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{}}}],["init",{"_index":382,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{}}}],["init(props",{"_index":389,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["initframe",{"_index":15,"title":{},"body":{"classes/App.html":{}}}],["initial",{"_index":785,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["initmenu",{"_index":173,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenu(menuitems",{"_index":177,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenus",{"_index":16,"title":{},"body":{"classes/App.html":{}}}],["initmodules",{"_index":17,"title":{},"body":{"classes/App.html":{}}}],["initnavigationbar",{"_index":18,"title":{},"body":{"classes/App.html":{}}}],["initpreferences",{"_index":19,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel",{"_index":20,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel(container",{"_index":50,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel",{"_index":21,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel(container",{"_index":52,"title":{},"body":{"classes/App.html":{}}}],["initstatusbar",{"_index":22,"title":{},"body":{"classes/App.html":{}}}],["initstyle",{"_index":23,"title":{},"body":{"classes/App.html":{}}}],["initstylemode",{"_index":24,"title":{},"body":{"classes/App.html":{}}}],["initstylemode(type",{"_index":56,"title":{},"body":{"classes/App.html":{}}}],["initwithcomponent",{"_index":537,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["initwithcomponent(target",{"_index":542,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["initworkarea",{"_index":25,"title":{},"body":{"classes/App.html":{}}}],["inject",{"_index":156,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject(token",{"_index":989,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":155,"title":{},"body":{"classes/AppearanceService.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["insertconfig",{"_index":880,"title":{},"body":{"classes/classBuilder.html":{}}}],["insertconfig(config",{"_index":817,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["inside",{"_index":278,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["instanceof",{"_index":105,"title":{},"body":{"classes/App.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["interface",{"_index":324,"title":{"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/WorkbenchProps.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}},"body":{"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["interfaces",{"_index":326,"title":{},"body":{"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/WorkbenchProps.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["inversify",{"_index":61,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"dependencies.html":{}}}],["ipc",{"_index":1048,"title":{},"body":{"index.html":{}}}],["isettings",{"_index":325,"title":{"interfaces/ISettings.html":{}},"body":{"interfaces/ISettings.html":{},"coverage.html":{}}}],["isplitboardview",{"_index":336,"title":{"interfaces/ISplitBoardView.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{},"coverage.html":{}}}],["isprod",{"_index":897,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isshrink",{"_index":474,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["issues",{"_index":1009,"title":{},"body":{"index.html":{}}}],["item",{"_index":530,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.id",{"_index":412,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["item.loader",{"_index":852,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.loader.then((module",{"_index":860,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.module",{"_index":874,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.moduleid",{"_index":531,"title":{},"body":{"classes/ModuleItem.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.root",{"_index":673,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientheight",{"_index":707,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientwidth",{"_index":703,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.getboundingclientrect().left",{"_index":702,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.getboundingclientrect().top",{"_index":706,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.setcontent(module.view",{"_index":875,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.ts",{"_index":463,"title":{},"body":{"classes/ModuleItem.html":{},"coverage.html":{}}}],["item.ts:5",{"_index":484,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.ts:6",{"_index":486,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.ts:7",{"_index":485,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.ts:8",{"_index":499,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.view",{"_index":349,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["item.view.ts",{"_index":720,"title":{},"body":{"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["item.view.ts:12",{"_index":723,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:13",{"_index":724,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:14",{"_index":722,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:16",{"_index":725,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:17",{"_index":721,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:25",{"_index":731,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:32",{"_index":730,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:39",{"_index":733,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:46",{"_index":734,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:53",{"_index":729,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:57",{"_index":732,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:63",{"_index":726,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:67",{"_index":728,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:71",{"_index":735,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:77",{"_index":727,"title":{},"body":{"classes/SplitItemView.html":{}}}],["itemgeneratedelegate",{"_index":353,"title":{"interfaces/ItemGenerateDelegate.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["items",{"_index":340,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["join(__dirname",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keycode",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["kind",{"_index":1135,"title":{},"body":{"license.html":{}}}],["kit.ts",{"_index":945,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["labelcolor",{"_index":926,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["layout",{"_index":261,"title":{},"body":{"classes/DefaultShapeMixin.html":{}}}],["layoutmixin",{"_index":260,"title":{"classes/LayoutMixin.html":{}},"body":{"classes/DefaultShapeMixin.html":{},"classes/LayoutMixin.html":{},"coverage.html":{}}}],["left",{"_index":589,"title":{},"body":{"classes/Rectangle.html":{}}}],["length",{"_index":364,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["liability",{"_index":1150,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1147,"title":{},"body":{"license.html":{}}}],["license",{"_index":1020,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["light",{"_index":984,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lightcolor",{"_index":189,"title":{},"body":{"classes/ColorRef.html":{}}}],["lightcolorhex",{"_index":992,"title":{},"body":{"miscellaneous/functions.html":{}}}],["limitation",{"_index":1114,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1138,"title":{},"body":{"license.html":{}}}],["linux",{"_index":1068,"title":{},"body":{"index.html":{}}}],["liveresize",{"_index":629,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["liveresize(clientx",{"_index":647,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["load",{"_index":452,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["load(moduleid",{"_index":443,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["loader",{"_index":464,"title":{},"body":{"classes/ModuleItem.html":{}}}],["loading",{"_index":415,"title":{},"body":{"interfaces/Module.html":{}}}],["local",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":961,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":901,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error(json.stringify(err",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lowboardroot",{"_index":910,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":433,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.inrequestscope",{"_index":438,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.insingletonscope",{"_index":435,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.intransientscope",{"_index":437,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["macos",{"_index":1066,"title":{},"body":{"index.html":{}}}],["main",{"_index":1050,"title":{},"body":{"index.html":{}}}],["mainwindow",{"_index":898,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mainwindow.loadurl(url).catch((err",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.on('closed",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.webcontents.opendevtools",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor",{"_index":915,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makecolor('#000000",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#3f3f3f",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#5580c0",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#729cd4",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#bababa",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c0c0c1",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c4666f",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c6c6c6",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d00000",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d1905d",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d7d7d7",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d9d9d9",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#e0e0e0",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f2f2f2",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f9f9f9",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffae2b",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffffff",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor(anycolorhex",{"_index":991,"title":{},"body":{"miscellaneous/functions.html":{}}}],["map",{"_index":41,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["matching",{"_index":136,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":132,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["menu(this._view",{"_index":406,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["menu.id",{"_index":413,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["menu.items",{"_index":134,"title":{},"body":{"classes/App.html":{}}}],["menu.ts",{"_index":171,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["menu.ts:5",{"_index":175,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu.ts:8",{"_index":179,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu/config",{"_index":75,"title":{},"body":{"classes/App.html":{}}}],["menubar",{"_index":376,"title":{"classes/MenuBar.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["menugroupservice",{"_index":70,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["menuinstance",{"_index":172,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuitemconfig",{"_index":178,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuitems",{"_index":180,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuprops",{"_index":385,"title":{"interfaces/MenuProps.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["merchantability",{"_index":1140,"title":{},"body":{"license.html":{}}}],["merge",{"_index":660,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["metadata",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":12,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["meuns",{"_index":400,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["minimum",{"_index":1024,"title":{},"body":{"index.html":{}}}],["minwidth",{"_index":835,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["miscellaneous",{"_index":978,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1019,"title":{},"body":{"index.html":{},"license.html":{}}}],["mixer",{"_index":258,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"classes/Rectangle.html":{},"dependencies.html":{}}}],["mixin",{"_index":256,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"classes/Rectangle.html":{}}}],["mixin(cornermixin",{"_index":265,"title":{},"body":{"classes/DefaultShapeMixin.html":{}}}],["mixin(defaultshapemixin",{"_index":580,"title":{},"body":{"classes/Rectangle.html":{}}}],["mixin/shape",{"_index":579,"title":{},"body":{"classes/Rectangle.html":{}}}],["mode",{"_index":710,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["modify",{"_index":1116,"title":{},"body":{"license.html":{}}}],["module",{"_index":379,"title":{"interfaces/Module.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["module.init(props",{"_index":449,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["module.ts",{"_index":764,"title":{},"body":{"classes/SvelteModule.html":{},"coverage.html":{}}}],["module.ts:10",{"_index":767,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:16",{"_index":769,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:22",{"_index":770,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:28",{"_index":768,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:36",{"_index":771,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:8",{"_index":766,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:9",{"_index":765,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.viewdiddisappear",{"_index":864,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["module.viewwillappear",{"_index":863,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["moduleconfig",{"_index":398,"title":{"interfaces/ModuleConfig.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modulefactory",{"_index":63,"title":{"classes/ModuleFactory.html":{}},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modulefactory(this.container",{"_index":100,"title":{},"body":{"classes/App.html":{}}}],["modulefactory.load(config.workbench.id",{"_index":103,"title":{},"body":{"classes/App.html":{}}}],["moduleid",{"_index":457,"title":{},"body":{"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{}}}],["moduleitem",{"_index":461,"title":{"classes/ModuleItem.html":{}},"body":{"classes/ModuleItem.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modules",{"_index":426,"title":{"modules.html":{}},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"index.html":{},"modules.html":{}}}],["modulesource.default",{"_index":446,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["monorepo",{"_index":1033,"title":{},"body":{"index.html":{}}}],["more",{"_index":307,"title":{},"body":{"classes/GeometryMixin.html":{},"index.html":{}}}],["mousedown",{"_index":680,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["mouseevent",{"_index":650,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["n",{"_index":362,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":33,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["navigation",{"_index":76,"title":{},"body":{"classes/App.html":{}}}],["navigationbar",{"_index":121,"title":{},"body":{"classes/App.html":{}}}],["new",{"_index":40,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1060,"title":{},"body":{"index.html":{}}}],["none",{"_index":786,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["noninfringement",{"_index":1144,"title":{},"body":{"license.html":{}}}],["normalizeweight",{"_index":881,"title":{},"body":{"classes/classBuilder.html":{}}}],["normalizeweight(config",{"_index":887,"title":{},"body":{"classes/classBuilder.html":{}}}],["nothing",{"_index":1028,"title":{},"body":{"index.html":{}}}],["notice",{"_index":1128,"title":{},"body":{"license.html":{}}}],["notification",{"_index":899,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":1074,"title":{},"body":{"index.html":{}}}],["null",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":247,"title":{},"body":{"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":1106,"title":{},"body":{"license.html":{}}}],["offsetx",{"_index":708,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["offsety",{"_index":709,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["olditem",{"_index":355,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["onmodechanged",{"_index":143,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmodechanged(fn",{"_index":148,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmousedown",{"_index":630,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["onmousedown(event",{"_index":649,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["optional",{"_index":35,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{}}}],["options",{"_index":417,"title":{},"body":{"interfaces/Module.html":{}}}],["orderedconfigs",{"_index":810,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["organization",{"_index":1095,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1154,"title":{},"body":{"license.html":{}}}],["out",{"_index":1070,"title":{},"body":{"index.html":{},"license.html":{}}}],["outside",{"_index":279,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["overview",{"_index":1158,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":850,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["p.id",{"_index":854,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["package",{"_index":955,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":1038,"title":{},"body":{"index.html":{}}}],["packaging",{"_index":1062,"title":{},"body":{"index.html":{}}}],["page",{"_index":1056,"title":{},"body":{"index.html":{}}}],["paint",{"_index":275,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{}}}],["paint.setantialias(true",{"_index":315,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["paint.setcolor(ck.parsecolorstring('#ee0033",{"_index":322,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["paint.setcolor(color",{"_index":313,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["paint.setstrokewidth(20",{"_index":321,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["paint.setstyle(ck.paintstyle.stroke",{"_index":320,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["paint.setstyle(this.context.ck.paintstyle.fill",{"_index":314,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["panel/index.ts",{"_index":534,"title":{},"body":{"classes/PropertyPanel.html":{},"coverage.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":1142,"title":{},"body":{"license.html":{}}}],["path",{"_index":561,"title":{},"body":{"classes/Rectangle.html":{}}}],["permission",{"_index":1100,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1121,"title":{},"body":{"license.html":{}}}],["person",{"_index":1105,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1122,"title":{},"body":{"license.html":{}}}],["platform",{"_index":1081,"title":{},"body":{"index.html":{}}}],["pluginapi['mixed",{"_index":300,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["port",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":1132,"title":{},"body":{"license.html":{}}}],["position",{"_index":365,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["possible",{"_index":1078,"title":{},"body":{"index.html":{}}}],["practice",{"_index":1002,"title":{},"body":{"index.html":{}}}],["preload",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preload.js",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepend",{"_index":482,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["prepend(...childs",{"_index":524,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["private",{"_index":9,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["process.env.node_env",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":1035,"title":{},"body":{"index.html":{}}}],["project",{"_index":1029,"title":{},"body":{"index.html":{}}}],["promise",{"_index":418,"title":{},"body":{"interfaces/Module.html":{},"classes/ModuleItem.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["propertypanel",{"_index":83,"title":{"classes/PropertyPanel.html":{}},"body":{"classes/App.html":{},"classes/PropertyPanel.html":{},"coverage.html":{}}}],["props",{"_index":124,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.modules",{"_index":851,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.scale",{"_index":857,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.scope",{"_index":447,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["protected",{"_index":165,"title":{},"body":{"classes/Base.html":{},"classes/GeometryMixin.html":{}}}],["provided",{"_index":1133,"title":{},"body":{"license.html":{}}}],["provides",{"_index":421,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["public",{"_index":142,"title":{},"body":{"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["publish",{"_index":1011,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":1143,"title":{},"body":{"license.html":{}}}],["qiansc",{"_index":1099,"title":{},"body":{"license.html":{}}}],["quickly",{"_index":1077,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":373,"title":{},"body":{"classes/LayoutMixin.html":{},"classes/Rectangle.html":{}}}],["readonlyarray",{"_index":303,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["ready",{"_index":1064,"title":{},"body":{"index.html":{}}}],["rect",{"_index":555,"title":{},"body":{"classes/Rectangle.html":{}}}],["rectangle",{"_index":550,"title":{"classes/Rectangle.html":{}},"body":{"classes/Rectangle.html":{},"coverage.html":{}}}],["rectanglecornermixin",{"_index":249,"title":{"classes/RectangleCornerMixin.html":{}},"body":{"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{}}}],["rectanglenode",{"_index":552,"title":{},"body":{"classes/Rectangle.html":{}}}],["ref.ts",{"_index":186,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["ref.ts:15",{"_index":197,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:5",{"_index":194,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:6",{"_index":195,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:7",{"_index":192,"title":{},"body":{"classes/ColorRef.html":{}}}],["reflect",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["release",{"_index":1090,"title":{},"body":{"index.html":{}}}],["remove(menu",{"_index":408,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["render",{"_index":237,"title":{},"body":{"classes/Controller.html":{}}}],["replacecontent",{"_index":475,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["replacecontent(contentview",{"_index":506,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["repository",{"_index":1000,"title":{},"body":{"index.html":{}}}],["request",{"_index":430,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["required",{"_index":1023,"title":{},"body":{"index.html":{}}}],["resize",{"_index":357,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{}}}],["resizeat",{"_index":341,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["resourceexplorer",{"_index":610,"title":{"classes/ResourceExplorer.html":{}},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["resourcepage",{"_index":81,"title":{},"body":{"classes/App.html":{}}}],["resoures",{"_index":416,"title":{},"body":{"interfaces/Module.html":{}}}],["restriction",{"_index":1112,"title":{},"body":{"license.html":{}}}],["result",{"_index":135,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":137,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":161,"title":{},"body":{"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["returns",{"_index":43,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":593,"title":{},"body":{"classes/Rectangle.html":{}}}],["rights",{"_index":1115,"title":{},"body":{"license.html":{}}}],["roadmap",{"_index":1012,"title":{},"body":{"index.html":{}}}],["rollup",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":36,"title":{},"body":{"classes/App.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["rounded",{"_index":752,"title":{},"body":{"classes/SplitItemView.html":{}}}],["row",{"_index":352,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["rrect",{"_index":595,"title":{},"body":{"classes/Rectangle.html":{}}}],["run",{"_index":424,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"index.html":{}}}],["s",{"_index":361,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["scale",{"_index":836,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["scope",{"_index":428,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["script",{"_index":1051,"title":{},"body":{"index.html":{}}}],["secondarybgcolor",{"_index":927,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["secondarylabelcolor",{"_index":928,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":1092,"title":{},"body":{"index.html":{}}}],["sell",{"_index":1119,"title":{},"body":{"license.html":{}}}],["serialize",{"_index":383,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["server",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":69,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["service.ts",{"_index":139,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":147,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:12",{"_index":154,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:18",{"_index":149,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:21",{"_index":152,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:9",{"_index":145,"title":{},"body":{"classes/AppearanceService.html":{}}}],["set",{"_index":309,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{},"index.html":{}}}],["setactivestate",{"_index":631,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setactivestate(index",{"_index":653,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setbackground(background",{"_index":288,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["setborder(border",{"_index":293,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["setborderraidus(borderraidus",{"_index":576,"title":{},"body":{"classes/Rectangle.html":{}}}],["setcontent",{"_index":476,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setcontent(contentview",{"_index":508,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setcursor",{"_index":342,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["setdefaultclass",{"_index":477,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setflow",{"_index":483,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setflow(type",{"_index":527,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setgrow",{"_index":478,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setgrow(classname",{"_index":511,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setheight(height",{"_index":572,"title":{},"body":{"classes/Rectangle.html":{}}}],["setshrink",{"_index":479,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setshrink(classname",{"_index":516,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["settings",{"_index":333,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setwidth(width",{"_index":568,"title":{},"body":{"classes/Rectangle.html":{}}}],["shall",{"_index":1129,"title":{},"body":{"license.html":{}}}],["shapecanvas",{"_index":613,"title":{"classes/ShapeCanvas.html":{}},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["shrink",{"_index":518,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["similar",{"_index":1032,"title":{},"body":{"index.html":{}}}],["singleton",{"_index":91,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["smelte",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":1108,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["split",{"_index":348,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitItemView.html":{}}}],["split.js",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["splitboard",{"_index":824,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["splitboardcontroller",{"_index":616,"title":{"classes/SplitBoardController.html":{}},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["splitboardview",{"_index":399,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["splitboardview>().setflow('1",{"_index":844,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["splitcolumnat",{"_index":343,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["splitexpand",{"_index":496,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["splititemview",{"_index":347,"title":{"classes/SplitItemView.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"coverage.html":{}}}],["splititemview:12",{"_index":493,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:13",{"_index":494,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:14",{"_index":492,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:16",{"_index":495,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:17",{"_index":497,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:25",{"_index":509,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:32",{"_index":507,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:39",{"_index":512,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:46",{"_index":517,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:53",{"_index":505,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:57",{"_index":510,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:63",{"_index":500,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:67",{"_index":502,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:71",{"_index":520,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:77",{"_index":501,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splitrowat",{"_index":344,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["src/.../appearance.ts",{"_index":980,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../canvas",{"_index":986,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../class",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inject.ts",{"_index":987,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.ts",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settings.ts",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../split",{"_index":981,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../type.ts",{"_index":982,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../ui",{"_index":988,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../uuid.ts",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../view.ts",{"_index":1163,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app",{"_index":1049,"title":{},"body":{"index.html":{}}}],["src/app/index.ts",{"_index":893,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/logger.ts",{"_index":900,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/settings.ts",{"_index":327,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core",{"_index":1042,"title":{},"body":{"index.html":{}}}],["src/core/browser/class",{"_index":792,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/controller.ts",{"_index":225,"title":{},"body":{"classes/Controller.html":{},"coverage.html":{}}}],["src/core/browser/controller.ts:10",{"_index":232,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:14",{"_index":235,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:17",{"_index":233,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:5",{"_index":231,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:7",{"_index":234,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/layout/split",{"_index":617,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/layout/type.ts",{"_index":337,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/browser/style/ui",{"_index":913,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/view.ts",{"_index":779,"title":{},"body":{"classes/View.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/browser/view.ts:13",{"_index":781,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:17",{"_index":782,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:4",{"_index":780,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:8",{"_index":783,"title":{},"body":{"classes/View.html":{}}}],["src/core/common/appearance.ts",{"_index":983,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/common/color",{"_index":185,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["src/core/common/uuid.ts",{"_index":938,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/components",{"_index":1058,"title":{},"body":{"index.html":{}}}],["src/core/parts/ioc/inject.ts",{"_index":940,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/core/parts/modules/module",{"_index":419,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"coverage.html":{}}}],["src/core/parts/modules/module.ts",{"_index":414,"title":{},"body":{"interfaces/Module.html":{},"coverage.html":{}}}],["src/core/parts/modules/svelte",{"_index":763,"title":{},"body":{"classes/SvelteModule.html":{},"coverage.html":{}}}],["src/modules",{"_index":1052,"title":{},"body":{"index.html":{}}}],["src/modules/draw",{"_index":162,"title":{},"body":{"classes/Base.html":{},"classes/Context.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/menu",{"_index":169,"title":{},"body":{"classes/BaseMenu.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["src/modules/property",{"_index":533,"title":{},"body":{"classes/PropertyPanel.html":{},"coverage.html":{}}}],["src/modules/resource",{"_index":611,"title":{},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["src/modules/shape",{"_index":614,"title":{},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["src/modules/workbench/index.ts",{"_index":823,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["src/modules/workbench/index.ts:19",{"_index":828,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:20",{"_index":829,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:21",{"_index":826,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:31",{"_index":833,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:72",{"_index":830,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:81",{"_index":832,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:95",{"_index":834,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/module",{"_index":462,"title":{},"body":{"classes/ModuleItem.html":{},"coverage.html":{}}}],["src/workbench",{"_index":1054,"title":{},"body":{"index.html":{}}}],["src/workbench/desktop/app.ts",{"_index":6,"title":{},"body":{"classes/App.html":{},"coverage.html":{}}}],["src/workbench/desktop/app.ts:103",{"_index":54,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:16",{"_index":37,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:17",{"_index":30,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:24",{"_index":42,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:30",{"_index":47,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:42",{"_index":49,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:47",{"_index":55,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:52",{"_index":58,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:60",{"_index":44,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:64",{"_index":48,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:74",{"_index":46,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:83",{"_index":53,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:91",{"_index":51,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:99",{"_index":59,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/main.ts",{"_index":952,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/services/appearance",{"_index":138,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["standard",{"_index":1018,"title":{},"body":{"index.html":{}}}],["start",{"_index":363,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["started",{"_index":996,"title":{"index.html":{},"license.html":{}},"body":{}}],["startx",{"_index":625,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["starty",{"_index":626,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["stateconfig",{"_index":797,"title":{"interfaces/stateConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["statements",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["statically",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statusbar",{"_index":79,"title":{},"body":{"classes/App.html":{}}}],["step",{"_index":1061,"title":{},"body":{"index.html":{}}}],["sth",{"_index":120,"title":{},"body":{"classes/App.html":{}}}],["store",{"_index":332,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{}}}],["storybook",{"_index":1057,"title":{},"body":{"index.html":{}}}],["string",{"_index":289,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/Rectangle.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":296,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{}}}],["strokealign",{"_index":268,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokecap",{"_index":299,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokejoin",{"_index":301,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokemiterlimit",{"_index":269,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokes",{"_index":270,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokestyleid",{"_index":305,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokeweight",{"_index":271,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["structure",{"_index":1030,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1124,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1117,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1131,"title":{},"body":{"license.html":{}}}],["such",{"_index":1045,"title":{},"body":{"index.html":{}}}],["super",{"_index":581,"title":{},"body":{"classes/Rectangle.html":{},"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["support",{"_index":297,"title":{},"body":{"classes/GeometryMixin.html":{},"index.html":{}}}],["surface",{"_index":209,"title":{},"body":{"classes/Context.html":{}}}],["svelte/internal",{"_index":772,"title":{},"body":{"classes/SvelteModule.html":{}}}],["sveltecomponentdev",{"_index":539,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["sveltemodule",{"_index":535,"title":{"classes/SvelteModule.html":{}},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"coverage.html":{}}}],["sveltemodule:10",{"_index":541,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:16",{"_index":545,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:28",{"_index":544,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:5",{"_index":543,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:8",{"_index":540,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:9",{"_index":538,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["switch",{"_index":202,"title":{},"body":{"classes/ColorRef.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["symbol.for('flowtableroot",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["systembluecolor",{"_index":929,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemgraycolor",{"_index":930,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemorangecolor",{"_index":931,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systempinkcolor",{"_index":932,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemredcolor",{"_index":933,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemyellowcolor",{"_index":934,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":356,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["table",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":122,"title":{},"body":{"classes/App.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"miscellaneous/variables.html":{}}}],["target.classlist.contains('split",{"_index":675,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["target.parentelement",{"_index":674,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["template",{"_index":1022,"title":{},"body":{"index.html":{}}}],["tertiarybgcolor",{"_index":935,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tertiarylabelcolor",{"_index":936,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["textfieldbackground",{"_index":937,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["this._growclassname",{"_index":747,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._height",{"_index":585,"title":{},"body":{"classes/Rectangle.html":{}}}],["this._shrinkclassname",{"_index":746,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._type",{"_index":158,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this._view",{"_index":401,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/SvelteModule.html":{}}}],["this._view.parentnode",{"_index":777,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this._view.parentnode.removechild(this._view",{"_index":778,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this._view.removechild(menu.container",{"_index":409,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this._width",{"_index":582,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.activeexpand",{"_index":683,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.activeid",{"_index":684,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.add(moduleid",{"_index":445,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.addexpandbutton",{"_index":738,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.anycolor",{"_index":199,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.cancelwaitformerge",{"_index":758,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.canvas",{"_index":222,"title":{},"body":{"classes/Context.html":{}}}],["this.checkexpandstate(event.clientx",{"_index":665,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.ck",{"_index":220,"title":{},"body":{"classes/Context.html":{}}}],["this.comp",{"_index":774,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this.comp.$destroy",{"_index":776,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this.container",{"_index":89,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind('modulefactory').todynamicvalue",{"_index":101,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(appearanceservice).to(appearanceservice",{"_index":109,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(menugroupservice).to(menugroupservice",{"_index":110,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(moduleid).to(module",{"_index":434,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.container.get(appearanceservice",{"_index":112,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(menugroupservice",{"_index":130,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(moduleid",{"_index":448,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.contentview",{"_index":740,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.context",{"_index":125,"title":{},"body":{"classes/App.html":{},"classes/GeometryMixin.html":{},"classes/Rectangle.html":{}}}],["this.context.ck.paint",{"_index":311,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.context.ck.parsecolorstring(background",{"_index":312,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.context.ck.path().addrrect(rrect",{"_index":598,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.context.ck.rrectxy([left",{"_index":596,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.context.draw",{"_index":605,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.context.getcanvas().drawpath(this.rect",{"_index":602,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.context.set('container",{"_index":92,"title":{},"body":{"classes/App.html":{}}}],["this.cornerradius",{"_index":587,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.darkcolor",{"_index":201,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.evt.emit('onmodechanged",{"_index":159,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.evt.on('onmodechanged",{"_index":160,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.exist(moduleid",{"_index":431,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.expand",{"_index":756,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.expandhidden",{"_index":757,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.mergedirection",{"_index":760,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expandactive",{"_index":688,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandleavehandler",{"_index":666,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmouseuphandler",{"_index":668,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmovehandler",{"_index":662,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandtype",{"_index":689,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.fills.push(paint",{"_index":316,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.fills.tostring",{"_index":306,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.fills[0",{"_index":603,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.groupmenuservice.getmenuinsatance",{"_index":182,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.initmenus",{"_index":126,"title":{},"body":{"classes/App.html":{}}}],["this.initmodules",{"_index":98,"title":{},"body":{"classes/App.html":{}}}],["this.initnavigationbar",{"_index":95,"title":{},"body":{"classes/App.html":{}}}],["this.initpreferences",{"_index":93,"title":{},"body":{"classes/App.html":{}}}],["this.initstatusbar",{"_index":96,"title":{},"body":{"classes/App.html":{}}}],["this.initstyle",{"_index":94,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(appearancetype.dark",{"_index":115,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(type",{"_index":114,"title":{},"body":{"classes/App.html":{}}}],["this.initwithcomponent(this._view",{"_index":775,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this.insertconfig(config",{"_index":813,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.lightcolor",{"_index":200,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.liveresize(event.clientx",{"_index":663,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.menuinstance",{"_index":181,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.menuinstance.init",{"_index":183,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.meuns",{"_index":410,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.meuns.filter((item",{"_index":411,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.meuns.length",{"_index":405,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.meuns.push(menu",{"_index":407,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.modulefactory",{"_index":846,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.modulefactory.load(item.moduleid",{"_index":872,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.modulefactory.load(p.id",{"_index":853,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.moduleid",{"_index":532,"title":{},"body":{"classes/ModuleItem.html":{}}}],["this.modules.get(moduleid",{"_index":440,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.modules.has(moduleid",{"_index":442,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.modules.set(moduleid",{"_index":432,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.normalizeweight(config",{"_index":819,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.onmousedown(event",{"_index":670,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.orderedconfigs",{"_index":815,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor",{"_index":821,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor].weight",{"_index":822,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.prepend(contentview",{"_index":743,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.props",{"_index":773,"title":{},"body":{"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.props.minwidth",{"_index":877,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.props.scale",{"_index":878,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.props.type",{"_index":876,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.rect",{"_index":597,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.root",{"_index":123,"title":{},"body":{"classes/App.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["this.root.appendchild(child",{"_index":789,"title":{},"body":{"classes/View.html":{}}}],["this.root.appendchild(workbench.view",{"_index":107,"title":{},"body":{"classes/App.html":{}}}],["this.root.classlist.add('flex",{"_index":751,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('relative",{"_index":754,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('split",{"_index":741,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('wait",{"_index":759,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(...this._bgcolorclassname",{"_index":755,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(`flex",{"_index":788,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.add(this._growclassname",{"_index":748,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(this._shrinkclassname",{"_index":750,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove('flex",{"_index":787,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.remove('wait",{"_index":762,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._growclassname",{"_index":749,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._shrinkclassname",{"_index":745,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.prepend(...childs",{"_index":790,"title":{},"body":{"classes/View.html":{}}}],["this.root.replacechild(contentview",{"_index":744,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.setactivestate(index",{"_index":676,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.setdefaultclass",{"_index":739,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.splitboard",{"_index":843,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.additem(item",{"_index":855,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.applysplit",{"_index":856,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.direction",{"_index":848,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.itemgeneratedelegate",{"_index":845,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.items.foreach((item",{"_index":858,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.items[index",{"_index":859,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.root",{"_index":847,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.startx",{"_index":681,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.starty",{"_index":682,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.strokes.push(paint",{"_index":323,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.strokes.tostring",{"_index":317,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.strokes[0",{"_index":604,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.surface",{"_index":221,"title":{},"body":{"classes/Context.html":{}}}],["this.surface.flush",{"_index":224,"title":{},"body":{"classes/Context.html":{}}}],["this.surface.getcanvas",{"_index":223,"title":{},"body":{"classes/Context.html":{}}}],["this.unactiveexpand",{"_index":667,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.updaterect",{"_index":584,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.view",{"_index":866,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.view.cancelformerge",{"_index":694,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.direction",{"_index":697,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items.foreach((item",{"_index":672,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items[this.activeid",{"_index":696,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.resizeat(this.activeid",{"_index":701,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousedown",{"_index":669,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseleave",{"_index":686,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousemove",{"_index":685,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseup",{"_index":687,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseleave",{"_index":692,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mousemove",{"_index":691,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseup",{"_index":693,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor",{"_index":695,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('col",{"_index":712,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('crosshair",{"_index":690,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('n",{"_index":716,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('row",{"_index":713,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('w",{"_index":714,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitcolumnat(this.activeid",{"_index":718,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitrowat(this.activeid",{"_index":719,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.waitformergeatitem(this.activeid",{"_index":715,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.viewdiddisappear",{"_index":870,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.viewwilldisappear",{"_index":867,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.x",{"_index":590,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.y",{"_index":592,"title":{},"body":{"classes/Rectangle.html":{}}}],["three",{"_index":1037,"title":{},"body":{"index.html":{}}}],["title",{"_index":392,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["todo",{"_index":295,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/Rectangle.html":{}}}],["together",{"_index":1005,"title":{},"body":{"index.html":{}}}],["token",{"_index":990,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tools",{"_index":1053,"title":{},"body":{"index.html":{}}}],["top",{"_index":591,"title":{},"body":{"classes/Rectangle.html":{}}}],["topleftradius",{"_index":250,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["toprightradius",{"_index":251,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["tort",{"_index":1153,"title":{},"body":{"license.html":{}}}],["transient",{"_index":429,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["tree",{"_index":241,"title":{},"body":{"classes/Controller.html":{}}}],["true",{"_index":599,"title":{},"body":{"classes/Rectangle.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":257,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"classes/Rectangle.html":{},"dependencies.html":{}}}],["type",{"_index":34,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1161,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":308,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["types/color",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["types/shape",{"_index":578,"title":{},"body":{"classes/Rectangle.html":{}}}],["ui/components/navigation/navigation",{"_index":77,"title":{},"body":{"classes/App.html":{}}}],["ui/components/property/proterty.svelte",{"_index":84,"title":{},"body":{"classes/App.html":{}}}],["ui/components/resource/resource.svelte",{"_index":82,"title":{},"body":{"classes/App.html":{}}}],["ui/components/status/status",{"_index":80,"title":{},"body":{"classes/App.html":{}}}],["unactiveexpand",{"_index":632,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["undefined",{"_index":800,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1017,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":388,"title":{},"body":{"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{}}}],["update",{"_index":1069,"title":{},"body":{"index.html":{}}}],["updatemode",{"_index":144,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updatemode(type",{"_index":153,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updater",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["updaterect",{"_index":556,"title":{},"body":{"classes/Rectangle.html":{}}}],["url",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":600,"title":{},"body":{"classes/Rectangle.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":1026,"title":{},"body":{"index.html":{}}}],["user",{"_index":1096,"title":{},"body":{"index.html":{}}}],["using",{"_index":1072,"title":{},"body":{"index.html":{}}}],["utils",{"_index":1047,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":939,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":39,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/GeometryMixin.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/Rectangle.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/classBuilder.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1164,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":658,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["version",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":705,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["very",{"_index":1031,"title":{},"body":{"index.html":{}}}],["view",{"_index":226,"title":{"classes/View.html":{}},"body":{"classes/Controller.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["view.clone",{"_index":871,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.module",{"_index":862,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.module.serialize",{"_index":873,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.parentnode",{"_index":868,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.parentnode.removechild(view",{"_index":869,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.setcontent(module.view",{"_index":861,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view:13",{"_index":522,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["view:17",{"_index":525,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["view:4",{"_index":498,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["view:8",{"_index":529,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["viewdidappear",{"_index":227,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewdiddisappear",{"_index":228,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewwillappear",{"_index":229,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewwilldisappear",{"_index":230,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["vite",{"_index":1025,"title":{},"body":{"index.html":{}}}],["void",{"_index":45,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/GeometryMixin.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{}}}],["w",{"_index":360,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["waitformerge",{"_index":480,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["waitformerge(direction",{"_index":519,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["waitformergeatitem",{"_index":345,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["warranties",{"_index":1139,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1134,"title":{},"body":{"license.html":{}}}],["wasm",{"_index":219,"title":{},"body":{"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/Rectangle.html":{},"dependencies.html":{}}}],["wasm/canvas",{"_index":944,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["wasm/context.ts",{"_index":206,"title":{},"body":{"classes/Context.html":{},"coverage.html":{}}}],["wasm/context.ts:13",{"_index":218,"title":{},"body":{"classes/Context.html":{}}}],["wasm/context.ts:17",{"_index":217,"title":{},"body":{"classes/Context.html":{}}}],["wasm/context.ts:4",{"_index":215,"title":{},"body":{"classes/Context.html":{}}}],["wasm/context.ts:5",{"_index":216,"title":{},"body":{"classes/Context.html":{}}}],["wasm/context.ts:6",{"_index":214,"title":{},"body":{"classes/Context.html":{}}}],["wasm/mixin/base.ts",{"_index":164,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["wasm/mixin/base.ts:4",{"_index":166,"title":{},"body":{"classes/Base.html":{}}}],["wasm/mixin/corner.ts",{"_index":245,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{}}}],["wasm/mixin/corner.ts:10",{"_index":607,"title":{},"body":{"classes/RectangleCornerMixin.html":{}}}],["wasm/mixin/corner.ts:3",{"_index":248,"title":{},"body":{"classes/CornerMixin.html":{}}}],["wasm/mixin/corner.ts:7",{"_index":608,"title":{},"body":{"classes/RectangleCornerMixin.html":{}}}],["wasm/mixin/corner.ts:8",{"_index":609,"title":{},"body":{"classes/RectangleCornerMixin.html":{}}}],["wasm/mixin/corner.ts:9",{"_index":606,"title":{},"body":{"classes/RectangleCornerMixin.html":{}}}],["wasm/mixin/geometry.ts",{"_index":266,"title":{},"body":{"classes/GeometryMixin.html":{},"coverage.html":{}}}],["wasm/mixin/geometry.ts:10",{"_index":281,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:11",{"_index":280,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:18",{"_index":287,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:23",{"_index":290,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:32",{"_index":292,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:36",{"_index":294,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:7",{"_index":276,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:8",{"_index":282,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:9",{"_index":283,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/layout.ts",{"_index":368,"title":{},"body":{"classes/LayoutMixin.html":{},"coverage.html":{}}}],["wasm/mixin/layout.ts:2",{"_index":371,"title":{},"body":{"classes/LayoutMixin.html":{}}}],["wasm/mixin/layout.ts:3",{"_index":372,"title":{},"body":{"classes/LayoutMixin.html":{}}}],["wasm/mixin/shape.ts",{"_index":255,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"coverage.html":{}}}],["wasm/rectangle.ts",{"_index":551,"title":{},"body":{"classes/Rectangle.html":{},"coverage.html":{}}}],["wasm/rectangle.ts:10",{"_index":560,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:11",{"_index":559,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:18",{"_index":567,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:22",{"_index":569,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:27",{"_index":571,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:31",{"_index":573,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:36",{"_index":575,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:40",{"_index":577,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:45",{"_index":565,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:54",{"_index":564,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:8",{"_index":563,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:9",{"_index":562,"title":{},"body":{"classes/Rectangle.html":{}}}],["web",{"_index":1055,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["webpreferences",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":798,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["weightmap",{"_index":791,"title":{"interfaces/WeightMap.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["whether",{"_index":1151,"title":{},"body":{"license.html":{}}}],["width",{"_index":374,"title":{},"body":{"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"miscellaneous/variables.html":{}}}],["width(width",{"_index":583,"title":{},"body":{"classes/Rectangle.html":{}}}],["wiki",{"_index":1093,"title":{},"body":{"index.html":{}}}],["windows",{"_index":1067,"title":{},"body":{"index.html":{}}}],["without",{"_index":1111,"title":{},"body":{"license.html":{}}}],["work",{"_index":1007,"title":{},"body":{"index.html":{}}}],["workbench",{"_index":102,"title":{"classes/Workbench.html":{}},"body":{"classes/App.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["workbench.viewdidappear",{"_index":108,"title":{},"body":{"classes/App.html":{}}}],["workbench.viewwillappear",{"_index":106,"title":{},"body":{"classes/App.html":{}}}],["workbench/desktop/app.config.json",{"_index":86,"title":{},"body":{"classes/App.html":{}}}],["workbenchprops",{"_index":827,"title":{"interfaces/WorkbenchProps.html":{}},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["works",{"_index":1021,"title":{},"body":{"index.html":{}}}],["x",{"_index":369,"title":{},"body":{"classes/LayoutMixin.html":{}}}],["xl",{"_index":753,"title":{},"body":{"classes/SplitItemView.html":{}}}],["y",{"_index":370,"title":{},"body":{"classes/LayoutMixin.html":{}}}],["yes",{"_index":193,"title":{},"body":{"classes/ColorRef.html":{},"classes/View.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/App.html":{"url":"classes/App.html","title":"class - App","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/app.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                context\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bootstrap\n                            \n                            \n                                initFrame\n                            \n                            \n                                initMenus\n                            \n                            \n                                    Async\n                                initModules\n                            \n                            \n                                initNavigationBar\n                            \n                            \n                                initPreferences\n                            \n                            \n                                initPropertyPanel\n                            \n                            \n                                initResourcePanel\n                            \n                            \n                                initStatusBar\n                            \n                            \n                                initStyle\n                            \n                            \n                                initStyleMode\n                            \n                            \n                                initWorkArea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/app.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Container\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        bootstrap\n                        \n                    \n                \n            \n            \n                \n                    \n                    bootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFrame\n                        \n                    \n                \n            \n            \n                \ninitFrame()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initMenus\n                        \n                    \n                \n            \n            \n                \ninitMenus()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initModules\n                        \n                    \n                \n            \n            \n                \n                    \n                    initModules()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNavigationBar\n                        \n                    \n                \n            \n            \n                \ninitNavigationBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPreferences\n                        \n                    \n                \n            \n            \n                \ninitPreferences()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPropertyPanel\n                        \n                    \n                \n            \n            \n                \ninitPropertyPanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initResourcePanel\n                        \n                    \n                \n            \n            \n                \ninitResourcePanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStatusBar\n                        \n                    \n                \n            \n            \n                \ninitStatusBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyle\n                        \n                    \n                \n            \n            \n                \ninitStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyleMode\n                        \n                    \n                \n            \n            \n                \ninitStyleMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initWorkArea\n                        \n                    \n                \n            \n            \n                \ninitWorkArea()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Container } from 'inversify';\nimport { AppearanceType } from '@cosmic/core/common';\nimport { ModuleFactory } from '@cosmic/core/parts';\nimport { Controller } from '@cosmic/core/browser';\nimport { AppearanceService } from '@cosmic/workbench/services/appearance-service';\n// import { MenuGroupService } from '@cosmic/workbench/services/menu-group-service';\n// import { applicationMenus } from './base-menu/config';\nimport Navigation from '../ui/components/navigation/navigation-bar.svelte';\nimport StatusBar from '../ui/components/status/status-bar.svelte';\nimport ResourcePage from '../ui/components/resource/resource.svelte';\nimport PropertyPanel from '../ui/components/property/proterty.svelte';\n\nimport config from 'workbench/desktop/app.config.json';\n\nexport default class App {\n  private container: Container;\n  private context = new Map();\n  constructor(private root: HTMLElement) {\n    this.container = new Container({ defaultScope: 'Singleton' });\n    this.context.set('container', this.container);\n    this.initPreferences();\n    this.initStyle();\n  }\n  async bootstrap() {\n    this.initNavigationBar();\n    this.initStatusBar();\n    await this.initModules();\n  }\n\n  async initModules() {\n    const moduleFactory = new ModuleFactory(this.container);\n    this.container.bind('ModuleFactory').toDynamicValue(() => moduleFactory);\n\n    const workbench = await moduleFactory.load(config.workbench.id, config.workbench);\n    if (workbench instanceof Controller) {\n      workbench.viewWillAppear();\n      this.root.appendChild(workbench.view());\n      workbench.viewDidAppear();\n    }\n  }\n\n  initPreferences() {\n    this.container.bind(AppearanceService).to(AppearanceService);\n    // this.container.bind(MenuGroupService).to(MenuGroupService);\n  }\n\n  initStyle() {\n    const aps = this.container.get(AppearanceService);\n    aps.onModeChanged((type: AppearanceType) => this.initStyleMode(type));\n    this.initStyleMode(AppearanceType.dark);\n  }\n  initStyleMode(type: AppearanceType): void {\n    if (type === AppearanceType.dark) {\n      document.body.classList.add('mode-dark');\n    } else {\n      document.body.classList.remove('mode-dark');\n    }\n  }\n\n  initFrame(): void {\n    // to do sth.\n  }\n\n  initNavigationBar(): void {\n    // to do sth.\n    const navigationBar = new Navigation({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    this.initMenus();\n  }\n\n  initMenus(): void {\n    // const header = document.querySelector('#main-header');\n    // const groupMenu = this.container.get(MenuGroupService);\n    // groupMenu.initContainer(header as HTMLElement);\n    // for (const menu of applicationMenus) {\n    //   groupMenu.getMenuInsatance().init(menu.title, menu.items);\n    // }\n  }\n\n  initResourcePanel(container: HTMLElement): void {\n    new ResourcePage({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initPropertyPanel(container: HTMLElement): void {\n    new PropertyPanel({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initWorkArea(): void {\n    // to do sth.\n  }\n\n  initStatusBar(): void {\n    new StatusBar({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    // to do sth.\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppearanceService.html":{"url":"classes/AppearanceService.html","title":"class - AppearanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppearanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/appearance-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Private\n                                evt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onModeChanged\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                updateMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppearanceType\n\n                    \n                \n                \n                    \n                        Default value : AppearanceType.dark\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        evt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter2()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onModeChanged\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModeChanged(fn: (type: AppearanceType) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        type\n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject, ContainerModule } from 'inversify';\nimport { EventEmitter2 } from 'eventemitter2';\n\nimport { AppearanceType } from '@cosmic/core/common';\n\n@injectable()\n/** 外观设置服务 */\nexport class AppearanceService {\n  private _type: AppearanceType = AppearanceType.dark;\n  private evt = new EventEmitter2();\n\n  public updateMode(type: AppearanceType) {\n    if (this._type !== type) {\n      this._type = type;\n      this.evt.emit('onModeChanged', type);\n    }\n  }\n  public onModeChanged(fn: (type: AppearanceType) => void) {\n    this.evt.on('onModeChanged', fn);\n  }\n  public type() {\n    return this._type;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/base.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                context\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Context\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/base.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { Context } from '../context';\n\nexport abstract class Base {\n  protected context: Context;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseMenu.html":{"url":"classes/BaseMenu.html","title":"class - BaseMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-group/base-menu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                menuInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(groupMenuService: MenuGroupService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/menu-group/base-menu.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupMenuService\n                                                  \n                                                        \n                                                                    MenuGroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Menu\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-group/base-menu.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    initMenu(menuItems: MenuItemConfig[])\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-group/base-menu.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuItems\n                                    \n                                            MenuItemConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { MenuGroupService } from './menu-group-service';\nimport type { Menu, MenuItemConfig } from './menu';\n\nexport class BaseMenu {\n  private menuInstance!: Menu;\n  constructor(private groupMenuService: MenuGroupService) {}\n\n  public initMenu(menuItems: MenuItemConfig[]): void {\n    this.menuInstance = this.groupMenuService.getMenuInsatance();\n    this.menuInstance.init('文件', menuItems);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColorRef.html":{"url":"classes/ColorRef.html","title":"class - ColorRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColorRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/common/color-ref.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                anyColor\n                            \n                            \n                                    Private\n                                darkColor\n                            \n                            \n                                    Private\n                                lightColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                color\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(anyColor: Color, lightColor?: Color, darkColor?: Color)\n                    \n                \n                        \n                            \n                                Defined in src/core/common/color-ref.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        anyColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lightColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        darkColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        anyColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        darkColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lightColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        color\n                        \n                    \n                \n            \n            \n                \n                    \n                    color(appearanceType: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/common/color-ref.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appearanceType\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type * as Color from 'color';\nimport { AppearanceType } from './appearance';\n\nexport default class ColorRef {\n  private anyColor: Color;\n  private lightColor: Color;\n  private darkColor: Color;\n\n  constructor(anyColor: Color, lightColor?: Color, darkColor?: Color) {\n    this.anyColor = anyColor;\n    this.lightColor = lightColor || anyColor;\n    this.darkColor = darkColor || anyColor;\n  }\n\n  public color(appearanceType: AppearanceType) {\n    switch (appearanceType) {\n      case AppearanceType.any:\n        return this.anyColor;\n      case AppearanceType.light:\n        return this.lightColor;\n      case AppearanceType.dark:\n        return this.darkColor;\n      default:\n        return this.anyColor;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Context.html":{"url":"classes/Context.html","title":"class - Context","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Context\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/context.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canvas\n                            \n                            \n                                    Public\n                                ck\n                            \n                            \n                                    Private\n                                surface\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                draw\n                            \n                            \n                                getCanvas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ck: CanvasKit, surface: Surface)\n                    \n                \n                        \n                            \n                                Defined in src/modules/draw-canvas/skia-wasm/context.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ck\n                                                  \n                                                        \n                                                                    CanvasKit\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        surface\n                                                  \n                                                        \n                                                                    Surface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Canvas\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/context.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ck\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanvasKit\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/context.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        surface\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Surface\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/context.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        draw\n                        \n                    \n                \n            \n            \n                \ndraw()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/draw-canvas/skia-wasm/context.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCanvas\n                        \n                    \n                \n            \n            \n                \ngetCanvas()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/draw-canvas/skia-wasm/context.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Canvas\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Canvas, Surface, CanvasKit } from 'canvaskit-wasm';\n\nexport class Context {\n  private canvas: Canvas;\n  private surface: Surface;\n  public ck: CanvasKit;\n  constructor(ck: CanvasKit, surface: Surface) {\n    this.ck = ck;\n    this.surface = surface;\n    this.canvas = this.surface.getCanvas();\n  }\n\n  getCanvas(): Canvas {\n    return this.canvas;\n  }\n\n  draw(): void {\n    this.surface.flush();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Controller.html":{"url":"classes/Controller.html","title":"class - Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Controller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                view\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\n\n@injectable()\nexport abstract class Controller {\n  abstract view(): HTMLElement;\n\n  viewWillAppear() {\n    /** going to render, appending element to dom tree  */\n  }\n  viewDidAppear() {\n    /** after appeared */\n  }\n\n  viewWillDisappear() {\n    /** going to disappear */\n  }\n  viewDidDisappear() {\n    /** going to disappear */\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CornerMixin.html":{"url":"classes/CornerMixin.html","title":"class - CornerMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CornerMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/corner.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cornerRadius\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cornerRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CornerMixin {\n  cornerRadius: number;\n}\n\nexport class RectangleCornerMixin {\n  topLeftRadius: number;\n  topRightRadius: number;\n  bottomLeftRadius: number;\n  bottomRightRadius: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultShapeMixin.html":{"url":"classes/DefaultShapeMixin.html","title":"class - DefaultShapeMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultShapeMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/shape.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Mixin } from 'ts-mixer';\nimport { CornerMixin, RectangleCornerMixin } from './corner';\nimport { LayoutMixin } from './layout';\nimport { GeometryMixin } from './geometry';\n\nexport class DefaultShapeMixin extends Mixin(CornerMixin, RectangleCornerMixin, LayoutMixin, GeometryMixin) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeometryMixin.html":{"url":"classes/GeometryMixin.html","title":"class - GeometryMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeometryMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/geometry.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fills\n                            \n                            \n                                strokeAlign\n                            \n                            \n                                strokeMiterLimit\n                            \n                            \n                                strokes\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                    Protected\n                                context\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    background\n                                \n                                \n                                    border\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Paint[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strokeAlign\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"CENTER\" | \"INSIDE\" | \"OUTSIDE\"\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strokeMiterLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strokes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Paint[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strokeWeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Context\n\n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n\n                \n                    \n                        getbackground()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:18\n                                \n                            \n\n                \n                    \n                        setbackground(background: string)\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            background\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        border\n                    \n                \n\n                \n                    \n                        getborder()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:32\n                                \n                            \n\n                \n                    \n                        setborder(border: string)\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            border\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import type { Paint } from 'canvaskit-wasm';\nimport { Base } from './base';\n\n// TODO: fills and stroke support array\nexport class GeometryMixin extends Base {\n  // TODO 确认完更新策略好设置正确的类型\n  fills: Paint[] = [];\n  strokes: Paint[] = [];\n  strokeWeight: number;\n  strokeMiterLimit: number;\n  strokeAlign: 'CENTER' | 'INSIDE' | 'OUTSIDE';\n  // strokeCap: StrokeCap | PluginAPI['mixed']\n  // strokeJoin: StrokeJoin | PluginAPI['mixed']\n  // dashPattern: ReadonlyArray\n  // fillStyleId: string | PluginAPI['mixed']\n  // strokeStyleId: string\n\n  get background(): string {\n    return this.fills.toString();\n  }\n\n  // TODO: support more typeof background\n  set background(background: string) {\n    const paint = new this.context.ck.Paint();\n    const color = this.context.ck.parseColorString(background);\n    paint.setColor(color);\n    paint.setStyle(this.context.ck.PaintStyle.Fill);\n    paint.setAntiAlias(true);\n    this.fills.push(paint);\n  }\n\n  get border(): string {\n    return this.strokes.toString();\n  }\n\n  set border(border: string) {\n    const { ck } = this.context;\n    const paint = new ck.Paint();\n    paint.setStyle(ck.PaintStyle.Stroke);\n    paint.setStrokeWidth(20);\n    paint.setColor(ck.parseColorString('#ee0033'));\n    paint.setAntiAlias(true);\n    this.strokes.push(paint);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISettings.html":{"url":"interfaces/ISettings.html","title":"interface - ISettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/settings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            check\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import ElectronStore from 'electron-store';\n\ninterface ISettings {\n  check: boolean;\n}\n\nconst settings = new ElectronStore({\n  defaults: {\n    check: false,\n  },\n});\n\nexport default settings;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISplitBoardView.html":{"url":"interfaces/ISplitBoardView.html","title":"interface - ISplitBoardView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISplitBoardView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/type.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cancelForMerge\n                                        \n                                \n                                \n                                        \n                                            direction\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            resizeAt\n                                        \n                                \n                                \n                                        \n                                            setCursor\n                                        \n                                \n                                \n                                        \n                                            splitColumnAt\n                                        \n                                \n                                \n                                        \n                                            splitRowAt\n                                        \n                                \n                                \n                                        \n                                            waitForMergeAtItem\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancelForMerge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelForMerge:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:         directionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         directionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     SplitItemView[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SplitItemView[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizeAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resizeAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setCursor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setCursor:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitColumnAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitColumnAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitRowAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitRowAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        waitForMergeAtItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        waitForMergeAtItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type View from '../view';\nimport type SplitItemView from './split-item.view';\n\nexport enum directionType {\n  'col',\n  'row',\n}\n\nexport interface ItemGenerateDelegate {\n  expandNewItem: (oldItem: T, index: number) => T;\n}\n\nexport interface ISplitBoardView extends View {\n  items: SplitItemView[];\n  direction: directionType;\n  setCursor: (\n    type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize'\n  ) => void;\n  cancelForMerge: () => void;\n  resizeAt: (index: number, start: number, length: number, position: number) => void;\n  waitForMergeAtItem: (index: number, direction: 'w' | 'e' | 'n' | 's') => void;\n  splitColumnAt: (index: number, clientX: number, clientY: number) => void;\n  splitRowAt: (index: number, clientX: number, clientY: number) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemGenerateDelegate.html":{"url":"interfaces/ItemGenerateDelegate.html","title":"interface - ItemGenerateDelegate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ItemGenerateDelegate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/type.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expandNewItem\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expandNewItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expandNewItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type View from '../view';\nimport type SplitItemView from './split-item.view';\n\nexport enum directionType {\n  'col',\n  'row',\n}\n\nexport interface ItemGenerateDelegate {\n  expandNewItem: (oldItem: T, index: number) => T;\n}\n\nexport interface ISplitBoardView extends View {\n  items: SplitItemView[];\n  direction: directionType;\n  setCursor: (\n    type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize'\n  ) => void;\n  cancelForMerge: () => void;\n  resizeAt: (index: number, start: number, length: number, position: number) => void;\n  waitForMergeAtItem: (index: number, direction: 'w' | 'e' | 'n' | 's') => void;\n  splitColumnAt: (index: number, clientX: number, clientY: number) => void;\n  splitRowAt: (index: number, clientX: number, clientY: number) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LayoutMixin.html":{"url":"classes/LayoutMixin.html","title":"class - LayoutMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LayoutMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/layout.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/layout.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/layout.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LayoutMixin {\n  x: number;\n  y: number;\n  /** TODO: should it be readonly? */\n  // width: number\n  // height: number\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuBar.html":{"url":"classes/MenuBar.html","title":"class - MenuBar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuBar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-group/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Controller\n            \n\n            \n                Implements\n            \n            \n                            Module\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                serialize\n                            \n                            \n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-group/index.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuProps\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-group/index.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-group/index.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: MenuProps)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-group/index.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                MenuProps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-group/index.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { title: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n            \n                \nview()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\n// import { Menu } from './menu';\n\ninterface MenuProps {\n  title: string;\n}\n\n@injectable()\nexport default class MenuBar extends Controller implements Module {\n  props: MenuProps;\n  // private meuns!: Menu[];\n  private _view: HTMLElement;\n  view() {\n    return this._view;\n  }\n  public async init(props: MenuProps) {\n    this._view = document.createElement('div');\n    return this;\n  }\n  viewWillAppear() {\n    // const id = Date.now() + '' + this.meuns.length;\n    // const menu = new Menu(this._view, id);\n    // this.meuns.push(menu);\n  }\n  serialize() {\n    return { title: '' };\n  }\n  async destroy() {\n    return this;\n  }\n  // remove(menu: Menu) {\n  //   this._view.removeChild(menu.container);\n  //   this.meuns = this.meuns.filter((item) => item.id === menu.id);\n  // }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuProps.html":{"url":"interfaces/MenuProps.html","title":"interface - MenuProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-group/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\n// import { Menu } from './menu';\n\ninterface MenuProps {\n  title: string;\n}\n\n@injectable()\nexport default class MenuBar extends Controller implements Module {\n  props: MenuProps;\n  // private meuns!: Menu[];\n  private _view: HTMLElement;\n  view() {\n    return this._view;\n  }\n  public async init(props: MenuProps) {\n    this._view = document.createElement('div');\n    return this;\n  }\n  viewWillAppear() {\n    // const id = Date.now() + '' + this.meuns.length;\n    // const menu = new Menu(this._view, id);\n    // this.meuns.push(menu);\n  }\n  serialize() {\n    return { title: '' };\n  }\n  async destroy() {\n    return this;\n  }\n  // remove(menu: Menu) {\n  //   this._view.removeChild(menu.container);\n  //   this.meuns = this.meuns.filter((item) => item.id === menu.id);\n  // }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Module.html":{"url":"interfaces/Module.html","title":"interface - Module","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Module\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destroy\n                                        \n                                \n                                \n                                        \n                                            init\n                                        \n                                \n                                \n                                        \n                                            props\n                                        \n                                \n                                \n                                        \n                                            serialize\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destroy:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        init\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        init:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    loading resoures\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        props\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        props:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serialize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serialize:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    to Options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Module {\n  props: T;\n  /** loading resoures */\n  init: (props: T) => Promise>;\n\n  /** to Options */\n  serialize: () => T;\n\n  destroy: () => Promise>;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModuleConfig.html":{"url":"interfaces/ModuleConfig.html","title":"interface - ModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module-factory.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Module } from './module';\nimport { injectable } from 'inversify';\nimport type { Container } from 'inversify';\n\nexport interface ModuleConfig {\n  id: string;\n}\n\n@injectable()\n/** Provides the ability to cache and run ES Modules */\nexport class ModuleFactory {\n  constructor(private container: Container) {}\n  private modules: Map Module> = new Map();\n  add(moduleId: string, module: new () => Module, scope: 'Singleton' | 'Transient' | 'Request' = 'Transient') {\n    if (this.exist(moduleId)) return;\n    this.modules.set(moduleId, module);\n    const m = this.container.bind(moduleId).to(module);\n    switch (scope) {\n      case 'Singleton':\n        m.inSingletonScope();\n        break;\n      case 'Transient':\n        m.inTransientScope();\n        break;\n      case 'Request':\n        m.inRequestScope();\n        break;\n    }\n  }\n  get(moduleId: string) {\n    return this.modules.get(moduleId);\n  }\n  exist(moduleId: string) {\n    return this.modules.has(moduleId);\n  }\n  async load(moduleId: string, props: any) {\n    if (!this.exist(moduleId)) {\n      await import(moduleId).then((ModuleSource) => {\n        this.add(moduleId, ModuleSource.default, props.scope || 'Transient');\n      });\n    }\n    const module = this.container.get(moduleId) as Module;\n    await module.init(props);\n    return module;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModuleFactory.html":{"url":"classes/ModuleFactory.html","title":"class - ModuleFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModuleFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                modules\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                exist\n                            \n                            \n                                get\n                            \n                            \n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: Container)\n                    \n                \n                        \n                            \n                                Defined in src/core/parts/modules/module-factory.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    Container\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/module-factory.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(moduleId: string, module, scope: \"Singleton\" | \"Transient\" | \"Request\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    module\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    scope\n                                    \n                                            \"Singleton\" | \"Transient\" | \"Request\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Transient'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exist\n                        \n                    \n                \n            \n            \n                \nexist(moduleId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(moduleId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load(moduleId: string, props: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Module } from './module';\nimport { injectable } from 'inversify';\nimport type { Container } from 'inversify';\n\nexport interface ModuleConfig {\n  id: string;\n}\n\n@injectable()\n/** Provides the ability to cache and run ES Modules */\nexport class ModuleFactory {\n  constructor(private container: Container) {}\n  private modules: Map Module> = new Map();\n  add(moduleId: string, module: new () => Module, scope: 'Singleton' | 'Transient' | 'Request' = 'Transient') {\n    if (this.exist(moduleId)) return;\n    this.modules.set(moduleId, module);\n    const m = this.container.bind(moduleId).to(module);\n    switch (scope) {\n      case 'Singleton':\n        m.inSingletonScope();\n        break;\n      case 'Transient':\n        m.inTransientScope();\n        break;\n      case 'Request':\n        m.inRequestScope();\n        break;\n    }\n  }\n  get(moduleId: string) {\n    return this.modules.get(moduleId);\n  }\n  exist(moduleId: string) {\n    return this.modules.has(moduleId);\n  }\n  async load(moduleId: string, props: any) {\n    if (!this.exist(moduleId)) {\n      await import(moduleId).then((ModuleSource) => {\n        this.add(moduleId, ModuleSource.default, props.scope || 'Transient');\n      });\n    }\n    const module = this.container.get(moduleId) as Module;\n    await module.init(props);\n    return module;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModuleItem.html":{"url":"classes/ModuleItem.html","title":"class - ModuleItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModuleItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/module-item.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SplitItemView\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loader\n                            \n                            \n                                    Public\n                                module\n                            \n                            \n                                    Public\n                                moduleId\n                            \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clone\n                            \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Promise>\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/module-item.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Module\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/module-item.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        moduleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/module-item.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitExpand\n\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/module-item.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleItem\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:67\n\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:71\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SplitItemView } from '@cosmic/core/browser';\nimport type { Module } from '@cosmic/core/parts';\n\nexport class ModuleItem extends SplitItemView {\n  public loader: Promise>;\n  public moduleId: string;\n  public module: Module;\n  public clone() {\n    const item = new ModuleItem();\n    item.moduleId = this.moduleId;\n    return item;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyPanel.html":{"url":"classes/PropertyPanel.html","title":"class - PropertyPanel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyPanel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/property-panel/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvelteModule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                serialize\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SvelteModule } from '@cosmic/core/parts';\n\nexport default class PropertyPanel extends SvelteModule {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n  serialize() {\n    return {};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rectangle.html":{"url":"classes/Rectangle.html","title":"class - Rectangle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rectangle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/rectangle.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RectangleNode\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _height\n                            \n                            \n                                    Private\n                                _width\n                            \n                            \n                                    Private\n                                rect\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                draw\n                            \n                            \n                                    Private\n                                updateRect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                                \n                                    borderRaidus\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(context: Context)\n                    \n                \n                        \n                            \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        Context\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        rect\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Path\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RECTANGLE'\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        draw\n                        \n                    \n                \n            \n            \n                \ndraw()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateRect\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRect()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:18\n                                \n                            \n\n                \n                    \n                        setwidth(width: number)\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            width\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:27\n                                \n                            \n\n                \n                    \n                        setheight(height: number)\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            height\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        borderRaidus\n                    \n                \n\n                \n                    \n                        getborderRaidus()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:36\n                                \n                            \n\n                \n                    \n                        setborderRaidus(borderRaidus: number)\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            borderRaidus\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import type { RectangleNode } from '../types/shape';\nimport type { Path } from 'canvaskit-wasm';\nimport { Mixin } from 'ts-mixer';\nimport { DefaultShapeMixin } from './mixin/shape';\nimport type { Context } from './context';\n\nexport class Rectangle extends Mixin(DefaultShapeMixin) implements RectangleNode {\n  readonly type = 'RECTANGLE';\n  private rect: Path;\n  private _width: number;\n  private _height: number;\n\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  get width(): number {\n    return this._width;\n  }\n\n  set width(width: number) {\n    this._width = width;\n    this.updateRect();\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  set height(height: number) {\n    this._height = height;\n    this.updateRect();\n  }\n\n  get borderRaidus(): number {\n    return this.cornerRadius;\n  }\n\n  set borderRaidus(borderRaidus: number) {\n    this.cornerRadius = borderRaidus;\n    this.updateRect();\n  }\n\n  private updateRect() {\n    const left = this.x;\n    const top = this.y;\n    const right = this._width + this.x;\n    const bottom = this._height + this.y;\n    const rrect = this.context.ck.RRectXY([left, top, right, bottom], this.cornerRadius, this.cornerRadius);\n    this.rect = new this.context.ck.Path().addRRect(rrect, true);\n  }\n\n  draw(): void {\n    // TODO: use mixin to handle paint and stroke\n    // TODO: set default fills\n    this.context.getCanvas().drawPath(this.rect, this.fills[0]);\n    this.context.getCanvas().drawPath(this.rect, this.strokes[0]);\n    this.context.draw();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RectangleCornerMixin.html":{"url":"classes/RectangleCornerMixin.html","title":"class - RectangleCornerMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RectangleCornerMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/corner.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bottomLeftRadius\n                            \n                            \n                                bottomRightRadius\n                            \n                            \n                                topLeftRadius\n                            \n                            \n                                topRightRadius\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bottomLeftRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bottomRightRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topLeftRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topRightRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CornerMixin {\n  cornerRadius: number;\n}\n\nexport class RectangleCornerMixin {\n  topLeftRadius: number;\n  topRightRadius: number;\n  bottomLeftRadius: number;\n  bottomRightRadius: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceExplorer.html":{"url":"classes/ResourceExplorer.html","title":"class - ResourceExplorer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceExplorer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/resource-explorer/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvelteModule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                serialize\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SvelteModule } from '@cosmic/core/parts';\n\nexport default class ResourceExplorer extends SvelteModule {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n  serialize() {\n    return {};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShapeCanvas.html":{"url":"classes/ShapeCanvas.html","title":"class - ShapeCanvas","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShapeCanvas\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shape-canvas/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvelteModule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                serialize\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SvelteModule } from '@cosmic/core/parts';\n\nexport default class ShapeCanvas extends SvelteModule {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n  serialize() {\n    return {};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardController.html":{"url":"classes/SplitBoardController.html","title":"class - SplitBoardController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeId\n                            \n                            \n                                    Private\n                                expandActive\n                            \n                            \n                                    Private\n                                expandLeaveHandler\n                            \n                            \n                                    Private\n                                expandMouseUpHandler\n                            \n                            \n                                    Private\n                                expandMoveHandler\n                            \n                            \n                                    Private\n                                expandType\n                            \n                            \n                                    Private\n                                startX\n                            \n                            \n                                    Private\n                                startY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeExpand\n                            \n                            \n                                    Public\n                                checkExpandState\n                            \n                            \n                                    Private\n                                liveResize\n                            \n                            \n                                    Public\n                                onMouseDown\n                            \n                            \n                                    Public\n                                setActiveState\n                            \n                            \n                                    Private\n                                unactiveExpand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(view: ISplitBoardView)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        view\n                                                  \n                                                        \n                                                                        ISplitBoardView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandLeaveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMouseUpHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMoveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        activeExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    activeExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkExpandState\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkExpandState(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        liveResize\n                        \n                    \n                \n            \n            \n                \n                    \n                    liveResize(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onMouseDown\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseDown(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setActiveState\n                        \n                    \n                \n            \n            \n                \n                    \n                    setActiveState(index: number, startX: number, startY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        unactiveExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    unactiveExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { directionType } from './type';\nimport type { ISplitBoardView } from './type';\n\nexport default class SplitBoardController {\n  private expandMoveHandler!: (event: MouseEvent) => void;\n  private expandLeaveHandler!: (event: MouseEvent) => void;\n  private expandMouseUpHandler!: (event: MouseEvent) => void;\n\n  private startX = 0;\n  private startY = 0;\n  private activeId = -1;\n\n  private expandActive = false;\n  private expandType = 0; // 是否超过偏移值 0 / 1 expand hor | 2 expand ver | 3 merge hor | 4 merge ver\n\n  constructor(private view: ISplitBoardView) {\n    this.expandMoveHandler = (event: MouseEvent) => {\n      this.liveResize(event.clientX, event.clientY);\n      this.checkExpandState(event.clientX, event.clientY);\n    };\n    this.expandLeaveHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.expandMouseUpHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.view.root.addEventListener('mousedown', (event: MouseEvent) => {\n      this.onMouseDown(event);\n    });\n  }\n  public onMouseDown(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    let index = -1;\n    this.view.items.forEach((item, i) => {\n      if (target && item.root === target.parentElement && target.classList.contains('split-expand')) index = i;\n    });\n    if (index === -1) {\n      return;\n    }\n    if (index > -1) {\n      this.setActiveState(index, event.clientX, event.clientY);\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  public setActiveState(index: number, startX: number, startY: number) {\n    // 锚点mousedown\n    this.startX = startX;\n    this.startY = startY;\n    this.activeExpand();\n    this.activeId = index;\n  }\n  private activeExpand() {\n    this.view.root.addEventListener('mousemove', this.expandMoveHandler);\n    this.view.root.addEventListener('mouseleave', this.expandLeaveHandler);\n    this.view.root.addEventListener('mouseup', this.expandMouseUpHandler);\n    this.expandActive = true;\n    this.expandType = 0;\n    this.view.setCursor('crosshair');\n  }\n  private unactiveExpand() {\n    if (this.expandActive) {\n      this.view.root.removeEventListener('mousemove', this.expandMoveHandler);\n      this.view.root.removeEventListener('mouseleave', this.expandLeaveHandler);\n      this.view.root.removeEventListener('mouseup', this.expandMouseUpHandler);\n      this.view.cancelForMerge();\n      this.expandActive = false;\n      this.expandType = 0;\n      this.view.setCursor('');\n    }\n  }\n  private liveResize(clientX: number, clientY: number) {\n    const item = this.view.items[this.activeId];\n    if (this.expandType === 1 && this.view.direction === directionType.col) {\n      // horizontal expand column\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n    } else if (this.expandType === 2 && this.view.direction === directionType.row) {\n      // vertical expand row\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n    }\n  }\n  public checkExpandState(clientX: number, clientY: number) {\n    const offsetX = this.startX - clientX;\n    const offsetY = this.startY - clientY;\n    /** expand mode */\n    if (this.expandType === 0 && offsetX > 0 && offsetY > 0 && (offsetX > 5 || offsetY > 5)) {\n      if (offsetX > offsetY) {\n        this.view.setCursor('col-resize');\n      } else {\n        this.view.setCursor('row-resize');\n      }\n    }\n    /** merge mode */\n    if (offsetX  5) {\n      this.view.setCursor('w-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'w');\n      return;\n    }\n\n    if (offsetY  5) {\n      this.view.setCursor('n-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'n');\n      return;\n    }\n\n    if (this.expandType) return;\n    /** do expand */\n    if (offsetX > 30) {\n      this.expandType = 1;\n      this.view.setCursor('col-resize');\n      this.view.splitColumnAt(this.activeId, clientX, clientY);\n      return;\n    }\n    if (offsetY > 30) {\n      this.expandType = 2;\n      this.view.setCursor('row-resize');\n      this.view.splitRowAt(this.activeId, clientX, clientY);\n    }\n    if (\n      (this.expandType === 1 && this.view.direction === directionType.row) ||\n      (this.expandType === 2 && this.view.direction === directionType.col)\n    ) {\n      this.unactiveExpand();\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitItemView.html":{"url":"classes/SplitItemView.html","title":"class - SplitItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-item.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitExpand\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:67\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view';\nimport SplitExpand from './split-expand.svelte';\n\nenum directionStyles {\n  'w' = 'merge-w',\n  'e' = 'merge-e',\n  's' = 'merge-s',\n  'n' = 'merge-n',\n}\n\nexport default class SplitItemView extends View {\n  private _growClassName = '';\n  private _shrinkClassName = '';\n  private _bgColorClassName: string[] = ['bg-cgray-100', 'dark:bg-cgray-800'];\n\n  public contentView!: HTMLElement;\n  private expand!: SplitExpand;\n\n  constructor() {\n    super();\n    this.addExpandButton();\n    this.setDefaultClass();\n  }\n\n  public setContent(contentView: HTMLElement): SplitItemView {\n    this.contentView = contentView;\n    this.root.classList.add('split-item', 'flex');\n    contentView.classList.add('flex', 'flex-1');\n    return this.prepend(contentView);\n  }\n\n  public replaceContent(contentView: HTMLElement): SplitItemView {\n    this.root.replaceChild(contentView, this.contentView);\n    this.contentView = contentView;\n    contentView.classList.add('flex', 'flex-1');\n    return this;\n  }\n\n  public setGrow(className = 'flex-grow'): void {\n    this.root.classList.remove(this._shrinkClassName);\n    this._shrinkClassName = '';\n    this._growClassName = className;\n    this.root.classList.add(this._growClassName);\n  }\n\n  public setShrink(className = 'flex-shrink'): void {\n    this.root.classList.remove(this._growClassName);\n    this._growClassName = '';\n    this._shrinkClassName = className;\n    this.root.classList.add(this._shrinkClassName);\n  }\n\n  public isShrink(): boolean {\n    return !!this._growClassName;\n  }\n\n  private setDefaultClass() {\n    this.root.classList.add('flex-grow', 'rounded-xl');\n    this.root.classList.add('relative');\n    this.root.classList.add(...this._bgColorClassName);\n  }\n\n  private addExpandButton() {\n    this.expand = new SplitExpand({ target: this.root });\n  }\n  /** To hide expand button */\n  public hideExpandButton(): void {\n    this.expand.expandHidden = true;\n  }\n\n  public waitForMerge(direction: 'w' | 'e' | 's' | 'n'): void {\n    this.cancelWaitForMerge();\n    this.root.classList.add('wait-for-merge');\n    this.expand.mergeDirection = directionStyles[direction];\n  }\n\n  public cancelWaitForMerge(): void {\n    this.root.classList.remove('wait-for-merge');\n    this.expand.mergeDirection = '';\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SvelteModule.html":{"url":"classes/SvelteModule.html","title":"class - SvelteModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SvelteModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/svelte-module.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Controller\n            \n\n            \n                Implements\n            \n            \n                            Module\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Abstract\n                                initWithComponent\n                            \n                            \n                                    Abstract\n                                serialize\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-module.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-module.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-module.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    initWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SvelteComponentDev\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        serialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    serialize()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\nimport type { SvelteComponentDev } from 'svelte/internal';\nimport { Controller } from '@cosmic/core/browser';\nimport type { Module } from './module';\n\n@injectable()\nexport abstract class SvelteModule extends Controller implements Module {\n  private comp: SvelteComponentDev;\n  private _view: HTMLElement;\n  public props: T;\n\n  public view() {\n    return this._view;\n  }\n\n  public async init(props: T) {\n    this.props = props;\n    this._view = this._view || document.createElement('div');\n    return this;\n  }\n\n  abstract initWithComponent(target: Element): SvelteComponentDev;\n\n  viewWillAppear() {\n    this.comp = this.initWithComponent(this._view);\n  }\n\n  public async destroy() {\n    this.comp.$destroy();\n    if (this._view.parentNode) {\n      this._view.parentNode.removeChild(this._view);\n    }\n    return this;\n  }\n\n  abstract serialize(): T;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/View.html":{"url":"classes/View.html","title":"class - View","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  View\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/view.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root?: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/view.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/view.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        type FlowValue = '1' | 'auto' | 'initial' | 'none';\n\nexport default class View {\n  public root: HTMLElement;\n  constructor(root?: HTMLElement) {\n    this.root = root || document.createElement('div');\n  }\n  setFlow(type: FlowValue) {\n    this.root.classList.remove('flex-1', 'flex-auto', 'flex-initial', 'flex-none');\n    this.root.classList.add(`flex-${type}`);\n    return this;\n  }\n  append(child: HTMLElement) {\n    this.root.appendChild(child);\n    return this;\n  }\n  prepend(...childs: HTMLElement[]) {\n    this.root.prepend(...childs);\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeightMap.html":{"url":"interfaces/WeightMap.html","title":"interface - WeightMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WeightMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [index: string]:        number\n\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:11\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Workbench.html":{"url":"classes/Workbench.html","title":"class - Workbench","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Workbench\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Controller\n            \n\n            \n                Implements\n            \n            \n                            Module\n                            ItemGenerateDelegate\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                moduleFactory\n                            \n                            \n                                    Public\n                                props\n                            \n                            \n                                    Private\n                                splitBoard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                expandNewItem\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                serialize\n                            \n                            \n                                view\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleFactory: ModuleFactory)\n                    \n                \n                        \n                            \n                                Defined in src/modules/workbench/index.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleFactory\n                                                  \n                                                        \n                                                                        ModuleFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        moduleFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModuleFactory\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkbenchProps\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        splitBoard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SplitBoardView>\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:20\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expandNewItem\n                        \n                    \n                \n            \n            \n                \nexpandNewItem(view: ModuleItem, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    view\n                                    \n                                                ModuleItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: WorkbenchProps)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                WorkbenchProps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { type: \"col\" | \"row\"; minWidth: number; scale: {}; modules: {}; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n            \n                \nview()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\nimport { ModuleItem } from './module-item';\n\ninterface WorkbenchProps {\n  type: 'col' | 'row';\n  minWidth: number;\n  scale: number[];\n  modules?: ModuleConfig[];\n}\n\n@injectable()\nexport default class Workbench\n  extends Controller\n  implements Module, ItemGenerateDelegate>\n{\n  public props: WorkbenchProps;\n  private splitBoard: SplitBoardView>;\n  private moduleFactory: ModuleFactory;\n  constructor(@inject('ModuleFactory') moduleFactory: ModuleFactory) {\n    super();\n    this.splitBoard = new SplitBoardView>().setFlow('1');\n    this.splitBoard.itemGenerateDelegate = this;\n    this.moduleFactory = moduleFactory;\n  }\n  view() {\n    return this.splitBoard.root;\n  }\n  async init(props: WorkbenchProps) {\n    this.props = props;\n    this.splitBoard.direction = directionType[props.type];\n    for (const p of props.modules || []) {\n      const item = new ModuleItem();\n      item.loader = this.moduleFactory.load(p.id, p);\n      item.moduleId = p.id;\n      this.splitBoard.addItem(item);\n    }\n    this.splitBoard.applySplit(\n      this.splitBoard.direction === directionType.col ? 'horizontal' : 'vertical',\n      props.scale || []\n    );\n    return this;\n  }\n\n  viewWillAppear(): void {\n    this.splitBoard.items.forEach((item, index) => {\n      const view = this.splitBoard.items[index];\n      item.loader.then((module) => {\n        if (module instanceof Controller) {\n          view.setContent(module.view());\n          view.module = module;\n          module.viewWillAppear();\n          module.viewDidDisappear();\n        }\n      });\n    });\n    /** to be completed */\n  }\n  viewDidAppear(): void {\n    /** to be completed */\n  }\n\n  viewWillDisappear(): void {\n    /** to be completed */\n  }\n  viewDidDisappear(): void {\n    /** to be completed */\n  }\n\n  public async destroy() {\n    const view = this.view();\n    this.viewWillDisappear();\n    if (view.parentNode) {\n      view.parentNode.removeChild(view);\n    }\n    this.viewDidDisappear();\n    return this;\n  }\n  expandNewItem(view: ModuleItem, index: number) {\n    const item = view.clone();\n    item.loader = this.moduleFactory.load(item.moduleId, view.module.serialize());\n    item.loader.then((module) => {\n      if (module instanceof Controller) {\n        item.module = module;\n        item.setContent(module.view());\n        module.viewWillAppear();\n        module.viewDidDisappear();\n      }\n    });\n    return item;\n  }\n\n  serialize() {\n    return {\n      type: this.props.type,\n      minWidth: this.props.minWidth,\n      scale: this.props.scale,\n      modules: [],\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkbenchProps.html":{"url":"interfaces/WorkbenchProps.html","title":"interface - WorkbenchProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkbenchProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            minWidth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            modules\n                                        \n                                \n                                \n                                        \n                                            scale\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        minWidth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minWidth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modules\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modules:     ModuleConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scale:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"col\" | \"row\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"col\" | \"row\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\nimport { ModuleItem } from './module-item';\n\ninterface WorkbenchProps {\n  type: 'col' | 'row';\n  minWidth: number;\n  scale: number[];\n  modules?: ModuleConfig[];\n}\n\n@injectable()\nexport default class Workbench\n  extends Controller\n  implements Module, ItemGenerateDelegate>\n{\n  public props: WorkbenchProps;\n  private splitBoard: SplitBoardView>;\n  private moduleFactory: ModuleFactory;\n  constructor(@inject('ModuleFactory') moduleFactory: ModuleFactory) {\n    super();\n    this.splitBoard = new SplitBoardView>().setFlow('1');\n    this.splitBoard.itemGenerateDelegate = this;\n    this.moduleFactory = moduleFactory;\n  }\n  view() {\n    return this.splitBoard.root;\n  }\n  async init(props: WorkbenchProps) {\n    this.props = props;\n    this.splitBoard.direction = directionType[props.type];\n    for (const p of props.modules || []) {\n      const item = new ModuleItem();\n      item.loader = this.moduleFactory.load(p.id, p);\n      item.moduleId = p.id;\n      this.splitBoard.addItem(item);\n    }\n    this.splitBoard.applySplit(\n      this.splitBoard.direction === directionType.col ? 'horizontal' : 'vertical',\n      props.scale || []\n    );\n    return this;\n  }\n\n  viewWillAppear(): void {\n    this.splitBoard.items.forEach((item, index) => {\n      const view = this.splitBoard.items[index];\n      item.loader.then((module) => {\n        if (module instanceof Controller) {\n          view.setContent(module.view());\n          view.module = module;\n          module.viewWillAppear();\n          module.viewDidDisappear();\n        }\n      });\n    });\n    /** to be completed */\n  }\n  viewDidAppear(): void {\n    /** to be completed */\n  }\n\n  viewWillDisappear(): void {\n    /** to be completed */\n  }\n  viewDidDisappear(): void {\n    /** to be completed */\n  }\n\n  public async destroy() {\n    const view = this.view();\n    this.viewWillDisappear();\n    if (view.parentNode) {\n      view.parentNode.removeChild(view);\n    }\n    this.viewDidDisappear();\n    return this;\n  }\n  expandNewItem(view: ModuleItem, index: number) {\n    const item = view.clone();\n    item.loader = this.moduleFactory.load(item.moduleId, view.module.serialize());\n    item.loader.then((module) => {\n      if (module instanceof Controller) {\n        item.module = module;\n        item.setContent(module.view());\n        module.viewWillAppear();\n        module.viewDidDisappear();\n      }\n    });\n    return item;\n  }\n\n  serialize() {\n    return {\n      type: this.props.type,\n      minWidth: this.props.minWidth,\n      scale: this.props.scale,\n      modules: [],\n    };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/classBuilder.html":{"url":"classes/classBuilder.html","title":"class - classBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  classBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                orderedConfigs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addConfig\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Private\n                                insertConfig\n                            \n                            \n                                    Private\n                                normalizeWeight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configs: stateConfig[], weightMap: WeightMap)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                        stateConfig[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weightMap\n                                                  \n                                                        \n                                                                        WeightMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orderedConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         stateConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/class-builder.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    addConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        normalizeWeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    normalizeWeight(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         stateConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/classConfig.html":{"url":"interfaces/classConfig.html","title":"interface - classConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  classConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            createWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            mainWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            notification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            interface\n            ISettings\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            variable\n            settings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            class\n            classBuilder\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            classConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            stateConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            WeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            variable\n            defaultWeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/controller.ts\n            \n            class\n            Controller\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.controller.ts\n            \n            class\n            SplitBoardController\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            class\n            SplitBoardView\n            \n                3 %\n                (1/28)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            variable\n            lowBoardRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-item.view.ts\n            \n            class\n            SplitItemView\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/core/browser/layout/type.ts\n            \n            interface\n            ISplitBoardView\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/core/browser/layout/type.ts\n            \n            interface\n            ItemGenerateDelegate\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            function\n            makeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BgColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BorderColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlAccentColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlBackgroundColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlDisabledColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlForbiddenColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlHighlightColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            FourthBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            GridBackgroundColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            LabelColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemBlueColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemGrayColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemOrangeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemPinkColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemRedColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemYellowColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TextFieldBackground\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/view.ts\n            \n            class\n            View\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/color-ref.ts\n            \n            class\n            ColorRef\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/uuid.ts\n            \n            variable\n            uuid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/ioc/inject.ts\n            \n            function\n            inject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module-factory.ts\n            \n            class\n            ModuleFactory\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module-factory.ts\n            \n            interface\n            ModuleConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module.ts\n            \n            interface\n            Module\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/core/parts/modules/svelte-module.ts\n            \n            class\n            SvelteModule\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/canvas-kit.ts\n            \n            function\n            getCanvasKit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/context.ts\n            \n            class\n            Context\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/base.ts\n            \n            class\n            Base\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/corner.ts\n            \n            class\n            CornerMixin\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/corner.ts\n            \n            class\n            RectangleCornerMixin\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/geometry.ts\n            \n            class\n            GeometryMixin\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/layout.ts\n            \n            class\n            LayoutMixin\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/shape.ts\n            \n            class\n            DefaultShapeMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/rectangle.ts\n            \n            class\n            Rectangle\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/menu-group/base-menu.ts\n            \n            class\n            BaseMenu\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/menu-group/index.ts\n            \n            class\n            MenuBar\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/menu-group/index.ts\n            \n            interface\n            MenuProps\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/property-panel/index.ts\n            \n            class\n            PropertyPanel\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/index.ts\n            \n            class\n            ResourceExplorer\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/shape-canvas/index.ts\n            \n            class\n            ShapeCanvas\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/workbench/index.ts\n            \n            class\n            Workbench\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/workbench/index.ts\n            \n            interface\n            WorkbenchProps\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/workbench/module-item.ts\n            \n            class\n            ModuleItem\n            \n                4 %\n                (1/24)\n            \n        \n        \n            \n                \n                src/workbench/desktop/app.ts\n            \n            class\n            App\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/workbench/desktop/main.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/services/appearance-service.ts\n            \n            class\n            AppearanceService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @types/color : ^3.0.1\n        \n            canvaskit-wasm : ~0.28.1\n        \n            color : ^3.1.3\n        \n            electron-log : ^4.3.1\n        \n            electron-store : ^7.0.2\n        \n            electron-updater : ^4.3.5\n        \n            eventemitter2 : ^6.4.4\n        \n            inversify : ^5.1.1\n        \n            keycode : ^2.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            smelte : ^1.1.5\n        \n            split.js : ^1.6.4\n        \n            ts-mixer : ~6.0.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppearanceType   (src/.../appearance.ts)\n                        \n                        \n                            directionStyles   (src/.../split-item.view.ts)\n                        \n                        \n                            directionType   (src/.../type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/common/appearance.ts\n    \n        \n            \n                \n                    \n                        \n                        AppearanceType\n                    \n                \n                    \n                        \n                            模式类型\n\n                        \n                    \n                        \n                            \n                                 any\n                            \n                        \n                        \n                            \n                                 light\n                            \n                        \n                        \n                            \n                                 dark\n                            \n                        \n            \n        \n\n    src/core/browser/layout/split-item.view.ts\n    \n        \n            \n                \n                    \n                        \n                        directionStyles\n                    \n                \n                        \n                            \n                                 w\n                            \n                        \n                        \n                            \n                                Value : merge-w\n                            \n                        \n                        \n                            \n                                 e\n                            \n                        \n                        \n                            \n                                Value : merge-e\n                            \n                        \n                        \n                            \n                                 s\n                            \n                        \n                        \n                            \n                                Value : merge-s\n                            \n                        \n                        \n                            \n                                 n\n                            \n                        \n                        \n                            \n                                Value : merge-n\n                            \n                        \n            \n        \n\n    src/core/browser/layout/type.ts\n    \n        \n            \n                \n                    \n                        \n                        directionType\n                    \n                \n                        \n                            \n                                 col\n                            \n                        \n                        \n                            \n                                 row\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getCanvasKit   (src/.../canvas-kit.ts)\n                        \n                        \n                            inject   (src/.../inject.ts)\n                        \n                        \n                            makeColor   (src/.../ui-color.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/draw-canvas/skia-wasm/canvas-kit.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCanvasKit\n                        \n                    \n                \n            \n            \n                \ngetCanvasKit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise | void\n\n                    \n                \n            \n        \n    \n    src/core/parts/ioc/inject.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inject\n                        \n                    \n                \n            \n            \n                \ninject(token)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        makeColor\n                        \n                    \n                \n            \n            \n                \nmakeColor(anyColorHex, lightColorHex?, darkColorHex?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anyColorHex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    darkColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCosmic Design\n\n\n\n\n\n\n🚧 ing...\n\nThe Repository\nCosmic design is a concrete practice of D2R.\nThis repository is where we develop it together with the community. Not only do we work on code and issues here, we also publish our roadmap , development guide. This source code is available to everyone under the standard MIT license.\nAbout Cosmic Design\n\n🚧 ing...\n\nHow it works\nThe template required a minimum dependencies. Only Vite is used for building, nothing more.\nProject Structure\nThe structure of this template is very similar to the structure of a monorepo.\nThe entire source code of the program is divided into three modules (packages) that are bundled each independently:\n\nsrc/core\nInclude common dependencies, such as components, utils, ipc.\nsrc/app\nElectron main script.\nsrc/modules\nModules of tools\nsrc/workbench\nElectron web page.\n\nCosmic Components\n\nComponents StoryBook\nsrc/core/components\n\nCompile App\nNext step is run packaging and compilation a ready for distribution Electron app for macOS, Windows and Linux with \"auto update\" support out of the box.\nTo do this, using the electron-builder:\n\nIn npm script compile: This script is configured to compile the application as quickly as possible. It is not ready for distribution, is compiled only for the current platform and is used for debugging.\nIn GitHub Action: The application is compiled for any platform and ready-to-distribute files are automatically added to the draft GitHub release.\n\nContribution\nSee Wiki Contributing\n\nSource Code Organization\nUser Interface\nColor Set\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 qiansc\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    26 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/stateConfig.html":{"url":"interfaces/stateConfig.html","title":"interface - stateConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  stateConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:         classConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         classConfig[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FlowValue   (src/.../view.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/browser/view.ts\n    \n    \n        \n            \n                \n                    \n                    FlowValue\n                \n            \n            \n                \n                        \"1\" | \"auto\" | \"initial\" | \"none\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (src/.../main.ts)\n                        \n                        \n                            BgColor   (src/.../ui-color.ts)\n                        \n                        \n                            BorderColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlAccentColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlDisabledColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlForbiddenColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlHighlightColor   (src/.../ui-color.ts)\n                        \n                        \n                            createWindow   (src/.../index.ts)\n                        \n                        \n                            defaultWeightMap   (src/.../class-builder.ts)\n                        \n                        \n                            FourthBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            GridBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            isProd   (src/.../index.ts)\n                        \n                        \n                            isProd   (src/.../logger.ts)\n                        \n                        \n                            LabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            logger   (src/.../logger.ts)\n                        \n                        \n                            lowBoardRoot   (src/.../split-board.view.ts)\n                        \n                        \n                            mainWindow   (src/.../index.ts)\n                        \n                        \n                            notification   (src/.../index.ts)\n                        \n                        \n                            SecondaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            SecondaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            settings   (src/.../settings.ts)\n                        \n                        \n                            SystemBlueColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemGrayColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemOrangeColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemPinkColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemRedColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemYellowColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            TextFieldBackground   (src/.../ui-color.ts)\n                        \n                        \n                            uuid   (src/.../uuid.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new App(document.body)\n                    \n                \n\n\n        \n    \n\n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#E0E0E0', '#E0E0E0', '#1F1F1F')\n                    \n                \n\n            \n                \n                    三级背景色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BorderColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D9D9D9', '#D9D9D9', '#D9D9D9')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlAccentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#5580c0', '#5580c0', '#5580c0')\n                    \n                \n\n            \n                \n                    高亮色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#FFFFFF', '#5D5F61')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlDisabledColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F9F9F9', '#F9F9F9', '#464749')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlForbiddenColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlHighlightColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#ffae2b', '#ffae2b', '#ffae2b')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FourthBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#BABABA', '#BABABA', '#454545')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GridBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F2F2F2', '#F2F2F2', '#2E2F30')\n                    \n                \n\n            \n                \n                    组件色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#E0E0E0')\n                    \n                \n\n            \n                \n                    三级标签色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D7D7D7', '#D7D7D7', '#272728')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#808080')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemBlueColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#729cd4', '#729cd4', '#729cd4')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemGrayColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c0c0c1', '#c0c0c1', '#c0c0c1')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemOrangeColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemPinkColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c4666f', '#c4666f', '#c4666f')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemRedColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemYellowColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n            \n                \n                    辅助色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#C6C6C6', '#C6C6C6', '#393939')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#3F3F3F', '#3F3F3F', '#3F3F3F')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TextFieldBackground\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#F2F2F2', '#454545')\n                    \n                \n\n\n        \n    \n\n    src/app/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createWindow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  mainWindow = new BrowserWindow({\n    width: 900,\n    height: 680,\n    webPreferences: {\n      devTools: isProd ? false : true,\n      contextIsolation: true,\n      enableRemoteModule: false,\n      // preload: join(__dirname, 'preload.js'),\n    },\n  });\n\n  const url =\n    // process.env.NODE_ENV === \"production\"\n    isProd\n      ? // in production, use the statically build version of our application\n        `file://${join(__dirname, 'dist/workbench/desktop/', 'index.html')}`\n      : // in dev, target the host and port of the local rollup web server\n        'http://localhost:5000/workbench/desktop/';\n\n  mainWindow.loadURL(url).catch((err: any) => {\n    logger.error(JSON.stringify(err));\n    app.quit();\n  });\n\n  if (!isProd) mainWindow.webContents.openDevTools();\n\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BrowserWindow | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Notification | null\n\n                    \n                \n\n\n        \n    \n\n    src/core/browser/class-builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultWeightMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WeightMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/utils/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log\n                    \n                \n\n\n        \n    \n\n    src/core/browser/layout/split-board.view.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lowBoardRoot\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('FlowTableRoot')\n                    \n                \n\n\n        \n    \n\n    src/app/utils/settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ElectronStore({\n  defaults: {\n    check: false,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/core/common/uuid.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): string => {\n  const s: string[] | number[] = [];\n  const hexDigits = '0123456789abcdef';\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
