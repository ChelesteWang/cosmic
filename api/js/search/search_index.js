var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/App.html",[0,0.13,1,2.101]],["body/classes/App.html",[0,0.086,1,2.127,2,0.37,3,0.197,4,0.176,5,0.176,6,1.936,7,0.096,8,0.37,9,0.803,10,3.725,11,3.737,12,0.803,13,2.084,14,4.725,15,4.725,16,4.725,17,4.725,18,4.725,19,4.725,20,3.486,21,3.486,22,4.725,23,4.725,24,3.486,25,4.725,26,0.832,27,1.936,28,1.917,29,1.284,30,3.486,31,1.017,32,0.026,33,1.017,34,0.429,35,0.823,36,2.337,37,2.287,38,0.653,39,0.951,40,1.414,41,2.337,42,2.287,43,1.426,44,2.287,45,0.978,46,2.287,47,2.287,48,2.287,49,2.287,50,3.486,51,2.287,52,3.486,53,2.287,54,2.287,55,2.287,56,3.486,57,3.41,58,2.287,59,2.287,60,0.927,61,0.832,62,1.533,63,1.885,64,1.02,65,1.268,66,1.182,67,1.533,68,2.287,69,2.952,70,1.395,71,2.287,72,1.097,73,3.486,74,2.287,75,2.287,76,3.486,77,2.287,78,3.486,79,3.486,80,2.287,81,3.486,82,2.287,83,2.337,84,2.287,85,1.395,86,2.287,87,0.197,88,1.395,89,2.6,90,2.287,91,1.705,92,2.287,93,2.287,94,2.287,95,2.287,96,2.287,97,2.6,98,2.287,99,1.284,100,2.287,101,2.287,102,2.127,103,2.287,104,2.287,105,1.705,106,2.287,107,2.287,108,2.287,109,2.287,110,2.287,111,2.287,112,2.287,113,2.287,114,2.287,115,2.287,116,1.705,117,2.287,118,2.952,119,2.287,120,4.725,121,2.287,122,2.108,123,2.6,124,1.719,125,4.001,126,2.287,127,3.486,128,2.287,129,2.287,130,2.287,131,2.287,132,0.951,133,2.287,134,2.287,135,0.008,136,0.013,137,0.008]],["title/classes/AppearanceService.html",[0,0.13,67,2.308]],["body/classes/AppearanceService.html",[0,0.137,2,0.587,3,0.313,4,0.279,5,0.279,7,0.153,8,0.515,9,0.938,12,1.118,29,1.224,31,1.045,32,0.026,33,1.045,34,0.523,35,0.846,38,0.91,39,2.02,40,1.195,43,1.26,45,0.875,57,4.358,60,0.819,61,1.32,62,2.433,67,3.255,87,0.313,116,3.621,135,0.013,136,0.017,137,0.013,138,5.306,139,2.707,140,5.471,141,5.471,142,1.147,143,4.856,144,4.856,145,3.63,146,4.946,147,3.63,148,4.856,149,3.63,150,4.856,151,1.877,152,3.63,153,4.856,154,3.074,155,2.02,156,1.877,157,3.63,158,5.471,159,3.63,160,3.63,161,0.893]],["title/classes/BaseMenu.html",[0,0.13,162,2.568]],["body/classes/BaseMenu.html",[0,0.158,2,0.676,3,0.361,4,0.322,5,0.322,7,0.176,8,0.565,9,0.878,12,1.226,26,1.521,29,1.178,31,1.146,32,0.025,33,1.146,34,0.49,35,0.928,43,0.963,45,0.798,60,0.798,69,3.541,70,3.764,72,2.005,87,0.361,88,2.551,132,2.651,135,0.015,136,0.019,137,0.015,142,1.021,162,3.971,163,2.567,164,5.224,165,3.541,166,5.86,167,5.326,168,4.182,169,5.326,170,5.326,171,5.326,172,3.455,173,4.182,174,4.509,175,4.182,176,4.182,177,4.182]],["title/classes/ColorRef.html",[0,0.13,178,2.568]],["body/classes/ColorRef.html",[0,0.138,2,0.591,3,0.315,4,0.281,5,0.281,7,0.154,8,0.517,9,0.987,12,1.123,26,1.329,29,1.226,31,1.05,32,0.025,33,1.05,34,0.483,35,0.85,38,0.914,43,0.841,57,4.208,60,0.73,87,0.315,116,2.725,135,0.013,136,0.018,137,0.013,142,0.957,161,1.441,178,3.637,179,5.316,180,3.094,181,6.41,182,6.41,183,6.41,184,5.192,185,4.877,186,4.877,187,3.269,188,3.654,189,3.654,190,4.877,191,3.654,192,3.654,193,5.49,194,4.877,195,4.877,196,2.725,197,4.094,198,3.654,199,3.654]],["title/classes/Controller.html",[0,0.13,65,1.252]],["body/classes/Controller.html",[0,0.157,2,0.675,3,0.36,4,0.321,5,0.321,7,0.176,12,1.224,28,1.697,29,1.279,32,0.026,43,1.466,45,0.923,60,0.625,61,1.517,65,1.934,87,0.36,135,0.015,136,0.019,137,0.015,155,2.212,200,3.532,201,5.219,202,1.619,203,2.955,204,2.955,205,2.749,206,2.955,207,4.171,208,4.171,209,4.171,210,4.171,211,4.171,212,5.853,213,4.171,214,4.171,215,2.545,216,4.171,217,4.171,218,4.171,219,5.317]],["title/interfaces/ISettings.html",[220,0.365,221,2.568]],["body/interfaces/ISettings.html",[3,0.421,4,0.375,5,0.375,7,0.205,8,0.621,32,0.025,34,0.375,38,0.913,40,1.199,60,0.73,87,0.421,99,1.122,135,0.018,136,0.021,137,0.018,220,0.517,221,4.366,222,1.772,223,3.634,224,5.638,225,4.68,226,4.957,227,3.634,228,4.126,229,4.366,230,4.126,231,3.634]],["title/interfaces/ISplitBoardView.html",[220,0.365,232,2.101]],["body/interfaces/ISplitBoardView.html",[3,0.298,4,0.266,5,0.266,7,0.26,8,0.498,32,0.026,34,0.512,45,0.925,60,0.703,87,0.461,135,0.012,136,0.017,137,0.012,151,3.466,202,1.504,220,0.498,222,1.257,232,2.865,233,2.316,234,1.708,235,4.848,236,4.014,237,4.848,238,4.848,239,4.848,240,4.848,241,4.848,242,4.848,243,2.745,244,3.206,245,2.577,246,2.926,247,2.108,248,2.865,249,2.63,250,1.657,251,2.577,252,2.926,253,2.428,254,2.606,255,4.606,256,2.926,257,2.865,258,2.63,259,2.63,260,2.63,261,2.926,262,2.926,263,2.926,264,3.502,265,3.502]],["title/interfaces/ItemGenerateDelegate.html",[220,0.365,250,1.651]],["body/interfaces/ItemGenerateDelegate.html",[3,0.334,4,0.298,5,0.298,7,0.269,8,0.537,32,0.026,34,0.461,45,0.955,60,0.758,87,0.487,135,0.014,136,0.018,137,0.014,151,2.618,202,1.483,220,0.537,222,1.407,232,2.36,233,2.593,234,1.407,235,3.275,236,3.395,237,3.275,238,3.275,239,3.275,240,3.275,241,3.275,242,3.275,243,2.428,244,2.836,245,2.885,246,3.275,247,2.36,248,3.09,249,2.836,250,2.428,251,4.467,252,3.275,253,2.618,254,2.652,255,4.757,256,3.275,257,3.09,258,2.836,259,2.836,260,2.836,261,3.275,262,3.275,263,3.275,264,3.777,265,3.777]],["title/classes/Menu.html",[0,0.13,132,1.432]],["body/classes/Menu.html",[0,0.093,2,0.399,3,0.213,4,0.19,5,0.19,7,0.232,8,0.391,9,1.003,10,3.206,11,3.29,12,0.849,26,0.896,28,1.677,29,1.291,31,1.056,32,0.025,33,1.294,34,0.471,35,0.855,38,0.919,39,1.839,40,1.208,41,2.473,43,1.21,45,0.88,60,0.735,72,2.12,85,3.206,87,0.213,89,2.751,99,0.849,122,1.099,125,2.087,132,2.042,135,0.009,136,0.013,137,0.009,142,1.151,161,1.088,163,2.695,172,3.202,174,3.743,187,1.652,254,2.144,266,2.087,267,4.831,268,2.08,269,5.256,270,4.421,271,4.421,272,4.908,273,2.042,274,1.769,275,3.689,276,3.689,277,3.123,278,2.031,279,3.689,280,2.465,281,2.465,282,2.465,283,3.587,284,2.465,285,2.465,286,5.256,287,2.465,288,2.465,289,2.465,290,2.465,291,3.689,292,2.465,293,3.689,294,2.465,295,3.689,296,2.465,297,2.465,298,1.646,299,2.465,300,1.838,301,2.465,302,2.465,303,2.465,304,2.465,305,2.465,306,2.465,307,2.465,308,2.465,309,2.465,310,2.465,311,2.465,312,2.465,313,1.182,314,2.465,315,2.465,316,2.465,317,2.465,318,2.465,319,2.465,320,2.465,321,2.465]],["title/classes/MenuBar.html",[0,0.13,322,2.308]],["body/classes/MenuBar.html",[0,0.11,2,0.47,3,0.251,4,0.224,5,0.224,7,0.122,8,0.441,9,0.876,12,0.959,13,2.273,28,1.329,29,1.307,31,0.896,32,0.026,33,0.896,34,0.463,35,0.726,38,0.545,40,0.715,43,1.444,45,0.842,60,0.842,61,1.057,63,1.297,64,1.297,65,2.24,66,2.153,87,0.251,99,0.959,124,1.932,132,2.609,135,0.01,136,0.015,137,0.01,142,0.848,155,1.732,156,1.503,161,1.307,163,2.563,202,1.395,203,2.332,204,2.332,205,2.369,206,2.332,220,0.308,234,1.514,243,1.394,250,1.394,268,1.514,273,2.209,274,1.996,278,1.329,322,2.791,323,2.168,324,2.54,325,1.891,326,2.724,327,3.627,328,4.164,329,2.369,330,2.907,331,2.907,332,3.92,333,2.907,334,2.907,335,2.153,336,1.996,337,2.907,338,3.525,339,2.907,340,2.907,341,3.26,342,2.695,343,2.907,344,2.907,345,1.774,346,1.774,347,1.774,348,1.394,349,1.774,350,3.105,351,1.774,352,2.168,353,2.168,354,2.462,355,2.168,356,2.462,357,2.168,358,2.168,359,2.168,360,2.168]],["title/classes/MenuGroupService.html",[0,0.13,70,2.101]],["body/classes/MenuGroupService.html",[0,0.129,2,0.554,3,0.296,4,0.264,5,0.264,7,0.144,8,0.495,9,0.923,10,3.642,12,1.075,26,1.932,28,1.906,29,1.238,31,1.005,32,0.026,33,1.005,34,0.439,35,0.814,40,0.843,43,1.223,45,0.854,60,0.699,61,1.246,70,2.849,72,3.023,87,0.296,89,3.483,99,1.223,132,2.785,135,0.012,136,0.017,137,0.012,139,2.555,142,1.134,154,2.901,155,1.943,161,1.149,163,2.623,268,1.699,327,3.962,351,2.09,352,2.555,353,2.555,355,2.555,357,3.483,358,2.555,359,2.555,360,2.555,361,5.338,362,5.706,363,4.67,364,4.67,365,4.67,366,3.427,367,3.427,368,4.67,369,4.67,370,3.427,371,3.427,372,3.427,373,3.427,374,4.67]],["title/classes/MenuItem.html",[0,0.13,283,2.101]],["body/classes/MenuItem.html",[0,0.132,2,0.565,3,0.301,4,0.269,5,0.269,7,0.147,8,0.502,9,1.006,11,2.341,26,1.27,29,1.245,31,0.752,32,0.026,33,0.752,34,0.523,35,0.608,45,0.523,60,0.523,62,2.341,72,1.674,85,2.886,87,0.496,99,0.804,132,1.453,135,0.013,136,0.017,137,0.013,142,0.935,163,2.636,172,3.22,220,0.37,247,2.13,267,4.001,268,1.951,278,1.977,283,3.666,298,1.558,300,2.604,341,4.153,375,3.865,376,1.955,377,5.246,378,4.542,379,4.005,380,4.73,381,4.288,382,3.492,383,3.492,384,3.492,385,4.288,386,3.492,387,3.171,388,2.956,389,2.956,390,2.956,391,2.956,392,2.956,393,2.956,394,2.956,395,2.956,396,2.956]],["title/interfaces/MenuItemConfig.html",[172,1.928,220,0.365]],["body/interfaces/MenuItemConfig.html",[0,0.144,3,0.33,4,0.294,5,0.294,7,0.161,8,0.533,9,0.893,11,2.563,32,0.026,34,0.527,35,0.876,45,0.573,60,0.573,62,2.563,72,1.833,85,2.333,87,0.515,99,0.88,132,1.591,135,0.014,136,0.018,137,0.014,142,0.666,163,1.591,172,3.144,220,0.405,222,1.391,247,2.333,267,2.851,268,1.391,278,2.099,283,3.425,298,1.705,300,2.851,341,4.345,375,2.333,376,2.141,377,5.488,378,3.237,379,3.237,381,4.619,385,4.619,387,3.369,388,3.237,389,3.237,390,3.237,391,5.049,392,3.237,393,3.237,394,3.237,395,3.237,396,3.237]],["title/interfaces/MenuProps.html",[220,0.365,332,2.308]],["body/interfaces/MenuProps.html",[0,0.145,3,0.331,4,0.295,5,0.295,7,0.161,8,0.534,9,0.754,13,1.957,28,1.223,32,0.026,34,0.433,38,0.718,40,0.943,60,0.928,61,1.394,63,1.709,64,1.709,65,1.831,66,2.602,87,0.331,99,1.159,124,1.394,132,2.579,135,0.014,136,0.018,137,0.014,142,0.668,155,2.094,156,1.981,161,1.469,163,1.594,202,1.007,205,1.709,220,0.406,222,1.394,234,1.394,243,1.837,250,1.837,268,1.831,273,1.594,278,1.794,322,2.569,323,2.858,324,2.338,325,1.957,326,2.146,327,2.858,329,1.709,332,4.001,336,1.837,338,3.245,341,4.155,348,1.837,349,2.338,350,3.753,351,2.338,352,2.858,353,2.858,354,3.245,355,2.858,356,3.245,357,2.858,358,2.858,359,2.858,360,2.858]],["title/interfaces/Module.html",[220,0.365,325,1.338]],["body/interfaces/Module.html",[3,0.39,4,0.347,5,0.347,7,0.19,8,0.592,32,0.025,34,0.488,87,0.39,124,2.37,135,0.016,136,0.02,137,0.016,151,3.433,220,0.479,222,1.642,253,3.369,273,2.638,274,3.04,325,2.172,329,2.829,397,3.822,398,5.587,399,5.587,400,5.587,401,4.731]],["title/interfaces/ModuleConfig.html",[220,0.365,348,1.651]],["body/interfaces/ModuleConfig.html",[0,0.14,3,0.32,4,0.285,5,0.285,7,0.156,8,0.522,9,0.555,10,3.372,13,1.44,32,0.026,34,0.425,40,1.211,41,3.298,60,0.828,61,1.79,63,1.652,87,0.425,88,2.259,91,3.67,97,3.67,99,1.133,124,1.347,135,0.013,136,0.018,137,0.013,155,2.047,161,1.449,196,2.762,197,4.121,220,0.393,222,1.347,268,2.142,278,2.053,325,2.57,348,2.359,402,2.762,403,2.762,404,3.136,405,3.136,406,3.136,407,2.762,408,3.136,409,2.544,410,3.136,411,4.166,412,4.986,413,4.166,414,4.166,415,3.136,416,3.136,417,3.136,418,3.136,419,4.679,420,3.136,421,3.136,422,3.136,423,3.136,424,3.136,425,3.136,426,3.136,427,3.136,428,3.136,429,3.136,430,3.136,431,3.136,432,3.136]],["title/classes/ModuleFactory.html",[0,0.13,63,1.536]],["body/classes/ModuleFactory.html",[0,0.113,2,0.482,3,0.257,4,0.229,5,0.229,7,0.126,8,0.449,9,0.739,10,3.597,12,0.976,13,1.917,26,1.084,29,1.185,31,1.221,32,0.026,33,1.221,34,0.477,35,0.989,38,0.794,39,1.763,40,1.214,41,3.6,43,1.237,45,0.446,60,0.739,61,1.542,63,1.891,87,0.366,88,1.819,91,4.006,97,3.161,99,0.976,124,1.794,135,0.011,136,0.015,137,0.011,155,1.763,161,1.322,196,2.223,197,3.678,220,0.316,268,1.084,277,2.524,278,2.104,325,2.516,335,1.541,348,1.429,402,4.524,403,2.223,404,2.524,405,2.524,406,2.524,407,2.223,408,2.524,409,2.777,410,3.589,411,4.548,412,5.136,413,4.548,414,3.589,415,2.524,416,2.524,417,2.524,418,2.524,419,4.176,420,2.524,421,2.524,422,3.589,423,2.524,424,3.589,425,2.524,426,3.589,427,2.524,428,2.524,429,2.524,430,2.524,431,2.524,432,2.524,433,4.238,434,4.238,435,4.238,436,2.981,437,2.981,438,2.981,439,4.548,440,2.981,441,2.981,442,2.981]],["title/classes/ModuleItem.html",[0,0.13,443,2.101]],["body/classes/ModuleItem.html",[0,0.088,2,0.375,3,0.2,4,0.178,5,0.178,7,0.098,8,0.374,9,0.93,12,0.811,28,1.924,29,1.347,31,1.242,32,0.025,33,1.242,34,0.507,35,1.006,36,2.362,38,0.959,39,2.129,40,0.571,43,1.462,45,0.839,60,0.528,64,1.034,66,1.199,87,0.2,99,0.534,135,0.008,136,0.013,137,0.008,142,1.197,161,0.571,202,1.25,225,1.729,234,1.282,236,1.555,244,3.705,257,2.15,258,1.973,259,1.973,260,1.973,278,1.887,298,1.572,325,2.095,342,3.156,376,1.299,401,2.983,439,3.608,443,2.904,444,4.334,445,4.261,446,2.983,447,2.983,448,2.983,449,4.03,450,3.178,451,4.76,452,3.608,453,3.608,454,3.608,455,3.608,456,2.983,457,2.983,458,3.608,459,2.983,460,2.983,461,2.983,462,2.628,463,2.628,464,2.628,465,2.319,466,2.319,467,2.319,468,1.964,469,2.983,470,1.112,471,1.964,472,1.199,473,2.319,474,2.319,475,2.319,476,2.319,477,1.964,478,2.319,479,1.964,480,2.319,481,2.319,482,2.319,483,2.319,484,1.964,485,1.964,486,2.319,487,1.964,488,2.319,489,1.964,490,2.319,491,2.319,492,1.964,493,2.319,494,2.983,495,2.628,496,1.964,497,1.964,498,2.319,499,1.964,500,1.964,501,2.319,502,1.729,503,1.964,504,1.729,505,1.729,506,1.964,507,1.729,508,1.729,509,2.362,510,1.964,511,1.729,512,2.319]],["title/classes/PropertyPanel.html",[0,0.13,83,2.308]],["body/classes/PropertyPanel.html",[0,0.127,2,0.545,3,0.291,4,0.259,5,0.259,7,0.142,8,0.49,9,0.849,12,1.063,13,2.203,28,1.076,29,1.342,31,0.994,32,0.025,33,0.994,34,0.457,35,0.805,38,0.631,40,0.829,43,1.493,45,0.849,60,0.692,64,1.503,65,2.159,83,3.095,87,0.291,122,2.06,124,1.916,135,0.012,136,0.017,137,0.012,142,1.114,161,1.136,202,1.384,203,2.526,204,2.526,205,2.35,206,2.526,215,3.214,234,1.68,253,2.723,273,2.192,274,2.214,326,2.586,329,2.528,335,2.387,336,1.616,342,3.201,345,2.056,346,2.056,347,2.056,513,2.854,514,2.854,515,3.673,516,3.095,517,3.095,518,2.513,519,2.259,520,2.513,521,3.444,522,3.095,523,2.513,524,2.513,525,2.513,526,2.259,527,2.259,528,3.444,529,2.513]],["title/classes/ResourceExplorer.html",[0,0.13,530,2.568]],["body/classes/ResourceExplorer.html",[0,0.127,2,0.545,3,0.291,4,0.259,5,0.259,7,0.142,8,0.49,9,0.849,12,1.063,13,2.203,28,1.076,29,1.342,31,0.994,32,0.025,33,0.994,34,0.457,35,0.805,38,0.631,40,0.829,43,1.493,45,0.849,60,0.692,64,1.503,65,2.159,87,0.291,122,2.06,124,1.916,135,0.012,136,0.017,137,0.012,142,1.114,161,1.136,202,1.384,203,2.526,204,2.526,205,2.35,206,2.526,215,3.214,234,1.68,253,2.723,273,2.192,274,2.214,326,2.586,329,2.528,335,2.387,336,1.616,342,3.201,345,2.056,346,2.056,347,2.056,515,3.673,516,3.095,517,3.095,518,2.513,519,2.259,520,2.513,521,3.444,522,3.095,523,2.513,524,2.513,525,2.513,526,2.259,527,2.259,528,3.444,529,2.513,530,3.444,531,2.854,532,2.854]],["title/classes/ShapeCanvas.html",[0,0.13,533,2.568]],["body/classes/ShapeCanvas.html",[0,0.127,2,0.545,3,0.291,4,0.259,5,0.259,7,0.142,8,0.49,9,0.849,12,1.063,13,2.203,28,1.076,29,1.342,31,0.994,32,0.025,33,0.994,34,0.457,35,0.805,38,0.631,40,0.829,43,1.493,45,0.849,60,0.692,64,1.503,65,2.159,87,0.291,122,2.06,124,1.916,135,0.012,136,0.017,137,0.012,142,1.114,161,1.136,202,1.384,203,2.526,204,2.526,205,2.35,206,2.526,215,3.214,234,1.68,253,2.723,273,2.192,274,2.214,326,2.586,329,2.528,335,2.387,336,1.616,342,3.201,345,2.056,346,2.056,347,2.056,515,3.673,516,3.095,517,3.095,518,2.513,519,2.259,520,2.513,521,3.444,522,3.095,523,2.513,524,2.513,525,2.513,526,2.259,527,2.259,528,3.444,529,2.513,533,3.444,534,2.854,535,2.854]],["title/classes/SplitBoardController.html",[0,0.13,536,2.568]],["body/classes/SplitBoardController.html",[0,0.068,2,0.29,3,0.155,4,0.138,5,0.138,7,0.214,8,0.306,9,1.004,12,0.664,26,0.653,28,0.573,29,1.222,31,0.976,32,0.026,33,0.976,34,0.462,35,0.79,38,0.907,39,1.886,43,1.115,45,0.839,60,0.432,87,0.155,88,1.095,99,0.953,122,1.286,135,0.006,136,0.01,137,0.006,142,0.951,151,1.869,161,1.116,202,0.758,231,2.695,232,2.525,243,0.86,249,1.005,254,2.525,255,3.611,258,1.005,260,1.005,264,3.611,265,4.178,298,0.801,313,2.796,450,3.795,536,2.15,537,3.75,538,1.52,539,3.614,540,3.614,541,3.614,542,3.614,543,3.614,544,3.614,545,5.088,546,5.088,547,4.139,548,2.883,549,2.883,550,2.883,551,2.883,552,4.139,553,1.795,554,2.883,555,3.66,556,1.795,557,1.795,558,1.795,559,1.795,560,1.795,561,1.795,562,1.795,563,1.795,564,2.883,565,1.795,566,2.883,567,1.795,568,2.883,569,5.603,570,1.795,571,4.48,572,2.883,573,1.795,574,1.795,575,2.883,576,4.139,577,2.883,578,1.52,579,2.423,580,1.52,581,3.614,582,1.795,583,3.614,584,1.795,585,3.614,586,3.614,587,3.614,588,1.795,589,1.795,590,1.795,591,1.795,592,1.795,593,1.795,594,1.795,595,1.795,596,1.795,597,1.795,598,1.795,599,1.795,600,2.883,601,2.883,602,1.795,603,1.795,604,1.795,605,1.795,606,1.795,607,3.614,608,1.338,609,5.603,610,1.795,611,1.795,612,1.795,613,1.795,614,1.795,615,1.795,616,1.795,617,4.139,618,2.15,619,1.338,620,1.795,621,2.883,622,1.795,623,1.795,624,2.883,625,1.338,626,1.795,627,1.795,628,4.842,629,4.842,630,2.883,631,4.139,632,2.883,633,2.883,634,1.795,635,2.883,636,1.795,637,2.883,638,1.795,639,1.795]],["title/classes/SplitItemView.html",[0,0.13,244,1.928]],["body/classes/SplitItemView.html",[0,0.076,2,0.327,3,0.174,4,0.155,5,0.155,7,0.085,8,0.336,9,0.958,12,0.729,26,1.42,28,1.946,29,1.302,31,1.187,32,0.026,33,1.187,34,0.48,35,0.961,36,2.122,38,0.954,39,1.998,40,0.497,43,1.404,45,0.9,60,0.474,87,0.174,122,0.9,123,1.505,135,0.007,136,0.011,137,0.007,142,1.171,161,0.961,202,1.449,225,2.361,234,1.151,236,1.353,244,2.853,245,1.505,247,1.231,257,2.93,258,2.689,259,2.689,260,2.689,278,1.761,298,0.9,342,2.12,446,3.306,447,3.306,448,3.306,449,4.511,450,3.582,452,3.744,453,3.744,454,3.744,455,3.744,456,2.68,457,2.68,458,3.744,459,2.68,460,2.68,461,2.68,462,2.361,463,2.361,464,2.361,468,2.68,469,3.744,470,1.518,471,2.68,472,1.637,477,3.744,479,1.709,484,2.68,485,2.68,487,2.68,489,2.68,492,2.68,494,3.744,495,3.973,496,3.306,497,2.68,499,2.68,500,2.68,502,1.505,503,1.709,504,1.505,505,1.505,506,1.709,507,1.505,508,1.505,509,2.122,510,1.709,537,3.873,555,2.122,579,3.416,608,1.505,640,1.505,641,3.165,642,2.019,643,2.019,644,2.019,645,2.019,646,2.019,647,2.019,648,2.019,649,2.019,650,2.019,651,2.019,652,2.019,653,2.019,654,2.019,655,2.019,656,2.019,657,1.709,658,1.505,659,2.019,660,2.019,661,3.905,662,2.019,663,3.165,664,2.019,665,2.019,666,2.019,667,3.165,668,3.905,669,2.019,670,2.019,671,2.019,672,2.019,673,2.019,674,2.019,675,2.019,676,2.019,677,2.019,678,2.019,679,2.019,680,2.019,681,3.165,682,2.019,683,2.019]],["title/classes/SvelteModule.html",[0,0.13,515,1.928]],["body/classes/SvelteModule.html",[0,0.114,2,0.488,3,0.261,4,0.232,5,0.232,7,0.127,8,0.453,9,0.887,12,0.985,13,2.302,28,1.365,29,1.316,31,0.921,32,0.025,33,0.921,34,0.469,35,0.745,43,1.457,45,0.809,60,0.809,61,1.098,65,2.262,66,1.561,87,0.261,122,1.347,124,2.074,135,0.011,136,0.015,137,0.011,142,1.142,155,1.779,161,1.222,201,5.155,202,1.419,203,2.381,204,2.381,205,2.41,206,2.381,215,3.03,234,1.556,253,3.148,273,2.247,274,2.051,324,2.609,325,2.1,326,2.781,329,2.41,335,2.211,336,2.051,342,2.734,345,1.842,346,1.842,347,1.842,350,3.704,351,1.842,515,2.395,516,3.329,517,2.867,519,3.822,522,2.867,526,2.024,527,2.024,684,5.267,685,2.556,686,3.019,687,3.019,688,3.019,689,3.019,690,3.019,691,3.019,692,3.019,693,3.019,694,2.251,695,3.019,696,3.019,697,3.019,698,3.019,699,3.019]],["title/classes/View.html",[0,0.13,202,0.905]],["body/classes/View.html",[0,0.144,2,0.618,3,0.33,4,0.294,5,0.294,7,0.161,8,0.533,12,1.157,26,1.391,27,4.255,28,2.16,29,1.245,31,1.284,32,0.025,33,1.284,34,0.506,35,1.039,36,4.152,38,0.716,43,1.293,87,0.33,123,2.851,135,0.014,136,0.018,137,0.014,142,0.978,161,1.381,187,2.563,202,1.32,351,2.333,462,3.748,463,3.748,464,3.748,495,4.187,502,3.748,504,2.851,505,3.748,507,2.851,508,3.748,509,3.997,555,3.369,700,2.851,701,5.026,702,3.823,703,3.823,704,3.823,705,3.748,706,4.255,707,4.255,708,3.823,709,3.823,710,3.823,711,3.823]],["title/interfaces/WeightMap.html",[220,0.365,712,1.78]],["body/interfaces/WeightMap.html",[0,0.197,2,0.653,3,0.349,4,0.311,5,0.311,7,0.219,9,0.863,29,0.812,32,0.026,38,0.756,45,0.78,87,0.349,99,1.199,135,0.015,136,0.019,137,0.015,142,0.908,220,0.611,222,1.469,254,2.241,268,1.894,278,2.012,313,1.936,470,1.936,472,2.088,712,3.259,713,2.916,714,2.261,715,4.039,716,4.039,717,2.916,718,3.614,719,2.707,720,2.916,721,2.464,722,2.464,723,2.464,724,2.464,725,2.464,726,2.464,727,2.464,728,2.464,729,2.464,730,2.261,731,2.707,732,2.707,733,2.707,734,3.491,735,2.707,736,2.707,737,2.707,738,2.707,739,2.464,740,2.707,741,2.707,742,2.707,743,2.707]],["title/classes/Workbench.html",[0,0.13,102,2.101]],["body/classes/Workbench.html",[0,0.087,2,0.373,3,0.199,4,0.177,5,0.177,7,0.215,8,0.372,9,0.805,12,0.808,13,2.091,26,0.839,29,1.262,31,0.914,32,0.026,33,0.914,34,0.471,35,0.74,38,0.432,40,0.863,43,1.359,45,0.863,60,0.765,61,0.839,63,2.768,64,1.029,65,2.189,66,1.814,87,0.199,99,1.176,102,2.141,105,2.616,124,1.857,135,0.008,136,0.013,137,0.008,142,0.937,155,1.46,156,1.192,161,1.256,202,1.469,203,2.275,204,2.275,205,2.117,206,2.275,220,0.245,234,1.276,243,1.106,248,2.141,249,1.965,250,2.036,251,2.616,254,2.091,273,1.974,274,1.682,298,2.117,324,2.141,325,2.24,329,2.117,335,1.814,336,1.682,342,2.448,348,1.682,349,2.591,409,2.196,443,3.115,511,1.72,618,1.72,619,1.72,625,1.72,658,1.72,694,1.72,744,1.72,745,3.596,746,2.306,747,3.509,748,3.605,749,2.306,750,2.306,751,2.306,752,2.971,753,2.306,754,2.306,755,2.306,756,3.596,757,3.596,758,2.306,759,2.306,760,2.306,761,2.306,762,2.306,763,1.953,764,1.953,765,1.953,766,1.953,767,1.953,768,1.953,769,2.971,770,1.953,771,2.971,772,1.953,773,2.971,774,1.953,775,1.953,776,1.953,777,1.953,778,1.953,779,1.953,780,1.953,781,2.971,782,1.953,783,1.953,784,2.971,785,2.971,786,4.018,787,1.953,788,1.953,789,1.953,790,1.953,791,1.953,792,1.953,793,1.953,794,1.953,795,1.953,796,1.953,797,1.953,798,1.953,799,1.953]],["title/interfaces/WorkbenchProps.html",[220,0.365,748,2.308]],["body/interfaces/WorkbenchProps.html",[0,0.106,3,0.243,4,0.216,5,0.216,7,0.201,8,0.431,9,0.609,13,1.581,32,0.026,34,0.492,35,0.709,38,0.527,40,1,45,0.783,60,0.831,61,1.023,63,2.58,64,1.255,65,1.903,66,2.102,87,0.243,99,1.278,102,1.716,105,3.032,124,1.479,135,0.01,136,0.015,137,0.01,142,0.709,155,1.692,156,1.454,161,1.365,202,1.255,203,1.349,204,1.349,205,1.255,206,1.349,220,0.298,222,1.023,234,1.023,243,1.349,248,2.913,249,2.674,250,1.949,254,2.318,273,1.17,298,2.333,324,1.716,325,2.318,329,1.255,336,1.349,348,2.508,349,2.481,409,2.869,443,2.913,511,2.098,618,2.098,619,2.098,625,2.098,658,2.098,694,2.098,744,2.098,745,2.382,748,3.506,752,2.382,756,4.698,757,4.698,763,2.382,764,2.382,765,2.382,766,2.382,767,2.382,768,2.382,769,3.443,770,2.382,771,3.443,772,2.382,773,3.443,774,2.382,775,2.382,776,2.382,777,2.382,778,2.382,779,2.382,780,2.382,781,3.443,782,2.382,783,2.382,784,3.443,785,3.443,786,4.429,787,2.382,788,2.382,789,2.382,790,2.382,791,2.382,792,2.382,793,2.382,794,2.382,795,2.382,796,2.382,797,2.382,798,2.382,799,2.382]],["title/classes/classBuilder.html",[0,0.13,730,1.928]],["body/classes/classBuilder.html",[0,0.17,2,0.731,3,0.282,4,0.251,5,0.251,7,0.19,8,0.479,9,0.964,12,1.04,26,1.187,29,1.22,31,1.203,32,0.026,33,1.203,34,0.452,35,0.974,38,0.846,39,1.358,43,1.287,45,0.879,85,3.16,87,0.282,99,1.04,135,0.012,136,0.016,137,0.012,142,1.058,220,0.549,254,1.756,268,1.643,278,1.784,313,1.565,470,1.565,472,1.687,712,3.279,713,3.485,714,1.828,717,2.529,718,3.808,719,2.188,720,2.529,721,1.991,722,1.991,723,1.991,724,1.991,725,1.991,726,1.991,727,1.991,728,1.991,729,1.991,730,2.529,731,3.472,732,3.028,733,2.188,734,3.028,735,3.747,736,2.188,737,3.028,738,3.028,739,1.991,740,2.188,741,2.188,742,2.188,743,2.188,800,4.517,801,4.517,802,4.517,803,4.517,804,3.264,805,3.264,806,3.264,807,3.264,808,3.264,809,3.264]],["title/interfaces/classConfig.html",[220,0.365,717,1.928]],["body/interfaces/classConfig.html",[0,0.236,2,0.638,3,0.34,4,0.303,5,0.303,7,0.216,8,0.544,9,0.853,32,0.026,34,0.395,38,0.738,45,0.768,87,0.34,99,1.181,135,0.014,136,0.018,137,0.014,142,0.893,220,0.604,222,1.434,254,1.993,268,2.275,278,2.113,313,1.89,470,1.89,472,2.038,712,3.12,713,2.207,714,2.207,717,3.191,718,3.59,719,2.642,720,2.871,721,2.405,722,2.405,723,2.405,724,2.405,725,2.405,726,2.405,727,2.405,728,2.405,729,2.405,730,2.207,731,2.642,732,2.642,733,2.642,734,3.437,735,2.642,736,2.642,737,2.642,738,2.642,739,2.405,740,2.642,741,2.642,742,2.642,743,2.642]],["title/coverage.html",[810,3.967]],["body/coverage.html",[0,0.249,1,2.053,5,0.168,6,1.849,32,0.025,34,0.168,40,0.537,63,0.974,65,0.794,67,1.464,70,1.333,72,1.047,83,1.464,102,1.333,132,0.909,135,0.008,136,0.012,137,0.008,138,1.849,139,2.51,151,1.74,156,1.129,162,1.629,163,2.282,164,1.849,165,1.849,172,1.223,178,1.629,179,1.849,180,1.849,200,1.849,202,0.574,220,0.64,221,1.629,223,2.51,229,1.629,232,1.333,233,2.256,244,1.223,250,1.047,266,1.849,283,1.333,313,3.375,322,1.464,323,2.51,325,0.849,332,1.464,348,1.047,349,1.333,361,1.849,375,2.053,376,2.299,387,1.464,397,1.849,402,2.51,403,2.51,443,1.333,444,1.849,470,2.389,513,1.849,514,1.849,515,1.223,530,1.629,531,1.849,532,1.849,533,1.629,534,1.849,535,1.849,536,1.629,537,2.814,538,1.849,578,1.849,580,2.85,640,1.629,684,1.849,685,1.849,700,1.629,712,1.129,713,2.79,714,2.79,717,1.223,718,1.223,720,1.223,730,1.223,744,2.51,748,1.464,810,1.849,811,1.849,812,2.184,813,2.184,814,3.906,815,6.828,816,1.849,817,6.797,818,2.85,819,1.849,820,1.849,821,2.85,822,1.849,823,4.613,824,4.613,825,2.184,826,3.366,827,4.613,828,3.366,829,2.85,830,2.184,831,1.849,832,2.184,833,2.184,834,4.938,835,4.938,836,1.849,837,1.849,838,4.983,839,1.849,840,1.849,841,1.849,842,1.849,843,1.849,844,1.849,845,1.849,846,1.849,847,1.849,848,1.849,849,1.849,850,1.849,851,1.849,852,1.849,853,1.849,854,1.849,855,1.849,856,1.849,857,1.849,858,1.849,859,1.849,860,1.849,861,2.184,862,2.184,863,4.983,864,3.366,865,2.184,866,2.184,867,2.184,868,1.849,869,2.184,870,2.184]],["title/dependencies.html",[871,2.882,872,3.085]],["body/dependencies.html",[32,0.025,61,1.783,135,0.018,136,0.021,137,0.018,146,4.151,184,3.656,227,4.692,228,4.151,872,3.656,873,4.902,874,4.902,875,4.902,876,4.151,877,4.902,878,4.902,879,4.902,880,4.902,881,4.902,882,4.902,883,4.902,884,4.902,885,4.902,886,4.902,887,4.902,888,4.902,889,4.902,890,4.902,891,4.902]],["title/miscellaneous/enumerations.html",[892,1.382,893,3.503]],["body/miscellaneous/enumerations.html",[7,0.199,32,0.024,39,2.679,57,3.849,72,2.263,118,3.996,135,0.017,136,0.021,137,0.017,163,1.964,233,3.164,243,2.753,248,2.88,249,2.643,257,3.503,258,3.216,259,3.216,260,3.216,298,2.105,375,2.88,376,3.216,385,4.282,537,2.88,579,4.317,640,4.282,657,4.862,892,2.263,893,3.996,894,4.72,895,3.996,896,4.72,897,3.996,898,4.72,899,4.72]],["title/miscellaneous/functions.html",[892,1.382,900,3.503]],["body/miscellaneous/functions.html",[7,0.211,31,1.281,32,0.024,33,1.281,35,1.037,135,0.018,136,0.021,137,0.018,156,3.076,187,3.988,834,3.733,835,4.437,836,5.037,860,4.239,892,2.4,900,4.239,901,5.006,902,4.239,903,5.006,904,5.006,905,5.006,906,5.95,907,5.95,908,5.006]],["title/index.html",[7,0.121,909,2.44,910,2.44]],["body/index.html",[1,2.989,4,0.424,32,0.022,135,0.013,136,0.018,137,0.013,184,2.743,220,0.39,227,4.38,407,2.743,409,2.533,705,2.743,872,3.653,911,5.873,912,5.508,913,4.899,914,4.899,915,3.679,916,3.679,917,3.679,918,3.679,919,3.679,920,3.679,921,3.679,922,5.873,923,3.679,924,3.679,925,3.115,926,3.679,927,3.679,928,3.679,929,3.679,930,3.679,931,3.679,932,3.679,933,3.115,934,2.743,935,3.679,936,4.899,937,3.679,938,3.679,939,3.679,940,4.899,941,3.679,942,3.679,943,3.679,944,3.679,945,5.508,946,3.679,947,3.679,948,3.679,949,3.679,950,3.679,951,3.679,952,3.679,953,3.679,954,3.679,955,3.679,956,3.679,957,3.679,958,3.679,959,3.679,960,3.679,961,5.508,962,3.679,963,3.679,964,3.679,965,3.679,966,5.508,967,3.679,968,3.679,969,3.679,970,3.115,971,3.679,972,3.679,973,3.679,974,5.508,975,3.679,976,3.679,977,3.679,978,3.679,979,5.508,980,4.899,981,3.679,982,3.679,983,3.679,984,3.679,985,3.679,986,3.115,987,3.679,988,3.679,989,3.679,990,3.679,991,3.679,992,4.148,993,3.679,994,3.679,995,4.899,996,3.679,997,4.899,998,3.679,999,4.899,1000,3.115,1001,3.115,1002,3.115,1003,3.679,1004,3.679,1005,3.679,1006,3.679,1007,3.679,1008,3.679,1009,3.679,1010,3.679,1011,3.679,1012,3.679,1013,3.679]],["title/license.html",[909,2.44,910,2.44,934,2.149]],["body/license.html",[32,0.019,135,0.015,136,0.019,137,0.015,571,3.577,579,2.832,739,2.577,811,3.577,925,3.577,933,3.577,934,3.15,986,3.577,1000,3.577,1001,3.577,1002,3.577,1014,5.888,1015,4.225,1016,4.225,1017,5.36,1018,4.225,1019,4.225,1020,4.225,1021,4.225,1022,4.225,1023,4.225,1024,5.36,1025,6.777,1026,4.225,1027,4.225,1028,5.888,1029,4.225,1030,5.36,1031,4.225,1032,4.225,1033,4.539,1034,4.225,1035,4.225,1036,4.225,1037,4.225,1038,5.36,1039,4.225,1040,4.225,1041,4.225,1042,4.225,1043,4.225,1044,4.225,1045,4.225,1046,5.36,1047,5.36,1048,4.225,1049,4.225,1050,4.225,1051,4.225,1052,4.225,1053,4.225,1054,4.225,1055,4.225,1056,4.225,1057,4.225,1058,4.225,1059,4.225,1060,4.225,1061,4.225,1062,4.225,1063,4.225,1064,4.225,1065,4.225,1066,4.225,1067,4.225,1068,4.225,1069,4.225,1070,4.225,1071,4.225,1072,4.225,1073,4.225,1074,4.225,1075,4.225]],["title/modules.html",[409,2.422]],["body/modules.html",[32,0.023,135,0.02,136,0.023,137,0.02,409,2.847]],["title/overview.html",[1076,3.967]],["body/overview.html",[2,0.879,32,0.022,135,0.02,136,0.022,137,0.02,222,1.977,1076,4.602,1077,5.435,1078,5.435]],["title/interfaces/stateConfig.html",[220,0.365,718,1.928]],["body/interfaces/stateConfig.html",[0,0.191,2,0.968,3,0.333,4,0.297,5,0.297,7,0.213,8,0.536,9,0.845,32,0.026,34,0.434,35,0.881,38,0.723,45,0.757,87,0.333,99,1.164,135,0.014,136,0.018,137,0.014,142,0.881,220,0.598,222,1.404,254,2.326,268,2.26,278,2.035,313,1.85,470,1.85,472,1.995,712,3.094,713,2.161,714,2.161,717,3.351,718,3.637,719,4.012,720,2.831,721,2.354,722,2.354,723,2.354,724,2.354,725,2.354,726,2.354,727,2.354,728,2.354,729,2.354,730,2.161,731,2.587,732,2.587,733,2.587,734,3.389,735,2.587,736,2.587,737,2.587,738,2.587,739,2.354,740,2.587,741,2.587,742,2.587,743,2.587]],["title/miscellaneous/typealiases.html",[892,1.382,1079,4.137]],["body/miscellaneous/typealiases.html",[7,0.216,32,0.024,34,0.395,135,0.018,136,0.022,137,0.018,151,2.653,163,2.135,375,3.13,376,3.38,381,4.502,509,4.046,555,3.439,700,3.826,705,3.826,706,4.344,707,4.344,892,2.46,897,4.344,1080,5.131,1081,5.131]],["title/miscellaneous/variables.html",[892,1.382,1082,3.503]],["body/miscellaneous/variables.html",[1,2.105,7,0.095,32,0.026,34,0.322,38,1.28,39,2.837,40,1.031,99,0.965,122,1.006,135,0.008,136,0.012,137,0.008,223,1.682,224,1.91,226,1.91,229,2.573,230,1.91,231,3.124,254,0.877,259,1.263,278,1.101,313,1.082,387,2.313,470,1.082,472,1.166,537,1.376,608,2.573,712,1.166,713,1.263,714,1.932,720,1.932,721,1.376,722,1.376,723,1.376,724,1.376,725,1.376,726,1.376,727,1.376,728,1.376,729,1.376,814,1.91,816,2.921,818,4.697,819,3.973,820,3.547,821,1.91,822,2.921,829,2.921,831,2.921,834,1.682,835,4.96,837,2.921,839,2.921,840,2.921,841,2.921,842,2.921,843,2.921,844,2.921,845,2.921,846,2.921,847,2.921,848,2.921,849,2.921,850,2.921,851,2.921,852,2.921,853,2.921,854,2.921,855,2.921,856,2.921,857,2.921,858,2.921,859,1.91,868,1.91,876,1.91,892,1.082,895,1.91,902,5.606,970,1.91,992,1.91,1033,1.91,1082,1.91,1083,2.256,1084,4.692,1085,2.256,1086,3.45,1087,2.256,1088,2.256,1089,2.256,1090,2.256,1091,3.45,1092,2.256,1093,2.256,1094,3.45,1095,2.256,1096,3.45,1097,3.45,1098,2.256,1099,2.256,1100,2.256,1101,2.256,1102,2.256,1103,3.45,1104,4.692,1105,2.256,1106,3.45,1107,2.256,1108,2.256,1109,3.45,1110,2.256,1111,3.45,1112,2.256,1113,3.45,1114,3.45,1115,2.256,1116,2.256,1117,2.256,1118,2.256,1119,2.256,1120,3.45,1121,2.256,1122,3.45,1123,3.45,1124,4.692,1125,2.256,1126,3.45,1127,2.256,1128,2.256,1129,2.256,1130,2.256,1131,3.45,1132,3.45,1133,2.256,1134,2.256,1135,2.256,1136,2.256,1137,2.256,1138,2.256,1139,2.256,1140,2.256,1141,2.256,1142,2.256,1143,2.256,1144,2.256,1145,4.189,1146,4.692,1147,2.256,1148,2.256,1149,2.256,1150,2.256,1151,2.256,1152,2.256,1153,2.256,1154,2.256,1155,2.256,1156,2.256,1157,2.256,1158,2.256,1159,2.256,1160,2.256,1161,2.256,1162,2.256,1163,2.256,1164,2.256,1165,4.189,1166,3.45,1167,2.256,1168,2.256,1169,2.256]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":313,"title":{},"body":{"classes/Menu.html":{},"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":817,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":864,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0123456789abcdef",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":555,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["1.1.5",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["1.6.4",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["1/21",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["1/24",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["1/28",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":470,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["11",{"_index":1078,"title":{},"body":{"overview.html":{}}}],["1f1f1f",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":576,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["2.2.0",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":722,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["2020",{"_index":1015,"title":{},"body":{"license.html":{}}}],["21",{"_index":1077,"title":{},"body":{"overview.html":{}}}],["272728",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e2f30",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":578,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["3.0.1",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["3.1.3",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":637,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["300",{"_index":724,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["393939",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3f3f3f",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":580,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["4.3.1",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["4.3.5",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":726,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["454545",{"_index":1109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["464749",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":631,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["5.1.1",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["5580c0",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5d5f61",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.4",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":728,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["680",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.2",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["729cd4",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["800",{"_index":472,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["808080",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["900",{"_index":1134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_bgcolorclassname",{"_index":446,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["_growclassname",{"_index":447,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["_shrinkclassname",{"_index":448,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["_type",{"_index":140,"title":{},"body":{"classes/AppearanceService.html":{}}}],["_view",{"_index":326,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["ability",{"_index":405,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["above",{"_index":1045,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":201,"title":{},"body":{"classes/Controller.html":{},"classes/SvelteModule.html":{}}}],["action",{"_index":1000,"title":{},"body":{"index.html":{},"license.html":{}}}],["active",{"_index":727,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["activeexpand",{"_index":547,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["activeid",{"_index":539,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["add",{"_index":433,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["add(moduleid",{"_index":410,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["addconfig",{"_index":800,"title":{},"body":{"classes/classBuilder.html":{}}}],["addconfig(config",{"_index":737,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["added",{"_index":1004,"title":{},"body":{"index.html":{}}}],["addexpandbutton",{"_index":452,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["aliases",{"_index":1080,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":1036,"title":{},"body":{"license.html":{}}}],["anycolor",{"_index":181,"title":{},"body":{"classes/ColorRef.html":{}}}],["anycolorhex",{"_index":908,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":1,"title":{"classes/App.html":{}},"body":{"classes/App.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app(document.body",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.quit",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appearance",{"_index":192,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearanceservice",{"_index":67,"title":{"classes/AppearanceService.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"coverage.html":{}}}],["appearancetype",{"_index":57,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"miscellaneous/enumerations.html":{}}}],["appearancetype.any",{"_index":198,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearancetype.dark",{"_index":116,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{}}}],["appearancetype.light",{"_index":199,"title":{},"body":{"classes/ColorRef.html":{}}}],["appeared",{"_index":218,"title":{},"body":{"classes/Controller.html":{}}}],["append",{"_index":462,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["append(child",{"_index":502,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["appending",{"_index":214,"title":{},"body":{"classes/Controller.html":{}}}],["application",{"_index":992,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["applicationmenus",{"_index":73,"title":{},"body":{"classes/App.html":{}}}],["aps",{"_index":111,"title":{},"body":{"classes/App.html":{}}}],["aps.onmodechanged((type",{"_index":113,"title":{},"body":{"classes/App.html":{}}}],["arising",{"_index":1073,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1026,"title":{},"body":{"license.html":{}}}],["async",{"_index":13,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["authors",{"_index":1063,"title":{},"body":{"license.html":{}}}],["auto",{"_index":705,"title":{},"body":{"classes/View.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["automatically",{"_index":1003,"title":{},"body":{"index.html":{}}}],["available",{"_index":929,"title":{},"body":{"index.html":{}}}],["await",{"_index":97,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["bababa",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar.svelte",{"_index":78,"title":{},"body":{"classes/App.html":{}}}],["bar/base",{"_index":164,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["bar/index.ts",{"_index":323,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["bar/index.ts:13",{"_index":333,"title":{},"body":{"classes/MenuBar.html":{}}}],["bar/index.ts:14",{"_index":331,"title":{},"body":{"classes/MenuBar.html":{}}}],["bar/index.ts:15",{"_index":330,"title":{},"body":{"classes/MenuBar.html":{}}}],["bar/index.ts:19",{"_index":337,"title":{},"body":{"classes/MenuBar.html":{}}}],["bar/index.ts:28",{"_index":340,"title":{},"body":{"classes/MenuBar.html":{}}}],["bar/index.ts:31",{"_index":334,"title":{},"body":{"classes/MenuBar.html":{}}}],["bar/index.ts:34",{"_index":339,"title":{},"body":{"classes/MenuBar.html":{}}}],["bar/menu",{"_index":361,"title":{},"body":{"classes/MenuGroupService.html":{},"coverage.html":{}}}],["bar/menu/menu",{"_index":375,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["bar/menu/menu.ts",{"_index":266,"title":{},"body":{"classes/Menu.html":{},"coverage.html":{}}}],["bar/menu/menu.ts:10",{"_index":284,"title":{},"body":{"classes/Menu.html":{}}}],["bar/menu/menu.ts:11",{"_index":285,"title":{},"body":{"classes/Menu.html":{}}}],["bar/menu/menu.ts:12",{"_index":281,"title":{},"body":{"classes/Menu.html":{}}}],["bar/menu/menu.ts:13",{"_index":287,"title":{},"body":{"classes/Menu.html":{}}}],["bar/menu/menu.ts:14",{"_index":279,"title":{},"body":{"classes/Menu.html":{}}}],["bar/menu/menu.ts:23",{"_index":292,"title":{},"body":{"classes/Menu.html":{}}}],["bar/menu/menu.ts:31",{"_index":290,"title":{},"body":{"classes/Menu.html":{}}}],["bar/menu/menu.ts:38",{"_index":294,"title":{},"body":{"classes/Menu.html":{}}}],["bar/menu/menu.ts:43",{"_index":296,"title":{},"body":{"classes/Menu.html":{}}}],["bar/menu/menu.ts:49",{"_index":289,"title":{},"body":{"classes/Menu.html":{}}}],["bar/menu/menu.ts:7",{"_index":280,"title":{},"body":{"classes/Menu.html":{}}}],["bar/menu/menu.ts:8",{"_index":282,"title":{},"body":{"classes/Menu.html":{}}}],["bar/menu/menu.ts:9",{"_index":288,"title":{},"body":{"classes/Menu.html":{}}}],["base",{"_index":74,"title":{},"body":{"classes/App.html":{}}}],["basemenu",{"_index":162,"title":{"classes/BaseMenu.html":{}},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["bg",{"_index":468,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["bgcolor",{"_index":837,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["board.controller.ts",{"_index":538,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["board.controller.ts:10",{"_index":562,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:11",{"_index":556,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:13",{"_index":557,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:14",{"_index":554,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:31",{"_index":570,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:46",{"_index":573,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:5",{"_index":560,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:53",{"_index":563,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:6",{"_index":558,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:61",{"_index":574,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:7",{"_index":559,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:72",{"_index":567,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:82",{"_index":565,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:9",{"_index":561,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.view.ts",{"_index":829,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":225,"title":{},"body":{"interfaces/ISettings.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["bootstrap",{"_index":14,"title":{},"body":{"classes/App.html":{}}}],["bordercolor",{"_index":839,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":987,"title":{},"body":{"index.html":{}}}],["break",{"_index":419,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["browserwindow",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder",{"_index":989,"title":{},"body":{"index.html":{}}}],["builder.ts",{"_index":714,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["builder.ts:11",{"_index":716,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["builder.ts:24",{"_index":803,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:30",{"_index":806,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:33",{"_index":805,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:36",{"_index":807,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:44",{"_index":809,"title":{},"body":{"classes/classBuilder.html":{}}}],["building",{"_index":941,"title":{},"body":{"index.html":{}}}],["bundled",{"_index":954,"title":{},"body":{"index.html":{}}}],["button",{"_index":485,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["c",{"_index":739,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"license.html":{},"interfaces/stateConfig.html":{}}}],["c0c0c1",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c4666f",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c6c6c6",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":406,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["callback",{"_index":377,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["cancelformerge",{"_index":235,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["cancelwaitformerge",{"_index":453,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["canvas/index.ts",{"_index":535,"title":{},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["case",{"_index":197,"title":{},"body":{"classes/ColorRef.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["cgray",{"_index":469,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["charge",{"_index":1021,"title":{},"body":{"license.html":{}}}],["check",{"_index":224,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["checkexpandstate",{"_index":548,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["checkexpandstate(clientx",{"_index":564,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["child",{"_index":504,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["children",{"_index":378,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["childs",{"_index":507,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["claim",{"_index":1066,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classbuilder",{"_index":730,"title":{"classes/classBuilder.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classconfig",{"_index":717,"title":{"interfaces/classConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["classname",{"_index":494,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["clear",{"_index":735,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["clientx",{"_index":264,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{}}}],["clienty",{"_index":265,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{}}}],["clone",{"_index":451,"title":{},"body":{"classes/ModuleItem.html":{}}}],["code",{"_index":922,"title":{},"body":{"index.html":{}}}],["col",{"_index":248,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":184,"title":{},"body":{"classes/ColorRef.html":{},"dependencies.html":{},"index.html":{}}}],["color(appearancetype",{"_index":190,"title":{},"body":{"classes/ColorRef.html":{}}}],["color.ts",{"_index":835,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["colorref",{"_index":178,"title":{"classes/ColorRef.html":{}},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["column",{"_index":620,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["command",{"_index":391,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["common",{"_index":959,"title":{},"body":{"index.html":{}}}],["community",{"_index":920,"title":{},"body":{"index.html":{}}}],["comp",{"_index":516,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["compilation",{"_index":978,"title":{},"body":{"index.html":{}}}],["compile",{"_index":974,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":995,"title":{},"body":{"index.html":{}}}],["completed",{"_index":786,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["component",{"_index":528,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["components",{"_index":961,"title":{},"body":{"index.html":{}}}],["concrete",{"_index":915,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1044,"title":{},"body":{"license.html":{}}}],["config",{"_index":85,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/classBuilder.html":{}}}],["config.workbench",{"_index":104,"title":{},"body":{"classes/App.html":{}}}],["configs",{"_index":804,"title":{},"body":{"classes/classBuilder.html":{}}}],["configs.foreach((config",{"_index":733,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["configured",{"_index":991,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1074,"title":{},"body":{"license.html":{}}}],["const",{"_index":99,"title":{},"body":{"classes/App.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ModuleFactory.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["constructor(@inject('modulefactory",{"_index":763,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["constructor(anycolor",{"_index":185,"title":{},"body":{"classes/ColorRef.html":{}}}],["constructor(config",{"_index":379,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["constructor(configs",{"_index":732,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["constructor(container",{"_index":277,"title":{},"body":{"classes/Menu.html":{},"classes/ModuleFactory.html":{}}}],["constructor(groupmenuservice",{"_index":168,"title":{},"body":{"classes/BaseMenu.html":{}}}],["constructor(modulefactory",{"_index":746,"title":{},"body":{"classes/Workbench.html":{}}}],["constructor(private",{"_index":88,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SplitBoardController.html":{}}}],["constructor(root",{"_index":27,"title":{},"body":{"classes/App.html":{},"classes/View.html":{}}}],["constructor(view",{"_index":553,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["container",{"_index":10,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["containermodule",{"_index":157,"title":{},"body":{"classes/AppearanceService.html":{}}}],["contentview",{"_index":449,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["contentview.classlist.add('flex",{"_index":663,"title":{},"body":{"classes/SplitItemView.html":{}}}],["context",{"_index":11,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["contextisolation",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":1070,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1010,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":1007,"title":{},"body":{"index.html":{}}}],["controlaccentcolor",{"_index":840,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlbackgroundcolor",{"_index":841,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controldisabledcolor",{"_index":842,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlforbiddencolor",{"_index":843,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlhighlightcolor",{"_index":844,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":65,"title":{"classes/Controller.html":{}},"body":{"classes/App.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["controller:10",{"_index":345,"title":{},"body":{"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:12",{"_index":526,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:14",{"_index":347,"title":{},"body":{"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:16",{"_index":343,"title":{},"body":{"classes/MenuBar.html":{}}}],["controller:17",{"_index":346,"title":{},"body":{"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:23",{"_index":344,"title":{},"body":{"classes/MenuBar.html":{}}}],["controller:24",{"_index":527,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:28",{"_index":758,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:47",{"_index":761,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:61",{"_index":759,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:65",{"_index":762,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:68",{"_index":760,"title":{},"body":{"classes/Workbench.html":{}}}],["copies",{"_index":1038,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1024,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1014,"title":{},"body":{"license.html":{}}}],["cosmic",{"_index":911,"title":{},"body":{"index.html":{}}}],["cosmic/core/browser",{"_index":66,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["cosmic/core/common",{"_index":62,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["cosmic/core/parts",{"_index":64,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["cosmic/workbench/services/appearance",{"_index":68,"title":{},"body":{"classes/App.html":{}}}],["cosmic/workbench/services/menu",{"_index":71,"title":{},"body":{"classes/App.html":{}}}],["coverage",{"_index":810,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createmenu",{"_index":272,"title":{},"body":{"classes/Menu.html":{}}}],["createwindow",{"_index":816,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["crosshair",{"_index":256,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["current",{"_index":996,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":741,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["d00000",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d1905d",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d2r",{"_index":917,"title":{},"body":{"index.html":{}}}],["d7d7d7",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d9d9d9",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":1067,"title":{},"body":{"license.html":{}}}],["dark",{"_index":118,"title":{},"body":{"classes/App.html":{},"miscellaneous/enumerations.html":{}}}],["dark:bg",{"_index":471,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["darkcolor",{"_index":182,"title":{},"body":{"classes/ColorRef.html":{}}}],["darkcolorhex",{"_index":907,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date.now",{"_index":352,"title":{},"body":{"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"interfaces/MenuProps.html":{}}}],["deal",{"_index":1027,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1075,"title":{},"body":{"license.html":{}}}],["debugging",{"_index":998,"title":{},"body":{"index.html":{}}}],["default",{"_index":38,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":230,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["defaultscope",{"_index":90,"title":{},"body":{"classes/App.html":{}}}],["defaultweightmap",{"_index":720,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["dependencies",{"_index":872,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["design",{"_index":912,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":273,"title":{},"body":{"classes/Menu.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["dev",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["develop",{"_index":918,"title":{},"body":{"index.html":{}}}],["development",{"_index":927,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":236,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["directionstyles",{"_index":657,"title":{},"body":{"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["directionstyles[direction",{"_index":682,"title":{},"body":{"classes/SplitItemView.html":{}}}],["directiontype",{"_index":243,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["directiontype.col",{"_index":618,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["directiontype.row",{"_index":624,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["directiontype[props.type",{"_index":770,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["disable",{"_index":389,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["disabled",{"_index":729,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["disappear",{"_index":219,"title":{},"body":{"classes/Controller.html":{}}}],["dist/workbench/desktop",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":1001,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribution",{"_index":980,"title":{},"body":{"index.html":{}}}],["divided",{"_index":951,"title":{},"body":{"index.html":{}}}],["document.body.classlist.add('mode",{"_index":117,"title":{},"body":{"classes/App.html":{}}}],["document.body.classlist.remove('mode",{"_index":119,"title":{},"body":{"classes/App.html":{}}}],["document.createelement('div",{"_index":351,"title":{},"body":{"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"interfaces/MenuProps.html":{},"classes/SvelteModule.html":{},"classes/View.html":{}}}],["document.queryselector('#main",{"_index":128,"title":{},"body":{"classes/App.html":{}}}],["documentation",{"_index":811,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":216,"title":{},"body":{"classes/Controller.html":{}}}],["draft",{"_index":1005,"title":{},"body":{"index.html":{}}}],["e",{"_index":257,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["e0e0e0",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":955,"title":{},"body":{"index.html":{}}}],["electron",{"_index":227,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{},"index.html":{}}}],["electron/.exec(process.execpath",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["electronstore",{"_index":226,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":215,"title":{},"body":{"classes/Controller.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["enableremotemodule",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entire",{"_index":949,"title":{},"body":{"index.html":{}}}],["enum",{"_index":247,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitItemView.html":{}}}],["enumerations",{"_index":893,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["es",{"_index":408,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["eslint",{"_index":388,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["event",{"_index":571,"title":{},"body":{"classes/SplitBoardController.html":{},"license.html":{}}}],["event.clientx",{"_index":596,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.clienty",{"_index":583,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.preventdefault",{"_index":597,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.stoppropagation",{"_index":598,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.target",{"_index":590,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["eventemitter2",{"_index":146,"title":{},"body":{"classes/AppearanceService.html":{},"dependencies.html":{}}}],["everyone",{"_index":930,"title":{},"body":{"index.html":{}}}],["evt",{"_index":141,"title":{},"body":{"classes/AppearanceService.html":{}}}],["exist",{"_index":434,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["exist(moduleid",{"_index":424,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["expand",{"_index":450,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{}}}],["expand.svelte",{"_index":656,"title":{},"body":{"classes/SplitItemView.html":{}}}],["expandactive",{"_index":540,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandleavehandler",{"_index":541,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmouseuphandler",{"_index":542,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmovehandler",{"_index":543,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandnewitem",{"_index":251,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Workbench.html":{}}}],["expandnewitem(view",{"_index":752,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["expandtype",{"_index":544,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["explorer/index.ts",{"_index":532,"title":{},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["export",{"_index":87,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["express",{"_index":1054,"title":{},"body":{"license.html":{}}}],["extends",{"_index":234,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["f2f2f2",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f9f9f9",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factory.ts",{"_index":403,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"coverage.html":{}}}],["factory.ts:11",{"_index":436,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:13",{"_index":437,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:14",{"_index":438,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:30",{"_index":441,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:33",{"_index":440,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:36",{"_index":442,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["false",{"_index":231,"title":{},"body":{"interfaces/ISettings.html":{},"classes/SplitBoardController.html":{},"miscellaneous/variables.html":{}}}],["ffae2b",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["file://${join(__dirname",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":1002,"title":{},"body":{"index.html":{},"license.html":{}}}],["fitness",{"_index":1059,"title":{},"body":{"license.html":{}}}],["flex",{"_index":495,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["flowvalue",{"_index":509,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["fn",{"_index":150,"title":{},"body":{"classes/AppearanceService.html":{}}}],["focus",{"_index":723,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":1043,"title":{},"body":{"license.html":{}}}],["fourthbgcolor",{"_index":845,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":1020,"title":{},"body":{"license.html":{}}}],["function",{"_index":151,"title":{},"body":{"classes/AppearanceService.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/Module.html":{},"classes/SplitBoardController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":900,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1041,"title":{},"body":{"license.html":{}}}],["get(moduleid",{"_index":422,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["getmenuinsatance",{"_index":362,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["getting",{"_index":909,"title":{"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":999,"title":{},"body":{"index.html":{}}}],["going",{"_index":212,"title":{},"body":{"classes/Controller.html":{}}}],["granted",{"_index":1019,"title":{},"body":{"license.html":{}}}],["gridbackgroundcolor",{"_index":846,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":72,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["groupmenu",{"_index":129,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.getmenuinsatance().init(menu.title",{"_index":133,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.initcontainer(header",{"_index":131,"title":{},"body":{"classes/App.html":{}}}],["groupmenuservice",{"_index":170,"title":{},"body":{"classes/BaseMenu.html":{}}}],["grow",{"_index":496,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["guide",{"_index":928,"title":{},"body":{"index.html":{}}}],["header",{"_index":127,"title":{},"body":{"classes/App.html":{}}}],["height",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["here",{"_index":924,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1018,"title":{},"body":{"license.html":{}}}],["hexdigits",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hide",{"_index":484,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["hideexpandbutton",{"_index":454,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["holders",{"_index":1064,"title":{},"body":{"license.html":{}}}],["hor",{"_index":575,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["horizontal",{"_index":619,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["host",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hover",{"_index":725,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["htmlelement",{"_index":28,"title":{},"body":{"classes/App.html":{},"classes/Controller.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{}}}],["http://localhost:5000/workbench/desktop",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":268,"title":{},"body":{"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["identifier",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":324,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["implied",{"_index":1055,"title":{},"body":{"license.html":{}}}],["import",{"_index":60,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["import(moduleid).then((modulesource",{"_index":427,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["include",{"_index":958,"title":{},"body":{"index.html":{}}}],["included",{"_index":1048,"title":{},"body":{"license.html":{}}}],["including",{"_index":1030,"title":{},"body":{"license.html":{}}}],["independently",{"_index":956,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index.svelte",{"_index":529,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["indexable",{"_index":715,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["ing",{"_index":913,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":342,"title":{},"body":{"classes/MenuBar.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{}}}],["init",{"_index":274,"title":{},"body":{"classes/Menu.html":{},"classes/MenuBar.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{}}}],["init(name",{"_index":291,"title":{},"body":{"classes/Menu.html":{}}}],["init(props",{"_index":336,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["initcontainer",{"_index":363,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["initcontainer(container",{"_index":368,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["initframe",{"_index":15,"title":{},"body":{"classes/App.html":{}}}],["initial",{"_index":706,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["initmenu",{"_index":167,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenu(menuitems",{"_index":171,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenus",{"_index":16,"title":{},"body":{"classes/App.html":{}}}],["initmodules",{"_index":17,"title":{},"body":{"classes/App.html":{}}}],["initnavigationbar",{"_index":18,"title":{},"body":{"classes/App.html":{}}}],["initpreferences",{"_index":19,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel",{"_index":20,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel(container",{"_index":50,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel",{"_index":21,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel(container",{"_index":52,"title":{},"body":{"classes/App.html":{}}}],["initstatusbar",{"_index":22,"title":{},"body":{"classes/App.html":{}}}],["initstyle",{"_index":23,"title":{},"body":{"classes/App.html":{}}}],["initstylemode",{"_index":24,"title":{},"body":{"classes/App.html":{}}}],["initstylemode(type",{"_index":56,"title":{},"body":{"classes/App.html":{}}}],["initwithcomponent",{"_index":517,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["initwithcomponent(target",{"_index":522,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["initworkarea",{"_index":25,"title":{},"body":{"classes/App.html":{}}}],["inject",{"_index":156,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject(token",{"_index":903,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":155,"title":{},"body":{"classes/AppearanceService.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["insertconfig",{"_index":801,"title":{},"body":{"classes/classBuilder.html":{}}}],["insertconfig(config",{"_index":738,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["instanceof",{"_index":105,"title":{},"body":{"classes/App.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["interface",{"_index":220,"title":{"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/WorkbenchProps.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}},"body":{"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["interfaces",{"_index":222,"title":{},"body":{"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/WorkbenchProps.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["inversify",{"_index":61,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"dependencies.html":{}}}],["ipc",{"_index":963,"title":{},"body":{"index.html":{}}}],["isettings",{"_index":221,"title":{"interfaces/ISettings.html":{}},"body":{"interfaces/ISettings.html":{},"coverage.html":{}}}],["isplitboardview",{"_index":232,"title":{"interfaces/ISplitBoardView.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{},"coverage.html":{}}}],["isprod",{"_index":818,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isshrink",{"_index":455,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["issues",{"_index":923,"title":{},"body":{"index.html":{}}}],["item",{"_index":298,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["item.id",{"_index":359,"title":{},"body":{"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"interfaces/MenuProps.html":{}}}],["item.loader",{"_index":773,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.loader.then((module",{"_index":781,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.module",{"_index":795,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.moduleid",{"_index":511,"title":{},"body":{"classes/ModuleItem.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.root",{"_index":592,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientheight",{"_index":627,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientwidth",{"_index":623,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.getboundingclientrect().left",{"_index":622,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.getboundingclientrect().top",{"_index":626,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.setcontent(module.view",{"_index":796,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.ts",{"_index":376,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ModuleItem.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["item.ts:18",{"_index":383,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:19",{"_index":384,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:20",{"_index":386,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:21",{"_index":382,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:22",{"_index":380,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:5",{"_index":465,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.ts:6",{"_index":467,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.ts:7",{"_index":466,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.ts:8",{"_index":480,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.view",{"_index":246,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["item.view.ts",{"_index":640,"title":{},"body":{"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["item.view.ts:12",{"_index":643,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:13",{"_index":644,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:14",{"_index":642,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:16",{"_index":645,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:17",{"_index":641,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:25",{"_index":651,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:32",{"_index":650,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:39",{"_index":653,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:46",{"_index":654,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:53",{"_index":649,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:57",{"_index":652,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:63",{"_index":646,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:67",{"_index":648,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:71",{"_index":655,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:77",{"_index":647,"title":{},"body":{"classes/SplitItemView.html":{}}}],["itemgeneratedelegate",{"_index":250,"title":{"interfaces/ItemGenerateDelegate.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["items",{"_index":237,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["join(__dirname",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keycode",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["kind",{"_index":1053,"title":{},"body":{"license.html":{}}}],["labelcolor",{"_index":847,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["length",{"_index":262,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["liability",{"_index":1068,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1065,"title":{},"body":{"license.html":{}}}],["license",{"_index":934,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["light",{"_index":899,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lightcolor",{"_index":183,"title":{},"body":{"classes/ColorRef.html":{}}}],["lightcolorhex",{"_index":906,"title":{},"body":{"miscellaneous/functions.html":{}}}],["limitation",{"_index":1031,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1056,"title":{},"body":{"license.html":{}}}],["linux",{"_index":983,"title":{},"body":{"index.html":{}}}],["liveresize",{"_index":549,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["liveresize(clientx",{"_index":566,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["load",{"_index":435,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["load(moduleid",{"_index":426,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["loader",{"_index":445,"title":{},"body":{"classes/ModuleItem.html":{}}}],["loading",{"_index":398,"title":{},"body":{"interfaces/Module.html":{}}}],["local",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":876,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":822,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error(json.stringify(err",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lowboardroot",{"_index":831,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":416,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.inrequestscope",{"_index":421,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.insingletonscope",{"_index":418,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.intransientscope",{"_index":420,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["macos",{"_index":981,"title":{},"body":{"index.html":{}}}],["main",{"_index":965,"title":{},"body":{"index.html":{}}}],["mainwindow",{"_index":819,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mainwindow.loadurl(url).catch((err",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.on('closed",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.webcontents.opendevtools",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor",{"_index":836,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makecolor('#000000",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#3f3f3f",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#5580c0",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#729cd4",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#bababa",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c0c0c1",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c4666f",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c6c6c6",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d00000",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d1905d",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d7d7d7",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d9d9d9",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#e0e0e0",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f2f2f2",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f9f9f9",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffae2b",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffffff",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor(anycolorhex",{"_index":905,"title":{},"body":{"miscellaneous/functions.html":{}}}],["map",{"_index":41,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["matching",{"_index":136,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":132,"title":{"classes/Menu.html":{}},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["menu(menucontainer",{"_index":373,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menu(this._view",{"_index":354,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["menu.id",{"_index":360,"title":{},"body":{"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"interfaces/MenuProps.html":{}}}],["menu.items",{"_index":134,"title":{},"body":{"classes/App.html":{}}}],["menu.svelte",{"_index":297,"title":{},"body":{"classes/Menu.html":{}}}],["menu.ts",{"_index":165,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["menu.ts:5",{"_index":169,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu.ts:8",{"_index":173,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu/config",{"_index":75,"title":{},"body":{"classes/App.html":{}}}],["menubar",{"_index":322,"title":{"classes/MenuBar.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["menucommonfunction",{"_index":381,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/typealiases.html":{}}}],["menucontainer",{"_index":371,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menugroupservice",{"_index":70,"title":{"classes/MenuGroupService.html":{}},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/MenuGroupService.html":{},"coverage.html":{}}}],["menuinstance",{"_index":166,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuitem",{"_index":283,"title":{"classes/MenuItem.html":{}},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menuitem(config",{"_index":314,"title":{},"body":{"classes/Menu.html":{}}}],["menuitem(menuitem",{"_index":308,"title":{},"body":{"classes/Menu.html":{}}}],["menuitemconfig",{"_index":172,"title":{"interfaces/MenuItemConfig.html":{}},"body":{"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menuitems",{"_index":174,"title":{},"body":{"classes/BaseMenu.html":{},"classes/Menu.html":{}}}],["menuitemtype",{"_index":385,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/enumerations.html":{}}}],["menuitemtype.group",{"_index":392,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["menuprops",{"_index":332,"title":{"interfaces/MenuProps.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["menusvelte",{"_index":269,"title":{},"body":{"classes/Menu.html":{}}}],["merchantability",{"_index":1058,"title":{},"body":{"license.html":{}}}],["merge",{"_index":579,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["metadata",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":12,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["meuns",{"_index":327,"title":{},"body":{"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"interfaces/MenuProps.html":{}}}],["meunswritable",{"_index":270,"title":{},"body":{"classes/Menu.html":{}}}],["minimum",{"_index":938,"title":{},"body":{"index.html":{}}}],["minwidth",{"_index":756,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["miscellaneous",{"_index":892,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":933,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":630,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["modify",{"_index":1034,"title":{},"body":{"license.html":{}}}],["module",{"_index":325,"title":{"interfaces/Module.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["module.init(props",{"_index":432,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["module.ts",{"_index":685,"title":{},"body":{"classes/SvelteModule.html":{},"coverage.html":{}}}],["module.ts:10",{"_index":688,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:16",{"_index":690,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:22",{"_index":691,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:28",{"_index":689,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:36",{"_index":692,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:8",{"_index":687,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:9",{"_index":686,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.viewdiddisappear",{"_index":785,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["module.viewwillappear",{"_index":784,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["moduleconfig",{"_index":348,"title":{"interfaces/ModuleConfig.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modulefactory",{"_index":63,"title":{"classes/ModuleFactory.html":{}},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modulefactory(this.container",{"_index":100,"title":{},"body":{"classes/App.html":{}}}],["modulefactory.load(config.workbench.id",{"_index":103,"title":{},"body":{"classes/App.html":{}}}],["moduleid",{"_index":439,"title":{},"body":{"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{}}}],["moduleitem",{"_index":443,"title":{"classes/ModuleItem.html":{}},"body":{"classes/ModuleItem.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modules",{"_index":409,"title":{"modules.html":{}},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"index.html":{},"modules.html":{}}}],["modulesource.default",{"_index":429,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["monorepo",{"_index":948,"title":{},"body":{"index.html":{}}}],["more",{"_index":943,"title":{},"body":{"index.html":{}}}],["mousedown",{"_index":599,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["mouseevent",{"_index":569,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["n",{"_index":260,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":33,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["namewritable",{"_index":271,"title":{},"body":{"classes/Menu.html":{}}}],["navigation",{"_index":76,"title":{},"body":{"classes/App.html":{}}}],["navigationbar",{"_index":121,"title":{},"body":{"classes/App.html":{}}}],["new",{"_index":40,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":975,"title":{},"body":{"index.html":{}}}],["none",{"_index":707,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["noninfringement",{"_index":1062,"title":{},"body":{"license.html":{}}}],["normalizeweight",{"_index":802,"title":{},"body":{"classes/classBuilder.html":{}}}],["normalizeweight(config",{"_index":808,"title":{},"body":{"classes/classBuilder.html":{}}}],["nothing",{"_index":942,"title":{},"body":{"index.html":{}}}],["notice",{"_index":1046,"title":{},"body":{"license.html":{}}}],["notification",{"_index":820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":990,"title":{},"body":{"index.html":{}}}],["null",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":254,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":1023,"title":{},"body":{"license.html":{}}}],["offsetx",{"_index":628,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["offsety",{"_index":629,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["olditem",{"_index":252,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["onmodechanged",{"_index":143,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmodechanged(fn",{"_index":148,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmousedown",{"_index":550,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["onmousedown(event",{"_index":568,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["optional",{"_index":35,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{}}}],["options",{"_index":400,"title":{},"body":{"interfaces/Module.html":{}}}],["orderedconfigs",{"_index":731,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["organization",{"_index":1011,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1072,"title":{},"body":{"license.html":{}}}],["out",{"_index":986,"title":{},"body":{"index.html":{},"license.html":{}}}],["overview",{"_index":1076,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":771,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["p.id",{"_index":775,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["package",{"_index":871,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":953,"title":{},"body":{"index.html":{}}}],["packaging",{"_index":977,"title":{},"body":{"index.html":{}}}],["page",{"_index":971,"title":{},"body":{"index.html":{}}}],["panel/index.ts",{"_index":514,"title":{},"body":{"classes/PropertyPanel.html":{},"coverage.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":1060,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1017,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1039,"title":{},"body":{"license.html":{}}}],["person",{"_index":1022,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1040,"title":{},"body":{"license.html":{}}}],["platform",{"_index":997,"title":{},"body":{"index.html":{}}}],["port",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":1050,"title":{},"body":{"license.html":{}}}],["position",{"_index":263,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["possible",{"_index":994,"title":{},"body":{"index.html":{}}}],["practice",{"_index":916,"title":{},"body":{"index.html":{}}}],["preload",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preload.js",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepend",{"_index":463,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["prepend(...childs",{"_index":505,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["private",{"_index":9,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["process.env.node_env",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":950,"title":{},"body":{"index.html":{}}}],["project",{"_index":944,"title":{},"body":{"index.html":{}}}],["promise",{"_index":401,"title":{},"body":{"interfaces/Module.html":{},"classes/ModuleItem.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["propertypanel",{"_index":83,"title":{"classes/PropertyPanel.html":{}},"body":{"classes/App.html":{},"classes/PropertyPanel.html":{},"coverage.html":{}}}],["props",{"_index":124,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.modules",{"_index":772,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.scale",{"_index":778,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.scope",{"_index":430,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["provided",{"_index":1051,"title":{},"body":{"license.html":{}}}],["provides",{"_index":404,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["public",{"_index":142,"title":{},"body":{"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["publish",{"_index":925,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":1061,"title":{},"body":{"license.html":{}}}],["qiansc",{"_index":1016,"title":{},"body":{"license.html":{}}}],["quickly",{"_index":993,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":267,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["ready",{"_index":979,"title":{},"body":{"index.html":{}}}],["ref.ts",{"_index":180,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["ref.ts:15",{"_index":191,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:5",{"_index":188,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:6",{"_index":189,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:7",{"_index":186,"title":{},"body":{"classes/ColorRef.html":{}}}],["reflect",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["registeritem",{"_index":275,"title":{},"body":{"classes/Menu.html":{}}}],["registeritem(config",{"_index":293,"title":{},"body":{"classes/Menu.html":{}}}],["release",{"_index":1006,"title":{},"body":{"index.html":{}}}],["remove",{"_index":328,"title":{},"body":{"classes/MenuBar.html":{}}}],["remove(menu",{"_index":338,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["removeitem",{"_index":276,"title":{},"body":{"classes/Menu.html":{}}}],["removeitem(index",{"_index":295,"title":{},"body":{"classes/Menu.html":{}}}],["removemenuinstances",{"_index":364,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["removemenuinstances(menu",{"_index":369,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["render",{"_index":213,"title":{},"body":{"classes/Controller.html":{}}}],["replacecontent",{"_index":456,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["replacecontent(contentview",{"_index":487,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["repository",{"_index":914,"title":{},"body":{"index.html":{}}}],["request",{"_index":413,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["required",{"_index":937,"title":{},"body":{"index.html":{}}}],["resize",{"_index":255,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{}}}],["resizeat",{"_index":238,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["resourceexplorer",{"_index":530,"title":{"classes/ResourceExplorer.html":{}},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["resourcepage",{"_index":81,"title":{},"body":{"classes/App.html":{}}}],["resoures",{"_index":399,"title":{},"body":{"interfaces/Module.html":{}}}],["restriction",{"_index":1029,"title":{},"body":{"license.html":{}}}],["result",{"_index":135,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":137,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":161,"title":{},"body":{"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["returns",{"_index":43,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["rights",{"_index":1032,"title":{},"body":{"license.html":{}}}],["roadmap",{"_index":926,"title":{},"body":{"index.html":{}}}],["rollup",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":36,"title":{},"body":{"classes/App.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["rounded",{"_index":673,"title":{},"body":{"classes/SplitItemView.html":{}}}],["row",{"_index":249,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":407,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"index.html":{}}}],["s",{"_index":259,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["scale",{"_index":757,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["scope",{"_index":411,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["script",{"_index":966,"title":{},"body":{"index.html":{}}}],["secondarybgcolor",{"_index":848,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["secondarylabelcolor",{"_index":849,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":1008,"title":{},"body":{"index.html":{}}}],["sell",{"_index":1037,"title":{},"body":{"license.html":{}}}],["serialize",{"_index":329,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["server",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":69,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["service.ts",{"_index":139,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":147,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:12",{"_index":154,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{}}}],["service.ts:18",{"_index":149,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:19",{"_index":367,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:21",{"_index":152,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:28",{"_index":370,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:6",{"_index":366,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:7",{"_index":365,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:9",{"_index":145,"title":{},"body":{"classes/AppearanceService.html":{}}}],["set",{"_index":1013,"title":{},"body":{"index.html":{}}}],["setactivestate",{"_index":551,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setactivestate(index",{"_index":572,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setcontent",{"_index":457,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setcontent(contentview",{"_index":489,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setcursor",{"_index":239,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["setdefaultclass",{"_index":458,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setflow",{"_index":464,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setflow(type",{"_index":508,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setgrow",{"_index":459,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setgrow(classname",{"_index":492,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setshrink",{"_index":460,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setshrink(classname",{"_index":497,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["settings",{"_index":229,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shadow",{"_index":390,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["shall",{"_index":1047,"title":{},"body":{"license.html":{}}}],["shapecanvas",{"_index":533,"title":{"classes/ShapeCanvas.html":{}},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["shrink",{"_index":499,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["similar",{"_index":947,"title":{},"body":{"index.html":{}}}],["singleton",{"_index":91,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["smelte",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":1025,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["split",{"_index":245,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitItemView.html":{}}}],["split.js",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["splitboard",{"_index":745,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["splitboardcontroller",{"_index":536,"title":{"classes/SplitBoardController.html":{}},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["splitboardview",{"_index":349,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["splitboardview>().setflow('1",{"_index":765,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["splitcolumnat",{"_index":240,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["splitexpand",{"_index":477,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["splititemview",{"_index":244,"title":{"classes/SplitItemView.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"coverage.html":{}}}],["splititemview:12",{"_index":474,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:13",{"_index":475,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:14",{"_index":473,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:16",{"_index":476,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:17",{"_index":478,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:25",{"_index":490,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:32",{"_index":488,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:39",{"_index":493,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:46",{"_index":498,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:53",{"_index":486,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:57",{"_index":491,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:63",{"_index":481,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:67",{"_index":483,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:71",{"_index":501,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:77",{"_index":482,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splitrowat",{"_index":241,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["src/.../appearance.ts",{"_index":894,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../class",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inject.ts",{"_index":901,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.ts",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu",{"_index":897,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../settings.ts",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../split",{"_index":895,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../type.ts",{"_index":896,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../ui",{"_index":902,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../uuid.ts",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../view.ts",{"_index":1081,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app",{"_index":964,"title":{},"body":{"index.html":{}}}],["src/app/index.ts",{"_index":814,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/logger.ts",{"_index":821,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/settings.ts",{"_index":223,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core",{"_index":957,"title":{},"body":{"index.html":{}}}],["src/core/browser/class",{"_index":713,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/controller.ts",{"_index":200,"title":{},"body":{"classes/Controller.html":{},"coverage.html":{}}}],["src/core/browser/controller.ts:10",{"_index":208,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:14",{"_index":211,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:17",{"_index":209,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:5",{"_index":207,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:7",{"_index":210,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/layout/split",{"_index":537,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/layout/type.ts",{"_index":233,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/browser/style/ui",{"_index":834,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/view.ts",{"_index":700,"title":{},"body":{"classes/View.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/browser/view.ts:13",{"_index":702,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:17",{"_index":703,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:4",{"_index":701,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:8",{"_index":704,"title":{},"body":{"classes/View.html":{}}}],["src/core/common/appearance.ts",{"_index":898,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/common/color",{"_index":179,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["src/core/common/uuid.ts",{"_index":859,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/components",{"_index":973,"title":{},"body":{"index.html":{}}}],["src/core/parts/ioc/inject.ts",{"_index":860,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/core/parts/modules/module",{"_index":402,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"coverage.html":{}}}],["src/core/parts/modules/module.ts",{"_index":397,"title":{},"body":{"interfaces/Module.html":{},"coverage.html":{}}}],["src/core/parts/modules/svelte",{"_index":684,"title":{},"body":{"classes/SvelteModule.html":{},"coverage.html":{}}}],["src/modules",{"_index":967,"title":{},"body":{"index.html":{}}}],["src/modules/menu",{"_index":163,"title":{},"body":{"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/property",{"_index":513,"title":{},"body":{"classes/PropertyPanel.html":{},"coverage.html":{}}}],["src/modules/resource",{"_index":531,"title":{},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["src/modules/shape",{"_index":534,"title":{},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["src/modules/workbench/index.ts",{"_index":744,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["src/modules/workbench/index.ts:19",{"_index":749,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:20",{"_index":750,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:21",{"_index":747,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:31",{"_index":754,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:72",{"_index":751,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:81",{"_index":753,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:95",{"_index":755,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/module",{"_index":444,"title":{},"body":{"classes/ModuleItem.html":{},"coverage.html":{}}}],["src/workbench",{"_index":969,"title":{},"body":{"index.html":{}}}],["src/workbench/desktop/app.ts",{"_index":6,"title":{},"body":{"classes/App.html":{},"coverage.html":{}}}],["src/workbench/desktop/app.ts:103",{"_index":54,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:16",{"_index":37,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:17",{"_index":30,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:24",{"_index":42,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:30",{"_index":47,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:42",{"_index":49,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:47",{"_index":55,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:52",{"_index":58,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:60",{"_index":44,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:64",{"_index":48,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:74",{"_index":46,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:83",{"_index":53,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:91",{"_index":51,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:99",{"_index":59,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/main.ts",{"_index":868,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/services/appearance",{"_index":138,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["standard",{"_index":932,"title":{},"body":{"index.html":{}}}],["start",{"_index":261,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["started",{"_index":910,"title":{"index.html":{},"license.html":{}},"body":{}}],["startx",{"_index":545,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["starty",{"_index":546,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["stateconfig",{"_index":718,"title":{"interfaces/stateConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["statements",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["statically",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statusbar",{"_index":79,"title":{},"body":{"classes/App.html":{}}}],["step",{"_index":976,"title":{},"body":{"index.html":{}}}],["sth",{"_index":120,"title":{},"body":{"classes/App.html":{}}}],["store",{"_index":228,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{}}}],["storybook",{"_index":972,"title":{},"body":{"index.html":{}}}],["string",{"_index":278,"title":{},"body":{"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":945,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1042,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1035,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1049,"title":{},"body":{"license.html":{}}}],["such",{"_index":960,"title":{},"body":{"index.html":{}}}],["super",{"_index":658,"title":{},"body":{"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["support",{"_index":985,"title":{},"body":{"index.html":{}}}],["svelte/internal",{"_index":693,"title":{},"body":{"classes/SvelteModule.html":{}}}],["svelte/store",{"_index":299,"title":{},"body":{"classes/Menu.html":{}}}],["sveltecomponentdev",{"_index":519,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["sveltemodule",{"_index":515,"title":{"classes/SvelteModule.html":{}},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"coverage.html":{}}}],["sveltemodule:10",{"_index":521,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:16",{"_index":525,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:28",{"_index":524,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:5",{"_index":523,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:8",{"_index":520,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:9",{"_index":518,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["switch",{"_index":196,"title":{},"body":{"classes/ColorRef.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["symbol.for('flowtableroot",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["systembluecolor",{"_index":850,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemgraycolor",{"_index":851,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemorangecolor",{"_index":852,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systempinkcolor",{"_index":853,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemredcolor",{"_index":854,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemyellowcolor",{"_index":855,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":253,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["table",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":122,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"miscellaneous/variables.html":{}}}],["target.classlist.contains('split",{"_index":594,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["target.parentelement",{"_index":593,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["template",{"_index":936,"title":{},"body":{"index.html":{}}}],["tertiarybgcolor",{"_index":856,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tertiarylabelcolor",{"_index":857,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["textfieldbackground",{"_index":858,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["this._growclassname",{"_index":668,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._shrinkclassname",{"_index":667,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._type",{"_index":158,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this._view",{"_index":350,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/SvelteModule.html":{}}}],["this._view.parentnode",{"_index":698,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this._view.parentnode.removechild(this._view",{"_index":699,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this._view.removechild(menu.container",{"_index":356,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.activeexpand",{"_index":602,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.activeid",{"_index":603,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.add(moduleid",{"_index":428,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.addexpandbutton",{"_index":659,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.anycolor",{"_index":193,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.callback",{"_index":396,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.cancelwaitformerge",{"_index":679,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.checkexpandstate(event.clientx",{"_index":584,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.children",{"_index":393,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.comp",{"_index":695,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this.comp.$destroy",{"_index":697,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this.container",{"_index":89,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{}}}],["this.container.append(menucontainer",{"_index":372,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.container.bind('modulefactory').todynamicvalue",{"_index":101,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(appearanceservice).to(appearanceservice",{"_index":109,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(menugroupservice).to(menugroupservice",{"_index":110,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(moduleid).to(module",{"_index":417,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.container.firstchild",{"_index":310,"title":{},"body":{"classes/Menu.html":{}}}],["this.container.get(appearanceservice",{"_index":112,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(menugroupservice",{"_index":130,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(moduleid",{"_index":431,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.container.removechild(menu.container",{"_index":374,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.container.removechild(this.container.firstchild",{"_index":311,"title":{},"body":{"classes/Menu.html":{}}}],["this.contentview",{"_index":661,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.context",{"_index":125,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{}}}],["this.context.set('container",{"_index":92,"title":{},"body":{"classes/App.html":{}}}],["this.context.set('menus",{"_index":302,"title":{},"body":{"classes/Menu.html":{}}}],["this.context.set('name",{"_index":304,"title":{},"body":{"classes/Menu.html":{}}}],["this.createmenu",{"_index":309,"title":{},"body":{"classes/Menu.html":{}}}],["this.darkcolor",{"_index":195,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.evt.emit('onmodechanged",{"_index":159,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.evt.on('onmodechanged",{"_index":160,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.exist(moduleid",{"_index":414,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.expand",{"_index":677,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.expandhidden",{"_index":678,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.mergedirection",{"_index":681,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expandactive",{"_index":607,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandleavehandler",{"_index":585,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmouseuphandler",{"_index":587,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmovehandler",{"_index":581,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandtype",{"_index":609,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.groupmenuservice.getmenuinsatance",{"_index":176,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.id",{"_index":300,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.initmenus",{"_index":126,"title":{},"body":{"classes/App.html":{}}}],["this.initmodules",{"_index":98,"title":{},"body":{"classes/App.html":{}}}],["this.initnavigationbar",{"_index":95,"title":{},"body":{"classes/App.html":{}}}],["this.initpreferences",{"_index":93,"title":{},"body":{"classes/App.html":{}}}],["this.initstatusbar",{"_index":96,"title":{},"body":{"classes/App.html":{}}}],["this.initstyle",{"_index":94,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(appearancetype.dark",{"_index":115,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(type",{"_index":114,"title":{},"body":{"classes/App.html":{}}}],["this.initwithcomponent(this._view",{"_index":696,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this.insertconfig(config",{"_index":734,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.lightcolor",{"_index":194,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.liveresize(event.clientx",{"_index":582,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.menuinstance",{"_index":175,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.menuinstance.init",{"_index":177,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.menuitems",{"_index":301,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.filter((_",{"_index":318,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.push(new",{"_index":307,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.splice(index",{"_index":312,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems[index",{"_index":316,"title":{},"body":{"classes/Menu.html":{}}}],["this.menusvelte",{"_index":319,"title":{},"body":{"classes/Menu.html":{}}}],["this.meuns",{"_index":357,"title":{},"body":{"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"interfaces/MenuProps.html":{}}}],["this.meuns.filter((item",{"_index":358,"title":{},"body":{"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"interfaces/MenuProps.html":{}}}],["this.meuns.length",{"_index":353,"title":{},"body":{"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"interfaces/MenuProps.html":{}}}],["this.meuns.push(menu",{"_index":355,"title":{},"body":{"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"interfaces/MenuProps.html":{}}}],["this.meunswritable",{"_index":303,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set((this.menuitems",{"_index":317,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set([...this.menuitems",{"_index":315,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set(this.menuitems",{"_index":321,"title":{},"body":{"classes/Menu.html":{}}}],["this.modulefactory",{"_index":767,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.modulefactory.load(item.moduleid",{"_index":793,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.modulefactory.load(p.id",{"_index":774,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.moduleid",{"_index":512,"title":{},"body":{"classes/ModuleItem.html":{}}}],["this.modules.get(moduleid",{"_index":423,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.modules.has(moduleid",{"_index":425,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.modules.set(moduleid",{"_index":415,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.name",{"_index":306,"title":{},"body":{"classes/Menu.html":{}}}],["this.namewritable",{"_index":305,"title":{},"body":{"classes/Menu.html":{}}}],["this.namewritable.set(this.name",{"_index":320,"title":{},"body":{"classes/Menu.html":{}}}],["this.normalizeweight(config",{"_index":740,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.onmousedown(event",{"_index":589,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.orderedconfigs",{"_index":736,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor",{"_index":742,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor].weight",{"_index":743,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.prepend(contentview",{"_index":664,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.props",{"_index":694,"title":{},"body":{"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.props.minwidth",{"_index":798,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.props.scale",{"_index":799,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.props.type",{"_index":797,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.root",{"_index":123,"title":{},"body":{"classes/App.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["this.root.appendchild(child",{"_index":710,"title":{},"body":{"classes/View.html":{}}}],["this.root.appendchild(workbench.view",{"_index":107,"title":{},"body":{"classes/App.html":{}}}],["this.root.classlist.add('flex",{"_index":672,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('relative",{"_index":675,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('split",{"_index":662,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('wait",{"_index":680,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(...this._bgcolorclassname",{"_index":676,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(`flex",{"_index":709,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.add(this._growclassname",{"_index":669,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(this._shrinkclassname",{"_index":671,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove('flex",{"_index":708,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.remove('wait",{"_index":683,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._growclassname",{"_index":670,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._shrinkclassname",{"_index":666,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.prepend(...childs",{"_index":711,"title":{},"body":{"classes/View.html":{}}}],["this.root.replacechild(contentview",{"_index":665,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.setactivestate(index",{"_index":595,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.setdefaultclass",{"_index":660,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.splitboard",{"_index":764,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.additem(item",{"_index":776,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.applysplit",{"_index":777,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.direction",{"_index":769,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.itemgeneratedelegate",{"_index":766,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.items.foreach((item",{"_index":779,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.items[index",{"_index":780,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.root",{"_index":768,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.startx",{"_index":600,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.starty",{"_index":601,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.title",{"_index":394,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.type",{"_index":395,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.unactiveexpand",{"_index":586,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view",{"_index":787,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.view.cancelformerge",{"_index":614,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.direction",{"_index":617,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items.foreach((item",{"_index":591,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items[this.activeid",{"_index":616,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.resizeat(this.activeid",{"_index":621,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousedown",{"_index":588,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseleave",{"_index":605,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousemove",{"_index":604,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseup",{"_index":606,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseleave",{"_index":612,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mousemove",{"_index":611,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseup",{"_index":613,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor",{"_index":615,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('col",{"_index":632,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('crosshair",{"_index":610,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('n",{"_index":636,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('row",{"_index":633,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('w",{"_index":634,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitcolumnat(this.activeid",{"_index":638,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitrowat(this.activeid",{"_index":639,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.waitformergeatitem(this.activeid",{"_index":635,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.viewdiddisappear",{"_index":791,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.viewwilldisappear",{"_index":788,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["three",{"_index":952,"title":{},"body":{"index.html":{}}}],["title",{"_index":341,"title":{},"body":{"classes/MenuBar.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{}}}],["together",{"_index":919,"title":{},"body":{"index.html":{}}}],["token",{"_index":904,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tools",{"_index":968,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1071,"title":{},"body":{"license.html":{}}}],["transient",{"_index":412,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["tree",{"_index":217,"title":{},"body":{"classes/Controller.html":{}}}],["true",{"_index":608,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":34,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1079,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/color",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["ui/components/navigation/navigation",{"_index":77,"title":{},"body":{"classes/App.html":{}}}],["ui/components/property/proterty.svelte",{"_index":84,"title":{},"body":{"classes/App.html":{}}}],["ui/components/resource/resource.svelte",{"_index":82,"title":{},"body":{"classes/App.html":{}}}],["ui/components/status/status",{"_index":80,"title":{},"body":{"classes/App.html":{}}}],["unactiveexpand",{"_index":552,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["undefined",{"_index":721,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":931,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":335,"title":{},"body":{"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{}}}],["update",{"_index":984,"title":{},"body":{"index.html":{}}}],["updatemode",{"_index":144,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updatemode(type",{"_index":153,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updater",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["url",{"_index":1144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":1033,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":940,"title":{},"body":{"index.html":{}}}],["user",{"_index":1012,"title":{},"body":{"index.html":{}}}],["using",{"_index":988,"title":{},"body":{"index.html":{}}}],["utils",{"_index":962,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":387,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":39,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Menu.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/classBuilder.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1082,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":577,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["version",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":625,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["very",{"_index":946,"title":{},"body":{"index.html":{}}}],["view",{"_index":202,"title":{"classes/View.html":{}},"body":{"classes/Controller.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["view.clone",{"_index":792,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.module",{"_index":783,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.module.serialize",{"_index":794,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.parentnode",{"_index":789,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.parentnode.removechild(view",{"_index":790,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.setcontent(module.view",{"_index":782,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view:13",{"_index":503,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["view:17",{"_index":506,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["view:4",{"_index":479,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["view:8",{"_index":510,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["viewdidappear",{"_index":203,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewdiddisappear",{"_index":204,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewwillappear",{"_index":205,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewwilldisappear",{"_index":206,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["vite",{"_index":939,"title":{},"body":{"index.html":{}}}],["void",{"_index":45,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/Controller.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Menu.html":{},"classes/MenuBar.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["w",{"_index":258,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["waitformerge",{"_index":461,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["waitformerge(direction",{"_index":500,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["waitformergeatitem",{"_index":242,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["warranties",{"_index":1057,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1052,"title":{},"body":{"license.html":{}}}],["web",{"_index":970,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["webpreferences",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":719,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["weightmap",{"_index":712,"title":{"interfaces/WeightMap.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["whether",{"_index":1069,"title":{},"body":{"license.html":{}}}],["width",{"_index":1133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wiki",{"_index":1009,"title":{},"body":{"index.html":{}}}],["windows",{"_index":982,"title":{},"body":{"index.html":{}}}],["without",{"_index":1028,"title":{},"body":{"license.html":{}}}],["work",{"_index":921,"title":{},"body":{"index.html":{}}}],["workbench",{"_index":102,"title":{"classes/Workbench.html":{}},"body":{"classes/App.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["workbench.viewdidappear",{"_index":108,"title":{},"body":{"classes/App.html":{}}}],["workbench.viewwillappear",{"_index":106,"title":{},"body":{"classes/App.html":{}}}],["workbench/desktop/app.config.json",{"_index":86,"title":{},"body":{"classes/App.html":{}}}],["workbenchprops",{"_index":748,"title":{"interfaces/WorkbenchProps.html":{}},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["works",{"_index":935,"title":{},"body":{"index.html":{}}}],["writable",{"_index":286,"title":{},"body":{"classes/Menu.html":{}}}],["xl",{"_index":674,"title":{},"body":{"classes/SplitItemView.html":{}}}],["yes",{"_index":187,"title":{},"body":{"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/View.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/App.html":{"url":"classes/App.html","title":"class - App","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/app.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                context\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bootstrap\n                            \n                            \n                                initFrame\n                            \n                            \n                                initMenus\n                            \n                            \n                                    Async\n                                initModules\n                            \n                            \n                                initNavigationBar\n                            \n                            \n                                initPreferences\n                            \n                            \n                                initPropertyPanel\n                            \n                            \n                                initResourcePanel\n                            \n                            \n                                initStatusBar\n                            \n                            \n                                initStyle\n                            \n                            \n                                initStyleMode\n                            \n                            \n                                initWorkArea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/app.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Container\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        bootstrap\n                        \n                    \n                \n            \n            \n                \n                    \n                    bootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFrame\n                        \n                    \n                \n            \n            \n                \ninitFrame()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initMenus\n                        \n                    \n                \n            \n            \n                \ninitMenus()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initModules\n                        \n                    \n                \n            \n            \n                \n                    \n                    initModules()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNavigationBar\n                        \n                    \n                \n            \n            \n                \ninitNavigationBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPreferences\n                        \n                    \n                \n            \n            \n                \ninitPreferences()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPropertyPanel\n                        \n                    \n                \n            \n            \n                \ninitPropertyPanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initResourcePanel\n                        \n                    \n                \n            \n            \n                \ninitResourcePanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStatusBar\n                        \n                    \n                \n            \n            \n                \ninitStatusBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyle\n                        \n                    \n                \n            \n            \n                \ninitStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyleMode\n                        \n                    \n                \n            \n            \n                \ninitStyleMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initWorkArea\n                        \n                    \n                \n            \n            \n                \ninitWorkArea()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Container } from 'inversify';\nimport { AppearanceType } from '@cosmic/core/common';\nimport { ModuleFactory } from '@cosmic/core/parts';\nimport { Controller } from '@cosmic/core/browser';\nimport { AppearanceService } from '@cosmic/workbench/services/appearance-service';\n// import { MenuGroupService } from '@cosmic/workbench/services/menu-group-service';\n// import { applicationMenus } from './base-menu/config';\nimport Navigation from '../ui/components/navigation/navigation-bar.svelte';\nimport StatusBar from '../ui/components/status/status-bar.svelte';\nimport ResourcePage from '../ui/components/resource/resource.svelte';\nimport PropertyPanel from '../ui/components/property/proterty.svelte';\n\nimport config from 'workbench/desktop/app.config.json';\n\nexport default class App {\n  private container: Container;\n  private context = new Map();\n  constructor(private root: HTMLElement) {\n    this.container = new Container({ defaultScope: 'Singleton' });\n    this.context.set('container', this.container);\n    this.initPreferences();\n    this.initStyle();\n  }\n  async bootstrap() {\n    this.initNavigationBar();\n    this.initStatusBar();\n    await this.initModules();\n  }\n\n  async initModules() {\n    const moduleFactory = new ModuleFactory(this.container);\n    this.container.bind('ModuleFactory').toDynamicValue(() => moduleFactory);\n\n    const workbench = await moduleFactory.load(config.workbench.id, config.workbench);\n    if (workbench instanceof Controller) {\n      workbench.viewWillAppear();\n      this.root.appendChild(workbench.view());\n      workbench.viewDidAppear();\n    }\n  }\n\n  initPreferences() {\n    this.container.bind(AppearanceService).to(AppearanceService);\n    // this.container.bind(MenuGroupService).to(MenuGroupService);\n  }\n\n  initStyle() {\n    const aps = this.container.get(AppearanceService);\n    aps.onModeChanged((type: AppearanceType) => this.initStyleMode(type));\n    this.initStyleMode(AppearanceType.dark);\n  }\n  initStyleMode(type: AppearanceType): void {\n    if (type === AppearanceType.dark) {\n      document.body.classList.add('mode-dark');\n    } else {\n      document.body.classList.remove('mode-dark');\n    }\n  }\n\n  initFrame(): void {\n    // to do sth.\n  }\n\n  initNavigationBar(): void {\n    // to do sth.\n    const navigationBar = new Navigation({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    this.initMenus();\n  }\n\n  initMenus(): void {\n    // const header = document.querySelector('#main-header');\n    // const groupMenu = this.container.get(MenuGroupService);\n    // groupMenu.initContainer(header as HTMLElement);\n    // for (const menu of applicationMenus) {\n    //   groupMenu.getMenuInsatance().init(menu.title, menu.items);\n    // }\n  }\n\n  initResourcePanel(container: HTMLElement): void {\n    new ResourcePage({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initPropertyPanel(container: HTMLElement): void {\n    new PropertyPanel({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initWorkArea(): void {\n    // to do sth.\n  }\n\n  initStatusBar(): void {\n    new StatusBar({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    // to do sth.\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppearanceService.html":{"url":"classes/AppearanceService.html","title":"class - AppearanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppearanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/appearance-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Private\n                                evt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onModeChanged\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                updateMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppearanceType\n\n                    \n                \n                \n                    \n                        Default value : AppearanceType.dark\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        evt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter2()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onModeChanged\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModeChanged(fn: (type: AppearanceType) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        type\n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject, ContainerModule } from 'inversify';\nimport { EventEmitter2 } from 'eventemitter2';\n\nimport { AppearanceType } from '@cosmic/core/common';\n\n@injectable()\n/** 外观设置服务 */\nexport class AppearanceService {\n  private _type: AppearanceType = AppearanceType.dark;\n  private evt = new EventEmitter2();\n\n  public updateMode(type: AppearanceType) {\n    if (this._type !== type) {\n      this._type = type;\n      this.evt.emit('onModeChanged', type);\n    }\n  }\n  public onModeChanged(fn: (type: AppearanceType) => void) {\n    this.evt.on('onModeChanged', fn);\n  }\n  public type() {\n    return this._type;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseMenu.html":{"url":"classes/BaseMenu.html","title":"class - BaseMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-bar/base-menu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                menuInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(groupMenuService: MenuGroupService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/menu-bar/base-menu.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupMenuService\n                                                  \n                                                        \n                                                                        MenuGroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-bar/base-menu.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    initMenu(menuItems: MenuItemConfig[])\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-bar/base-menu.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuItems\n                                    \n                                                MenuItemConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { MenuGroupService } from './menu-group-service';\nimport type { Menu, MenuItemConfig } from './menu';\n\nexport class BaseMenu {\n  private menuInstance!: Menu;\n  constructor(private groupMenuService: MenuGroupService) {}\n\n  public initMenu(menuItems: MenuItemConfig[]): void {\n    this.menuInstance = this.groupMenuService.getMenuInsatance();\n    this.menuInstance.init('文件', menuItems);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColorRef.html":{"url":"classes/ColorRef.html","title":"class - ColorRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColorRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/common/color-ref.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                anyColor\n                            \n                            \n                                    Private\n                                darkColor\n                            \n                            \n                                    Private\n                                lightColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                color\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(anyColor: Color, lightColor?: Color, darkColor?: Color)\n                    \n                \n                        \n                            \n                                Defined in src/core/common/color-ref.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        anyColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lightColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        darkColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        anyColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        darkColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lightColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        color\n                        \n                    \n                \n            \n            \n                \n                    \n                    color(appearanceType: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/common/color-ref.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appearanceType\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type * as Color from 'color';\nimport { AppearanceType } from './appearance';\n\nexport default class ColorRef {\n  private anyColor: Color;\n  private lightColor: Color;\n  private darkColor: Color;\n\n  constructor(anyColor: Color, lightColor?: Color, darkColor?: Color) {\n    this.anyColor = anyColor;\n    this.lightColor = lightColor || anyColor;\n    this.darkColor = darkColor || anyColor;\n  }\n\n  public color(appearanceType: AppearanceType) {\n    switch (appearanceType) {\n      case AppearanceType.any:\n        return this.anyColor;\n      case AppearanceType.light:\n        return this.lightColor;\n      case AppearanceType.dark:\n        return this.darkColor;\n      default:\n        return this.anyColor;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Controller.html":{"url":"classes/Controller.html","title":"class - Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Controller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                view\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\n\n@injectable()\nexport abstract class Controller {\n  abstract view(): HTMLElement;\n\n  viewWillAppear() {\n    /** going to render, appending element to dom tree  */\n  }\n  viewDidAppear() {\n    /** after appeared */\n  }\n\n  viewWillDisappear() {\n    /** going to disappear */\n  }\n  viewDidDisappear() {\n    /** going to disappear */\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISettings.html":{"url":"interfaces/ISettings.html","title":"interface - ISettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/settings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            check\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import ElectronStore from 'electron-store';\n\ninterface ISettings {\n  check: boolean;\n}\n\nconst settings = new ElectronStore({\n  defaults: {\n    check: false,\n  },\n});\n\nexport default settings;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISplitBoardView.html":{"url":"interfaces/ISplitBoardView.html","title":"interface - ISplitBoardView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISplitBoardView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/type.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cancelForMerge\n                                        \n                                \n                                \n                                        \n                                            direction\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            resizeAt\n                                        \n                                \n                                \n                                        \n                                            setCursor\n                                        \n                                \n                                \n                                        \n                                            splitColumnAt\n                                        \n                                \n                                \n                                        \n                                            splitRowAt\n                                        \n                                \n                                \n                                        \n                                            waitForMergeAtItem\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancelForMerge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelForMerge:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:         directionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         directionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     SplitItemView[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SplitItemView[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizeAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resizeAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setCursor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setCursor:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitColumnAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitColumnAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitRowAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitRowAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        waitForMergeAtItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        waitForMergeAtItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type View from '../view';\nimport type SplitItemView from './split-item.view';\n\nexport enum directionType {\n  'col',\n  'row',\n}\n\nexport interface ItemGenerateDelegate {\n  expandNewItem: (oldItem: T, index: number) => T;\n}\n\nexport interface ISplitBoardView extends View {\n  items: SplitItemView[];\n  direction: directionType;\n  setCursor: (\n    type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize'\n  ) => void;\n  cancelForMerge: () => void;\n  resizeAt: (index: number, start: number, length: number, position: number) => void;\n  waitForMergeAtItem: (index: number, direction: 'w' | 'e' | 'n' | 's') => void;\n  splitColumnAt: (index: number, clientX: number, clientY: number) => void;\n  splitRowAt: (index: number, clientX: number, clientY: number) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemGenerateDelegate.html":{"url":"interfaces/ItemGenerateDelegate.html","title":"interface - ItemGenerateDelegate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ItemGenerateDelegate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/type.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expandNewItem\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expandNewItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expandNewItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type View from '../view';\nimport type SplitItemView from './split-item.view';\n\nexport enum directionType {\n  'col',\n  'row',\n}\n\nexport interface ItemGenerateDelegate {\n  expandNewItem: (oldItem: T, index: number) => T;\n}\n\nexport interface ISplitBoardView extends View {\n  items: SplitItemView[];\n  direction: directionType;\n  setCursor: (\n    type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize'\n  ) => void;\n  cancelForMerge: () => void;\n  resizeAt: (index: number, start: number, length: number, position: number) => void;\n  waitForMergeAtItem: (index: number, direction: 'w' | 'e' | 'n' | 's') => void;\n  splitColumnAt: (index: number, clientX: number, clientY: number) => void;\n  splitRowAt: (index: number, clientX: number, clientY: number) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Menu.html":{"url":"classes/Menu.html","title":"class - Menu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Menu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-bar/menu/menu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                container\n                            \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                menuItems\n                            \n                            \n                                    Private\n                                menuSvelte\n                            \n                            \n                                    Private\n                                    Readonly\n                                meunsWritable\n                            \n                            \n                                    Private\n                                name\n                            \n                            \n                                    Private\n                                    Readonly\n                                nameWritable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMenu\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                registerItem\n                            \n                            \n                                    Public\n                                removeItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: HTMLElement, id: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/menu-bar/menu/menu.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-bar/menu/menu.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-bar/menu/menu.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-bar/menu/menu.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-bar/menu/menu.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuSvelte\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-bar/menu/menu.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        meunsWritable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : writable([])\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-bar/menu/menu.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-bar/menu/menu.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        nameWritable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : writable('')\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-bar/menu/menu.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-bar/menu/menu.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-bar/menu/menu.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(name: string, config: MenuItemConfig[])\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-bar/menu/menu.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                MenuItemConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerItem(config: MenuItemConfig, index: number, group?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-bar/menu/menu.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                MenuItemConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItem(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-bar/menu/menu.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MenuItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import MenuSvelte from './menu.svelte';\nimport type { MenuItemConfig } from './menu-item';\nimport { MenuItem } from './menu-item';\nimport { writable } from 'svelte/store';\n\nexport default class Menu {\n  public readonly container!: HTMLElement;\n  public readonly id!: string;\n  private name!: string;\n  private menuItems!: MenuItem[];\n  private menuSvelte: any;\n  private readonly context = new Map();\n  private readonly meunsWritable = writable([]);\n  private readonly nameWritable = writable('');\n  constructor(container: HTMLElement, id: string) {\n    this.container = container;\n    this.id = id;\n    this.menuItems = [];\n    this.context.set('menus', this.meunsWritable);\n    this.context.set('name', this.nameWritable);\n  }\n\n  public init(name: string, config: MenuItemConfig[]): void {\n    this.name = name;\n    for (const menuItem of config) {\n      this.menuItems.push(new MenuItem(menuItem));\n    }\n    return this.createMenu();\n  }\n\n  public destroy(): void {\n    while (this.container.firstChild) {\n      this.container.removeChild(this.container.firstChild);\n    }\n    return;\n  }\n\n  public registerItem(config: MenuItemConfig, index: number, group?: string): void {\n    this.menuItems.splice(index, 0, new MenuItem(config));\n    this.meunsWritable.set([...this.menuItems]);\n  }\n\n  public removeItem(index: number): MenuItem {\n    const menuItem = this.menuItems[index];\n    this.meunsWritable.set((this.menuItems = this.menuItems.filter((_, i) => index !== i)));\n    return menuItem;\n  }\n\n  private createMenu(): void {\n    this.menuSvelte = new MenuSvelte({\n      target: this.container,\n      context: this.context,\n    });\n    this.nameWritable.set(this.name);\n    this.meunsWritable.set(this.menuItems);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuBar.html":{"url":"classes/MenuBar.html","title":"class - MenuBar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuBar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-bar/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Controller\n            \n\n            \n                Implements\n            \n            \n                            Module\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                meuns\n                            \n                            \n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                remove\n                            \n                            \n                                serialize\n                            \n                            \n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-bar/index.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        meuns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu[]\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-bar/index.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuProps\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-bar/index.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-bar/index.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: MenuProps)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-bar/index.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                MenuProps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(menu: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-bar/index.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-bar/index.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { title: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n            \n                \nview()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\nimport { Menu } from './menu';\n\ninterface MenuProps {\n  title: string;\n}\n\n@injectable()\nexport default class MenuBar extends Controller implements Module {\n  props: MenuProps;\n  private meuns!: Menu[];\n  private _view: HTMLElement;\n  view() {\n    return this._view;\n  }\n  public async init(props: MenuProps) {\n    this._view = document.createElement('div');\n    return this;\n  }\n  viewWillAppear() {\n    const id = Date.now() + '' + this.meuns.length;\n    const menu = new Menu(this._view, id);\n    this.meuns.push(menu);\n  }\n  serialize() {\n    return { title: '' };\n  }\n  async destroy() {\n    return this;\n  }\n  remove(menu: Menu) {\n    this._view.removeChild(menu.container);\n    this.meuns = this.meuns.filter((item) => item.id === menu.id);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuGroupService.html":{"url":"classes/MenuGroupService.html","title":"class - MenuGroupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuGroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-bar/menu-group-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                meuns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMenuInsatance\n                            \n                            \n                                    Public\n                                initContainer\n                            \n                            \n                                    Public\n                                removeMenuInstances\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/menu-bar/menu-group-service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-bar/menu-group-service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        meuns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu[]\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-bar/menu-group-service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getMenuInsatance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenuInsatance()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-bar/menu-group-service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Menu\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initContainer\n                        \n                    \n                \n            \n            \n                \n                    \n                    initContainer(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-bar/menu-group-service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeMenuInstances\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeMenuInstances(menu: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-bar/menu-group-service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\nimport { Menu } from './menu';\n\n@injectable()\nexport class MenuGroupService {\n  private container!: HTMLElement;\n  private meuns!: Menu[];\n  constructor() {\n    this.meuns = [];\n  }\n\n  public initContainer(container: HTMLElement): void {\n    if (this.container) {\n      return;\n    }\n    this.container = container;\n  }\n\n  public getMenuInsatance(): Menu {\n    const menuContainer = document.createElement('div');\n    const id = Date.now() + '' + this.meuns.length;\n    this.container.append(menuContainer);\n    const menu = new Menu(menuContainer, id);\n    this.meuns.push(menu);\n    return menu;\n  }\n\n  public removeMenuInstances(menu: Menu): void {\n    this.container.removeChild(menu.container);\n    this.meuns = this.meuns.filter((item) => item.id === menu.id);\n    this.container.removeChild(menu.container);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItem.html":{"url":"classes/MenuItem.html","title":"class - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-bar/menu/menu-item.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                callback\n                            \n                            \n                                    Private\n                                children\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                title\n                            \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MenuItemConfig)\n                    \n                \n                        \n                            \n                                Defined in src/modules/menu-bar/menu/menu-item.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MenuItemConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        callback\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuCommonFunction\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-bar/menu/menu-item.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-bar/menu/menu-item.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-bar/menu/menu-item.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-bar/menu/menu-item.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItemType\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-bar/menu/menu-item.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { uuid } from '@cosmic/core/common';\n/* eslint-disable no-shadow */\nexport enum MenuItemType {\n  group,\n  item,\n}\n\nexport type MenuCommonFunction = (menu: MenuItem, context: any) => void;\n\nexport interface MenuItemConfig {\n  title: string;\n  type: MenuItemType;\n  callback: MenuCommonFunction;\n  command?: string;\n}\n\nexport class MenuItem {\n  public readonly id!: string;\n  private title!: string;\n  private type!: MenuItemType;\n  private callback: MenuCommonFunction;\n  private children!: MenuItem[];\n  constructor(config: MenuItemConfig) {\n    this.id = uuid();\n    const { title, type, callback } = config;\n    if (type === MenuItemType.group) {\n      this.children = [];\n    }\n    this.title = title;\n    this.type = type;\n    this.callback = callback;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemConfig.html":{"url":"interfaces/MenuItemConfig.html","title":"interface - MenuItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-bar/menu/menu-item.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            command\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         MenuCommonFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuCommonFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         MenuItemType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItemType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { uuid } from '@cosmic/core/common';\n/* eslint-disable no-shadow */\nexport enum MenuItemType {\n  group,\n  item,\n}\n\nexport type MenuCommonFunction = (menu: MenuItem, context: any) => void;\n\nexport interface MenuItemConfig {\n  title: string;\n  type: MenuItemType;\n  callback: MenuCommonFunction;\n  command?: string;\n}\n\nexport class MenuItem {\n  public readonly id!: string;\n  private title!: string;\n  private type!: MenuItemType;\n  private callback: MenuCommonFunction;\n  private children!: MenuItem[];\n  constructor(config: MenuItemConfig) {\n    this.id = uuid();\n    const { title, type, callback } = config;\n    if (type === MenuItemType.group) {\n      this.children = [];\n    }\n    this.title = title;\n    this.type = type;\n    this.callback = callback;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuProps.html":{"url":"interfaces/MenuProps.html","title":"interface - MenuProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-bar/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\nimport { Menu } from './menu';\n\ninterface MenuProps {\n  title: string;\n}\n\n@injectable()\nexport default class MenuBar extends Controller implements Module {\n  props: MenuProps;\n  private meuns!: Menu[];\n  private _view: HTMLElement;\n  view() {\n    return this._view;\n  }\n  public async init(props: MenuProps) {\n    this._view = document.createElement('div');\n    return this;\n  }\n  viewWillAppear() {\n    const id = Date.now() + '' + this.meuns.length;\n    const menu = new Menu(this._view, id);\n    this.meuns.push(menu);\n  }\n  serialize() {\n    return { title: '' };\n  }\n  async destroy() {\n    return this;\n  }\n  remove(menu: Menu) {\n    this._view.removeChild(menu.container);\n    this.meuns = this.meuns.filter((item) => item.id === menu.id);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Module.html":{"url":"interfaces/Module.html","title":"interface - Module","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Module\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destroy\n                                        \n                                \n                                \n                                        \n                                            init\n                                        \n                                \n                                \n                                        \n                                            props\n                                        \n                                \n                                \n                                        \n                                            serialize\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destroy:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        init\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        init:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    loading resoures\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        props\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        props:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serialize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serialize:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    to Options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Module {\n  props: T;\n  /** loading resoures */\n  init: (props: T) => Promise>;\n\n  /** to Options */\n  serialize: () => T;\n\n  destroy: () => Promise>;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModuleConfig.html":{"url":"interfaces/ModuleConfig.html","title":"interface - ModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module-factory.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Module } from './module';\nimport { injectable } from 'inversify';\nimport type { Container } from 'inversify';\n\nexport interface ModuleConfig {\n  id: string;\n}\n\n@injectable()\n/** Provides the ability to cache and run ES Modules */\nexport class ModuleFactory {\n  constructor(private container: Container) {}\n  private modules: Map Module> = new Map();\n  add(moduleId: string, module: new () => Module, scope: 'Singleton' | 'Transient' | 'Request' = 'Transient') {\n    if (this.exist(moduleId)) return;\n    this.modules.set(moduleId, module);\n    const m = this.container.bind(moduleId).to(module);\n    switch (scope) {\n      case 'Singleton':\n        m.inSingletonScope();\n        break;\n      case 'Transient':\n        m.inTransientScope();\n        break;\n      case 'Request':\n        m.inRequestScope();\n        break;\n    }\n  }\n  get(moduleId: string) {\n    return this.modules.get(moduleId);\n  }\n  exist(moduleId: string) {\n    return this.modules.has(moduleId);\n  }\n  async load(moduleId: string, props: any) {\n    if (!this.exist(moduleId)) {\n      await import(moduleId).then((ModuleSource) => {\n        this.add(moduleId, ModuleSource.default, props.scope || 'Transient');\n      });\n    }\n    const module = this.container.get(moduleId) as Module;\n    await module.init(props);\n    return module;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModuleFactory.html":{"url":"classes/ModuleFactory.html","title":"class - ModuleFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModuleFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                modules\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                exist\n                            \n                            \n                                get\n                            \n                            \n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: Container)\n                    \n                \n                        \n                            \n                                Defined in src/core/parts/modules/module-factory.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    Container\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/module-factory.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(moduleId: string, module, scope: \"Singleton\" | \"Transient\" | \"Request\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    module\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    scope\n                                    \n                                            \"Singleton\" | \"Transient\" | \"Request\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Transient'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exist\n                        \n                    \n                \n            \n            \n                \nexist(moduleId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(moduleId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load(moduleId: string, props: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Module } from './module';\nimport { injectable } from 'inversify';\nimport type { Container } from 'inversify';\n\nexport interface ModuleConfig {\n  id: string;\n}\n\n@injectable()\n/** Provides the ability to cache and run ES Modules */\nexport class ModuleFactory {\n  constructor(private container: Container) {}\n  private modules: Map Module> = new Map();\n  add(moduleId: string, module: new () => Module, scope: 'Singleton' | 'Transient' | 'Request' = 'Transient') {\n    if (this.exist(moduleId)) return;\n    this.modules.set(moduleId, module);\n    const m = this.container.bind(moduleId).to(module);\n    switch (scope) {\n      case 'Singleton':\n        m.inSingletonScope();\n        break;\n      case 'Transient':\n        m.inTransientScope();\n        break;\n      case 'Request':\n        m.inRequestScope();\n        break;\n    }\n  }\n  get(moduleId: string) {\n    return this.modules.get(moduleId);\n  }\n  exist(moduleId: string) {\n    return this.modules.has(moduleId);\n  }\n  async load(moduleId: string, props: any) {\n    if (!this.exist(moduleId)) {\n      await import(moduleId).then((ModuleSource) => {\n        this.add(moduleId, ModuleSource.default, props.scope || 'Transient');\n      });\n    }\n    const module = this.container.get(moduleId) as Module;\n    await module.init(props);\n    return module;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModuleItem.html":{"url":"classes/ModuleItem.html","title":"class - ModuleItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModuleItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/module-item.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SplitItemView\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loader\n                            \n                            \n                                    Public\n                                module\n                            \n                            \n                                    Public\n                                moduleId\n                            \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clone\n                            \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Promise>\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/module-item.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Module\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/module-item.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        moduleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/module-item.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitExpand\n\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/module-item.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleItem\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:67\n\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:71\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SplitItemView } from '@cosmic/core/browser';\nimport type { Module } from '@cosmic/core/parts';\n\nexport class ModuleItem extends SplitItemView {\n  public loader: Promise>;\n  public moduleId: string;\n  public module: Module;\n  public clone() {\n    const item = new ModuleItem();\n    item.moduleId = this.moduleId;\n    return item;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyPanel.html":{"url":"classes/PropertyPanel.html","title":"class - PropertyPanel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyPanel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/property-panel/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvelteModule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                serialize\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SvelteModule } from '@cosmic/core/parts';\n\nexport default class PropertyPanel extends SvelteModule {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n  serialize() {\n    return {};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceExplorer.html":{"url":"classes/ResourceExplorer.html","title":"class - ResourceExplorer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceExplorer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/resource-explorer/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvelteModule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                serialize\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SvelteModule } from '@cosmic/core/parts';\n\nexport default class ResourceExplorer extends SvelteModule {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n  serialize() {\n    return {};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShapeCanvas.html":{"url":"classes/ShapeCanvas.html","title":"class - ShapeCanvas","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShapeCanvas\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shape-canvas/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvelteModule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                serialize\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SvelteModule } from '@cosmic/core/parts';\n\nexport default class ShapeCanvas extends SvelteModule {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n  serialize() {\n    return {};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardController.html":{"url":"classes/SplitBoardController.html","title":"class - SplitBoardController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeId\n                            \n                            \n                                    Private\n                                expandActive\n                            \n                            \n                                    Private\n                                expandLeaveHandler\n                            \n                            \n                                    Private\n                                expandMouseUpHandler\n                            \n                            \n                                    Private\n                                expandMoveHandler\n                            \n                            \n                                    Private\n                                expandType\n                            \n                            \n                                    Private\n                                startX\n                            \n                            \n                                    Private\n                                startY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeExpand\n                            \n                            \n                                    Public\n                                checkExpandState\n                            \n                            \n                                    Private\n                                liveResize\n                            \n                            \n                                    Public\n                                onMouseDown\n                            \n                            \n                                    Public\n                                setActiveState\n                            \n                            \n                                    Private\n                                unactiveExpand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(view: ISplitBoardView)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        view\n                                                  \n                                                        \n                                                                        ISplitBoardView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandLeaveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMouseUpHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMoveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        activeExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    activeExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkExpandState\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkExpandState(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        liveResize\n                        \n                    \n                \n            \n            \n                \n                    \n                    liveResize(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onMouseDown\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseDown(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setActiveState\n                        \n                    \n                \n            \n            \n                \n                    \n                    setActiveState(index: number, startX: number, startY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        unactiveExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    unactiveExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { directionType } from './type';\nimport type { ISplitBoardView } from './type';\n\nexport default class SplitBoardController {\n  private expandMoveHandler!: (event: MouseEvent) => void;\n  private expandLeaveHandler!: (event: MouseEvent) => void;\n  private expandMouseUpHandler!: (event: MouseEvent) => void;\n\n  private startX = 0;\n  private startY = 0;\n  private activeId = -1;\n\n  private expandActive = false;\n  private expandType = 0; // 是否超过偏移值 0 / 1 expand hor | 2 expand ver | 3 merge hor | 4 merge ver\n\n  constructor(private view: ISplitBoardView) {\n    this.expandMoveHandler = (event: MouseEvent) => {\n      this.liveResize(event.clientX, event.clientY);\n      this.checkExpandState(event.clientX, event.clientY);\n    };\n    this.expandLeaveHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.expandMouseUpHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.view.root.addEventListener('mousedown', (event: MouseEvent) => {\n      this.onMouseDown(event);\n    });\n  }\n  public onMouseDown(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    let index = -1;\n    this.view.items.forEach((item, i) => {\n      if (target && item.root === target.parentElement && target.classList.contains('split-expand')) index = i;\n    });\n    if (index === -1) {\n      return;\n    }\n    if (index > -1) {\n      this.setActiveState(index, event.clientX, event.clientY);\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  public setActiveState(index: number, startX: number, startY: number) {\n    // 锚点mousedown\n    this.startX = startX;\n    this.startY = startY;\n    this.activeExpand();\n    this.activeId = index;\n  }\n  private activeExpand() {\n    this.view.root.addEventListener('mousemove', this.expandMoveHandler);\n    this.view.root.addEventListener('mouseleave', this.expandLeaveHandler);\n    this.view.root.addEventListener('mouseup', this.expandMouseUpHandler);\n    this.expandActive = true;\n    this.expandType = 0;\n    this.view.setCursor('crosshair');\n  }\n  private unactiveExpand() {\n    if (this.expandActive) {\n      this.view.root.removeEventListener('mousemove', this.expandMoveHandler);\n      this.view.root.removeEventListener('mouseleave', this.expandLeaveHandler);\n      this.view.root.removeEventListener('mouseup', this.expandMouseUpHandler);\n      this.view.cancelForMerge();\n      this.expandActive = false;\n      this.expandType = 0;\n      this.view.setCursor('');\n    }\n  }\n  private liveResize(clientX: number, clientY: number) {\n    const item = this.view.items[this.activeId];\n    if (this.expandType === 1 && this.view.direction === directionType.col) {\n      // horizontal expand column\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n    } else if (this.expandType === 2 && this.view.direction === directionType.row) {\n      // vertical expand row\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n    }\n  }\n  public checkExpandState(clientX: number, clientY: number) {\n    const offsetX = this.startX - clientX;\n    const offsetY = this.startY - clientY;\n    /** expand mode */\n    if (this.expandType === 0 && offsetX > 0 && offsetY > 0 && (offsetX > 5 || offsetY > 5)) {\n      if (offsetX > offsetY) {\n        this.view.setCursor('col-resize');\n      } else {\n        this.view.setCursor('row-resize');\n      }\n    }\n    /** merge mode */\n    if (offsetX  5) {\n      this.view.setCursor('w-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'w');\n      return;\n    }\n\n    if (offsetY  5) {\n      this.view.setCursor('n-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'n');\n      return;\n    }\n\n    if (this.expandType) return;\n    /** do expand */\n    if (offsetX > 30) {\n      this.expandType = 1;\n      this.view.setCursor('col-resize');\n      this.view.splitColumnAt(this.activeId, clientX, clientY);\n      return;\n    }\n    if (offsetY > 30) {\n      this.expandType = 2;\n      this.view.setCursor('row-resize');\n      this.view.splitRowAt(this.activeId, clientX, clientY);\n    }\n    if (\n      (this.expandType === 1 && this.view.direction === directionType.row) ||\n      (this.expandType === 2 && this.view.direction === directionType.col)\n    ) {\n      this.unactiveExpand();\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitItemView.html":{"url":"classes/SplitItemView.html","title":"class - SplitItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-item.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitExpand\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:67\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view';\nimport SplitExpand from './split-expand.svelte';\n\nenum directionStyles {\n  'w' = 'merge-w',\n  'e' = 'merge-e',\n  's' = 'merge-s',\n  'n' = 'merge-n',\n}\n\nexport default class SplitItemView extends View {\n  private _growClassName = '';\n  private _shrinkClassName = '';\n  private _bgColorClassName: string[] = ['bg-cgray-100', 'dark:bg-cgray-800'];\n\n  public contentView!: HTMLElement;\n  private expand!: SplitExpand;\n\n  constructor() {\n    super();\n    this.addExpandButton();\n    this.setDefaultClass();\n  }\n\n  public setContent(contentView: HTMLElement): SplitItemView {\n    this.contentView = contentView;\n    this.root.classList.add('split-item', 'flex');\n    contentView.classList.add('flex', 'flex-1');\n    return this.prepend(contentView);\n  }\n\n  public replaceContent(contentView: HTMLElement): SplitItemView {\n    this.root.replaceChild(contentView, this.contentView);\n    this.contentView = contentView;\n    contentView.classList.add('flex', 'flex-1');\n    return this;\n  }\n\n  public setGrow(className = 'flex-grow'): void {\n    this.root.classList.remove(this._shrinkClassName);\n    this._shrinkClassName = '';\n    this._growClassName = className;\n    this.root.classList.add(this._growClassName);\n  }\n\n  public setShrink(className = 'flex-shrink'): void {\n    this.root.classList.remove(this._growClassName);\n    this._growClassName = '';\n    this._shrinkClassName = className;\n    this.root.classList.add(this._shrinkClassName);\n  }\n\n  public isShrink(): boolean {\n    return !!this._growClassName;\n  }\n\n  private setDefaultClass() {\n    this.root.classList.add('flex-grow', 'rounded-xl');\n    this.root.classList.add('relative');\n    this.root.classList.add(...this._bgColorClassName);\n  }\n\n  private addExpandButton() {\n    this.expand = new SplitExpand({ target: this.root });\n  }\n  /** To hide expand button */\n  public hideExpandButton(): void {\n    this.expand.expandHidden = true;\n  }\n\n  public waitForMerge(direction: 'w' | 'e' | 's' | 'n'): void {\n    this.cancelWaitForMerge();\n    this.root.classList.add('wait-for-merge');\n    this.expand.mergeDirection = directionStyles[direction];\n  }\n\n  public cancelWaitForMerge(): void {\n    this.root.classList.remove('wait-for-merge');\n    this.expand.mergeDirection = '';\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SvelteModule.html":{"url":"classes/SvelteModule.html","title":"class - SvelteModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SvelteModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/svelte-module.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Controller\n            \n\n            \n                Implements\n            \n            \n                            Module\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Abstract\n                                initWithComponent\n                            \n                            \n                                    Abstract\n                                serialize\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-module.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-module.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-module.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    initWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SvelteComponentDev\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        serialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    serialize()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\nimport type { SvelteComponentDev } from 'svelte/internal';\nimport { Controller } from '@cosmic/core/browser';\nimport type { Module } from './module';\n\n@injectable()\nexport abstract class SvelteModule extends Controller implements Module {\n  private comp: SvelteComponentDev;\n  private _view: HTMLElement;\n  public props: T;\n\n  public view() {\n    return this._view;\n  }\n\n  public async init(props: T) {\n    this.props = props;\n    this._view = this._view || document.createElement('div');\n    return this;\n  }\n\n  abstract initWithComponent(target: Element): SvelteComponentDev;\n\n  viewWillAppear() {\n    this.comp = this.initWithComponent(this._view);\n  }\n\n  public async destroy() {\n    this.comp.$destroy();\n    if (this._view.parentNode) {\n      this._view.parentNode.removeChild(this._view);\n    }\n    return this;\n  }\n\n  abstract serialize(): T;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/View.html":{"url":"classes/View.html","title":"class - View","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  View\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/view.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root?: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/view.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/view.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        type FlowValue = '1' | 'auto' | 'initial' | 'none';\n\nexport default class View {\n  public root: HTMLElement;\n  constructor(root?: HTMLElement) {\n    this.root = root || document.createElement('div');\n  }\n  setFlow(type: FlowValue) {\n    this.root.classList.remove('flex-1', 'flex-auto', 'flex-initial', 'flex-none');\n    this.root.classList.add(`flex-${type}`);\n    return this;\n  }\n  append(child: HTMLElement) {\n    this.root.appendChild(child);\n    return this;\n  }\n  prepend(...childs: HTMLElement[]) {\n    this.root.prepend(...childs);\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeightMap.html":{"url":"interfaces/WeightMap.html","title":"interface - WeightMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WeightMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [index: string]:        number\n\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:11\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Workbench.html":{"url":"classes/Workbench.html","title":"class - Workbench","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Workbench\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Controller\n            \n\n            \n                Implements\n            \n            \n                            Module\n                            ItemGenerateDelegate\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                moduleFactory\n                            \n                            \n                                    Public\n                                props\n                            \n                            \n                                    Private\n                                splitBoard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                expandNewItem\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                serialize\n                            \n                            \n                                view\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleFactory: ModuleFactory)\n                    \n                \n                        \n                            \n                                Defined in src/modules/workbench/index.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleFactory\n                                                  \n                                                        \n                                                                        ModuleFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        moduleFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModuleFactory\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkbenchProps\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        splitBoard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SplitBoardView>\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:20\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expandNewItem\n                        \n                    \n                \n            \n            \n                \nexpandNewItem(view: ModuleItem, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    view\n                                    \n                                                ModuleItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: WorkbenchProps)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                WorkbenchProps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { type: \"col\" | \"row\"; minWidth: number; scale: {}; modules: {}; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n            \n                \nview()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\nimport { ModuleItem } from './module-item';\n\ninterface WorkbenchProps {\n  type: 'col' | 'row';\n  minWidth: number;\n  scale: number[];\n  modules?: ModuleConfig[];\n}\n\n@injectable()\nexport default class Workbench\n  extends Controller\n  implements Module, ItemGenerateDelegate>\n{\n  public props: WorkbenchProps;\n  private splitBoard: SplitBoardView>;\n  private moduleFactory: ModuleFactory;\n  constructor(@inject('ModuleFactory') moduleFactory: ModuleFactory) {\n    super();\n    this.splitBoard = new SplitBoardView>().setFlow('1');\n    this.splitBoard.itemGenerateDelegate = this;\n    this.moduleFactory = moduleFactory;\n  }\n  view() {\n    return this.splitBoard.root;\n  }\n  async init(props: WorkbenchProps) {\n    this.props = props;\n    this.splitBoard.direction = directionType[props.type];\n    for (const p of props.modules || []) {\n      const item = new ModuleItem();\n      item.loader = this.moduleFactory.load(p.id, p);\n      item.moduleId = p.id;\n      this.splitBoard.addItem(item);\n    }\n    this.splitBoard.applySplit(\n      this.splitBoard.direction === directionType.col ? 'horizontal' : 'vertical',\n      props.scale || []\n    );\n    return this;\n  }\n\n  viewWillAppear(): void {\n    this.splitBoard.items.forEach((item, index) => {\n      const view = this.splitBoard.items[index];\n      item.loader.then((module) => {\n        if (module instanceof Controller) {\n          view.setContent(module.view());\n          view.module = module;\n          module.viewWillAppear();\n          module.viewDidDisappear();\n        }\n      });\n    });\n    /** to be completed */\n  }\n  viewDidAppear(): void {\n    /** to be completed */\n  }\n\n  viewWillDisappear(): void {\n    /** to be completed */\n  }\n  viewDidDisappear(): void {\n    /** to be completed */\n  }\n\n  public async destroy() {\n    const view = this.view();\n    this.viewWillDisappear();\n    if (view.parentNode) {\n      view.parentNode.removeChild(view);\n    }\n    this.viewDidDisappear();\n    return this;\n  }\n  expandNewItem(view: ModuleItem, index: number) {\n    const item = view.clone();\n    item.loader = this.moduleFactory.load(item.moduleId, view.module.serialize());\n    item.loader.then((module) => {\n      if (module instanceof Controller) {\n        item.module = module;\n        item.setContent(module.view());\n        module.viewWillAppear();\n        module.viewDidDisappear();\n      }\n    });\n    return item;\n  }\n\n  serialize() {\n    return {\n      type: this.props.type,\n      minWidth: this.props.minWidth,\n      scale: this.props.scale,\n      modules: [],\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkbenchProps.html":{"url":"interfaces/WorkbenchProps.html","title":"interface - WorkbenchProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkbenchProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            minWidth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            modules\n                                        \n                                \n                                \n                                        \n                                            scale\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        minWidth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minWidth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modules\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modules:     ModuleConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scale:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"col\" | \"row\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"col\" | \"row\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\nimport { ModuleItem } from './module-item';\n\ninterface WorkbenchProps {\n  type: 'col' | 'row';\n  minWidth: number;\n  scale: number[];\n  modules?: ModuleConfig[];\n}\n\n@injectable()\nexport default class Workbench\n  extends Controller\n  implements Module, ItemGenerateDelegate>\n{\n  public props: WorkbenchProps;\n  private splitBoard: SplitBoardView>;\n  private moduleFactory: ModuleFactory;\n  constructor(@inject('ModuleFactory') moduleFactory: ModuleFactory) {\n    super();\n    this.splitBoard = new SplitBoardView>().setFlow('1');\n    this.splitBoard.itemGenerateDelegate = this;\n    this.moduleFactory = moduleFactory;\n  }\n  view() {\n    return this.splitBoard.root;\n  }\n  async init(props: WorkbenchProps) {\n    this.props = props;\n    this.splitBoard.direction = directionType[props.type];\n    for (const p of props.modules || []) {\n      const item = new ModuleItem();\n      item.loader = this.moduleFactory.load(p.id, p);\n      item.moduleId = p.id;\n      this.splitBoard.addItem(item);\n    }\n    this.splitBoard.applySplit(\n      this.splitBoard.direction === directionType.col ? 'horizontal' : 'vertical',\n      props.scale || []\n    );\n    return this;\n  }\n\n  viewWillAppear(): void {\n    this.splitBoard.items.forEach((item, index) => {\n      const view = this.splitBoard.items[index];\n      item.loader.then((module) => {\n        if (module instanceof Controller) {\n          view.setContent(module.view());\n          view.module = module;\n          module.viewWillAppear();\n          module.viewDidDisappear();\n        }\n      });\n    });\n    /** to be completed */\n  }\n  viewDidAppear(): void {\n    /** to be completed */\n  }\n\n  viewWillDisappear(): void {\n    /** to be completed */\n  }\n  viewDidDisappear(): void {\n    /** to be completed */\n  }\n\n  public async destroy() {\n    const view = this.view();\n    this.viewWillDisappear();\n    if (view.parentNode) {\n      view.parentNode.removeChild(view);\n    }\n    this.viewDidDisappear();\n    return this;\n  }\n  expandNewItem(view: ModuleItem, index: number) {\n    const item = view.clone();\n    item.loader = this.moduleFactory.load(item.moduleId, view.module.serialize());\n    item.loader.then((module) => {\n      if (module instanceof Controller) {\n        item.module = module;\n        item.setContent(module.view());\n        module.viewWillAppear();\n        module.viewDidDisappear();\n      }\n    });\n    return item;\n  }\n\n  serialize() {\n    return {\n      type: this.props.type,\n      minWidth: this.props.minWidth,\n      scale: this.props.scale,\n      modules: [],\n    };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/classBuilder.html":{"url":"classes/classBuilder.html","title":"class - classBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  classBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                orderedConfigs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addConfig\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Private\n                                insertConfig\n                            \n                            \n                                    Private\n                                normalizeWeight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configs: stateConfig[], weightMap: WeightMap)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                        stateConfig[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weightMap\n                                                  \n                                                        \n                                                                        WeightMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orderedConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         stateConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/class-builder.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    addConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        normalizeWeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    normalizeWeight(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         stateConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/classConfig.html":{"url":"interfaces/classConfig.html","title":"interface - classConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  classConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            createWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            mainWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            notification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            interface\n            ISettings\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            variable\n            settings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            class\n            classBuilder\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            classConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            stateConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            WeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            variable\n            defaultWeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/controller.ts\n            \n            class\n            Controller\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.controller.ts\n            \n            class\n            SplitBoardController\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            class\n            SplitBoardView\n            \n                3 %\n                (1/28)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            variable\n            lowBoardRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-item.view.ts\n            \n            class\n            SplitItemView\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/core/browser/layout/type.ts\n            \n            interface\n            ISplitBoardView\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/core/browser/layout/type.ts\n            \n            interface\n            ItemGenerateDelegate\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            function\n            makeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BgColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BorderColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlAccentColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlBackgroundColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlDisabledColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlForbiddenColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlHighlightColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            FourthBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            GridBackgroundColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            LabelColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemBlueColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemGrayColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemOrangeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemPinkColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemRedColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemYellowColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TextFieldBackground\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/view.ts\n            \n            class\n            View\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/color-ref.ts\n            \n            class\n            ColorRef\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/uuid.ts\n            \n            variable\n            uuid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/ioc/inject.ts\n            \n            function\n            inject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module-factory.ts\n            \n            class\n            ModuleFactory\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module-factory.ts\n            \n            interface\n            ModuleConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module.ts\n            \n            interface\n            Module\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/core/parts/modules/svelte-module.ts\n            \n            class\n            SvelteModule\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/menu-bar/base-menu.ts\n            \n            class\n            BaseMenu\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/menu-bar/index.ts\n            \n            class\n            MenuBar\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/menu-bar/index.ts\n            \n            interface\n            MenuProps\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/menu-bar/menu-group-service.ts\n            \n            class\n            MenuGroupService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/menu-bar/menu/menu-item.ts\n            \n            class\n            MenuItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/menu-bar/menu/menu-item.ts\n            \n            interface\n            MenuItemConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/menu-bar/menu/menu.ts\n            \n            class\n            Menu\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/modules/property-panel/index.ts\n            \n            class\n            PropertyPanel\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/index.ts\n            \n            class\n            ResourceExplorer\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/shape-canvas/index.ts\n            \n            class\n            ShapeCanvas\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/workbench/index.ts\n            \n            class\n            Workbench\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/workbench/index.ts\n            \n            interface\n            WorkbenchProps\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/workbench/module-item.ts\n            \n            class\n            ModuleItem\n            \n                4 %\n                (1/24)\n            \n        \n        \n            \n                \n                src/workbench/desktop/app.ts\n            \n            class\n            App\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/workbench/desktop/main.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/services/appearance-service.ts\n            \n            class\n            AppearanceService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @types/color : ^3.0.1\n        \n            color : ^3.1.3\n        \n            electron-log : ^4.3.1\n        \n            electron-store : ^7.0.2\n        \n            electron-updater : ^4.3.5\n        \n            eventemitter2 : ^6.4.4\n        \n            inversify : ^5.1.1\n        \n            keycode : ^2.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            smelte : ^1.1.5\n        \n            split.js : ^1.6.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppearanceType   (src/.../appearance.ts)\n                        \n                        \n                            directionStyles   (src/.../split-item.view.ts)\n                        \n                        \n                            directionType   (src/.../type.ts)\n                        \n                        \n                            MenuItemType   (src/.../menu-item.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/common/appearance.ts\n    \n        \n            \n                \n                    \n                        \n                        AppearanceType\n                    \n                \n                    \n                        \n                            模式类型\n\n                        \n                    \n                        \n                            \n                                 any\n                            \n                        \n                        \n                            \n                                 light\n                            \n                        \n                        \n                            \n                                 dark\n                            \n                        \n            \n        \n\n    src/core/browser/layout/split-item.view.ts\n    \n        \n            \n                \n                    \n                        \n                        directionStyles\n                    \n                \n                        \n                            \n                                 w\n                            \n                        \n                        \n                            \n                                Value : merge-w\n                            \n                        \n                        \n                            \n                                 e\n                            \n                        \n                        \n                            \n                                Value : merge-e\n                            \n                        \n                        \n                            \n                                 s\n                            \n                        \n                        \n                            \n                                Value : merge-s\n                            \n                        \n                        \n                            \n                                 n\n                            \n                        \n                        \n                            \n                                Value : merge-n\n                            \n                        \n            \n        \n\n    src/core/browser/layout/type.ts\n    \n        \n            \n                \n                    \n                        \n                        directionType\n                    \n                \n                        \n                            \n                                 col\n                            \n                        \n                        \n                            \n                                 row\n                            \n                        \n            \n        \n\n    src/modules/menu-bar/menu/menu-item.ts\n    \n        \n            \n                \n                    \n                        \n                        MenuItemType\n                    \n                \n                        \n                            \n                                 group\n                            \n                        \n                        \n                            \n                                 item\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            inject   (src/.../inject.ts)\n                        \n                        \n                            makeColor   (src/.../ui-color.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/parts/ioc/inject.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inject\n                        \n                    \n                \n            \n            \n                \ninject(token)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        makeColor\n                        \n                    \n                \n            \n            \n                \nmakeColor(anyColorHex, lightColorHex?, darkColorHex?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anyColorHex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    darkColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCosmic Design\n\n\n\n\n\n\n🚧 ing...\n\nThe Repository\nCosmic design is a concrete practice of D2R.\nThis repository is where we develop it together with the community. Not only do we work on code and issues here, we also publish our roadmap , development guide. This source code is available to everyone under the standard MIT license.\nAbout Cosmic Design\n\n🚧 ing...\n\nHow it works\nThe template required a minimum dependencies. Only Vite is used for building, nothing more.\nProject Structure\nThe structure of this template is very similar to the structure of a monorepo.\nThe entire source code of the program is divided into three modules (packages) that are bundled each independently:\n\nsrc/core\nInclude common dependencies, such as components, utils, ipc.\nsrc/app\nElectron main script.\nsrc/modules\nModules of tools\nsrc/workbench\nElectron web page.\n\nCosmic Components\n\nComponents StoryBook\nsrc/core/components\n\nCompile App\nNext step is run packaging and compilation a ready for distribution Electron app for macOS, Windows and Linux with \"auto update\" support out of the box.\nTo do this, using the electron-builder:\n\nIn npm script compile: This script is configured to compile the application as quickly as possible. It is not ready for distribution, is compiled only for the current platform and is used for debugging.\nIn GitHub Action: The application is compiled for any platform and ready-to-distribute files are automatically added to the draft GitHub release.\n\nContribution\nSee Wiki Contributing\n\nSource Code Organization\nUser Interface\nColor Set\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 qiansc\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    21 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/stateConfig.html":{"url":"interfaces/stateConfig.html","title":"interface - stateConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  stateConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:         classConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         classConfig[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FlowValue   (src/.../view.ts)\n                        \n                        \n                            MenuCommonFunction   (src/.../menu-item.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/browser/view.ts\n    \n    \n        \n            \n                \n                    \n                    FlowValue\n                \n            \n            \n                \n                        \"1\" | \"auto\" | \"initial\" | \"none\"\n\n                \n            \n        \n    \n    src/modules/menu-bar/menu/menu-item.ts\n    \n    \n        \n            \n                \n                    \n                    MenuCommonFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (src/.../main.ts)\n                        \n                        \n                            BgColor   (src/.../ui-color.ts)\n                        \n                        \n                            BorderColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlAccentColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlDisabledColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlForbiddenColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlHighlightColor   (src/.../ui-color.ts)\n                        \n                        \n                            createWindow   (src/.../index.ts)\n                        \n                        \n                            defaultWeightMap   (src/.../class-builder.ts)\n                        \n                        \n                            FourthBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            GridBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            isProd   (src/.../index.ts)\n                        \n                        \n                            isProd   (src/.../logger.ts)\n                        \n                        \n                            LabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            logger   (src/.../logger.ts)\n                        \n                        \n                            lowBoardRoot   (src/.../split-board.view.ts)\n                        \n                        \n                            mainWindow   (src/.../index.ts)\n                        \n                        \n                            notification   (src/.../index.ts)\n                        \n                        \n                            SecondaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            SecondaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            settings   (src/.../settings.ts)\n                        \n                        \n                            SystemBlueColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemGrayColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemOrangeColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemPinkColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemRedColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemYellowColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            TextFieldBackground   (src/.../ui-color.ts)\n                        \n                        \n                            uuid   (src/.../uuid.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new App(document.body)\n                    \n                \n\n\n        \n    \n\n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#E0E0E0', '#E0E0E0', '#1F1F1F')\n                    \n                \n\n            \n                \n                    三级背景色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BorderColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D9D9D9', '#D9D9D9', '#D9D9D9')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlAccentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#5580c0', '#5580c0', '#5580c0')\n                    \n                \n\n            \n                \n                    高亮色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#FFFFFF', '#5D5F61')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlDisabledColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F9F9F9', '#F9F9F9', '#464749')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlForbiddenColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlHighlightColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#ffae2b', '#ffae2b', '#ffae2b')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FourthBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#BABABA', '#BABABA', '#454545')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GridBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F2F2F2', '#F2F2F2', '#2E2F30')\n                    \n                \n\n            \n                \n                    组件色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#E0E0E0')\n                    \n                \n\n            \n                \n                    三级标签色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D7D7D7', '#D7D7D7', '#272728')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#808080')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemBlueColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#729cd4', '#729cd4', '#729cd4')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemGrayColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c0c0c1', '#c0c0c1', '#c0c0c1')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemOrangeColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemPinkColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c4666f', '#c4666f', '#c4666f')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemRedColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemYellowColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n            \n                \n                    辅助色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#C6C6C6', '#C6C6C6', '#393939')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#3F3F3F', '#3F3F3F', '#3F3F3F')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TextFieldBackground\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#F2F2F2', '#454545')\n                    \n                \n\n\n        \n    \n\n    src/app/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createWindow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  mainWindow = new BrowserWindow({\n    width: 900,\n    height: 680,\n    webPreferences: {\n      devTools: isProd ? false : true,\n      contextIsolation: true,\n      enableRemoteModule: false,\n      // preload: join(__dirname, 'preload.js'),\n    },\n  });\n\n  const url =\n    // process.env.NODE_ENV === \"production\"\n    isProd\n      ? // in production, use the statically build version of our application\n        `file://${join(__dirname, 'dist/workbench/desktop/', 'index.html')}`\n      : // in dev, target the host and port of the local rollup web server\n        'http://localhost:5000/workbench/desktop/';\n\n  mainWindow.loadURL(url).catch((err: any) => {\n    logger.error(JSON.stringify(err));\n    app.quit();\n  });\n\n  if (!isProd) mainWindow.webContents.openDevTools();\n\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BrowserWindow | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Notification | null\n\n                    \n                \n\n\n        \n    \n\n    src/core/browser/class-builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultWeightMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WeightMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/utils/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log\n                    \n                \n\n\n        \n    \n\n    src/core/browser/layout/split-board.view.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lowBoardRoot\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('FlowTableRoot')\n                    \n                \n\n\n        \n    \n\n    src/app/utils/settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ElectronStore({\n  defaults: {\n    check: false,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/core/common/uuid.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): string => {\n  const s: string[] | number[] = [];\n  const hexDigits = '0123456789abcdef';\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
