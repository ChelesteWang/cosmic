var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/App.html",[0,0.052,1,1.708]],["body/classes/App.html",[0,0.033,1,1.664,2,0.352,3,0.313,4,0.276,5,0.276,6,1.609,7,0.146,8,0.605,9,1.153,10,3.783,11,3.269,12,2.587,13,0.91,14,4.086,15,4.086,16,4.086,17,4.086,18,4.086,19,4.086,20,2.993,21,2.993,22,4.086,23,4.086,24,2.993,25,4.086,26,0.653,27,1.609,28,2.132,29,1.403,30,2.993,31,1.019,32,0.039,33,1.019,34,0.676,35,0.919,36,1.87,37,1.95,38,0.605,39,0.72,40,1.966,41,2.471,42,1.95,43,1.95,44,1.643,45,1.786,46,1.95,47,1.95,48,1.95,49,1.95,50,1.95,51,2.993,52,1.95,53,2.993,54,1.95,55,1.95,56,1.95,57,2.993,58,2.754,59,1.95,60,1.95,61,1.619,62,1.218,63,1.609,64,1.218,65,1.95,66,1.95,67,2.993,68,1.95,69,2.993,70,2.993,71,1.95,72,2.993,73,1.95,74,2.993,75,1.95,76,1.084,77,2.993,78,1.385,79,0.973,80,1.385,81,1.385,82,1.218,83,1.64,84,0.313,85,1.609,86,2.127,87,1.95,88,1.95,89,1.95,90,1.95,91,1.95,92,1.95,93,1.95,94,1.95,95,1.95,96,1.95,97,1.278,98,2.993,99,1.95,100,1.95,101,1.95,102,1.95,103,1.95,104,1.95,105,1.95,106,1.95,107,1.95,108,1.385,109,1.95,110,2.471,111,1.95,112,3.373,113,1.95,114,2.039,115,2.127,116,4.086,117,3.373,118,1.95,119,2.993,120,1.95,121,1.95,122,1.95,123,1.95,124,1.95,125,2.903,126,4.086,127,2.903,128,1.95,129,1.95,130,1.95,131,2.127,132,2.127,133,2.993,134,1.818,135,2.993,136,0.973,137,1.609,138,1.95,139,1.385,140,1.95,141,1.609,142,1.95,143,3.007,144,1.95,145,1.95,146,1.95,147,1.95,148,1.95,149,1.95,150,2.993,151,1.95,152,1.95,153,1.95,154,1.95,155,0.012,156,0.018,157,0.012]],["title/classes/AppearanceService.html",[0,0.052,64,1.918]],["body/classes/AppearanceService.html",[0,0.056,2,0.597,3,0.53,4,0.468,5,0.468,7,0.247,8,0.882,9,1.25,13,1.327,29,1.349,31,1.088,32,0.039,33,1.088,34,0.742,35,0.981,38,0.882,39,1.612,40,1.612,44,1.487,45,1.582,58,3.595,61,1.487,62,2.062,63,2.725,64,2.727,84,0.53,108,3.101,155,0.02,156,0.027,157,0.02,158,4.588,159,2.725,160,4.89,161,4.89,162,1.177,163,4.365,164,4.365,165,3.302,166,4.295,167,3.302,168,4.365,169,3.302,170,4.365,171,2.062,172,3.302,173,4.365,174,3.302,175,3.603,176,2.062,177,3.302,178,4.89,179,3.302,180,3.302,181,1.219]],["title/classes/ColorRef.html",[0,0.052,182,2.182]],["body/classes/ColorRef.html",[0,0.056,2,0.602,3,0.535,4,0.471,5,0.471,7,0.249,8,0.887,9,1.312,13,1.334,26,1.116,29,1.352,31,1.094,32,0.038,33,1.094,34,0.689,35,0.987,38,0.887,44,1.012,58,3.389,61,1.334,84,0.535,108,2.365,155,0.02,156,0.027,157,0.02,162,0.992,181,1.928,182,3.118,183,4.599,184,2.748,185,5.681,186,5.681,187,5.681,188,4.36,189,4.389,190,4.389,191,2.441,192,3.329,193,3.329,194,4.389,195,3.329,196,3.329,197,4.91,198,4.389,199,4.389,200,3.329,201,4.91,202,3.329,203,3.329]],["title/interfaces/ISettings.html",[204,0.69,205,2.182]],["body/interfaces/ISettings.html",[3,0.696,4,0.614,5,0.614,7,0.324,8,1.047,32,0.038,34,0.536,38,0.876,40,1.602,61,1.319,84,0.696,97,1.081,155,0.027,156,0.032,157,0.027,204,0.975,205,3.682,206,2.164,207,3.081,208,4.845,209,3.939,210,4.278,211,3.081,212,3.58,213,3.682,214,3.58,215,2.709]],["title/classes/Menu.html",[0,0.052,83,1.382]],["body/classes/Menu.html",[0,0.04,2,0.423,3,0.376,4,0.331,5,0.331,7,0.372,8,0.693,9,1.336,10,3.387,11,2.796,13,1.043,26,0.784,28,1.942,29,1.426,31,1.116,32,0.038,33,1.343,34,0.677,35,1.007,38,0.905,39,1.501,40,1.653,41,2.833,44,1.45,45,1.606,61,1.361,83,2.015,84,0.376,86,2.438,97,0.855,114,1.167,117,1.931,134,2.635,155,0.014,156,0.021,157,0.014,162,1.186,181,1.501,191,1.301,216,1.931,217,4.096,218,2.097,219,4.064,220,4.768,221,4.064,222,4.064,223,4.477,224,4.477,225,2.833,226,3.431,227,3.431,228,2.833,229,1.725,230,3.431,231,2.339,232,2.339,233,2.339,234,2.339,235,2.339,236,4.768,237,2.339,238,2.339,239,2.339,240,2.339,241,3.431,242,2.978,243,2.863,244,2.339,245,3.431,246,2.03,247,2.539,248,2.339,249,3.431,250,2.339,251,2.339,252,1.544,253,2.339,254,1.662,255,2.339,256,2.339,257,2.339,258,2.339,259,2.339,260,2.339,261,2.339,262,2.339,263,2.339,264,2.339,265,2.339,266,2.339,267,0.864,268,2.339,269,2.339,270,2.339,271,3.431,272,2.339,273,2.339,274,2.339]],["title/classes/MenuGroup.html",[0,0.052,12,1.708]],["body/classes/MenuGroup.html",[0,0.058,2,0.614,3,0.546,4,0.481,5,0.481,7,0.254,8,0.899,9,1.26,10,3.881,12,2.474,13,1.353,26,1.139,28,2.225,29,1.362,31,1.109,32,0.038,33,1.109,34,0.651,35,1.001,38,0.687,40,1.256,44,1.353,45,1.353,61,1.034,83,2.697,84,0.546,86,2.415,97,1.236,155,0.021,156,0.027,157,0.021,162,1.132,181,1.256,218,1.813,228,3.673,275,2.796,276,2.806,277,4.961,278,5.263,279,4.45,280,4.45,281,3.4,282,3.4,283,4.45,284,3.4,285,4.45,286,3.4,287,2.806,288,3.4,289,3.4,290,3.4,291,3.4,292,3.4,293,4.45,294,3.4,295,3.4,296,3.4]],["title/classes/MenuItem.html",[0,0.052,134,1.532]],["body/classes/MenuItem.html",[0,0.055,2,0.592,3,0.526,4,0.464,5,0.464,7,0.245,8,0.877,9,1.34,11,2.046,26,1.097,29,1.382,31,0.816,32,0.038,33,0.816,34,0.745,35,0.736,45,0.996,61,0.996,82,3.239,83,1.474,84,0.833,97,0.816,125,3.834,127,3.94,131,2.327,132,2.327,134,2.693,155,0.02,156,0.027,157,0.02,162,0.984,204,0.736,217,3.46,218,1.984,229,1.577,242,2.712,243,2.884,247,2.046,252,1.474,254,2.327,275,2.823,297,1.821,298,4.02,299,3.584,300,4.341,301,3.685,302,3.275,303,3.275,304,3.275,305,3.275,306,2.712,307,2.327,308,2.703,309,2.046,310,2.703,311,2.703,312,2.703,313,2.703,314,2.703,315,2.703]],["title/interfaces/MenuItemConfig.html",[204,0.69,243,1.708]],["body/interfaces/MenuItemConfig.html",[0,0.061,3,0.578,4,0.509,5,0.509,7,0.269,8,0.933,9,1.209,11,2.247,32,0.039,34,0.747,45,1.094,61,1.094,82,3.473,83,1.619,84,0.864,97,0.897,125,4.043,127,4.111,131,2.556,132,2.556,134,2.543,155,0.022,156,0.028,157,0.022,162,0.727,204,0.809,206,1.795,217,2.556,218,1.466,229,1.635,242,2.247,243,2.834,247,2.247,252,1.619,254,2.556,275,1.795,297,2.001,298,2.97,299,2.97,301,3.951,306,2.883,307,2.556,308,2.97,309,2.247,310,2.97,311,2.97,312,2.97,313,2.97,314,2.97,315,2.97]],["title/classes/SplitBoardController.html",[0,0.052,316,1.918]],["body/classes/SplitBoardController.html",[0,0.028,2,0.303,3,0.27,4,0.238,5,0.238,7,0.342,8,0.538,9,1.333,13,0.81,26,0.562,28,0.684,29,1.35,31,1.024,32,0.039,33,1.024,34,0.653,35,0.924,38,0.883,39,1.517,44,1.329,45,1.525,61,1.006,76,2.095,78,1.892,79,0.837,80,1.192,84,0.27,85,1.385,97,0.939,114,1.329,136,2.443,137,3.11,139,1.192,155,0.01,156,0.016,157,0.01,162,0.989,171,2.067,181,1.517,215,2.067,246,2.346,252,0.755,267,1.923,316,1.663,317,2.729,318,1.385,319,3.31,320,3.31,321,3.31,322,3.31,323,3.31,324,3.31,325,4.582,326,4.582,327,3.767,328,2.663,329,2.663,330,2.663,331,2.663,332,3.767,333,1.678,334,2.663,335,1.329,336,1.678,337,1.678,338,1.678,339,1.678,340,1.678,341,1.678,342,1.678,343,1.678,344,2.663,345,4.141,346,1.678,347,3.609,348,2.663,349,1.678,350,2.663,351,5.016,352,1.678,353,3.924,354,2.663,355,1.678,356,1.678,357,1.048,358,2.352,359,3.782,360,2.663,361,2.663,362,2.067,363,1.385,364,3.31,365,1.678,366,3.31,367,1.678,368,3.31,369,3.31,370,3.31,371,1.678,372,1.678,373,1.678,374,1.678,375,1.678,376,1.678,377,1.678,378,1.678,379,1.678,380,1.678,381,1.678,382,1.678,383,2.663,384,2.663,385,1.678,386,1.678,387,1.678,388,1.678,389,1.678,390,3.31,391,1.048,392,5.016,393,1.678,394,1.678,395,1.678,396,1.678,397,1.678,398,1.678,399,1.678,400,3.767,401,2.198,402,1.385,403,1.678,404,2.663,405,1.385,406,1.385,407,2.198,408,1.385,409,1.192,410,1.385,411,1.385,412,4.372,413,4.372,414,2.663,415,3.11,416,2.663,417,3.609,418,2.663,419,1.678,420,2.663,421,1.048,422,1.678,423,1.048,424,2.198,425,1.678,426,1.678]],["title/classes/SplitBoardView.html",[0,0.052,76,1.708]],["body/classes/SplitBoardView.html",[0,0.018,2,0.193,3,0.171,4,0.151,5,0.151,7,0.354,8,0.37,9,1.168,13,0.557,26,0.806,28,1.307,29,1.336,31,1.202,32,0.039,33,1.202,34,0.667,35,1.084,36,1.144,38,0.757,39,1.293,40,1.46,44,1.53,45,1.466,61,0.976,62,0.667,76,1.018,79,2.406,80,0.758,84,0.386,97,1.269,112,1.512,136,1.747,141,1.512,143,1.985,155,0.007,156,0.011,157,0.007,162,1.165,175,1.512,176,0.667,181,1.675,191,1.018,209,0.758,215,0.667,225,2.354,229,0.557,246,2.42,252,1.988,267,1.185,309,0.667,316,1.502,317,2.615,335,2.061,345,3.647,347,3.409,357,2.187,358,2.026,391,0.667,401,2.649,402,2.891,405,0.881,406,0.881,407,0.881,408,2.649,409,2.662,410,0.881,411,0.881,417,4.247,421,2.469,423,2.187,424,0.881,427,0.667,428,1.512,429,2.405,430,2.405,431,3.409,432,2.405,433,2.405,434,1.831,435,1.831,436,1.831,437,2.405,438,1.831,439,2.852,440,1.831,441,1.831,442,1.831,443,1.831,444,1.831,445,1.831,446,1.831,447,1.831,448,1.301,449,1.301,450,1.301,451,1.831,452,3.536,453,1.068,454,1.068,455,1.068,456,1.831,457,1.068,458,2.354,459,0.881,460,1.831,461,1.068,462,1.831,463,1.068,464,1.831,465,3.209,466,1.068,467,1.068,468,1.831,469,1.068,470,1.068,471,1.831,472,4.642,473,4.537,474,4.642,475,1.068,476,1.068,477,1.831,478,3.502,479,1.068,480,1.831,481,1.068,482,1.831,483,1.831,484,1.831,485,3.092,486,2.405,487,2.488,488,2.005,489,1.068,490,1.831,491,1.068,492,1.831,493,1.068,494,1.831,495,1.068,496,1.831,497,1.068,498,0.758,499,0.881,500,0.758,501,0.758,502,0.881,503,0.758,504,0.758,505,1.144,506,0.881,507,1.068,508,0.881,509,0.758,510,0.881,511,1.831,512,0.881,513,1.068,514,1.068,515,1.068,516,0.881,517,1.301,518,1.068,519,1.068,520,1.068,521,1.068,522,1.068,523,1.068,524,1.831,525,1.831,526,1.831,527,1.512,528,2.852,529,1.512,530,1.512,531,1.831,532,1.068,533,1.831,534,1.068,535,2.852,536,0.533,537,1.831,538,1.068,539,1.068,540,1.068,541,1.068,542,1.068,543,1.068,544,1.068,545,2.852,546,3.953,547,1.068,548,1.068,549,1.068,550,1.068,551,1.068,552,1.068,553,1.068,554,1.831,555,3.209,556,1.068,557,1.068,558,1.068,559,1.068,560,1.068,561,1.068,562,0.881,563,1.831,564,0.881,565,1.068,566,1.831,567,1.512,568,1.831,569,1.831,570,1.831,571,1.831,572,1.831,573,1.831,574,1.068,575,1.068,576,1.831,577,1.831,578,1.831,579,1.068,580,1.068,581,3.209,582,1.068,583,1.068,584,1.068,585,1.068,586,2.405,587,1.068,588,1.068,589,1.068,590,3.209,591,1.831,592,2.852,593,2.405,594,1.831,595,1.068,596,1.068,597,1.831,598,1.068,599,1.068]],["title/classes/SplitItemView.html",[0,0.052,79,1.532]],["body/classes/SplitItemView.html",[0,0.032,2,0.339,3,0.301,4,0.266,5,0.266,7,0.14,8,0.587,9,1.275,13,0.884,26,1.192,28,2.21,29,1.431,31,1.231,32,0.039,33,1.231,34,0.685,35,1.11,36,1.815,38,0.926,39,1.6,40,0.693,44,1.649,45,1.628,61,1.081,78,1.333,79,2.286,84,0.301,114,0.936,115,1.333,136,1.45,155,0.012,156,0.018,157,0.012,162,1.2,181,1.314,209,2.065,229,1.501,252,0.845,309,1.172,317,2.811,335,2.464,357,1.172,358,2.065,359,3.576,362,2.862,391,1.172,421,2.706,423,2.706,428,2.399,431,1.549,448,2.065,449,2.065,450,2.065,458,3.306,459,1.549,487,3.078,488,2.706,498,1.333,499,1.549,500,1.333,501,1.333,502,1.549,503,1.333,504,1.333,505,1.815,506,1.549,512,1.549,516,1.549,517,3.396,530,1.549,567,3.945,600,1.333,601,3.557,602,3.557,603,3.557,604,4.005,605,4.005,606,4.005,607,4.005,608,2.906,609,2.906,610,4.005,611,2.906,612,2.906,613,2.906,614,2.906,615,2.906,616,4.005,617,1.308,618,2.906,619,1.45,620,1.877,621,1.877,622,1.877,623,1.877,624,4.005,625,1.877,626,1.877,627,1.877,628,2.906,629,2.906,630,1.877,631,2.906,632,1.877,633,2.906,634,1.877,635,1.877,636,2.906,637,1.877,638,4.005,639,3.557,640,2.906,641,1.877,642,2.906,643,2.906,644,1.877,645,1.877,646,1.549,647,1.877,648,1.877,649,3.557,650,2.906,651,1.877,652,1.877,653,1.877,654,2.906,655,3.557,656,1.877,657,1.877,658,1.877,659,1.877,660,1.877,661,1.877,662,1.877,663,1.877,664,1.877,665,1.877,666,1.877,667,2.906,668,1.877,669,1.877]],["title/classes/Test.html",[0,0.052,670,2.182]],["body/classes/Test.html",[0,0.073,2,0.784,3,0.696,4,0.614,5,0.614,7,0.324,13,1.576,29,1.081,31,1.081,32,0.037,33,1.081,34,0.536,35,0.975,44,1.319,45,1.319,84,0.696,114,2.586,155,0.027,156,0.032,157,0.027,162,1.12,229,1.685,670,3.682,671,3.58,672,5.183,673,5.183,674,4.337,675,4.337,676,4.337]],["title/classes/View.html",[0,0.052,335,1.532]],["body/classes/View.html",[0,0.059,2,0.626,3,0.557,4,0.491,5,0.491,7,0.259,8,0.91,13,1.37,26,1.161,27,3.72,28,2.433,29,1.37,31,1.322,32,0.038,33,1.322,34,0.719,35,1.192,36,3.433,38,0.7,44,1.522,84,0.557,115,2.462,136,2.248,155,0.021,156,0.028,157,0.021,162,1.012,181,1.849,191,1.927,287,2.861,335,2.248,448,3.202,449,3.202,450,3.202,498,3.202,500,2.462,501,3.202,503,2.462,504,3.202,505,3.312,517,3.558,529,2.861,677,2.462,678,4.506,679,3.466,680,3.466,681,3.466,682,3.202,683,3.72,684,3.72,685,3.466,686,3.466,687,3.466]],["title/interfaces/WeightMap.html",[204,0.69,688,1.382]],["body/interfaces/WeightMap.html",[0,0.079,2,0.659,3,0.586,4,0.516,5,0.516,7,0.348,9,1.153,29,0.909,32,0.039,38,0.737,84,0.586,97,1.161,155,0.022,156,0.029,157,0.022,162,0.941,204,1.153,206,1.82,218,1.897,229,1.698,246,2.09,267,1.347,536,2.324,617,1.641,619,1.82,688,2.513,689,2.324,690,1.82,691,3.647,692,3.647,693,2.324,694,2.849,695,2.278,696,2.324,697,2.028,698,2.028,699,2.028,700,2.028,701,2.028,702,2.028,703,2.028,704,2.028,705,1.82,706,2.278,707,2.278,708,2.278,709,2.909,710,2.278,711,2.278,712,2.278,713,2.278,714,2.028,715,2.278,716,2.278,717,2.278,718,2.278]],["title/classes/classBuilder.html",[0,0.052,705,1.532]],["body/classes/classBuilder.html",[0,0.069,2,0.738,3,0.48,4,0.423,5,0.423,7,0.305,8,0.825,9,1.283,13,1.241,26,1.001,29,1.346,31,1.245,32,0.039,33,1.245,34,0.647,35,1.123,38,0.825,39,1.104,44,1.519,45,1.414,84,0.48,97,1.017,155,0.018,156,0.025,157,0.018,162,1.091,204,1.045,218,1.663,229,1.519,242,2.904,246,1.663,267,1.104,536,2.037,617,1.345,619,1.491,688,2.532,689,2.758,690,1.491,693,2.037,694,2.997,695,1.866,696,2.037,697,1.662,698,1.662,699,1.662,700,1.662,701,1.662,702,1.662,703,1.662,704,1.662,705,2.037,706,2.904,707,2.55,708,1.866,709,2.55,710,3.121,711,1.866,712,2.55,713,2.55,714,1.662,715,1.866,716,1.866,717,1.866,718,1.866,719,4.082,720,4.082,721,4.082,722,4.082,723,2.988,724,2.988,725,2.988,726,2.988,727,2.988,728,2.988]],["title/interfaces/classConfig.html",[204,0.69,693,1.532]],["body/interfaces/classConfig.html",[0,0.094,2,0.644,3,0.573,4,0.505,5,0.505,7,0.343,8,0.927,9,1.141,32,0.039,34,0.567,38,0.721,84,0.573,97,1.144,155,0.022,156,0.028,157,0.022,162,0.927,204,1.141,206,1.779,218,2.259,229,1.779,246,1.87,267,1.317,536,2.29,617,1.605,619,1.779,688,2.412,689,1.779,690,1.779,693,2.533,694,2.833,695,2.227,696,2.29,697,1.983,698,1.983,699,1.983,700,1.983,701,1.983,702,1.983,703,1.983,704,1.983,705,1.779,706,2.227,707,2.227,708,2.227,709,2.867,710,2.227,711,2.227,712,2.227,713,2.227,714,1.983,715,2.227,716,2.227,717,2.227,718,2.227]],["title/coverage.html",[729,3.433]],["body/coverage.html",[0,0.095,1,1.894,5,0.328,6,1.911,12,1.894,32,0.038,34,0.286,40,0.855,64,1.446,76,1.288,79,1.155,81,1.645,83,1.042,134,1.155,139,1.645,155,0.014,156,0.021,157,0.014,158,1.911,159,1.911,171,2.127,176,1.446,182,1.645,183,1.911,184,1.911,204,1.068,205,1.645,207,2.42,213,1.645,216,1.911,243,1.288,267,2.289,275,2.016,276,1.911,297,1.894,306,1.446,316,1.446,317,2.223,318,1.911,335,1.155,363,1.911,427,2.127,509,1.645,600,1.645,617,2.137,670,1.645,671,1.911,677,1.645,688,1.042,689,2.369,690,2.369,693,1.155,694,1.155,696,1.155,705,1.155,729,1.911,730,1.911,731,2.315,732,2.315,733,3.678,734,6.118,735,1.911,736,6.099,737,2.812,738,1.911,739,1.911,740,2.812,741,1.911,742,3.406,743,3.406,744,2.315,745,3.406,746,2.315,747,2.315,748,2.315,749,4.232,750,4.232,751,1.911,752,1.911,753,4.748,754,1.911,755,1.911,756,1.911,757,1.911,758,1.911,759,1.911,760,1.911,761,1.911,762,1.911,763,1.911,764,1.911,765,1.911,766,1.911,767,1.911,768,1.911,769,1.911,770,1.911,771,1.911,772,1.911,773,1.911,774,4.455,775,1.911,776,2.315,777,1.911,778,2.812,779,2.315,780,1.911,781,2.315,782,2.315]],["title/dependencies.html",[783,2.581,784,2.618]],["body/dependencies.html",[32,0.038,62,2.702,155,0.027,156,0.032,157,0.027,166,3.57,188,3.073,211,3.934,212,3.57,508,3.57,784,3.073,785,4.325,786,4.325,787,4.325,788,3.57,789,4.325,790,4.325,791,4.325,792,4.325,793,4.325,794,4.325,795,4.325,796,4.325,797,4.325,798,4.325,799,4.325,800,4.325,801,4.325,802,4.325,803,4.325,804,4.325]],["title/miscellaneous/enumerations.html",[805,1.051,806,3.041]],["body/miscellaneous/enumerations.html",[7,0.314,32,0.037,39,2.099,58,3.176,82,3.176,110,3.468,155,0.026,156,0.031,157,0.026,247,2.624,252,1.891,275,2.096,297,2.827,317,2.537,357,3.176,362,3.549,409,2.985,421,3.176,423,3.176,427,3.176,485,3.468,487,3.612,488,3.176,600,3.612,646,4.197,805,1.711,806,3.468,807,4.201,808,4.197,809,3.468,810,4.201,811,4.201]],["title/miscellaneous/functions.html",[805,1.051,812,3.041]],["body/miscellaneous/functions.html",[7,0.332,31,1.311,32,0.036,33,1.311,35,1.183,155,0.027,156,0.032,157,0.027,176,3.285,191,2.925,749,3.158,750,3.737,751,4.341,775,3.669,805,1.811,812,3.669,813,4.445,814,3.669,815,4.445,816,4.445,817,4.445,818,5.259,819,5.259,820,4.445]],["title/index.html",[7,0.193,821,2.13,822,2.13]],["body/index.html",[1,2.457,4,0.699,32,0.034,155,0.021,156,0.027,157,0.021,188,2.39,204,0.756,211,3.724,307,2.39,527,2.777,682,2.39,784,3.14,823,5.241,824,4.935,825,4.419,826,4.419,827,3.364,828,3.364,829,3.364,830,3.364,831,3.364,832,3.364,833,3.364,834,5.241,835,3.364,836,3.364,837,2.777,838,3.364,839,3.364,840,3.364,841,3.364,842,3.364,843,3.364,844,3.364,845,2.777,846,2.39,847,3.364,848,4.419,849,3.364,850,3.364,851,3.364,852,4.419,853,3.364,854,3.364,855,3.364,856,3.364,857,4.935,858,3.364,859,3.364,860,3.364,861,3.364,862,3.364,863,3.364,864,3.364,865,2.39,866,3.364,867,3.364,868,3.364,869,3.364,870,3.364,871,3.364,872,3.364,873,3.364,874,4.935,875,3.364,876,3.364,877,3.364,878,4.935,879,3.364,880,2.777,881,3.364,882,3.364,883,3.364,884,4.935,885,3.364,886,3.364,887,3.364,888,3.364,889,3.364,890,4.935,891,4.419,892,3.364,893,3.364,894,3.364,895,3.364,896,3.364,897,2.777,898,3.364,899,3.364,900,3.364,901,3.364,902,3.364,903,3.648,904,3.364,905,3.364,906,4.419,907,3.364,908,4.419,909,3.364,910,4.419,911,2.777,912,2.777,913,2.777,914,3.364,915,3.364,916,3.364,917,3.364,918,3.364,919,3.364,920,3.364,921,3.364,922,3.364,923,3.364]],["title/license.html",[821,2.13,822,2.13,846,1.834]],["body/license.html",[32,0.029,155,0.023,156,0.029,157,0.023,353,3.139,362,2.375,714,2.114,730,3.139,837,3.139,845,3.139,846,2.702,897,3.139,911,3.139,912,3.139,913,3.139,924,5.23,925,3.803,926,3.803,927,4.781,928,3.803,929,3.803,930,3.803,931,3.803,932,3.803,933,3.803,934,4.781,935,5.978,936,3.803,937,3.803,938,5.23,939,3.803,940,4.781,941,3.803,942,3.803,943,3.947,944,3.803,945,3.803,946,3.803,947,3.803,948,4.781,949,3.803,950,3.803,951,3.803,952,3.803,953,3.803,954,3.803,955,3.803,956,4.781,957,4.781,958,3.803,959,3.803,960,3.803,961,3.803,962,3.803,963,3.803,964,3.803,965,3.803,966,3.803,967,3.803,968,3.803,969,3.803,970,3.803,971,3.803,972,3.803,973,3.803,974,3.803,975,3.803,976,3.803,977,3.803,978,3.803,979,3.803,980,3.803,981,3.803,982,3.803,983,3.803,984,3.803,985,3.803]],["title/modules.html",[865,2.955]],["body/modules.html",[32,0.034,155,0.03,156,0.034,157,0.03,865,3.445]],["title/overview.html",[986,3.433]],["body/overview.html",[2,0.866,32,0.034,155,0.029,156,0.034,157,0.029,206,2.39,415,3.954,986,3.954,987,4.79]],["title/interfaces/stateConfig.html",[204,0.69,694,1.532]],["body/interfaces/stateConfig.html",[0,0.077,2,0.961,3,0.561,4,0.495,5,0.495,7,0.339,8,0.916,9,1.131,32,0.039,34,0.622,35,1.019,38,0.706,84,0.561,97,1.13,155,0.022,156,0.028,157,0.022,162,0.916,204,1.131,206,1.744,218,2.245,229,1.717,246,2.167,267,1.291,536,2.261,617,1.574,619,1.744,688,2.394,689,1.744,690,1.744,693,2.654,694,2.868,695,3.323,696,2.261,697,1.944,698,1.944,699,1.944,700,1.944,701,1.944,702,1.944,703,1.944,704,1.944,705,1.744,706,2.184,707,2.184,708,2.184,709,2.831,710,2.184,711,2.184,712,2.184,713,2.184,714,1.944,715,2.184,716,2.184,717,2.184,718,2.184]],["title/miscellaneous/typealiases.html",[805,1.051,988,3.685]],["body/miscellaneous/typealiases.html",[7,0.341,32,0.037,34,0.564,136,2.275,155,0.028,156,0.033,157,0.028,171,2.848,275,2.275,297,2.968,301,3.793,505,3.334,677,3.239,682,3.239,683,3.763,684,3.763,805,1.857,809,3.763,989,4.559,990,4.559]],["title/miscellaneous/variables.html",[805,1.051,991,3.041]],["body/miscellaneous/variables.html",[1,1.716,7,0.152,12,2.732,28,0.826,32,0.039,34,0.516,38,1.218,39,2.222,40,1.541,81,2.192,97,0.931,114,1.539,155,0.012,156,0.019,157,0.012,181,1.139,207,1.441,208,1.674,210,1.674,213,2.192,214,1.674,215,2.332,229,0.938,246,0.826,267,0.749,306,1.927,317,1.012,391,1.927,427,1.927,452,3.082,488,1.267,509,2.192,510,1.674,536,1.012,562,1.674,564,1.674,617,0.913,619,1.012,688,0.913,689,1.012,690,1.539,696,1.539,697,1.128,698,1.128,699,1.128,700,1.128,701,1.128,702,1.128,703,1.128,704,1.128,733,1.674,735,2.547,737,4.055,738,3.443,739,3.082,740,1.674,741,2.547,749,1.441,750,4.163,752,2.547,754,2.547,755,2.547,756,2.547,757,2.547,758,2.547,759,2.547,760,2.547,761,2.547,762,2.547,763,2.547,764,2.547,765,2.547,766,2.547,767,2.547,768,2.547,769,2.547,770,2.547,771,2.547,772,2.547,773,2.547,777,1.674,778,1.674,780,1.674,788,1.674,805,0.826,808,1.674,814,4.816,880,1.674,903,1.674,943,1.674,991,1.674,992,2.029,993,4.726,994,2.029,995,3.085,996,2.029,997,2.029,998,2.029,999,2.029,1000,3.085,1001,2.029,1002,2.029,1003,3.085,1004,2.029,1005,3.085,1006,3.085,1007,2.029,1008,2.029,1009,2.029,1010,2.029,1011,2.029,1012,3.085,1013,4.171,1014,2.029,1015,3.085,1016,2.029,1017,2.029,1018,3.085,1019,2.029,1020,3.085,1021,2.029,1022,3.085,1023,3.085,1024,2.029,1025,2.029,1026,2.029,1027,2.029,1028,2.029,1029,3.085,1030,2.029,1031,3.085,1032,3.085,1033,4.171,1034,2.029,1035,3.085,1036,2.029,1037,2.029,1038,2.029,1039,2.029,1040,3.085,1041,3.085,1042,2.029,1043,2.029,1044,2.029,1045,2.029,1046,2.029,1047,2.029,1048,2.029,1049,2.029,1050,2.029,1051,2.029,1052,3.733,1053,4.171,1054,2.029,1055,2.029,1056,2.029,1057,2.029,1058,2.029,1059,2.029,1060,2.029,1061,2.029,1062,2.029,1063,2.029,1064,2.029,1065,2.029,1066,2.029,1067,2.029,1068,2.029,1069,2.029,1070,2.029,1071,2.029,1072,3.085,1073,2.029,1074,2.029,1075,2.029]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":267,"title":{},"body":{"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":779,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":776,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":742,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":744,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":745,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":774,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":743,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0123456789abcdef",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":136,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["1.1.5",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["1.6.4",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["1/21",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["1/26",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":617,"title":{},"body":{"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":987,"title":{},"body":{"overview.html":{}}}],["15",{"_index":559,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1].root",{"_index":587,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1].root.after(item.root",{"_index":542,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1f1f1f",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":137,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{}}}],["2.2.0",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":150,"title":{},"body":{"classes/App.html":{}}}],["200",{"_index":697,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["2020",{"_index":925,"title":{},"body":{"license.html":{}}}],["272728",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e2f30",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":139,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"coverage.html":{}}}],["3.0.1",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["3.1.3",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":424,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["300",{"_index":699,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["393939",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3f3f3f",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3px",{"_index":563,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["4",{"_index":363,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["4.0.7",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["4.3.5",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":701,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["454545",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["464749",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4px",{"_index":522,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["5",{"_index":415,"title":{},"body":{"classes/SplitBoardController.html":{},"overview.html":{}}}],["5.1.1",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["5580c0",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5d5f61",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.4",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":151,"title":{},"body":{"classes/App.html":{}}}],["600",{"_index":703,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["680",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.2",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":557,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["729cd4",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["800",{"_index":619,"title":{},"body":{"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["808080",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["900",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_bgcolorclassname",{"_index":601,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_context",{"_index":129,"title":{},"body":{"classes/App.html":{}}}],["_growclassname",{"_index":602,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_menuitem",{"_index":128,"title":{},"body":{"classes/App.html":{}}}],["_shrinkclassname",{"_index":603,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_type",{"_index":160,"title":{},"body":{"classes/AppearanceService.html":{}}}],["_waitformergeitem",{"_index":429,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["above",{"_index":955,"title":{},"body":{"license.html":{}}}],["action",{"_index":911,"title":{},"body":{"index.html":{},"license.html":{}}}],["active",{"_index":702,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["activeexpand",{"_index":327,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["activeid",{"_index":319,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["addcolumn",{"_index":434,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addcolumn(item",{"_index":460,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addconfig",{"_index":719,"title":{},"body":{"classes/classBuilder.html":{}}}],["addconfig(config",{"_index":712,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["added",{"_index":527,"title":{},"body":{"classes/SplitBoardView.html":{},"index.html":{}}}],["addexpandbutton",{"_index":604,"title":{},"body":{"classes/SplitItemView.html":{}}}],["addrow",{"_index":435,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addrow(item",{"_index":462,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["aliases",{"_index":989,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":946,"title":{},"body":{"license.html":{}}}],["anycolor",{"_index":185,"title":{},"body":{"classes/ColorRef.html":{}}}],["anycolorhex",{"_index":820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":1,"title":{"classes/App.html":{}},"body":{"classes/App.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app(document.body",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.quit",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appearance",{"_index":196,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearanceservice",{"_index":64,"title":{"classes/AppearanceService.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"coverage.html":{}}}],["appearancetype",{"_index":58,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"miscellaneous/enumerations.html":{}}}],["appearancetype.any",{"_index":202,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearancetype.dark",{"_index":108,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{}}}],["appearancetype.light",{"_index":203,"title":{},"body":{"classes/ColorRef.html":{}}}],["append",{"_index":448,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["append(child",{"_index":498,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["application",{"_index":903,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["applysplit",{"_index":436,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["applysplit(direction",{"_index":464,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["aps",{"_index":103,"title":{},"body":{"classes/App.html":{}}}],["aps.onmodechanged((type",{"_index":105,"title":{},"body":{"classes/App.html":{}}}],["arising",{"_index":983,"title":{},"body":{"license.html":{}}}],["associated",{"_index":936,"title":{},"body":{"license.html":{}}}],["authors",{"_index":973,"title":{},"body":{"license.html":{}}}],["auto",{"_index":682,"title":{},"body":{"classes/View.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["automatically",{"_index":914,"title":{},"body":{"index.html":{}}}],["available",{"_index":841,"title":{},"body":{"index.html":{}}}],["bababa",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar.svelte",{"_index":69,"title":{},"body":{"classes/App.html":{}}}],["bg",{"_index":615,"title":{},"body":{"classes/SplitItemView.html":{}}}],["bgcolor",{"_index":752,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["board",{"_index":511,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.controller",{"_index":507,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.controller.ts",{"_index":318,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["board.controller.ts:10",{"_index":341,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:11",{"_index":342,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:12",{"_index":336,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:14",{"_index":337,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:15",{"_index":334,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:28",{"_index":352,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:43",{"_index":355,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:50",{"_index":343,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:58",{"_index":356,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:6",{"_index":340,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:69",{"_index":349,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:7",{"_index":338,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:8",{"_index":339,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:80",{"_index":346,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.view",{"_index":78,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{}}}],["board.view.ts",{"_index":427,"title":{},"body":{"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["board.view.ts:107",{"_index":470,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:112",{"_index":491,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:131",{"_index":493,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:150",{"_index":495,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:159",{"_index":481,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:17",{"_index":455,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:18",{"_index":454,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:19",{"_index":457,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:193",{"_index":475,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:20",{"_index":453,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:21",{"_index":451,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:27",{"_index":476,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:31",{"_index":463,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:42",{"_index":461,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:54",{"_index":479,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:64",{"_index":489,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:67",{"_index":497,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:77",{"_index":467,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:83",{"_index":469,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:95",{"_index":466,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["boolean",{"_index":209,"title":{},"body":{"interfaces/ISettings.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["bootstrap",{"_index":14,"title":{},"body":{"classes/App.html":{}}}],["bordercolor",{"_index":754,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":898,"title":{},"body":{"index.html":{}}}],["browserwindow",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder",{"_index":900,"title":{},"body":{"index.html":{}}}],["builder.ts",{"_index":690,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["builder.ts:11",{"_index":692,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["builder.ts:24",{"_index":722,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:30",{"_index":725,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:33",{"_index":724,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:36",{"_index":726,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:44",{"_index":728,"title":{},"body":{"classes/classBuilder.html":{}}}],["building",{"_index":853,"title":{},"body":{"index.html":{}}}],["bundled",{"_index":867,"title":{},"body":{"index.html":{}}}],["button",{"_index":629,"title":{},"body":{"classes/SplitItemView.html":{}}}],["c",{"_index":714,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"license.html":{},"interfaces/stateConfig.html":{}}}],["c0c0c1",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c4666f",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c6c6c6",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback",{"_index":127,"title":{},"body":{"classes/App.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["cancelformerge",{"_index":437,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["cancelformerge():void",{"_index":549,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["cancelwaitformerge",{"_index":605,"title":{},"body":{"classes/SplitItemView.html":{}}}],["case",{"_index":201,"title":{},"body":{"classes/ColorRef.html":{}}}],["cgray",{"_index":616,"title":{},"body":{"classes/SplitItemView.html":{}}}],["charge",{"_index":931,"title":{},"body":{"license.html":{}}}],["check",{"_index":208,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["checkdirection",{"_index":438,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["checkdirection(type",{"_index":468,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["checkexpandstate",{"_index":328,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["checkexpandstate(clientx",{"_index":344,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["child",{"_index":500,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["children",{"_index":298,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["childs",{"_index":503,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["claim",{"_index":976,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classbuilder",{"_index":705,"title":{"classes/classBuilder.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classconfig",{"_index":693,"title":{"interfaces/classConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["classname",{"_index":638,"title":{},"body":{"classes/SplitItemView.html":{}}}],["clear",{"_index":710,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["clientheight",{"_index":589,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["clientwidth",{"_index":588,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["clientx",{"_index":347,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["clienty",{"_index":345,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["code",{"_index":834,"title":{},"body":{"index.html":{}}}],["col",{"_index":485,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":188,"title":{},"body":{"classes/ColorRef.html":{},"dependencies.html":{},"index.html":{}}}],["color(appearancetype",{"_index":194,"title":{},"body":{"classes/ColorRef.html":{}}}],["color.ts",{"_index":750,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["colorref",{"_index":182,"title":{"classes/ColorRef.html":{}},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["colorsetroot",{"_index":98,"title":{},"body":{"classes/App.html":{}}}],["column",{"_index":403,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["common",{"_index":872,"title":{},"body":{"index.html":{}}}],["community",{"_index":832,"title":{},"body":{"index.html":{}}}],["compilation",{"_index":889,"title":{},"body":{"index.html":{}}}],["compile",{"_index":884,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":906,"title":{},"body":{"index.html":{}}}],["components",{"_index":874,"title":{},"body":{"index.html":{}}}],["concrete",{"_index":827,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":954,"title":{},"body":{"license.html":{}}}],["config",{"_index":242,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/classBuilder.html":{}}}],["configs",{"_index":723,"title":{},"body":{"classes/classBuilder.html":{}}}],["configs.foreach((config",{"_index":708,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["configured",{"_index":902,"title":{},"body":{"index.html":{}}}],["connection",{"_index":984,"title":{},"body":{"license.html":{}}}],["console",{"_index":133,"title":{},"body":{"classes/App.html":{}}}],["console.log(`test",{"_index":675,"title":{},"body":{"classes/Test.html":{}}}],["console.log(menuitem",{"_index":135,"title":{},"body":{"classes/App.html":{}}}],["console.warn('direction",{"_index":525,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["const",{"_index":97,"title":{},"body":{"classes/App.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"classes/App.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{}}}],["constructor(anycolor",{"_index":189,"title":{},"body":{"classes/ColorRef.html":{}}}],["constructor(config",{"_index":299,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["constructor(configs",{"_index":707,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["constructor(container",{"_index":228,"title":{},"body":{"classes/Menu.html":{},"classes/MenuGroup.html":{}}}],["constructor(private",{"_index":85,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{}}}],["constructor(root",{"_index":27,"title":{},"body":{"classes/App.html":{},"classes/View.html":{}}}],["constructor(view",{"_index":333,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["container",{"_index":10,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{}}}],["containermodule",{"_index":177,"title":{},"body":{"classes/AppearanceService.html":{}}}],["contentview",{"_index":567,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["contentview.classlist.add('flex",{"_index":650,"title":{},"body":{"classes/SplitItemView.html":{}}}],["context",{"_index":11,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["contextisolation",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":980,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":920,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":917,"title":{},"body":{"index.html":{}}}],["controlaccentcolor",{"_index":755,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlbackgroundcolor",{"_index":756,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controldisabledcolor",{"_index":757,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlforbiddencolor",{"_index":758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlhighlightcolor",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":430,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["copies",{"_index":948,"title":{},"body":{"license.html":{}}}],["copy",{"_index":934,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":924,"title":{},"body":{"license.html":{}}}],["cosmic",{"_index":823,"title":{},"body":{"index.html":{}}}],["cosmic/core/browser/layout/split",{"_index":77,"title":{},"body":{"classes/App.html":{}}}],["cosmic/core/common/appearance",{"_index":63,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{}}}],["cosmic/workbench/services/appearance",{"_index":65,"title":{},"body":{"classes/App.html":{}}}],["coverage",{"_index":729,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createmenu",{"_index":223,"title":{},"body":{"classes/Menu.html":{}}}],["createwindow",{"_index":735,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["crosshair",{"_index":486,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["current",{"_index":907,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":716,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["d00000",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d1905d",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d2r",{"_index":829,"title":{},"body":{"index.html":{}}}],["d7d7d7",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d9d9d9",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":977,"title":{},"body":{"license.html":{}}}],["dark",{"_index":110,"title":{},"body":{"classes/App.html":{},"miscellaneous/enumerations.html":{}}}],["dark:bg",{"_index":618,"title":{},"body":{"classes/SplitItemView.html":{}}}],["darkcolor",{"_index":186,"title":{},"body":{"classes/ColorRef.html":{}}}],["darkcolorhex",{"_index":819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date.now",{"_index":288,"title":{},"body":{"classes/MenuGroup.html":{}}}],["deal",{"_index":937,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":985,"title":{},"body":{"license.html":{}}}],["debugging",{"_index":909,"title":{},"body":{"index.html":{}}}],["default",{"_index":38,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":214,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["defaultscope",{"_index":87,"title":{},"body":{"classes/App.html":{}}}],["defaultweightmap",{"_index":696,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{}}}],["dependencies",{"_index":784,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["design",{"_index":824,"title":{},"body":{"index.html":{}}}],["destorysplit",{"_index":439,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["destroy",{"_index":224,"title":{},"body":{"classes/Menu.html":{}}}],["dev",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["develop",{"_index":830,"title":{},"body":{"index.html":{}}}],["development",{"_index":839,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":431,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["directionstyles",{"_index":646,"title":{},"body":{"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["directionstyles[direction",{"_index":668,"title":{},"body":{"classes/SplitItemView.html":{}}}],["directiontype",{"_index":357,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["directiontype.col",{"_index":401,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["directiontype.row",{"_index":407,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["disable",{"_index":132,"title":{},"body":{"classes/App.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["disabled",{"_index":704,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["dist/workbench/desktop",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":912,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribution",{"_index":891,"title":{},"body":{"index.html":{}}}],["divided",{"_index":863,"title":{},"body":{"index.html":{}}}],["document.body.classlist.add('mode",{"_index":109,"title":{},"body":{"classes/App.html":{}}}],["document.body.classlist.remove('mode",{"_index":111,"title":{},"body":{"classes/App.html":{}}}],["document.createelement('div",{"_index":287,"title":{},"body":{"classes/MenuGroup.html":{},"classes/View.html":{}}}],["document.createelement('style",{"_index":99,"title":{},"body":{"classes/App.html":{}}}],["document.queryselector('#main",{"_index":120,"title":{},"body":{"classes/App.html":{}}}],["documentation",{"_index":730,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["draft",{"_index":915,"title":{},"body":{"index.html":{}}}],["e",{"_index":487,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["e0e0e0",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":868,"title":{},"body":{"index.html":{}}}],["electron",{"_index":211,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{},"index.html":{}}}],["electron/.exec(process.execpath",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["electronstore",{"_index":210,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["enableremotemodule",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entire",{"_index":861,"title":{},"body":{"index.html":{}}}],["enum",{"_index":309,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["enumerations",{"_index":806,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eslint",{"_index":131,"title":{},"body":{"classes/App.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["event",{"_index":353,"title":{},"body":{"classes/SplitBoardController.html":{},"license.html":{}}}],["event.clientx",{"_index":379,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.clienty",{"_index":366,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.preventdefault",{"_index":380,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.stoppropagation",{"_index":381,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.target",{"_index":373,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["eventemitter2",{"_index":166,"title":{},"body":{"classes/AppearanceService.html":{},"dependencies.html":{}}}],["eventemitter3",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["everyone",{"_index":842,"title":{},"body":{"index.html":{}}}],["evt",{"_index":161,"title":{},"body":{"classes/AppearanceService.html":{}}}],["expand",{"_index":359,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{}}}],["expand.svelte",{"_index":645,"title":{},"body":{"classes/SplitItemView.html":{}}}],["expandactive",{"_index":320,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expanded",{"_index":483,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["expandleavehandler",{"_index":321,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmouseuphandler",{"_index":322,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmovehandler",{"_index":323,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandtype",{"_index":324,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["export",{"_index":84,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["express",{"_index":964,"title":{},"body":{"license.html":{}}}],["extends",{"_index":428,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["f2f2f2",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f9f9f9",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":215,"title":{},"body":{"interfaces/ISettings.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["ffae2b",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["file://${join(__dirname",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":913,"title":{},"body":{"index.html":{},"license.html":{}}}],["fitness",{"_index":969,"title":{},"body":{"license.html":{}}}],["flex",{"_index":517,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["flowvalue",{"_index":505,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["fn",{"_index":170,"title":{},"body":{"classes/AppearanceService.html":{}}}],["focus",{"_index":698,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":953,"title":{},"body":{"license.html":{}}}],["fourthbgcolor",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":930,"title":{},"body":{"license.html":{}}}],["function",{"_index":171,"title":{},"body":{"classes/AppearanceService.html":{},"classes/SplitBoardController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":812,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":951,"title":{},"body":{"license.html":{}}}],["getexpandresizes",{"_index":440,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["getexpandresizes(index",{"_index":471,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["getmenugroup",{"_index":81,"title":{},"body":{"classes/App.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getmenugroup(header",{"_index":122,"title":{},"body":{"classes/App.html":{}}}],["getmenuinsatance",{"_index":278,"title":{},"body":{"classes/MenuGroup.html":{}}}],["getting",{"_index":821,"title":{"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":910,"title":{},"body":{"index.html":{}}}],["granted",{"_index":929,"title":{},"body":{"license.html":{}}}],["gridbackgroundcolor",{"_index":761,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":247,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/enumerations.html":{}}}],["group.ts",{"_index":276,"title":{},"body":{"classes/MenuGroup.html":{},"coverage.html":{}}}],["group.ts:12",{"_index":282,"title":{},"body":{"classes/MenuGroup.html":{}}}],["group.ts:21",{"_index":284,"title":{},"body":{"classes/MenuGroup.html":{}}}],["group.ts:4",{"_index":281,"title":{},"body":{"classes/MenuGroup.html":{}}}],["group.ts:5",{"_index":280,"title":{},"body":{"classes/MenuGroup.html":{}}}],["grow",{"_index":639,"title":{},"body":{"classes/SplitItemView.html":{}}}],["guide",{"_index":840,"title":{},"body":{"index.html":{}}}],["gutterstyle",{"_index":561,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["header",{"_index":119,"title":{},"body":{"classes/App.html":{}}}],["height",{"_index":562,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":836,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":928,"title":{},"body":{"license.html":{}}}],["hexdigits",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hidden",{"_index":520,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["hide",{"_index":628,"title":{},"body":{"classes/SplitItemView.html":{}}}],["hideexpandbutton",{"_index":606,"title":{},"body":{"classes/SplitItemView.html":{}}}],["holders",{"_index":974,"title":{},"body":{"license.html":{}}}],["hor",{"_index":360,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["horizontal",{"_index":402,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["host",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hover",{"_index":700,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["htmlelement",{"_index":28,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:5000",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":218,"title":{},"body":{"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["identifier",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["if(pos",{"_index":539,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["implied",{"_index":965,"title":{},"body":{"license.html":{}}}],["import",{"_index":61,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["include",{"_index":871,"title":{},"body":{"index.html":{}}}],["included",{"_index":958,"title":{},"body":{"license.html":{}}}],["including",{"_index":940,"title":{},"body":{"license.html":{}}}],["independently",{"_index":869,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indexable",{"_index":691,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["ing",{"_index":825,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":458,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["init",{"_index":225,"title":{},"body":{"classes/Menu.html":{},"classes/SplitBoardView.html":{}}}],["init(name",{"_index":241,"title":{},"body":{"classes/Menu.html":{}}}],["initflowtable",{"_index":15,"title":{},"body":{"classes/App.html":{}}}],["initframe",{"_index":16,"title":{},"body":{"classes/App.html":{}}}],["initial",{"_index":683,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["initmenus",{"_index":17,"title":{},"body":{"classes/App.html":{}}}],["initnavigationbar",{"_index":18,"title":{},"body":{"classes/App.html":{}}}],["initpreferences",{"_index":19,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel",{"_index":20,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel(container",{"_index":51,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel",{"_index":21,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel(container",{"_index":53,"title":{},"body":{"classes/App.html":{}}}],["initstatusbar",{"_index":22,"title":{},"body":{"classes/App.html":{}}}],["initstyle",{"_index":23,"title":{},"body":{"classes/App.html":{}}}],["initstylemode",{"_index":24,"title":{},"body":{"classes/App.html":{}}}],["initstylemode(type",{"_index":57,"title":{},"body":{"classes/App.html":{}}}],["initworkarea",{"_index":25,"title":{},"body":{"classes/App.html":{}}}],["inject",{"_index":176,"title":{},"body":{"classes/AppearanceService.html":{},"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject(token",{"_index":815,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":175,"title":{},"body":{"classes/AppearanceService.html":{},"classes/SplitBoardView.html":{}}}],["insertconfig",{"_index":720,"title":{},"body":{"classes/classBuilder.html":{}}}],["insertconfig(config",{"_index":713,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["insertitemat",{"_index":441,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["insertitemat(item",{"_index":477,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["interface",{"_index":204,"title":{"interfaces/ISettings.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}},"body":{"interfaces/ISettings.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["interfaces",{"_index":206,"title":{},"body":{"interfaces/ISettings.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["inversify",{"_index":62,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/SplitBoardView.html":{},"dependencies.html":{}}}],["ipc",{"_index":875,"title":{},"body":{"index.html":{}}}],["isettings",{"_index":205,"title":{"interfaces/ISettings.html":{}},"body":{"interfaces/ISettings.html":{},"coverage.html":{}}}],["isprod",{"_index":737,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isshrink",{"_index":607,"title":{},"body":{"classes/SplitItemView.html":{}}}],["issues",{"_index":835,"title":{},"body":{"index.html":{}}}],["item",{"_index":252,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["item.contentview",{"_index":568,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.hideexpandbutton",{"_index":573,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.id",{"_index":295,"title":{},"body":{"classes/MenuGroup.html":{}}}],["item.replacecontent(newboard.root",{"_index":569,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.root",{"_index":375,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientheight",{"_index":411,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.clientwidth",{"_index":406,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.getboundingclientrect().left",{"_index":405,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.getboundingclientrect().top",{"_index":410,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.ts",{"_index":297,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["item.ts:17",{"_index":303,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:18",{"_index":304,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:19",{"_index":305,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:20",{"_index":302,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:21",{"_index":300,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.view",{"_index":80,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.view.ts",{"_index":600,"title":{},"body":{"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["item.view.ts:13",{"_index":621,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:14",{"_index":622,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:15",{"_index":620,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:17",{"_index":623,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:18",{"_index":614,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:27",{"_index":634,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:34",{"_index":632,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:41",{"_index":637,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:48",{"_index":641,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:55",{"_index":630,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:59",{"_index":635,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:66",{"_index":625,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:70",{"_index":627,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:74",{"_index":644,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:80",{"_index":626,"title":{},"body":{"classes/SplitItemView.html":{}}}],["items",{"_index":432,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["join(__dirname",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keycode",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["kind",{"_index":963,"title":{},"body":{"license.html":{}}}],["labelcolor",{"_index":762,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["length",{"_index":473,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["liability",{"_index":978,"title":{},"body":{"license.html":{}}}],["liable",{"_index":975,"title":{},"body":{"license.html":{}}}],["license",{"_index":846,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["light",{"_index":811,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lightcolor",{"_index":187,"title":{},"body":{"classes/ColorRef.html":{}}}],["lightcolorhex",{"_index":818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["limitation",{"_index":941,"title":{},"body":{"license.html":{}}}],["limited",{"_index":966,"title":{},"body":{"license.html":{}}}],["linux",{"_index":894,"title":{},"body":{"index.html":{}}}],["live",{"_index":482,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["liveresize",{"_index":329,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["liveresize(clientx",{"_index":348,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["local",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":788,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":741,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error(json.stringify(err",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lowboardroot",{"_index":509,"title":{},"body":{"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["macos",{"_index":892,"title":{},"body":{"index.html":{}}}],["main",{"_index":877,"title":{},"body":{"index.html":{}}}],["mainwindow",{"_index":738,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mainwindow.loadurl(url).catch((err",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.on('closed",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.webcontents.opendevtools",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor",{"_index":751,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makecolor('#000000",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#3f3f3f",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#5580c0",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#729cd4",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#bababa",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c0c0c1",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c4666f",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c6c6c6",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d00000",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d1905d",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d7d7d7",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d9d9d9",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#e0e0e0",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f2f2f2",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f9f9f9",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffae2b",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffffff",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor(anycolorhex",{"_index":817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["map",{"_index":41,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{}}}],["matching",{"_index":156,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":586,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["menu",{"_index":83,"title":{"classes/Menu.html":{}},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menu(menucontainer",{"_index":291,"title":{},"body":{"classes/MenuGroup.html":{}}}],["menu.id",{"_index":296,"title":{},"body":{"classes/MenuGroup.html":{}}}],["menu.init",{"_index":124,"title":{},"body":{"classes/App.html":{}}}],["menu.registeritem",{"_index":130,"title":{},"body":{"classes/App.html":{}}}],["menu.removeitem(0",{"_index":138,"title":{},"body":{"classes/App.html":{}}}],["menu.svelte",{"_index":251,"title":{},"body":{"classes/Menu.html":{}}}],["menucommonfunction",{"_index":301,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/typealiases.html":{}}}],["menucontainer",{"_index":286,"title":{},"body":{"classes/MenuGroup.html":{}}}],["menugroup",{"_index":12,"title":{"classes/MenuGroup.html":{}},"body":{"classes/App.html":{},"classes/MenuGroup.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menugroup(target",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menuitem",{"_index":134,"title":{"classes/MenuItem.html":{}},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menuitem(config",{"_index":268,"title":{},"body":{"classes/Menu.html":{}}}],["menuitem(menuitem",{"_index":262,"title":{},"body":{"classes/Menu.html":{}}}],["menuitemconfig",{"_index":243,"title":{"interfaces/MenuItemConfig.html":{}},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menuitems",{"_index":219,"title":{},"body":{"classes/Menu.html":{}}}],["menuitemtype",{"_index":82,"title":{},"body":{"classes/App.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/enumerations.html":{}}}],["menuitemtype.group",{"_index":311,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["menuitemtype.item",{"_index":126,"title":{},"body":{"classes/App.html":{}}}],["menusvelte",{"_index":220,"title":{},"body":{"classes/Menu.html":{}}}],["merchantability",{"_index":968,"title":{},"body":{"license.html":{}}}],["merge",{"_index":362,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["metadata",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{}}}],["meuns",{"_index":277,"title":{},"body":{"classes/MenuGroup.html":{}}}],["meunswritable",{"_index":221,"title":{},"body":{"classes/Menu.html":{}}}],["minimum",{"_index":850,"title":{},"body":{"index.html":{}}}],["minsize",{"_index":558,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["miscellaneous",{"_index":805,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":845,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":414,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["modify",{"_index":944,"title":{},"body":{"license.html":{}}}],["modules",{"_index":865,"title":{"modules.html":{}},"body":{"index.html":{},"modules.html":{}}}],["monorepo",{"_index":860,"title":{},"body":{"index.html":{}}}],["more",{"_index":855,"title":{},"body":{"index.html":{}}}],["mousedown",{"_index":382,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["mouseevent",{"_index":351,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["n",{"_index":423,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":33,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["namewritable",{"_index":222,"title":{},"body":{"classes/Menu.html":{}}}],["navigation",{"_index":67,"title":{},"body":{"classes/App.html":{}}}],["navigationbar",{"_index":113,"title":{},"body":{"classes/App.html":{}}}],["new",{"_index":40,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newboard",{"_index":566,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addcolumn(newemptyview",{"_index":575,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addcolumn(newitemview",{"_index":574,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addrow(newemptyview",{"_index":580,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addrow(newitemview",{"_index":579,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.controller.checkexpandstate(clientx",{"_index":577,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.controller.setactivestate(0",{"_index":576,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newemptyview",{"_index":572,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newitem",{"_index":583,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newitemview",{"_index":570,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsize",{"_index":593,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes",{"_index":581,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(newsize",{"_index":595,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(size",{"_index":597,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(sum",{"_index":596,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(w",{"_index":599,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["next",{"_index":885,"title":{},"body":{"index.html":{}}}],["none",{"_index":684,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["noninfringement",{"_index":972,"title":{},"body":{"license.html":{}}}],["normalizeweight",{"_index":721,"title":{},"body":{"classes/classBuilder.html":{}}}],["normalizeweight(config",{"_index":727,"title":{},"body":{"classes/classBuilder.html":{}}}],["nothing",{"_index":854,"title":{},"body":{"index.html":{}}}],["notice",{"_index":956,"title":{},"body":{"license.html":{}}}],["notification",{"_index":739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nowrap",{"_index":518,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["npm",{"_index":901,"title":{},"body":{"index.html":{}}}],["null",{"_index":452,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":246,"title":{},"body":{"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["number):void",{"_index":535,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["number[]):void",{"_index":553,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["obtaining",{"_index":933,"title":{},"body":{"license.html":{}}}],["offsetx",{"_index":412,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["offsety",{"_index":413,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["ok",{"_index":676,"title":{},"body":{"classes/Test.html":{}}}],["onmodechanged",{"_index":163,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmodechanged(fn",{"_index":168,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmousedown",{"_index":330,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["onmousedown(event",{"_index":350,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["optional",{"_index":35,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{}}}],["orderedconfigs",{"_index":706,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["organization",{"_index":921,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":982,"title":{},"body":{"license.html":{}}}],["out",{"_index":897,"title":{},"body":{"index.html":{},"license.html":{}}}],["overflow",{"_index":519,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["overview",{"_index":986,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":783,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":866,"title":{},"body":{"index.html":{}}}],["packaging",{"_index":888,"title":{},"body":{"index.html":{}}}],["page",{"_index":881,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":970,"title":{},"body":{"license.html":{}}}],["permission",{"_index":927,"title":{},"body":{"license.html":{}}}],["permit",{"_index":949,"title":{},"body":{"license.html":{}}}],["person",{"_index":932,"title":{},"body":{"license.html":{}}}],["persons",{"_index":950,"title":{},"body":{"license.html":{}}}],["platform",{"_index":908,"title":{},"body":{"index.html":{}}}],["port",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":960,"title":{},"body":{"license.html":{}}}],["pos",{"_index":478,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["position",{"_index":474,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["possible",{"_index":905,"title":{},"body":{"index.html":{}}}],["practice",{"_index":828,"title":{},"body":{"index.html":{}}}],["preload",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preload.js",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepend",{"_index":449,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["prepend(...childs",{"_index":501,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["print",{"_index":672,"title":{},"body":{"classes/Test.html":{}}}],["print(target",{"_index":673,"title":{},"body":{"classes/Test.html":{}}}],["private",{"_index":9,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["process.env.node_env",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":862,"title":{},"body":{"index.html":{}}}],["project",{"_index":856,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["propertypanel",{"_index":74,"title":{},"body":{"classes/App.html":{}}}],["props",{"_index":116,"title":{},"body":{"classes/App.html":{}}}],["provided",{"_index":961,"title":{},"body":{"license.html":{}}}],["public",{"_index":162,"title":{},"body":{"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["publish",{"_index":837,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":971,"title":{},"body":{"license.html":{}}}],["qiansc",{"_index":926,"title":{},"body":{"license.html":{}}}],["quickly",{"_index":904,"title":{},"body":{"index.html":{}}}],["r",{"_index":590,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["readonly",{"_index":217,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["ready",{"_index":890,"title":{},"body":{"index.html":{}}}],["ref.ts",{"_index":184,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["ref.ts:15",{"_index":195,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:5",{"_index":192,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:6",{"_index":193,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:7",{"_index":190,"title":{},"body":{"classes/ColorRef.html":{}}}],["reflect",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["registeritem",{"_index":226,"title":{},"body":{"classes/Menu.html":{}}}],["registeritem(config",{"_index":245,"title":{},"body":{"classes/Menu.html":{}}}],["release",{"_index":916,"title":{},"body":{"index.html":{}}}],["removecolumn(item",{"_index":551,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["removeitem",{"_index":227,"title":{},"body":{"classes/Menu.html":{}}}],["removeitem(index",{"_index":249,"title":{},"body":{"classes/Menu.html":{}}}],["removemenuinstances",{"_index":279,"title":{},"body":{"classes/MenuGroup.html":{}}}],["removemenuinstances(menu",{"_index":283,"title":{},"body":{"classes/MenuGroup.html":{}}}],["removerow(item",{"_index":552,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["replacecontent",{"_index":608,"title":{},"body":{"classes/SplitItemView.html":{}}}],["replacecontent(contentview",{"_index":631,"title":{},"body":{"classes/SplitItemView.html":{}}}],["repository",{"_index":826,"title":{},"body":{"index.html":{}}}],["required",{"_index":849,"title":{},"body":{"index.html":{}}}],["resize",{"_index":417,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["resizeat",{"_index":442,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["resizeat(index",{"_index":480,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["resourcepage",{"_index":72,"title":{},"body":{"classes/App.html":{}}}],["restriction",{"_index":939,"title":{},"body":{"license.html":{}}}],["result",{"_index":155,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":157,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":181,"title":{},"body":{"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":44,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{}}}],["right",{"_index":526,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["rights",{"_index":942,"title":{},"body":{"license.html":{}}}],["roadmap",{"_index":838,"title":{},"body":{"index.html":{}}}],["rollup",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":36,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["rounded",{"_index":659,"title":{},"body":{"classes/SplitItemView.html":{}}}],["row",{"_index":409,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":887,"title":{},"body":{"index.html":{}}}],["s",{"_index":488,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["s'):void",{"_index":544,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["script",{"_index":878,"title":{},"body":{"index.html":{}}}],["secondarybgcolor",{"_index":763,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["secondarylabelcolor",{"_index":764,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":918,"title":{},"body":{"index.html":{}}}],["sell",{"_index":947,"title":{},"body":{"license.html":{}}}],["server",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":66,"title":{},"body":{"classes/App.html":{}}}],["service.ts",{"_index":159,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":165,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:11",{"_index":167,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:13",{"_index":174,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:19",{"_index":169,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:23",{"_index":172,"title":{},"body":{"classes/AppearanceService.html":{}}}],["set",{"_index":923,"title":{},"body":{"index.html":{}}}],["setactivestate",{"_index":331,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setactivestate(index",{"_index":354,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setcontent",{"_index":609,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setcontent(contentview",{"_index":633,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setcursor",{"_index":443,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["setcursor(type",{"_index":484,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["setdefaultclass",{"_index":610,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setflow",{"_index":450,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setflow(type",{"_index":504,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setgrow",{"_index":611,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setgrow(classname",{"_index":636,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setshrink",{"_index":612,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setshrink(classname",{"_index":640,"title":{},"body":{"classes/SplitItemView.html":{}}}],["settings",{"_index":213,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shadow",{"_index":308,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["shall",{"_index":957,"title":{},"body":{"license.html":{}}}],["shrink",{"_index":642,"title":{},"body":{"classes/SplitItemView.html":{}}}],["similar",{"_index":859,"title":{},"body":{"index.html":{}}}],["singleton",{"_index":88,"title":{},"body":{"classes/App.html":{}}}],["size",{"_index":592,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["sizes",{"_index":465,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["smelte",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["snapoffset",{"_index":560,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["software",{"_index":935,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["split",{"_index":358,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["split(array.prototype.slice.call(this.root.children",{"_index":556,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["split.instance",{"_index":456,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["split.js",{"_index":508,"title":{},"body":{"classes/SplitBoardView.html":{},"dependencies.html":{}}}],["splitboard",{"_index":140,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view0",{"_index":146,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view1",{"_index":147,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view2",{"_index":148,"title":{},"body":{"classes/App.html":{}}}],["splitboard.applysplit('horizontal",{"_index":149,"title":{},"body":{"classes/App.html":{}}}],["splitboardcontroller",{"_index":316,"title":{"classes/SplitBoardController.html":{}},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"coverage.html":{}}}],["splitboardcontroller(this",{"_index":515,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitboardview",{"_index":76,"title":{"classes/SplitBoardView.html":{}},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"coverage.html":{}}}],["splitboardview().setflow('1",{"_index":141,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["splitcolumnat",{"_index":444,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitcolumnat(index",{"_index":490,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitexpand",{"_index":624,"title":{},"body":{"classes/SplitItemView.html":{}}}],["splitinstance",{"_index":433,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splititemview",{"_index":79,"title":{"classes/SplitItemView.html":{}},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{}}}],["splititemview().setcontent(contentview",{"_index":571,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splititemview().setcontent(document.createelement('div",{"_index":143,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["splititemview):void",{"_index":523,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitrowat",{"_index":445,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitrowat(index",{"_index":492,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["src/.../appearance.ts",{"_index":807,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../class",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inject.ts",{"_index":813,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.ts",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu",{"_index":809,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../settings.ts",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../split",{"_index":808,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../ui",{"_index":814,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../view.ts",{"_index":990,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app",{"_index":876,"title":{},"body":{"index.html":{}}}],["src/app/index.ts",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/logger.ts",{"_index":740,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/settings.ts",{"_index":207,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core",{"_index":870,"title":{},"body":{"index.html":{}}}],["src/core/browser/class",{"_index":689,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/layout/split",{"_index":317,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/style/ui",{"_index":749,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/view.ts",{"_index":677,"title":{},"body":{"classes/View.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/browser/view.ts:13",{"_index":679,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:17",{"_index":680,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:4",{"_index":678,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:8",{"_index":681,"title":{},"body":{"classes/View.html":{}}}],["src/core/common/appearance.ts",{"_index":810,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/common/color",{"_index":183,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["src/core/components",{"_index":883,"title":{},"body":{"index.html":{}}}],["src/core/parts/ioc/inject.ts",{"_index":775,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/core/parts/test.ts",{"_index":671,"title":{},"body":{"classes/Test.html":{},"coverage.html":{}}}],["src/core/parts/test.ts:2",{"_index":674,"title":{},"body":{"classes/Test.html":{}}}],["src/workbench",{"_index":879,"title":{},"body":{"index.html":{}}}],["src/workbench/desktop/app.ts",{"_index":6,"title":{},"body":{"classes/App.html":{},"coverage.html":{}}}],["src/workbench/desktop/app.ts:110",{"_index":54,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:118",{"_index":52,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:126",{"_index":60,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:130",{"_index":55,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:14",{"_index":37,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:15",{"_index":42,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:16",{"_index":30,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:23",{"_index":43,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:29",{"_index":50,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:33",{"_index":56,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:43",{"_index":59,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:51",{"_index":47,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:56",{"_index":49,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:66",{"_index":48,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:95",{"_index":46,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/main.ts",{"_index":777,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/desktop/menu/index.ts",{"_index":778,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/desktop/menu/menu",{"_index":275,"title":{},"body":{"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/workbench/desktop/menu/menu.ts",{"_index":216,"title":{},"body":{"classes/Menu.html":{},"coverage.html":{}}}],["src/workbench/desktop/menu/menu.ts:10",{"_index":234,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:11",{"_index":235,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:12",{"_index":232,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:13",{"_index":237,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:14",{"_index":230,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:23",{"_index":244,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:31",{"_index":240,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:38",{"_index":248,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:43",{"_index":250,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:49",{"_index":239,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:7",{"_index":231,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:8",{"_index":233,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:9",{"_index":238,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/utils/utils.ts",{"_index":780,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/services/appearance",{"_index":158,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["standard",{"_index":844,"title":{},"body":{"index.html":{}}}],["start",{"_index":472,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["started",{"_index":822,"title":{"index.html":{},"license.html":{}},"body":{}}],["starttoexpand",{"_index":446,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["starttoexpand(index",{"_index":494,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["startx",{"_index":325,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["starty",{"_index":326,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["stateconfig",{"_index":694,"title":{"interfaces/stateConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["statements",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["statically",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statusbar",{"_index":70,"title":{},"body":{"classes/App.html":{}}}],["step",{"_index":886,"title":{},"body":{"index.html":{}}}],["sth",{"_index":112,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["store",{"_index":212,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{}}}],["storybook",{"_index":882,"title":{},"body":{"index.html":{}}}],["string",{"_index":229,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":857,"title":{},"body":{"index.html":{}}}],["subject",{"_index":952,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":945,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":959,"title":{},"body":{"license.html":{}}}],["such",{"_index":873,"title":{},"body":{"index.html":{}}}],["sum",{"_index":591,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["super",{"_index":512,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["support",{"_index":896,"title":{},"body":{"index.html":{}}}],["svelte/store",{"_index":253,"title":{},"body":{"classes/Menu.html":{}}}],["switch(appearancetype",{"_index":200,"title":{},"body":{"classes/ColorRef.html":{}}}],["symbol.for('flowtableroot",{"_index":510,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["systembluecolor",{"_index":765,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemgraycolor",{"_index":766,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemorangecolor",{"_index":767,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systempinkcolor",{"_index":768,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemredcolor",{"_index":769,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemyellowcolor",{"_index":770,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":781,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":114,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"miscellaneous/variables.html":{}}}],["target.classlist.contains('split",{"_index":377,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["target.parentelement",{"_index":376,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["template",{"_index":848,"title":{},"body":{"index.html":{}}}],["tertiarybgcolor",{"_index":771,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tertiarylabelcolor",{"_index":772,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":670,"title":{"classes/Test.html":{}},"body":{"classes/Test.html":{},"coverage.html":{}}}],["textfieldbackground",{"_index":773,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["this._growclassname",{"_index":655,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._shrinkclassname",{"_index":654,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._type",{"_index":178,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this._waitformergeitem",{"_index":545,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this._waitformergeitem.cancelwaitformerge",{"_index":550,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.activeexpand",{"_index":385,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.activeid",{"_index":386,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.addexpandbutton",{"_index":647,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.anycolor",{"_index":197,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.applysplit",{"_index":534,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.applysplit('vertical",{"_index":532,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.applysplit(this.direction",{"_index":585,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.callback",{"_index":315,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.cancelformerge",{"_index":547,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.cancelwaitformerge",{"_index":665,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.checkdirection(directiontype.col",{"_index":533,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.checkdirection(directiontype.row",{"_index":524,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.checkexpandstate(event.clientx",{"_index":367,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.children",{"_index":312,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.container",{"_index":86,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{}}}],["this.container.append(menucontainer",{"_index":290,"title":{},"body":{"classes/MenuGroup.html":{}}}],["this.container.bind(appearanceservice).to(appearanceservice",{"_index":95,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(colorset).to(colorset",{"_index":96,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(colorsetroot).todynamicvalue",{"_index":100,"title":{},"body":{"classes/App.html":{}}}],["this.container.firstchild",{"_index":264,"title":{},"body":{"classes/Menu.html":{}}}],["this.container.get(appearanceservice",{"_index":104,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(colorset",{"_index":102,"title":{},"body":{"classes/App.html":{}}}],["this.container.removechild(menu.container",{"_index":293,"title":{},"body":{"classes/MenuGroup.html":{}}}],["this.container.removechild(this.container.firstchild",{"_index":265,"title":{},"body":{"classes/Menu.html":{}}}],["this.contentview",{"_index":649,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.context",{"_index":117,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{}}}],["this.context.set('container",{"_index":89,"title":{},"body":{"classes/App.html":{}}}],["this.context.set('menus",{"_index":256,"title":{},"body":{"classes/Menu.html":{}}}],["this.context.set('name",{"_index":258,"title":{},"body":{"classes/Menu.html":{}}}],["this.controller",{"_index":514,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.createmenu",{"_index":263,"title":{},"body":{"classes/Menu.html":{}}}],["this.darkcolor",{"_index":199,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.destorysplit",{"_index":554,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.direction",{"_index":528,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.evt.emit('onmodechanged",{"_index":179,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.evt.on('onmodechanged",{"_index":180,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.expand",{"_index":663,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.expandhidden",{"_index":664,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.mergedirection",{"_index":667,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expandactive",{"_index":390,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandleavehandler",{"_index":368,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmouseuphandler",{"_index":370,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmovehandler",{"_index":364,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandtype",{"_index":392,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.getexpandresizes(index",{"_index":582,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.id",{"_index":254,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.init",{"_index":513,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.initflowtable",{"_index":93,"title":{},"body":{"classes/App.html":{}}}],["this.initmenus",{"_index":118,"title":{},"body":{"classes/App.html":{}}}],["this.initnavigationbar",{"_index":92,"title":{},"body":{"classes/App.html":{}}}],["this.initpreferences",{"_index":90,"title":{},"body":{"classes/App.html":{}}}],["this.initpropertypanel(view2.contentview",{"_index":154,"title":{},"body":{"classes/App.html":{}}}],["this.initresourcepanel(view0.contentview",{"_index":153,"title":{},"body":{"classes/App.html":{}}}],["this.initstatusbar",{"_index":94,"title":{},"body":{"classes/App.html":{}}}],["this.initstyle",{"_index":91,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(appearancetype.dark",{"_index":107,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(type",{"_index":106,"title":{},"body":{"classes/App.html":{}}}],["this.insertconfig(config",{"_index":709,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.insertitemat(item",{"_index":531,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.insertitemat(newitem",{"_index":584,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items.length",{"_index":537,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items.splice(pos",{"_index":538,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[index",{"_index":546,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[index].waitformerge(direction",{"_index":548,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[pos",{"_index":541,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.lightcolor",{"_index":198,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.liveresize(event.clientx",{"_index":365,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.menugroup",{"_index":121,"title":{},"body":{"classes/App.html":{}}}],["this.menugroup.getmenuinsatance",{"_index":123,"title":{},"body":{"classes/App.html":{}}}],["this.menuitems",{"_index":255,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.filter((_",{"_index":272,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.push(new",{"_index":261,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.splice(index",{"_index":266,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems[index",{"_index":270,"title":{},"body":{"classes/Menu.html":{}}}],["this.menusvelte",{"_index":273,"title":{},"body":{"classes/Menu.html":{}}}],["this.meuns",{"_index":285,"title":{},"body":{"classes/MenuGroup.html":{}}}],["this.meuns.filter(item",{"_index":294,"title":{},"body":{"classes/MenuGroup.html":{}}}],["this.meuns.length",{"_index":289,"title":{},"body":{"classes/MenuGroup.html":{}}}],["this.meuns.push(menu",{"_index":292,"title":{},"body":{"classes/MenuGroup.html":{}}}],["this.meunswritable",{"_index":257,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set([...this.menuitems",{"_index":269,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set(this.menuitems",{"_index":271,"title":{},"body":{"classes/Menu.html":{}}}],["this.name",{"_index":260,"title":{},"body":{"classes/Menu.html":{}}}],["this.namewritable",{"_index":259,"title":{},"body":{"classes/Menu.html":{}}}],["this.namewritable.set(this.name",{"_index":274,"title":{},"body":{"classes/Menu.html":{}}}],["this.normalizeweight(config",{"_index":715,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.onmousedown(event",{"_index":372,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.orderedconfigs",{"_index":711,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor].weight",{"_index":718,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.prepend(contentview",{"_index":651,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root",{"_index":115,"title":{},"body":{"classes/App.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["this.root.appendchild(child",{"_index":686,"title":{},"body":{"classes/View.html":{}}}],["this.root.appendchild(colorsetroot",{"_index":101,"title":{},"body":{"classes/App.html":{}}}],["this.root.appendchild(item.root",{"_index":540,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.root.appendchild(splitboard.root",{"_index":152,"title":{},"body":{"classes/App.html":{}}}],["this.root.classlist.add('flex",{"_index":530,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["this.root.classlist.add('relative",{"_index":661,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('split",{"_index":516,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["this.root.classlist.add('wait",{"_index":666,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(...this._bgcolorclassname",{"_index":662,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(`flex",{"_index":685,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.add(this._growclassname",{"_index":656,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(this._shrinkclassname",{"_index":658,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove('flex",{"_index":529,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/View.html":{}}}],["this.root.classlist.remove('wait",{"_index":669,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._growclassname",{"_index":657,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._shrinkclassname",{"_index":653,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.prepend(...childs",{"_index":687,"title":{},"body":{"classes/View.html":{}}}],["this.root.replacechild(contentview",{"_index":652,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.style.cursor",{"_index":543,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.root.style.margin",{"_index":521,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.setactivestate(index",{"_index":378,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.setdefaultclass",{"_index":648,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.splitinstance",{"_index":555,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.destroy",{"_index":565,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.getsizes().foreach((size",{"_index":594,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.setsizes(newsizes",{"_index":598,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.starttoexpand(index",{"_index":578,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.startx",{"_index":383,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.starty",{"_index":384,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.title",{"_index":313,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.type",{"_index":314,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.unactiveexpand",{"_index":369,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.cancelformerge",{"_index":397,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.direction",{"_index":400,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items.foreach((item",{"_index":374,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items[this.activeid",{"_index":399,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.resizeat(this.activeid",{"_index":404,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousedown",{"_index":371,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseleave",{"_index":388,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousemove",{"_index":387,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseup",{"_index":389,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseleave",{"_index":395,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mousemove",{"_index":394,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseup",{"_index":396,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor",{"_index":398,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('col",{"_index":416,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('crosshair",{"_index":393,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('n",{"_index":422,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('row",{"_index":418,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('w",{"_index":419,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitcolumnat(this.activeid",{"_index":425,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitrowat(this.activeid",{"_index":426,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.waitformergeatitem(this.activeid",{"_index":420,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["three",{"_index":864,"title":{},"body":{"index.html":{}}}],["title",{"_index":125,"title":{},"body":{"classes/App.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["title!:string",{"_index":310,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["together",{"_index":831,"title":{},"body":{"index.html":{}}}],["token",{"_index":816,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tort",{"_index":981,"title":{},"body":{"license.html":{}}}],["true",{"_index":391,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":34,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":988,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/color",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["ui/components/navigation/navigation",{"_index":68,"title":{},"body":{"classes/App.html":{}}}],["ui/components/property/proterty.svelte",{"_index":75,"title":{},"body":{"classes/App.html":{}}}],["ui/components/resource/resource.svelte",{"_index":73,"title":{},"body":{"classes/App.html":{}}}],["ui/components/status/status",{"_index":71,"title":{},"body":{"classes/App.html":{}}}],["unactiveexpand",{"_index":332,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["undefined",{"_index":536,"title":{},"body":{"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":843,"title":{},"body":{"index.html":{}}}],["update",{"_index":895,"title":{},"body":{"index.html":{}}}],["updatemode",{"_index":164,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updatemode(type",{"_index":173,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updater",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["url",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":943,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":852,"title":{},"body":{"index.html":{}}}],["user",{"_index":922,"title":{},"body":{"index.html":{}}}],["using",{"_index":899,"title":{},"body":{"index.html":{}}}],["utils",{"_index":307,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"index.html":{}}}],["uuid",{"_index":306,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":39,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/classBuilder.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":991,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":361,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["version",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":408,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["very",{"_index":858,"title":{},"body":{"index.html":{}}}],["view",{"_index":335,"title":{"classes/View.html":{}},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"coverage.html":{}}}],["view0",{"_index":142,"title":{},"body":{"classes/App.html":{}}}],["view1",{"_index":144,"title":{},"body":{"classes/App.html":{}}}],["view2",{"_index":145,"title":{},"body":{"classes/App.html":{}}}],["view:13",{"_index":499,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:17",{"_index":502,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:4",{"_index":459,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:8",{"_index":506,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["vite",{"_index":851,"title":{},"body":{"index.html":{}}}],["void",{"_index":45,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Menu.html":{},"classes/MenuGroup.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/classBuilder.html":{}}}],["w",{"_index":421,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["waitformerge",{"_index":613,"title":{},"body":{"classes/SplitItemView.html":{}}}],["waitformerge(direction",{"_index":643,"title":{},"body":{"classes/SplitItemView.html":{}}}],["waitformergeatitem",{"_index":447,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["waitformergeatitem(index",{"_index":496,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["warranties",{"_index":967,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":962,"title":{},"body":{"license.html":{}}}],["web",{"_index":880,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["webpreferences",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":695,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["weightmap",{"_index":688,"title":{"interfaces/WeightMap.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["whether",{"_index":979,"title":{},"body":{"license.html":{}}}],["while(this.orderedconfigs[cursor",{"_index":717,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["width",{"_index":564,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["wiki",{"_index":919,"title":{},"body":{"index.html":{}}}],["windows",{"_index":893,"title":{},"body":{"index.html":{}}}],["without",{"_index":938,"title":{},"body":{"license.html":{}}}],["work",{"_index":833,"title":{},"body":{"index.html":{}}}],["works",{"_index":847,"title":{},"body":{"index.html":{}}}],["writable",{"_index":236,"title":{},"body":{"classes/Menu.html":{}}}],["xl",{"_index":660,"title":{},"body":{"classes/SplitItemView.html":{}}}],["yes",{"_index":191,"title":{},"body":{"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/SplitBoardView.html":{},"classes/View.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/App.html":{"url":"classes/App.html","title":"class - App","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/app.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                context\n                            \n                            \n                                    Private\n                                menuGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bootstrap\n                            \n                            \n                                initFlowTable\n                            \n                            \n                                initFrame\n                            \n                            \n                                initMenus\n                            \n                            \n                                initNavigationBar\n                            \n                            \n                                initPreferences\n                            \n                            \n                                initPropertyPanel\n                            \n                            \n                                initResourcePanel\n                            \n                            \n                                initStatusBar\n                            \n                            \n                                initStyle\n                            \n                            \n                                initStyleMode\n                            \n                            \n                                initWorkArea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/app.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Container\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFlowTable\n                        \n                    \n                \n            \n            \n                \ninitFlowTable()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFrame\n                        \n                    \n                \n            \n            \n                \ninitFrame()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initMenus\n                        \n                    \n                \n            \n            \n                \ninitMenus()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNavigationBar\n                        \n                    \n                \n            \n            \n                \ninitNavigationBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPreferences\n                        \n                    \n                \n            \n            \n                \ninitPreferences()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPropertyPanel\n                        \n                    \n                \n            \n            \n                \ninitPropertyPanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initResourcePanel\n                        \n                    \n                \n            \n            \n                \ninitResourcePanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStatusBar\n                        \n                    \n                \n            \n            \n                \ninitStatusBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyle\n                        \n                    \n                \n            \n            \n                \ninitStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyleMode\n                        \n                    \n                \n            \n            \n                \ninitStyleMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initWorkArea\n                        \n                    \n                \n            \n            \n                \ninitWorkArea()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Container } from 'inversify';\nimport { AppearanceType } from '@cosmic/core/common/appearance';\nimport { AppearanceService } from '@cosmic/workbench/services/appearance-service';\nimport Navigation from '../ui/components/navigation/navigation-bar.svelte';\nimport StatusBar from '../ui/components/status/status-bar.svelte';\nimport ResourcePage from '../ui/components/resource/resource.svelte';\nimport PropertyPanel from '../ui/components/property/proterty.svelte';\nimport SplitBoardView from '@cosmic/core/browser/layout/split-board.view';\nimport SplitItemView from '@cosmic/core/browser/layout/split-item.view';\nimport getMenuGroup, {MenuItemType} from './menu';\nimport type { MenuGroup } from './menu';\n\nexport default class App {\n  private container: Container;\n  private context = new Map();\n  private menuGroup!: MenuGroup;\n  constructor(private root: HTMLElement) {\n    this.container = new Container({ defaultScope: 'Singleton' });\n    this.context.set('container', this.container);\n    this.initPreferences();\n    this.initStyle();\n  }\n  bootstrap(): void {\n    this.initNavigationBar();\n    this.initFlowTable();\n    this.initStatusBar();\n  }\n\n  initPreferences(): void {\n    this.container.bind(AppearanceService).to(AppearanceService);\n  }\n\n  initStyle(): void {\n    // this.container.bind(ColorSet).to(ColorSet);\n    // const colorSetRoot = document.createElement('style');\n    // this.container.bind(ColorSetRoot).toDynamicValue(() => colorSetRoot);\n    // this.root.appendChild(colorSetRoot);\n    // this.container.get(ColorSet);\n    const aps = this.container.get(AppearanceService);\n    aps.onModeChanged((type: AppearanceType) => this.initStyleMode(type));\n    this.initStyleMode(AppearanceType.dark);\n  }\n  initStyleMode(type: AppearanceType): void {\n    if (type === AppearanceType.dark) {\n      document.body.classList.add('mode-dark');\n    } else {\n      document.body.classList.remove('mode-dark');\n    }\n  }\n\n  initFrame(): void {\n    // to do sth.\n\n  }\n\n  initNavigationBar(): void {\n    // to do sth.\n    const navigationBar = new Navigation({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    this.initMenus();\n  }\n\n  initMenus(): void {\n    const header = document.querySelector('#main-header');\n    this.menuGroup = getMenuGroup(header as HTMLElement);\n    const menu = this.menuGroup.getMenuInsatance();\n    menu.init('测试', [{\n      title: '请打开文件',\n      type: MenuItemType.item,\n      callback: (_menuItem, _context) => {\n        menu.registerItem({\n          title: '文件',\n          type: MenuItemType.item, \n          /* eslint-disable no-console */ \n          callback: (menuItem, context) => console.log(menuItem),\n        }, 1);\n      },\n    }, {\n      title: '测试2',\n      type: MenuItemType.item,\n      callback: (menuItem, context) => {\n        menu.removeItem(0);\n      },\n    }, {\n      title: '测试3',\n      type: MenuItemType.item,\n      /* eslint-disable no-console */ \n      callback: (menuItem, context) => console.log(menuItem),\n    }]);\n  }\n\n  initFlowTable(): void {\n    const splitBoard = new SplitBoardView().setFlow('1');\n    const view0 = new SplitItemView().setContent(document.createElement('div'));\n    const view1 = new SplitItemView().setContent(document.createElement('div'));\n    const view2 = new SplitItemView().setContent(document.createElement('div'));\n    splitBoard.addColumn(view0);\n    splitBoard.addColumn(view1);\n    splitBoard.addColumn(view2);\n    splitBoard.applySplit('horizontal', [20, 60, 20]);\n\n    this.root.appendChild(splitBoard.root);\n    this.initResourcePanel(view0.contentView);\n    this.initPropertyPanel(view2.contentView);\n  }\n\n  initResourcePanel(container: HTMLElement): void {\n    new ResourcePage({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initPropertyPanel(container: HTMLElement): void {\n    new PropertyPanel({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initWorkArea(): void {\n    // to do sth.\n  }\n\n  initStatusBar(): void {\n    new StatusBar({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    // to do sth.\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppearanceService.html":{"url":"classes/AppearanceService.html","title":"class - AppearanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppearanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/appearance-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Private\n                                evt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onModeChanged\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                updateMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppearanceType\n\n                    \n                \n                \n                    \n                        Default value : AppearanceType.dark\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        evt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter2()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onModeChanged\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModeChanged(fn: (type: AppearanceType) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        type\n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject, ContainerModule } from 'inversify';\nimport { EventEmitter2 } from 'eventemitter2';\n\nimport { AppearanceType } from '@cosmic/core/common/appearance';\n\n\n@injectable()\n/** 外观设置服务 */\nexport class AppearanceService {\n  private _type: AppearanceType = AppearanceType.dark;\n  private evt = new EventEmitter2()\n\n  public updateMode(type: AppearanceType) {\n    if (this._type !== type) {\n      this._type = type;\n      this.evt.emit('onModeChanged', type);\n    }\n  }\n  public onModeChanged(fn: (type: AppearanceType) => void) {\n    this.evt.on('onModeChanged', fn);\n\n  }\n  public type() {\n    return this._type;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColorRef.html":{"url":"classes/ColorRef.html","title":"class - ColorRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColorRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/common/color-ref.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                anyColor\n                            \n                            \n                                    Private\n                                darkColor\n                            \n                            \n                                    Private\n                                lightColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                color\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(anyColor: Color, lightColor?: Color, darkColor?: Color)\n                    \n                \n                        \n                            \n                                Defined in src/core/common/color-ref.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        anyColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lightColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        darkColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        anyColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        darkColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lightColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        color\n                        \n                    \n                \n            \n            \n                \n                    \n                    color(appearanceType: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/common/color-ref.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appearanceType\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type * as Color from 'color';\nimport { AppearanceType } from './appearance';\n\nexport default class ColorRef {\n  private anyColor: Color;\n  private lightColor: Color;\n  private darkColor: Color;\n\n  constructor(anyColor: Color, lightColor?: Color, darkColor?: Color) {\n    this.anyColor =  anyColor;\n    this.lightColor = lightColor || anyColor;\n    this.darkColor = darkColor || anyColor;\n  }\n\n  public color(appearanceType: AppearanceType) {\n    switch(appearanceType) {\n      case AppearanceType.any:\n        return this.anyColor;\n      case AppearanceType.light:\n        return this.lightColor;\n      case AppearanceType.dark:\n        return this.darkColor;\n      default:\n        return this.anyColor;\n    }\n  }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISettings.html":{"url":"interfaces/ISettings.html","title":"interface - ISettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/settings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            check\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import ElectronStore from 'electron-store';\n\ninterface ISettings {\n  check: boolean;\n}\n\nconst settings = new ElectronStore({\n  defaults: {\n    check: false,\n  },\n});\n\nexport default settings;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Menu.html":{"url":"classes/Menu.html","title":"class - Menu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Menu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                container\n                            \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                menuItems\n                            \n                            \n                                    Private\n                                menuSvelte\n                            \n                            \n                                    Private\n                                    Readonly\n                                meunsWritable\n                            \n                            \n                                    Private\n                                name\n                            \n                            \n                                    Private\n                                    Readonly\n                                nameWritable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMenu\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                registerItem\n                            \n                            \n                                    Public\n                                removeItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: HTMLElement, id: string)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/menu/menu.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuSvelte\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        meunsWritable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : writable([])\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        nameWritable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : writable('')\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(name: string, config: MenuItemConfig[])\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                MenuItemConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerItem(config: MenuItemConfig, index: number, group?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                MenuItemConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItem(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MenuItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import MenuSvelte from './menu.svelte';\nimport type { MenuItemConfig } from './menu-item';\nimport { MenuItem } from './menu-item';\nimport { writable } from 'svelte/store';\n\nexport default class Menu {\n    public readonly container!: HTMLElement;\n    public readonly id!: string;\n    private name!: string;\n    private menuItems!: MenuItem[];\n    private menuSvelte: any;\n    private readonly context = new Map();\n    private readonly meunsWritable =  writable([]);\n    private readonly nameWritable =  writable('');\n    constructor(container: HTMLElement, id: string) {\n        this.container = container;\n        this.id = id;\n        this.menuItems = [];\n        this.context.set('menus', this.meunsWritable);\n        this.context.set('name', this.nameWritable);\n    }\n\n    public init(name: string, config: MenuItemConfig[]): void {\n        this.name = name;\n        for (const menuItem of config) {\n            this.menuItems.push(new MenuItem(menuItem));\n        }\n        return this.createMenu();\n    }\n\n    public destroy(): void {\n        while (this.container.firstChild) {\n            this.container.removeChild(this.container.firstChild);\n        }\n        return;\n    }\n\n    public registerItem(config: MenuItemConfig, index: number, group?: string): void {\n        this.menuItems.splice(index, 0, new MenuItem(config));\n        this.meunsWritable.set([...this.menuItems]);\n    }\n\n    public removeItem(index: number): MenuItem {\n        const menuItem = this.menuItems[index];\n        this.meunsWritable.set(this.menuItems = this.menuItems.filter((_, i) => index !== i));\n        return menuItem;\n    }\n\n    private createMenu(): void {\n        this.menuSvelte = new MenuSvelte({\n            target: this.container,\n            context: this.context,\n        });\n        this.nameWritable.set(this.name);\n        this.meunsWritable.set(this.menuItems);\n    }\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuGroup.html":{"url":"classes/MenuGroup.html","title":"class - MenuGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu-group.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                meuns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMenuInsatance\n                            \n                            \n                                    Public\n                                removeMenuInstances\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/menu/menu-group.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-group.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        meuns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-group.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getMenuInsatance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenuInsatance()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu-group.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Menu\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeMenuInstances\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeMenuInstances(menu: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu-group.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Menu from './menu';\n\nexport default class MenuGroup {\n    private container!: HTMLElement;\n    private meuns!: Menu[];\n    constructor(container: HTMLElement) {\n        this.container = container;\n        this.meuns = [];\n    }\n\n\n    public getMenuInsatance(): Menu {\n        const menuContainer = document.createElement('div');\n        const id = Date.now() + '' + this.meuns.length;\n        this.container.append(menuContainer);\n        const menu = new Menu(menuContainer, id);\n        this.meuns.push(menu);\n        return menu;\n    }\n\n    public removeMenuInstances(menu: Menu): void {\n        this.container.removeChild(menu.container);\n        this.meuns = this.meuns.filter(item => item.id === menu.id);\n        this.container.removeChild(menu.container);\n    }\n\n    \n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItem.html":{"url":"classes/MenuItem.html","title":"class - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu-item.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                callback\n                            \n                            \n                                    Private\n                                children\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                title\n                            \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MenuItemConfig)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/menu/menu-item.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MenuItemConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        callback\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuCommonFunction\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItemType\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {uuid} from '../utils';\n/* eslint-disable no-shadow */\nexport enum MenuItemType {\n    group,\n    item\n}\n\nexport type MenuCommonFunction = (menu: MenuItem, context: any) => void;\n\nexport interface MenuItemConfig {\n    title: string;\n    type: MenuItemType;\n    callback: MenuCommonFunction\n}\n\nexport class MenuItem {\n    public readonly id!: string;\n    private title!:string;\n    private type!: MenuItemType;\n    private callback: MenuCommonFunction;\n    private children!: MenuItem[];\n    constructor(config: MenuItemConfig) {\n        this.id = uuid();\n        const {title, type, callback} = config;\n        if (type === MenuItemType.group) {\n            this.children = [];\n        }\n        this.title = title;\n        this.type = type;\n        this.callback = callback;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemConfig.html":{"url":"interfaces/MenuItemConfig.html","title":"interface - MenuItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu-item.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         MenuCommonFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuCommonFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         MenuItemType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItemType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {uuid} from '../utils';\n/* eslint-disable no-shadow */\nexport enum MenuItemType {\n    group,\n    item\n}\n\nexport type MenuCommonFunction = (menu: MenuItem, context: any) => void;\n\nexport interface MenuItemConfig {\n    title: string;\n    type: MenuItemType;\n    callback: MenuCommonFunction\n}\n\nexport class MenuItem {\n    public readonly id!: string;\n    private title!:string;\n    private type!: MenuItemType;\n    private callback: MenuCommonFunction;\n    private children!: MenuItem[];\n    constructor(config: MenuItemConfig) {\n        this.id = uuid();\n        const {title, type, callback} = config;\n        if (type === MenuItemType.group) {\n            this.children = [];\n        }\n        this.title = title;\n        this.type = type;\n        this.callback = callback;\n    }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardController.html":{"url":"classes/SplitBoardController.html","title":"class - SplitBoardController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeId\n                            \n                            \n                                    Private\n                                expandActive\n                            \n                            \n                                    Private\n                                expandLeaveHandler\n                            \n                            \n                                    Private\n                                expandMouseUpHandler\n                            \n                            \n                                    Private\n                                expandMoveHandler\n                            \n                            \n                                    Private\n                                expandType\n                            \n                            \n                                    Private\n                                startX\n                            \n                            \n                                    Private\n                                startY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeExpand\n                            \n                            \n                                    Public\n                                checkExpandState\n                            \n                            \n                                    Private\n                                liveResize\n                            \n                            \n                                    Public\n                                onMouseDown\n                            \n                            \n                                    Public\n                                setActiveState\n                            \n                            \n                                    Private\n                                unactiveExpand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(view: SplitBoardView)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.controller.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        view\n                                                  \n                                                        \n                                                                        SplitBoardView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandLeaveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMouseUpHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMoveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        activeExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    activeExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkExpandState\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkExpandState(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        liveResize\n                        \n                    \n                \n            \n            \n                \n                    \n                    liveResize(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onMouseDown\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseDown(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setActiveState\n                        \n                    \n                \n            \n            \n                \n                    \n                    setActiveState(index: number, startX: number, startY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        unactiveExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    unactiveExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { directionType } from './split-board.view';\nimport type SplitBoardView from './split-board.view';\nimport type SplitItemView from './split-item.view';\n\nexport default class SplitBoardController {\n    private expandMoveHandler!: (event: MouseEvent) => void;\n    private expandLeaveHandler!: (event: MouseEvent) => void;\n    private expandMouseUpHandler!: (event: MouseEvent) => void;\n\n    private startX = 0;\n    private startY = 0;\n    private activeId = -1;\n\n    private expandActive = false;\n    private expandType = 0; // 是否超过偏移值 0 / 1 expand hor | 2 expand ver | 3 merge hor | 4 merge ver\n\n    constructor(private view: SplitBoardView) {\n        this.expandMoveHandler = (event: MouseEvent) => {\n            this.liveResize(event.clientX, event.clientY);\n            this.checkExpandState(event.clientX, event.clientY);\n        };\n        this.expandLeaveHandler = (event: MouseEvent) => { this.unactiveExpand(); };\n        this.expandMouseUpHandler = (event: MouseEvent) => { this.unactiveExpand(); };\n        this.view.root.addEventListener('mousedown', (event: MouseEvent) => {\n            this.onMouseDown(event);\n        });\n    }\n    public onMouseDown(event: MouseEvent): void {\n        const target = event.target as HTMLElement;\n        let index = -1;\n        this.view.items.forEach((item, i) => {\n            if (target && item.root == target.parentElement && target.classList.contains('split-expand')) index = i;\n        });\n        if (index === -1) {\n            return;\n        }\n        if (index > -1) {\n            this.setActiveState(index, event.clientX, event.clientY);\n        }\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    public setActiveState(index: number, startX: number, startY: number) {\n        // 锚点mousedown\n        this.startX = startX;\n        this.startY = startY;\n        this.activeExpand();\n        this.activeId = index;\n    }\n    private activeExpand() {\n        this.view.root.addEventListener('mousemove', this.expandMoveHandler);\n        this.view.root.addEventListener('mouseleave', this.expandLeaveHandler);\n        this.view.root.addEventListener('mouseup', this.expandMouseUpHandler);\n        this.expandActive = true;\n        this.expandType = 0;\n        this.view.setCursor('crosshair');\n    }\n    private unactiveExpand() {\n        if (this.expandActive) {\n            this.view.root.removeEventListener('mousemove', this.expandMoveHandler);\n            this.view.root.removeEventListener('mouseleave', this.expandLeaveHandler);\n            this.view.root.removeEventListener('mouseup', this.expandMouseUpHandler);\n            this.view.cancelForMerge();\n            this.expandActive = false;\n            this.expandType = 0;\n            this.view.setCursor('');\n        }\n    }\n    private liveResize(clientX: number, clientY: number) {\n        const item = this.view.items[this.activeId];\n        if (this.expandType == 1 && this.view.direction == directionType.col) {\n            // horizontal expand column\n            this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n        } else if (this.expandType == 2 && this.view.direction == directionType.row) {\n            // vertical expand row\n            this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n        }\n\n    }\n    public checkExpandState(clientX: number, clientY: number) {\n        const offsetX = this.startX - clientX;\n        const offsetY = this.startY - clientY;\n        /** expand mode */\n        if (this.expandType == 0 && offsetX > 0 && offsetY > 0 && (offsetX > 5 || offsetY > 5)) {\n            if (offsetX > offsetY) {\n                this.view.setCursor('col-resize');\n            } else {\n                this.view.setCursor('row-resize');\n            }\n        }\n        /** merge mode */\n        if (offsetX  5) {\n            this.view.setCursor('w-resize');\n            this.view.waitForMergeAtItem(this.activeId, 'w');\n            return;\n        }\n\n        if (offsetY  5) {\n            this.view.setCursor('n-resize');\n            this.view.waitForMergeAtItem(this.activeId, 'n');\n            return;\n        }\n\n        if (this.expandType) return;\n        /** do expand */\n        if (offsetX > 30) {\n            this.expandType = 1;\n            this.view.setCursor('col-resize');\n            this.view.splitColumnAt(this.activeId, clientX, clientY);\n            return;\n        }\n        if (offsetY > 30) {\n            this.expandType = 2;\n            this.view.setCursor('row-resize');\n            this.view.splitRowAt(this.activeId, clientX, clientY);\n        }\n        if (\n            (this.expandType == 1 && this.view.direction == directionType.row) ||\n            (this.expandType == 2 && this.view.direction == directionType.col)\n        ) {\n            this.unactiveExpand();\n        }\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardView.html":{"url":"classes/SplitBoardView.html","title":"class - SplitBoardView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _waitForMergeItem\n                            \n                            \n                                    Public\n                                controller\n                            \n                            \n                                    Public\n                                direction\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Private\n                                splitInstance\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addColumn\n                            \n                            \n                                    Public\n                                addRow\n                            \n                            \n                                    Public\n                                applySplit\n                            \n                            \n                                    Public\n                                cancelForMerge\n                            \n                            \n                                    Private\n                                checkDirection\n                            \n                            \n                                    Private\n                                destorySplit\n                            \n                            \n                                    Private\n                                getExpandResizes\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Public\n                                insertItemAt\n                            \n                            \n                                    Public\n                                resizeAt\n                            \n                            \n                                    Public\n                                setCursor\n                            \n                            \n                                    Public\n                                splitColumnAt\n                            \n                            \n                                    Public\n                                splitRowAt\n                            \n                            \n                                    Private\n                                startToExpand\n                            \n                            \n                                    Public\n                                waitForMergeAtItem\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.view.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _waitForMergeItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitItemView | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        controller\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SplitBoardController\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        direction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         directionType\n\n                    \n                \n                \n                    \n                        Default value : directionType.col\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitItemView[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        splitInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Split.Instance | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addColumn\n                        \n                    \n                \n            \n            \n                \n                    \n                    addColumn(item: SplitItemView)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addRow\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRow(item: SplitItemView)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applySplit\n                        \n                    \n                \n            \n            \n                \n                    \n                    applySplit(direction: \"vertical\" | \"horizontal\", sizes?: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"vertical\" | \"horizontal\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'horizontal'\n                                    \n\n                                \n                                \n                                    sizes\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkDirection\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkDirection(type: directionType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                directionType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        destorySplit\n                        \n                    \n                \n            \n            \n                \n                    \n                    destorySplit()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getExpandResizes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getExpandResizes(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        insertItemAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertItemAt(item: SplitItemView, pos?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pos\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resizeAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    resizeAt(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:159\n                \n            \n\n\n            \n                \n                    live resize after expanded\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCursor\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCursor(type: string | \"row-resize\" | \"col-resize\" | \"crosshair\" | \"e-resize\" | \"w-resize\" | \"s-resize\" | \"n-resize\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            string | \"row-resize\" | \"col-resize\" | \"crosshair\" | \"e-resize\" | \"w-resize\" | \"s-resize\" | \"n-resize\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        splitColumnAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    splitColumnAt(index: number, clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        splitRowAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    splitRowAt(index: number, clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        startToExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    startToExpand(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMergeAtItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMergeAtItem(index: number, direction: \"w\" | \"e\" | \"n\" | \"s\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"n\" | \"s\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view'; \nimport { injectable, inject } from 'inversify';\nimport SplitItemView from './split-item.view';\nimport SplitBoardController from './split-board.controller';\nimport Split from 'split.js';\n\nexport const lowBoardRoot = Symbol.for('FlowTableRoot');\n\nexport enum directionType {\n    'col',\n    'row'\n}\n\n@injectable()\n/** Split Board View */\nexport default class SplitBoardView extends View {\n    public items: SplitItemView[] = [];\n    public direction : directionType = directionType.col;\n    private splitInstance: Split.Instance | null = null;\n    public controller: SplitBoardController;\n    private _waitForMergeItem: SplitItemView | null = null;\n    constructor() {\n        super();\n        this.init();\n        this.controller = new SplitBoardController(this);\n    }\n    private init() {\n        this.root.classList.add('split-board', 'flex', 'flex-nowrap', 'overflow-hidden');\n        // this.root.style.margin = '0 4px';\n    }\n    public addRow(item: SplitItemView):void {\n        if (!this.checkDirection(directionType.row)) {\n            console.warn('direction is not right when added row', item);\n            return;\n        }\n        this.direction = directionType.row;\n        this.root.classList.remove('flex-row');\n        this.root.classList.add('flex-col');\n        this.insertItemAt(item);\n        this.applySplit('vertical');\n    }\n    public addColumn(item: SplitItemView): void {\n        if (!this.checkDirection(directionType.col)) {\n            console.warn('direction is not right when added col', item);\n            return;\n        }\n        this.direction = directionType.col;\n        this.root.classList.remove('flex-col');\n        this.root.classList.add('flex-row');\n        this.insertItemAt(item);\n        this.applySplit();\n\n    }\n    public insertItemAt(item: SplitItemView, pos?: number):void {\n        pos = pos === undefined ? this.items.length : pos;\n        this.items.splice(pos, 0, item);\n        if(pos == 0) {\n            this.root.appendChild(item.root);\n        } else {\n            this.items[pos-1].root.after(item.root);\n        }\n    }\n\n    public setCursor(type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize' = ''):void {\n        this.root.style.cursor = type;\n    }\n    public waitForMergeAtItem(index: number, direction: 'w' | 'e' | 'n' | 's'):void {\n        if (this._waitForMergeItem== this.items[index]) {\n            return;\n        }\n        this.cancelForMerge();\n        if (this.items[index]) {\n            this.items[index].waitForMerge(direction);\n            this._waitForMergeItem = this.items[index];\n        }\n    }\n    public cancelForMerge():void {\n        if (this._waitForMergeItem) {\n            this._waitForMergeItem.cancelWaitForMerge();\n            this._waitForMergeItem = null;\n        }\n    }\n    private checkDirection(type: directionType) {\n        if (this.items.length > 1 && this.direction !== type) {\n            return false;\n        }\n        return true;\n    }\n    // public removeColumn(item: SplitItemView) {\n    //     // do sth.\n    // }\n    // public removeRow(item: SplitItemView) {\n    //     // do sth.\n    // }\n    public applySplit(direction: 'vertical' | 'horizontal' = 'horizontal', sizes?: number[]):void {\n        this.destorySplit();\n        this.splitInstance = Split(Array.prototype.slice.call(this.root.children), {\n            sizes,\n            // sizes: [30, 70],\n            minSize: 15,\n            direction,\n            snapOffset: 0,\n            gutterStyle: () => direction == 'vertical' ? {height: '3px'} : {width: '3px'},\n        });\n    }\n\n    private destorySplit() {\n        this.splitInstance && this.splitInstance.destroy();\n        this.splitInstance = null;\n    }\n    // 切分列\n    public splitColumnAt(index: number, clientX: number, clientY: number):void {\n        const item = this.items[index];\n        if (!this.checkDirection(directionType.col)) { // 列切分行\n            const newBoard = new SplitBoardView().setFlow('1');\n            const contentView = item.contentView;\n            item.replaceContent(newBoard.root);\n            const newItemView = new SplitItemView().setContent(contentView);\n            const newEmptyView = new SplitItemView().setContent(document.createElement('div'));\n            item.hideExpandButton(); // 不再使用该item的拉伸按钮\n            newBoard.addColumn(newItemView);\n            // newBoard.addColumn(newEmptyView);\n            newBoard.controller.setActiveState(0, clientX, clientY);\n            newBoard.controller.checkExpandState(clientX, clientY);\n            return;\n        }\n        // 列扩展列\n        this.startToExpand(index, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n    }\n    // 切分行\n    public splitRowAt(index: number, clientX: number, clientY: number):void {\n        const item = this.items[index];\n        if (!this.checkDirection(directionType.row)) { // 行切分列\n            const newBoard = new SplitBoardView().setFlow('1');\n            const contentView = item.contentView;\n            item.replaceContent(newBoard.root);\n            const newItemView = new SplitItemView().setContent(contentView);\n            const newEmptyView = new SplitItemView().setContent(document.createElement('div'));\n            item.hideExpandButton(); // 不再使用该item的拉伸按钮\n            newBoard.addRow(newItemView);\n            // newBoard.addRow(newEmptyView);\n            newBoard.controller.setActiveState(0, clientX, clientY);\n            newBoard.controller.checkExpandState(clientX, clientY);\n            return;\n        }\n        // 行切分行\n        this.startToExpand(index, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n    }\n\n    private startToExpand(index: number, start: number, length: number, position: number) {\n        const newSizes = this.getExpandResizes(index, start, length, position);\n        const newItem = new SplitItemView().setContent(document.createElement('div'));\n        this.destorySplit();\n        this.insertItemAt(newItem, index + 1);\n        this.applySplit(this.direction == directionType.col ? 'horizontal' : 'vertical', newSizes);\n    }\n\n    /** live resize after expanded  */\n    public resizeAt(index: number, start: number, length: number, position: number):void {\n        if (!this.splitInstance) return;\n        // const item = this.items[index];\n        let max = length;\n        if (this.items[index +1]) {\n            max += this.items[index +1].root[\n                this.direction == directionType.col ? 'clientWidth': 'clientHeight'\n            ];\n        }\n        const r = (position - start) / max;\n        if (position - start  {\n            sum += size;\n            if (i == index || i == index +1) return;\n            other += size;\n        });\n        let newSize = 0;\n        const newSizes: number[] = [];\n        this.splitInstance.getSizes().forEach((size, i) => {\n            if (index == i) {\n                newSize = (sum - other) * r;\n                newSizes.push(newSize);\n            } else if (index + 1 == i) {\n                newSizes.push(sum - other - newSize);\n            }else if (index !== i) {\n                newSizes.push(size);\n            }\n        });\n        this.splitInstance.setSizes(newSizes);\n    }\n\n\n    private getExpandResizes(index: number, start: number, length: number, position: number) {\n        const r =  (position - start) / length;\n        if (r = 1) return;\n        const newSizes: number[] = [];\n        this.splitInstance && this.splitInstance.getSizes().forEach((size, i) => {\n            if (index !== i) {\n                newSizes.push(size);\n                return;\n            }\n            const w =  size * r;\n            newSizes.push(w, size-w);\n        });\n        return newSizes;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitItemView.html":{"url":"classes/SplitItemView.html","title":"class - SplitItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-item.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-item.view.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitExpand\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:70\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view';\nimport { directionType } from './split-board.view';\nimport SplitExpand from './split-expand.svelte';\n\nenum directionStyles {\n    'w' = 'merge-w',\n    'e' = 'merge-e',\n    's' = 'merge-s',\n    'n' = 'merge-n'\n}\n\nexport default class SplitItemView extends View {\n    private _growClassName = '';\n    private _shrinkClassName = '';\n    private _bgColorClassName: string[] = ['bg-cgray-100', 'dark:bg-cgray-800'];\n\n    public contentView!: HTMLElement;\n    private expand!: SplitExpand;\n\n    constructor() {\n        super();\n        this.addExpandButton();\n        this.setDefaultClass();\n\n    }\n\n    public setContent(contentView: HTMLElement): SplitItemView {\n        this.contentView = contentView;\n        this.root.classList.add('split-item', 'flex');\n        contentView.classList.add('flex', 'flex-1');\n        return this.prepend(contentView);\n    }\n\n    public replaceContent(contentView: HTMLElement): SplitItemView {\n        this.root.replaceChild(contentView, this.contentView);\n        this.contentView = contentView;\n        contentView.classList.add('flex', 'flex-1');\n        return this;\n    }\n\n    public setGrow(className = 'flex-grow'): void {\n        this.root.classList.remove(this._shrinkClassName);\n        this._shrinkClassName = '';\n        this._growClassName = className;\n        this.root.classList.add(this._growClassName);\n    }\n\n    public setShrink(className = 'flex-shrink'): void {\n        this.root.classList.remove(this._growClassName);\n        this._growClassName = '';\n        this._shrinkClassName = className;\n        this.root.classList.add(this._shrinkClassName);\n    }\n\n    public isShrink(): boolean {\n        return !!this._growClassName;\n    }\n\n    private setDefaultClass() {\n        this.root.classList.add('flex-grow', 'rounded-xl');\n        this.root.classList.add('relative');\n        this.root.classList.add(...this._bgColorClassName);\n\n    }\n\n    private addExpandButton() {\n        this.expand = new SplitExpand({ target: this.root });\n    }\n    /** To hide expand button */\n    public hideExpandButton(): void {\n        this.expand.expandHidden = true;\n    }\n\n    public waitForMerge(direction: 'w' | 'e' | 's' | 'n'): void {\n        this.cancelWaitForMerge();\n        this.root.classList.add('wait-for-merge');\n        this.expand.mergeDirection = directionStyles[direction];\n    }\n\n    public cancelWaitForMerge(): void {\n        this.root.classList.remove('wait-for-merge');\n        this.expand.mergeDirection = '';\n    }\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Test.html":{"url":"classes/Test.html","title":"class - Test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Test\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/test.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                print\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        print\n                        \n                    \n                \n            \n            \n                \n                    \n                    print(target: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/test.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Test {\n  public print(target: string) {\n    console.log(`test ok: ${target}`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/View.html":{"url":"classes/View.html","title":"class - View","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  View\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/view.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root?: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/view.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/view.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        type FlowValue = '1' | 'auto' | 'initial' | 'none';\n\nexport default class View {\n    public root: HTMLElement;\n    constructor(root?: HTMLElement) {\n        this.root = root || document.createElement('div');\n    }\n    setFlow(type: FlowValue) {\n        this.root.classList.remove('flex-1', 'flex-auto', 'flex-initial', 'flex-none');\n        this.root.classList.add(`flex-${type}`);\n        return this;\n    }\n    append(child: HTMLElement) {\n        this.root.appendChild(child);\n        return this;\n    }\n    prepend(...childs: HTMLElement[]) {\n        this.root.prepend(...childs);\n        return this;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeightMap.html":{"url":"interfaces/WeightMap.html","title":"interface - WeightMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WeightMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [index: string]:        number\n\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:11\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        interface classConfig {\n    id: string,\n    class: string[];\n}\n\ninterface stateConfig {\n    id: string,\n    classes:  classConfig[];\n    weight?: number\n}\ninterface WeightMap {\n    [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n    'undefined': 100,\n    'default': 200,\n    'focus': 300,\n    'hover': 400,\n    'active': 600,\n    'disabled': 800,\n};\nexport class classBuilder {\n    private orderedConfigs: stateConfig[] = [];\n    constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n        configs.forEach((config: stateConfig) => {\n            this.insertConfig(config);\n        });\n    }\n    public clear() {\n        this.orderedConfigs = [];\n    }\n    public addConfig(config: stateConfig) {\n        this.insertConfig(config);\n    }\n    private insertConfig(config: stateConfig) {\n        const c = this.normalizeWeight(config);\n        let cursor = 0;\n        while(this.orderedConfigs[cursor] !== undefined && this.orderedConfigs[cursor].weight \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/classBuilder.html":{"url":"classes/classBuilder.html","title":"class - classBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  classBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                orderedConfigs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addConfig\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Private\n                                insertConfig\n                            \n                            \n                                    Private\n                                normalizeWeight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configs: stateConfig[], weightMap: WeightMap)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                        stateConfig[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weightMap\n                                                  \n                                                        \n                                                                        WeightMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orderedConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         stateConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/class-builder.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    addConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        normalizeWeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    normalizeWeight(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         stateConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        interface classConfig {\n    id: string,\n    class: string[];\n}\n\ninterface stateConfig {\n    id: string,\n    classes:  classConfig[];\n    weight?: number\n}\ninterface WeightMap {\n    [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n    'undefined': 100,\n    'default': 200,\n    'focus': 300,\n    'hover': 400,\n    'active': 600,\n    'disabled': 800,\n};\nexport class classBuilder {\n    private orderedConfigs: stateConfig[] = [];\n    constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n        configs.forEach((config: stateConfig) => {\n            this.insertConfig(config);\n        });\n    }\n    public clear() {\n        this.orderedConfigs = [];\n    }\n    public addConfig(config: stateConfig) {\n        this.insertConfig(config);\n    }\n    private insertConfig(config: stateConfig) {\n        const c = this.normalizeWeight(config);\n        let cursor = 0;\n        while(this.orderedConfigs[cursor] !== undefined && this.orderedConfigs[cursor].weight \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/classConfig.html":{"url":"interfaces/classConfig.html","title":"interface - classConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  classConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n    id: string,\n    class: string[];\n}\n\ninterface stateConfig {\n    id: string,\n    classes:  classConfig[];\n    weight?: number\n}\ninterface WeightMap {\n    [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n    'undefined': 100,\n    'default': 200,\n    'focus': 300,\n    'hover': 400,\n    'active': 600,\n    'disabled': 800,\n};\nexport class classBuilder {\n    private orderedConfigs: stateConfig[] = [];\n    constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n        configs.forEach((config: stateConfig) => {\n            this.insertConfig(config);\n        });\n    }\n    public clear() {\n        this.orderedConfigs = [];\n    }\n    public addConfig(config: stateConfig) {\n        this.insertConfig(config);\n    }\n    private insertConfig(config: stateConfig) {\n        const c = this.normalizeWeight(config);\n        let cursor = 0;\n        while(this.orderedConfigs[cursor] !== undefined && this.orderedConfigs[cursor].weight \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            createWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            mainWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            notification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            interface\n            ISettings\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            variable\n            settings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            class\n            classBuilder\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            classConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            stateConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            WeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            variable\n            defaultWeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.controller.ts\n            \n            class\n            SplitBoardController\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            class\n            SplitBoardView\n            \n                3 %\n                (1/26)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            variable\n            lowBoardRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-item.view.ts\n            \n            class\n            SplitItemView\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            function\n            makeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BgColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BorderColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlAccentColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlBackgroundColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlDisabledColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlForbiddenColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlHighlightColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            FourthBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            GridBackgroundColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            LabelColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemBlueColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemGrayColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemOrangeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemPinkColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemRedColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemYellowColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TextFieldBackground\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/view.ts\n            \n            class\n            View\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/color-ref.ts\n            \n            class\n            ColorRef\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/parts/ioc/inject.ts\n            \n            function\n            inject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/test.ts\n            \n            class\n            Test\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/workbench/desktop/app.ts\n            \n            class\n            App\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/workbench/desktop/main.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/index.ts\n            \n            variable\n            getMenuGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/index.ts\n            \n            variable\n            menuGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu-group.ts\n            \n            class\n            MenuGroup\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu-item.ts\n            \n            class\n            MenuItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu-item.ts\n            \n            interface\n            MenuItemConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu.ts\n            \n            class\n            Menu\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/workbench/desktop/utils/utils.ts\n            \n            variable\n            uuid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/services/appearance-service.ts\n            \n            class\n            AppearanceService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @types/color : ^3.0.1\n        \n            color : ^3.1.3\n        \n            electron-log : ^4.3.1\n        \n            electron-store : ^7.0.2\n        \n            electron-updater : ^4.3.5\n        \n            eventemitter2 : ^6.4.4\n        \n            eventemitter3 : ^4.0.7\n        \n            inversify : ^5.1.1\n        \n            keycode : ^2.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            smelte : ^1.1.5\n        \n            split.js : ^1.6.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppearanceType   (src/.../appearance.ts)\n                        \n                        \n                            directionStyles   (src/.../split-item.view.ts)\n                        \n                        \n                            directionType   (src/.../split-board.view.ts)\n                        \n                        \n                            MenuItemType   (src/.../menu-item.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/common/appearance.ts\n    \n        \n            \n                \n                    \n                        \n                        AppearanceType\n                    \n                \n                    \n                        \n                            模式类型\n\n                        \n                    \n                        \n                            \n                                 any\n                            \n                        \n                        \n                            \n                                 light\n                            \n                        \n                        \n                            \n                                 dark\n                            \n                        \n            \n        \n\n    src/core/browser/layout/split-item.view.ts\n    \n        \n            \n                \n                    \n                        \n                        directionStyles\n                    \n                \n                        \n                            \n                                 w\n                            \n                        \n                        \n                            \n                                Value : merge-w\n                            \n                        \n                        \n                            \n                                 e\n                            \n                        \n                        \n                            \n                                Value : merge-e\n                            \n                        \n                        \n                            \n                                 s\n                            \n                        \n                        \n                            \n                                Value : merge-s\n                            \n                        \n                        \n                            \n                                 n\n                            \n                        \n                        \n                            \n                                Value : merge-n\n                            \n                        \n            \n        \n\n    src/core/browser/layout/split-board.view.ts\n    \n        \n            \n                \n                    \n                        \n                        directionType\n                    \n                \n                        \n                            \n                                 col\n                            \n                        \n                        \n                            \n                                 row\n                            \n                        \n            \n        \n\n    src/workbench/desktop/menu/menu-item.ts\n    \n        \n            \n                \n                    \n                        \n                        MenuItemType\n                    \n                \n                        \n                            \n                                 group\n                            \n                        \n                        \n                            \n                                 item\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            inject   (src/.../inject.ts)\n                        \n                        \n                            makeColor   (src/.../ui-color.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/parts/ioc/inject.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inject\n                        \n                    \n                \n            \n            \n                \ninject(token)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        makeColor\n                        \n                    \n                \n            \n            \n                \nmakeColor(anyColorHex, lightColorHex?, darkColorHex?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anyColorHex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    darkColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCosmic Design\n\n\n\n\n\n🚧 ing...\n\nThe Repository\nCosmic design is a concrete practice of D2R.\nThis repository is where we develop it together with the community. Not only do we work on code and issues here, we also publish our roadmap , development guide. This source code is available to everyone under the standard MIT license.\nAbout Cosmic Design\n\n🚧 ing...\n\nHow it works\nThe template required a minimum dependencies. Only Vite is used for building, nothing more.\nProject Structure\nThe structure of this template is very similar to the structure of a monorepo.\nThe entire source code of the program is divided into three modules (packages) that are bundled each independently:\n\nsrc/core\nInclude common dependencies, such as components, utils, ipc.\nsrc/app\nElectron main script.\nsrc/workbench\nElectron web page.\n\nCosmic Components\n\nComponents StoryBook\nsrc/core/components\n\nCompile App\nNext step is run  packaging and compilation a ready for distribution Electron app for macOS, Windows and Linux with \"auto update\" support out of the box. \nTo do this, using the electron-builder:\n\nIn npm script compile: This script is configured to compile the application as quickly as possible. It is not ready for distribution, is compiled only for the current platform and is used for debugging.\nIn GitHub Action: The application is compiled for any platform and ready-to-distribute files are automatically added to the draft GitHub release. \n\nContribution\nSee Wiki Contributing\n\nSource Code Organization\nUser Interface\nColor Set\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 qiansc\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/stateConfig.html":{"url":"interfaces/stateConfig.html","title":"interface - stateConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  stateConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:         classConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         classConfig[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n    id: string,\n    class: string[];\n}\n\ninterface stateConfig {\n    id: string,\n    classes:  classConfig[];\n    weight?: number\n}\ninterface WeightMap {\n    [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n    'undefined': 100,\n    'default': 200,\n    'focus': 300,\n    'hover': 400,\n    'active': 600,\n    'disabled': 800,\n};\nexport class classBuilder {\n    private orderedConfigs: stateConfig[] = [];\n    constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n        configs.forEach((config: stateConfig) => {\n            this.insertConfig(config);\n        });\n    }\n    public clear() {\n        this.orderedConfigs = [];\n    }\n    public addConfig(config: stateConfig) {\n        this.insertConfig(config);\n    }\n    private insertConfig(config: stateConfig) {\n        const c = this.normalizeWeight(config);\n        let cursor = 0;\n        while(this.orderedConfigs[cursor] !== undefined && this.orderedConfigs[cursor].weight \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FlowValue   (src/.../view.ts)\n                        \n                        \n                            MenuCommonFunction   (src/.../menu-item.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/browser/view.ts\n    \n    \n        \n            \n                \n                    \n                    FlowValue\n                \n            \n            \n                \n                        \"1\" | \"auto\" | \"initial\" | \"none\"\n\n                \n            \n        \n    \n    src/workbench/desktop/menu/menu-item.ts\n    \n    \n        \n            \n                \n                    \n                    MenuCommonFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (src/.../main.ts)\n                        \n                        \n                            BgColor   (src/.../ui-color.ts)\n                        \n                        \n                            BorderColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlAccentColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlDisabledColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlForbiddenColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlHighlightColor   (src/.../ui-color.ts)\n                        \n                        \n                            createWindow   (src/.../index.ts)\n                        \n                        \n                            defaultWeightMap   (src/.../class-builder.ts)\n                        \n                        \n                            FourthBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            getMenuGroup   (src/.../index.ts)\n                        \n                        \n                            GridBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            isProd   (src/.../index.ts)\n                        \n                        \n                            isProd   (src/.../logger.ts)\n                        \n                        \n                            LabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            logger   (src/.../logger.ts)\n                        \n                        \n                            lowBoardRoot   (src/.../split-board.view.ts)\n                        \n                        \n                            mainWindow   (src/.../index.ts)\n                        \n                        \n                            menuGroup   (src/.../index.ts)\n                        \n                        \n                            notification   (src/.../index.ts)\n                        \n                        \n                            SecondaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            SecondaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            settings   (src/.../settings.ts)\n                        \n                        \n                            SystemBlueColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemGrayColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemOrangeColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemPinkColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemRedColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemYellowColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            TextFieldBackground   (src/.../ui-color.ts)\n                        \n                        \n                            uuid   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new App(document.body)\n                    \n                \n\n\n        \n    \n\n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#E0E0E0', '#E0E0E0', '#1F1F1F')\n                    \n                \n\n            \n                \n                    三级背景色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BorderColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D9D9D9', '#D9D9D9', '#D9D9D9')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlAccentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#5580c0', '#5580c0', '#5580c0')\n                    \n                \n\n            \n                \n                    高亮色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#FFFFFF', '#5D5F61')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlDisabledColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F9F9F9', '#F9F9F9', '#464749')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlForbiddenColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlHighlightColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#ffae2b', '#ffae2b', '#ffae2b')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FourthBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#BABABA', '#BABABA', '#454545')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GridBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F2F2F2', '#F2F2F2', '#2E2F30')\n                    \n                \n\n            \n                \n                    组件色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#E0E0E0')\n                    \n                \n\n            \n                \n                    三级标签色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D7D7D7', '#D7D7D7', '#272728')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#808080')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemBlueColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#729cd4', '#729cd4', '#729cd4')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemGrayColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c0c0c1', '#c0c0c1', '#c0c0c1')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemOrangeColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemPinkColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c4666f', '#c4666f', '#c4666f')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemRedColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemYellowColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n            \n                \n                    辅助色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#C6C6C6', '#C6C6C6', '#393939')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#3F3F3F', '#3F3F3F', '#3F3F3F')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TextFieldBackground\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#F2F2F2', '#454545')\n                    \n                \n\n\n        \n    \n\n    src/app/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createWindow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  mainWindow = new BrowserWindow({\n    width: 900,\n    height: 680,\n    webPreferences: {\n      devTools: isProd ? false : true,\n      contextIsolation: true,\n      enableRemoteModule: false,\n      preload:  join(__dirname, 'preload.js'),\n    },\n  });\n\n  const url =\n    // process.env.NODE_ENV === \"production\"\n    isProd\n      ? // in production, use the statically build version of our application\n      `file://${join(__dirname, 'dist/workbench/desktop/', 'index.html')}`\n      : // in dev, target the host and port of the local rollup web server\n      'http://localhost:5000';\n\n  mainWindow.loadURL(url).catch((err: any) => {\n    logger.error(JSON.stringify(err));\n    app.quit();\n  });\n\n  if (!isProd) mainWindow.webContents.openDevTools();\n\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BrowserWindow | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Notification | null\n\n                    \n                \n\n\n        \n    \n\n    src/core/browser/class-builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultWeightMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WeightMap\n\n                    \n                \n                \n                    \n                        Default value : {\n    'undefined': 100,\n    'default': 200,\n    'focus': 300,\n    'hover': 400,\n    'active': 600,\n    'disabled': 800,\n}\n                    \n                \n\n\n        \n    \n\n    src/workbench/desktop/menu/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getMenuGroup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (target: HTMLElement): MenuGroup => {\n    if (menuGroup) {\n        return menuGroup;\n    }\n\n    return menuGroup = new MenuGroup(target);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n\n\n        \n    \n\n    src/app/utils/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log\n                    \n                \n\n\n        \n    \n\n    src/core/browser/layout/split-board.view.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lowBoardRoot\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('FlowTableRoot')\n                    \n                \n\n\n        \n    \n\n    src/app/utils/settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ElectronStore({\n  defaults: {\n    check: false,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/workbench/desktop/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): string => {\n    const s: string[] | number[] = [];\n    const hexDigits = '0123456789abcdef';\n    for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
