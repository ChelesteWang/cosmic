var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/App.html",[0,0.015,1,1.867]],["body/classes/App.html",[0,0.01,1,1.9,2,0.404,3,0.267,4,0.237,5,0.237,6,1.802,7,0.127,8,0.454,9,1.027,10,4.129,11,2.494,12,0.948,13,4.423,14,4.423,15,4.423,16,4.423,17,4.423,18,4.423,19,4.423,20,3.277,21,3.277,22,4.423,23,4.423,24,3.277,25,4.423,26,0.736,27,1.802,28,1.909,29,1.466,30,3.277,31,1.081,32,0.033,33,1.081,34,0.501,35,0.828,36,2.113,37,2.159,38,0.872,39,0.87,40,2.107,41,2.113,42,2.159,43,1.687,44,1.069,45,2.159,46,2.159,47,2.159,48,2.159,49,2.159,50,2.159,51,3.277,52,2.159,53,3.277,54,2.159,55,2.159,56,2.159,57,3.277,58,3.065,59,2.159,60,2.159,61,1.391,62,1.251,63,1.802,64,1.392,65,2.159,66,2.736,67,1.251,68,1.802,69,0.947,70,2.379,71,2.159,72,2.159,73,3.277,74,2.159,75,3.277,76,3.277,77,2.159,78,3.277,79,2.159,80,3.277,81,2.159,82,1.392,83,1.135,84,2.159,85,1.251,86,2.159,87,0.267,88,1.567,89,2.379,90,2.159,91,2.159,92,2.159,93,2.159,94,2.159,95,2.159,96,2.159,97,2.159,98,2.159,99,2.159,100,2.159,101,2.159,102,2.159,103,1.618,104,3.277,105,2.159,106,2.159,107,2.159,108,2.159,109,2.159,110,2.159,111,2.159,112,2.159,113,2.159,114,1.567,115,2.159,116,2.736,117,2.159,118,3.692,119,2.159,120,1.782,121,2.379,122,2.851,123,3.692,124,2.159,125,3.277,126,2.159,127,2.159,128,2.159,129,2.159,130,0.947,131,2.159,132,2.159,133,2.159,134,1.802,135,2.159,136,3.307,137,2.159,138,2.159,139,2.159,140,2.159,141,2.159,142,2.159,143,3.277,144,2.159,145,2.159,146,2.159,147,2.159,148,0.011,149,0.016,150,0.011]],["title/classes/AppearanceService.html",[0,0.015,64,2.076]],["body/classes/AppearanceService.html",[0,0.017,2,0.649,3,0.429,4,0.38,5,0.38,7,0.204,8,0.636,9,1.202,12,1.327,29,1.394,31,1.122,32,0.033,33,1.122,34,0.61,35,0.859,38,1.221,39,1.849,40,1.7,43,1.489,44,0.933,58,3.912,61,1.258,62,2.008,63,2.892,64,2.959,87,0.429,114,3.332,148,0.017,149,0.023,150,0.017,151,4.891,152,2.515,153,5.148,154,5.148,155,1.261,156,4.59,157,4.59,158,3.464,159,4.575,160,3.464,161,4.59,162,3.464,163,4.59,164,1.821,165,3.464,166,4.59,167,2.892,168,3.332,169,2.233,170,3.464,171,5.148,172,3.464,173,3.464,174,1.283]],["title/classes/BaseMenu.html",[0,0.015,175,2.338]],["body/classes/BaseMenu.html",[0,0.019,2,0.741,3,0.491,4,0.435,5,0.435,7,0.234,8,0.694,9,1.126,12,1.447,26,1.35,29,1.342,31,1.224,32,0.032,33,1.224,34,0.573,35,0.937,43,1.145,44,0.852,61,1.224,66,3.305,67,3.342,68,3.305,69,1.738,87,0.491,88,2.874,130,2.53,148,0.02,149,0.025,150,0.02,155,1.126,175,3.633,176,3.717,177,4.813,178,3.305,179,5.488,180,5.005,181,3.96,182,5.005,183,5.005,184,5.005,185,3.031,186,3.96,187,4.178,188,3.96,189,3.96,190,3.96]],["title/classes/ColorRef.html",[0,0.015,191,2.338]],["body/classes/ColorRef.html",[0,0.017,2,0.653,3,0.432,4,0.383,5,0.383,7,0.206,8,0.639,9,1.262,12,1.333,26,1.189,29,1.397,31,1.127,32,0.032,33,1.127,34,0.566,35,0.863,38,1.226,43,1.008,58,3.784,61,1.127,87,0.432,114,2.53,148,0.017,149,0.023,150,0.017,155,1.06,174,2.035,191,3.346,192,4.9,193,2.91,194,5.987,195,5.987,196,5.987,197,4.701,198,4.609,199,4.609,200,2.672,201,3.486,202,3.486,203,4.609,204,3.486,205,3.486,206,5.164,207,4.609,208,4.609,209,3.486,210,5.164,211,3.486,212,3.486]],["title/interfaces/Controller.html",[213,0.496,214,1.693]],["body/interfaces/Controller.html",[3,0.47,4,0.417,5,0.417,7,0.224,8,0.675,11,1.82,28,1.295,32,0.033,34,0.596,41,2.447,44,0.999,87,0.47,120,1.529,122,3.469,148,0.019,149,0.024,150,0.019,164,3.383,213,0.751,214,2.828,215,1.529,216,2.447,217,3.291,218,2.984,219,1.936,220,3.66,221,3.66,222,3.66,223,3.66,224,3.169,225,2.756,226,2.447,227,3.141,228,3.169,229,3.169,230,3.119,231,3.169,232,3.169]],["title/interfaces/IComponentOptions.html",[213,0.496,226,2.076]],["body/interfaces/IComponentOptions.html",[3,0.458,4,0.406,5,0.406,7,0.218,8,0.664,11,2.694,28,1.26,32,0.033,34,0.593,35,1.19,41,3.424,44,0.991,87,0.458,120,2.264,122,3.967,148,0.018,149,0.024,150,0.018,213,0.738,214,2.517,215,1.489,216,2.382,217,2.142,218,1.942,219,1.26,220,2.382,221,2.382,222,2.382,223,2.382,224,3.085,225,2.682,226,3.087,227,3.845,228,4.691,229,4.691,230,3.605,231,4.691,232,4.691]],["title/interfaces/ISettings.html",[213,0.496,233,2.338]],["body/interfaces/ISettings.html",[3,0.566,4,0.502,5,0.502,7,0.27,8,0.758,32,0.032,34,0.44,38,1.216,40,1.693,61,1.117,87,0.566,103,1.321,148,0.023,149,0.027,150,0.023,213,0.704,215,1.841,230,3.39,233,3.968,234,3.317,235,5.171,236,4.563,237,3.317,238,3.814,239,3.968,240,3.814,241,2.945]],["title/interfaces/ISplitBoardView.html",[213,0.496,242,1.867]],["body/interfaces/ISplitBoardView.html",[3,0.42,4,0.372,5,0.372,7,0.334,8,0.627,32,0.033,34,0.6,44,0.991,61,1.105,83,2.855,87,0.56,148,0.017,149,0.022,150,0.017,164,3.297,213,0.522,215,1.364,219,1.852,242,2.621,243,2.458,244,2.914,245,4.534,246,4.108,247,3.943,248,4.534,249,4.534,250,4.534,251,4.534,252,4.534,253,3.501,254,2.458,255,2.827,256,2.183,257,3.282,258,2.914,259,4.226,260,2.827,261,2.914,262,2.621,263,2.621,264,2.621,265,2.51,266,2.827,267,2.827,268,2.827,269,3.282,270,3.282]],["title/classes/Menu.html",[0,0.015,130,1.413]],["body/classes/Menu.html",[0,0.012,2,0.458,3,0.303,4,0.269,5,0.269,7,0.309,8,0.499,9,1.286,10,3.639,11,2.255,12,1.04,26,0.834,28,1.71,29,1.475,31,1.15,32,0.033,33,1.388,34,0.556,35,0.881,38,1.252,39,1.719,40,1.743,41,2.318,43,1.45,44,0.947,61,1.15,69,1.872,85,2.906,87,0.303,89,2.611,103,1.04,120,0.985,123,2.041,130,2.065,148,0.012,149,0.018,150,0.012,155,1.27,174,1.581,185,2.849,187,3.561,200,1.417,217,2.727,218,1.89,265,2.112,271,2.041,272,4.412,273,2.379,274,5.014,275,4.267,276,4.267,277,4.705,278,3.597,279,3.597,280,3.597,281,2.216,282,3.597,283,2.445,284,2.445,285,2.445,286,3.224,287,2.445,288,2.445,289,5.014,290,2.445,291,2.445,292,2.445,293,2.445,294,3.597,295,2.445,296,3.597,297,2.445,298,3.597,299,2.445,300,2.445,301,1.578,302,2.445,303,1.775,304,2.445,305,2.445,306,2.445,307,2.445,308,2.445,309,2.445,310,2.445,311,2.445,312,2.445,313,2.445,314,2.445,315,2.445,316,0.985,317,2.445,318,2.445,319,2.445,320,2.445,321,2.445,322,2.445,323,2.445,324,2.445]],["title/classes/MenuGroupService.html",[0,0.015,67,1.867]],["body/classes/MenuGroupService.html",[0,0.016,2,0.623,3,0.412,4,0.365,5,0.365,7,0.196,8,0.619,9,1.189,10,4.083,12,1.292,26,1.72,28,1.918,29,1.416,31,1.092,32,0.033,33,1.092,34,0.52,35,0.836,40,1.232,43,1.458,44,0.918,61,1.092,62,1.928,67,2.589,69,2.597,87,0.412,89,3.242,103,1.458,130,2.725,148,0.016,149,0.022,150,0.016,152,2.414,155,1.25,167,2.776,168,3.242,174,1.655,273,1.96,325,4.939,326,5.044,327,5.392,328,4.467,329,4.467,330,4.467,331,3.326,332,3.326,333,4.467,334,4.467,335,3.326,336,3.326,337,4.467,338,3.326,339,2.414,340,3.326,341,3.326,342,3.326,343,3.326,344,3.326,345,4.467,346,3.326,347,3.326,348,3.326]],["title/classes/MenuItem.html",[0,0.015,286,1.867]],["body/classes/MenuItem.html",[0,0.016,2,0.634,3,0.42,4,0.372,5,0.372,7,0.2,8,0.627,9,1.287,11,1.623,26,1.155,29,1.423,31,0.828,32,0.033,33,0.828,34,0.611,35,0.634,44,0.576,61,0.828,69,1.486,85,2.621,87,0.673,103,0.979,130,1.486,148,0.017,149,0.022,150,0.017,155,1.045,185,2.855,213,0.522,256,2.183,272,3.695,273,2.234,281,2.157,286,3.281,301,1.486,303,2.458,349,3.446,350,1.963,351,4.226,352,4.249,353,4.226,354,3.774,355,4.521,356,3.943,357,3.387,358,3.387,359,3.387,360,3.943,361,3.387,362,2.914,363,2.458,364,2.458,365,2.827,366,2.827,367,2.827,368,2.458,369,2.827,370,2.827,371,2.827,372,2.827]],["title/interfaces/MenuItemConfig.html",[185,1.693,213,0.496]],["body/interfaces/MenuItemConfig.html",[0,0.017,3,0.452,4,0.401,5,0.401,7,0.215,8,0.658,9,1.147,11,1.748,32,0.033,34,0.614,35,0.889,44,0.621,61,0.892,69,1.6,85,2.114,87,0.693,103,1.054,130,1.6,148,0.018,149,0.023,150,0.018,155,0.748,185,2.775,213,0.562,215,1.469,256,2.351,272,2.647,273,1.6,281,2.274,286,3.06,301,1.6,303,2.647,349,2.114,350,2.114,351,4.393,352,3.044,353,4.393,354,3.044,356,4.208,360,4.208,362,3.06,363,2.647,364,2.647,365,3.044,366,3.044,367,4.667,368,2.647,369,3.044,370,3.044,371,3.044,372,3.044]],["title/classes/ResourceExplorer.html",[0,0.015,373,2.338]],["body/classes/ResourceExplorer.html",[0,0.016,2,0.618,3,0.409,4,0.362,5,0.362,7,0.195,8,0.616,9,1.103,12,1.285,28,1.125,29,1.503,31,0.807,32,0.033,33,0.807,34,0.484,35,0.618,40,1.222,43,1.736,44,1.035,61,1.086,87,0.409,120,1.79,148,0.016,149,0.022,150,0.016,155,1.186,174,1.222,217,2.912,218,2.64,219,1.713,220,3.464,221,3.464,222,3.464,223,3.464,227,3.238,244,2.864,373,3.225,374,2.754,375,2.754,376,4.053,377,3.709,378,3.709,379,3.709,380,4.463,381,3.299,382,2.754,383,4.443,384,3.709,385,3.299,386,3.299,387,3.299,388,3.299,389,3.299,390,3.299,391,3.299,392,4.443,393,3.299,394,3.299,395,3.299,396,5.374]],["title/classes/SVController.html",[0,0.015,376,2.076]],["body/classes/SVController.html",[0,0.015,2,0.592,3,0.392,4,0.347,5,0.347,7,0.186,8,0.598,9,1.171,12,1.248,28,1.472,29,1.491,31,0.773,32,0.032,33,0.773,34,0.533,35,0.592,43,1.719,44,1.026,61,1.055,87,0.392,120,1.273,148,0.016,149,0.021,150,0.016,155,1.237,174,1.599,214,2.776,217,3.061,218,2.776,219,1.801,220,3.404,221,3.404,222,3.404,223,3.404,227,3.168,339,2.295,376,2.782,377,4.102,378,4.102,379,3.603,382,4.614,384,3.603,397,5.139,398,2.639,399,3.603,400,6.344,401,3.161,402,3.161,403,3.161,404,3.161,405,3.161,406,3.161,407,3.161,408,3.161,409,3.161,410,3.161,411,3.161,412,4.914,413,3.161,414,3.161,415,3.161,416,3.161,417,3.161,418,3.161,419,3.161,420,3.161,421,3.161]],["title/classes/SplitBoardController.html",[0,0.015,422,2.076]],["body/classes/SplitBoardController.html",[0,0.008,2,0.329,3,0.218,4,0.193,5,0.193,7,0.285,8,0.387,9,1.284,12,0.808,26,0.6,28,0.6,29,1.396,31,1.057,32,0.033,33,1.057,34,0.544,35,0.809,38,1.224,39,1.741,43,1.331,44,0.9,61,0.683,87,0.218,88,1.277,103,1.146,120,1.126,148,0.009,149,0.014,150,0.009,155,1.058,164,1.828,174,1.601,219,0.953,241,2.242,242,2.296,253,1.134,258,1.134,259,3.341,262,1.02,264,1.02,265,2.447,269,3.341,270,3.837,301,0.772,316,2.211,422,1.802,423,3.031,424,1.468,425,3.478,426,3.478,427,3.478,428,3.478,429,3.478,430,3.478,431,4.825,432,4.825,433,3.962,434,2.795,435,2.795,436,2.795,437,2.795,438,3.962,439,1.759,440,2.795,441,2.99,442,1.759,443,1.759,444,1.759,445,1.759,446,1.759,447,1.759,448,1.759,449,1.759,450,2.795,451,1.759,452,2.795,453,1.759,454,2.795,455,5.285,456,1.759,457,4.179,458,2.795,459,1.759,460,1.759,461,4.027,462,2.795,463,3.962,464,2.795,465,1.468,466,2.242,467,1.468,468,3.478,469,1.759,470,3.478,471,1.759,472,3.478,473,3.478,474,3.478,475,1.759,476,1.759,477,1.759,478,1.759,479,1.759,480,1.759,481,1.759,482,1.759,483,1.759,484,1.759,485,1.759,486,1.759,487,2.795,488,2.795,489,1.759,490,1.759,491,1.759,492,1.759,493,1.759,494,3.478,495,1.134,496,5.285,497,1.759,498,1.759,499,1.759,500,1.759,501,1.759,502,1.759,503,1.759,504,3.962,505,2.333,506,1.468,507,1.759,508,2.795,509,1.468,510,1.468,511,2.333,512,1.468,513,1.468,514,1.468,515,4.602,516,4.602,517,2.795,518,3.962,519,2.795,520,2.795,521,1.759,522,2.795,523,1.759,524,2.333,525,1.759,526,1.759]],["title/classes/SplitBoardView.html",[0,0.015,82,2.076]],["body/classes/SplitBoardView.html",[0,0.005,2,0.204,3,0.135,4,0.12,5,0.12,7,0.292,8,0.261,9,1.117,12,0.544,26,0.845,28,1.133,29,1.375,31,1.232,32,0.033,33,1.232,34,0.558,35,0.944,36,1.212,38,1.035,39,1.463,40,1.523,43,1.523,44,0.943,61,0.951,62,0.632,82,1.212,83,2.693,87,0.233,103,1.542,118,1.569,134,1.569,136,2.068,148,0.005,149,0.009,150,0.005,155,1.244,168,1.364,169,0.703,174,1.754,200,1.09,214,1.302,218,1.548,219,1.466,230,0.632,241,0.703,242,1.436,244,1.212,245,2.458,246,3.121,247,1.798,248,1.569,249,2.068,250,1.569,251,1.569,252,1.569,253,2.341,254,2.138,255,0.91,257,2.636,258,2.341,259,3.912,260,2.068,261,2.341,262,2.383,263,2.105,264,2.105,265,2.535,266,4.047,267,3.952,268,4.047,269,3.121,270,3.344,281,0.696,301,2.022,316,1.338,380,2.138,399,1.569,422,1.597,423,2.887,441,2.105,495,0.703,505,2.773,506,3.031,509,0.91,510,0.91,511,0.91,512,2.773,513,0.91,514,0.91,524,0.91,527,0.792,528,2.477,529,2.477,530,1.88,531,1.88,532,1.88,533,1.88,534,2.945,535,1.88,536,1.88,537,1.88,538,1.364,539,1.364,540,1.364,541,1.88,542,3.726,543,1.091,544,1.091,545,1.091,546,1.88,547,1.091,548,0.91,549,1.88,550,1.091,551,1.88,552,1.091,553,1.88,554,3.322,555,1.091,556,1.091,557,1.88,558,1.091,559,1.091,560,1.88,561,1.091,562,1.091,563,1.88,564,3.89,565,1.091,566,1.88,567,1.091,568,1.88,569,1.88,570,1.091,571,1.091,572,1.88,573,1.091,574,1.88,575,1.091,576,1.88,577,1.091,578,1.88,579,1.091,580,0.792,581,0.91,582,0.792,583,0.792,584,0.91,585,0.792,586,0.792,587,1.212,588,0.91,589,1.091,590,0.91,591,0.792,592,0.91,593,1.88,594,0.91,595,1.091,596,1.091,597,1.091,598,0.91,599,1.364,600,1.091,601,1.091,602,1.091,603,1.091,604,1.091,605,1.88,606,1.88,607,1.88,608,1.569,609,2.477,610,1.569,611,1.569,612,1.88,613,1.091,614,1.88,615,1.091,616,0.988,617,1.88,618,1.091,619,1.091,620,1.091,621,1.091,622,1.091,623,2.945,624,4.11,625,1.091,626,1.091,627,1.091,628,1.091,629,1.091,630,1.88,631,3.322,632,1.091,633,1.091,634,1.091,635,1.091,636,1.091,637,1.091,638,0.91,639,1.88,640,0.91,641,1.091,642,1.88,643,1.569,644,1.88,645,1.88,646,1.88,647,1.88,648,1.88,649,1.88,650,1.091,651,1.091,652,1.88,653,1.88,654,1.88,655,1.091,656,1.091,657,3.322,658,1.091,659,1.091,660,1.091,661,1.091,662,2.477,663,1.091,664,1.091,665,1.091,666,3.322,667,1.88,668,2.945,669,2.477,670,1.88,671,1.091,672,1.091,673,1.88,674,1.091,675,1.091]],["title/classes/SplitItemView.html",[0,0.015,83,1.693]],["body/classes/SplitItemView.html",[0,0.009,2,0.369,3,0.244,4,0.217,5,0.217,7,0.116,8,0.424,9,1.228,12,0.884,26,1.277,28,1.952,29,1.481,31,1.273,32,0.033,33,1.273,34,0.563,35,0.975,36,1.971,38,1.285,39,1.839,40,0.731,43,1.655,44,0.961,61,0.747,83,2.538,87,0.244,120,0.794,121,1.431,148,0.01,149,0.015,150,0.01,155,1.287,174,1.387,219,1.776,230,1.772,244,1.971,246,1.431,254,1.431,256,1.271,261,2.942,262,2.646,263,2.646,264,2.646,281,1.929,301,0.865,380,3.062,423,3.124,441,1.772,461,3.81,466,3.113,495,1.271,538,2.219,539,2.219,540,2.219,548,1.646,580,1.431,581,1.646,582,1.431,583,1.431,584,1.646,585,1.431,586,1.431,587,1.971,588,1.646,594,1.646,598,1.646,599,3.657,611,1.646,643,4.205,676,1.431,677,3.744,678,3.744,679,3.744,680,4.218,681,4.218,682,4.218,683,4.218,684,3.057,685,3.057,686,4.218,687,3.057,688,3.057,689,3.057,690,3.057,691,3.057,692,4.218,693,1.465,694,3.057,695,1.607,696,1.972,697,1.972,698,1.972,699,1.972,700,4.218,701,1.972,702,1.972,703,1.972,704,3.057,705,3.057,706,1.972,707,3.057,708,1.972,709,3.057,710,1.972,711,1.972,712,3.057,713,1.972,714,4.218,715,3.744,716,3.057,717,1.972,718,3.057,719,3.057,720,1.972,721,1.972,722,1.646,723,1.972,724,1.972,725,3.744,726,3.057,727,1.972,728,1.972,729,1.972,730,3.057,731,3.744,732,1.972,733,1.972,734,1.972,735,1.972,736,1.972,737,1.972,738,1.972,739,1.972,740,1.972,741,1.972,742,1.972,743,3.057,744,1.972,745,1.972]],["title/classes/View.html",[0,0.015,219,1.098]],["body/classes/View.html",[0,0.017,2,0.681,3,0.451,4,0.4,5,0.4,7,0.215,8,0.657,12,1.371,26,1.241,27,3.957,28,2.149,29,1.416,31,1.366,32,0.033,33,1.366,34,0.591,35,1.046,36,3.734,38,0.968,43,1.525,87,0.451,121,2.641,148,0.018,149,0.023,150,0.018,155,1.082,174,1.954,200,2.109,219,1.617,339,2.641,441,2.748,538,3.441,539,3.441,540,3.441,580,3.441,582,2.641,583,3.441,585,2.641,586,3.441,587,3.601,599,3.828,610,3.037,746,2.641,747,4.741,748,3.639,749,3.639,750,3.639,751,3.441,752,3.957,753,3.957,754,3.639,755,3.639,756,3.639]],["title/interfaces/WeightMap.html",[213,0.496,757,1.544]],["body/interfaces/WeightMap.html",[0,0.023,2,0.717,3,0.475,4,0.421,5,0.421,7,0.289,9,1.109,29,0.937,32,0.033,38,1.019,44,0.834,87,0.475,103,1.417,148,0.019,149,0.024,150,0.019,155,1.006,213,0.832,215,1.544,265,2.177,273,2.151,281,2.181,316,1.544,616,2.014,693,1.837,695,2.014,757,2.822,758,2.576,759,2.014,760,3.832,761,3.832,762,2.576,763,3.166,764,2.47,765,2.576,766,2.221,767,2.221,768,2.221,769,2.221,770,2.221,771,2.221,772,2.221,773,2.221,774,2.014,775,2.47,776,2.47,777,2.47,778,3.159,779,2.47,780,2.47,781,2.47,782,2.47,783,2.221,784,2.47,785,2.47,786,2.47,787,2.47]],["title/classes/classBuilder.html",[0,0.015,774,1.693]],["body/classes/classBuilder.html",[0,0.021,2,0.803,3,0.388,4,0.344,5,0.344,7,0.253,8,0.594,9,1.235,12,1.24,26,1.068,29,1.391,31,1.286,32,0.033,33,1.286,34,0.531,35,0.985,38,1.141,39,1.261,43,1.521,44,0.938,85,2.835,87,0.388,103,1.24,148,0.015,149,0.021,150,0.015,155,1.167,213,0.753,265,1.727,273,1.882,281,1.949,316,1.261,616,1.646,693,1.501,695,1.646,757,2.843,758,3.062,759,1.646,762,2.254,763,3.33,764,2.018,765,2.254,766,1.815,767,1.815,768,1.815,769,1.815,770,1.815,771,1.815,772,1.815,773,1.815,774,2.254,775,3.152,776,2.764,777,2.018,778,2.764,779,3.39,780,2.018,781,2.764,782,2.764,783,1.815,784,2.018,785,2.018,786,2.018,787,2.018,788,4.288,789,4.288,790,4.288,791,4.288,792,3.131,793,3.131,794,3.131,795,3.131,796,3.131,797,3.131]],["title/interfaces/classConfig.html",[213,0.496,762,1.693]],["body/interfaces/classConfig.html",[0,0.028,2,0.701,3,0.464,4,0.411,5,0.411,7,0.285,8,0.67,9,1.097,32,0.033,34,0.465,38,0.996,44,0.822,87,0.464,103,1.397,148,0.018,149,0.024,150,0.018,155,0.991,213,0.823,215,1.509,265,1.946,273,2.566,281,2.286,316,1.509,616,1.969,693,1.795,695,1.969,757,2.707,758,1.969,759,1.969,762,2.81,763,3.147,764,2.414,765,2.539,766,2.171,767,2.171,768,2.171,769,2.171,770,2.171,771,2.171,772,2.171,773,2.171,774,1.969,775,2.414,776,2.414,777,2.414,778,3.114,779,2.414,780,2.414,781,2.414,782,2.414,783,2.171,784,2.414,785,2.414,786,2.414,787,2.414]],["title/coverage.html",[798,3.649]],["body/coverage.html",[0,0.029,1,2.005,5,0.255,6,1.935,32,0.033,34,0.223,40,0.859,64,1.495,67,1.344,69,1.017,70,1.683,82,1.495,83,1.219,130,1.017,148,0.011,149,0.017,150,0.011,151,1.935,152,2.51,164,1.818,169,1.495,175,1.683,176,2.229,177,1.935,178,1.935,185,1.219,191,1.683,192,1.935,193,1.935,213,0.844,214,1.219,216,2.229,219,0.791,226,1.495,233,1.683,234,2.51,239,1.683,242,1.344,243,1.683,271,1.935,286,1.344,316,2.638,325,1.935,349,2.005,350,2.005,362,1.495,373,1.683,374,1.935,375,1.935,376,1.495,397,1.935,398,1.935,422,1.495,423,2.41,424,1.935,465,1.935,467,1.935,527,2.51,591,1.683,676,1.683,693,2.351,746,1.683,757,1.111,758,2.578,759,2.578,762,1.219,763,1.219,765,1.219,774,1.219,798,1.935,799,1.935,800,2.319,801,2.319,802,3.827,803,6.424,804,1.935,805,6.401,806,2.887,807,1.935,808,1.935,809,2.887,810,1.935,811,2.319,812,4.136,813,2.319,814,3.458,815,2.319,816,2.319,817,2.319,818,2.319,819,4.538,820,4.538,821,1.935,822,1.935,823,4.904,824,1.935,825,1.935,826,1.935,827,1.935,828,1.935,829,1.935,830,1.935,831,1.935,832,1.935,833,1.935,834,1.935,835,1.935,836,1.935,837,1.935,838,1.935,839,1.935,840,1.935,841,1.935,842,1.935,843,1.935,844,4.136,845,1.935,846,3.458,847,3.458,848,2.319,849,1.683,850,1.935,851,2.319,852,2.319,853,1.935,854,2.319,855,2.319]],["title/dependencies.html",[856,2.702,857,2.807]],["body/dependencies.html",[32,0.032,62,2.663,148,0.023,149,0.027,150,0.023,159,3.835,197,3.335,237,4.255,238,3.835,590,3.835,857,3.335,858,4.595,859,4.595,860,4.595,861,3.835,862,4.595,863,4.595,864,4.595,865,4.595,866,4.595,867,4.595,868,4.595,869,4.595,870,4.595,871,4.595,872,4.595,873,4.595,874,4.595,875,4.595]],["title/miscellaneous/enumerations.html",[876,1.186,877,3.228]],["body/miscellaneous/enumerations.html",[7,0.262,32,0.031,39,2.419,58,3.466,69,1.951,116,3.712,148,0.022,149,0.027,150,0.022,243,3.228,253,3.466,257,3.228,258,2.866,261,3.466,262,3.117,263,3.117,264,3.117,301,1.951,349,2.578,350,3.117,360,3.903,423,2.337,466,3.871,676,3.903,722,4.489,876,1.951,877,3.712,878,4.447,879,3.712,880,4.447,881,3.712,882,4.447,883,4.447]],["title/miscellaneous/functions.html",[876,1.186,884,3.228]],["body/miscellaneous/functions.html",[7,0.276,31,1.356,32,0.03,33,1.356,35,1.039,148,0.023,149,0.027,150,0.023,169,3.576,200,3.216,819,3.401,820,4.027,821,4.631,845,3.911,876,2.056,884,3.911,885,4.685,886,3.911,887,4.685,888,4.685,889,4.685,890,5.548,891,5.548,892,4.685]],["title/index.html",[7,0.159,893,2.255,894,2.255]],["body/index.html",[1,2.683,4,0.569,32,0.028,148,0.017,149,0.023,150,0.017,197,2.546,213,0.54,237,3.998,363,2.546,608,2.928,751,2.546,857,3.36,895,5.508,896,5.18,897,4.628,898,4.628,899,3.508,900,3.508,901,3.508,902,3.508,903,3.508,904,3.508,905,3.508,906,5.508,907,3.508,908,3.508,909,2.928,910,3.508,911,3.508,912,3.508,913,3.508,914,3.508,915,3.508,916,3.508,917,2.928,918,2.546,919,3.508,920,4.628,921,3.508,922,3.508,923,3.508,924,4.628,925,3.508,926,3.508,927,3.508,928,3.508,929,5.18,930,3.508,931,3.508,932,3.508,933,3.508,934,3.508,935,3.508,936,3.508,937,3.36,938,3.508,939,3.508,940,3.508,941,3.508,942,3.508,943,3.508,944,3.508,945,3.508,946,5.18,947,3.508,948,3.508,949,3.508,950,5.18,951,3.508,952,3.508,953,3.508,954,2.928,955,3.508,956,3.508,957,3.508,958,5.18,959,3.508,960,3.508,961,3.508,962,3.508,963,3.508,964,5.18,965,4.628,966,3.508,967,3.508,968,3.508,969,3.508,970,3.508,971,2.928,972,3.508,973,3.508,974,3.508,975,3.508,976,3.508,977,3.864,978,3.508,979,3.508,980,4.628,981,3.508,982,4.628,983,3.508,984,4.628,985,2.928,986,2.928,987,2.928,988,3.508,989,3.508,990,3.508,991,3.508,992,3.508,993,3.508,994,3.508,995,3.508,996,3.508,997,3.508]],["title/license.html",[893,2.255,894,2.255,918,1.961]],["body/license.html",[32,0.025,148,0.02,149,0.025,150,0.02,457,3.337,466,2.577,783,2.317,799,3.337,909,3.337,917,3.337,918,2.902,971,3.337,985,3.337,986,3.337,987,3.337,998,5.512,999,3.998,1000,3.998,1001,5.035,1002,3.998,1003,3.998,1004,3.998,1005,3.998,1006,3.998,1007,3.998,1008,5.035,1009,6.309,1010,3.998,1011,3.998,1012,5.512,1013,3.998,1014,5.035,1015,3.998,1016,3.998,1017,4.203,1018,3.998,1019,3.998,1020,3.998,1021,3.998,1022,5.035,1023,3.998,1024,3.998,1025,3.998,1026,3.998,1027,3.998,1028,3.998,1029,3.998,1030,5.035,1031,5.035,1032,3.998,1033,3.998,1034,3.998,1035,3.998,1036,3.998,1037,3.998,1038,3.998,1039,3.998,1040,3.998,1041,3.998,1042,3.998,1043,3.998,1044,3.998,1045,3.998,1046,3.998,1047,3.998,1048,3.998,1049,3.998,1050,3.998,1051,3.998,1052,3.998,1053,3.998,1054,3.998,1055,3.998,1056,3.998,1057,3.998,1058,3.998,1059,3.998]],["title/modules.html",[937,3.173]],["body/modules.html",[32,0.029,148,0.025,149,0.029,150,0.025,937,3.715]],["title/overview.html",[1060,3.649]],["body/overview.html",[2,0.947,32,0.029,148,0.025,149,0.029,150,0.025,215,2.037,1060,4.22,1061,5.056,1062,5.056]],["title/interfaces/stateConfig.html",[213,0.496,763,1.693]],["body/interfaces/stateConfig.html",[0,0.023,2,1.05,3,0.455,4,0.403,5,0.403,7,0.281,8,0.661,9,1.087,32,0.033,34,0.51,35,0.893,38,0.977,44,0.811,87,0.455,103,1.379,148,0.018,149,0.024,150,0.018,155,0.978,213,0.816,215,1.479,265,2.258,273,2.549,281,2.206,316,1.479,616,1.929,693,1.76,695,1.929,757,2.687,758,1.929,759,1.929,762,2.946,763,3.186,764,3.613,765,2.506,766,2.128,767,2.128,768,2.128,769,2.128,770,2.128,771,2.128,772,2.128,773,2.128,774,1.929,775,2.366,776,2.366,777,2.366,778,3.073,779,2.366,780,2.366,781,2.366,782,2.366,783,2.128,784,2.366,785,2.366,786,2.366,787,2.366]],["title/miscellaneous/typealiases.html",[876,1.186,1063,3.867]],["body/miscellaneous/typealiases.html",[7,0.274,32,0.031,34,0.532,122,3.558,148,0.023,149,0.027,150,0.023,164,2.442,176,2.995,216,2.995,225,3.372,349,2.693,350,3.2,356,4.007,441,2.693,587,3.558,746,3.372,751,3.372,752,3.878,753,3.878,849,3.372,876,2.039,881,3.878,1064,4.646,1065,4.608,1066,3.878,1067,4.646,1068,4.646,1069,4.646]],["title/miscellaneous/variables.html",[876,1.186,1070,3.228]],["body/miscellaneous/variables.html",[1,1.802,7,0.119,11,2.335,32,0.033,34,0.489,38,1.684,39,2.545,40,1.406,70,2.257,103,1.098,120,0.812,148,0.01,149,0.015,150,0.01,176,1.299,234,1.463,235,1.682,236,1.682,239,2.257,240,1.682,241,2.447,247,1.463,263,1.168,265,0.812,281,1.152,301,1.666,316,0.812,351,2.755,353,3.097,362,2.004,364,2.755,368,2.755,423,1.059,495,2.004,527,2.257,542,3.168,591,2.257,592,1.682,616,1.059,638,1.682,640,1.682,693,0.966,695,1.059,757,0.966,758,1.059,759,1.634,765,1.634,766,1.168,767,1.168,768,1.168,769,1.168,770,1.168,771,1.168,772,1.168,773,1.168,802,1.682,804,2.595,806,4.238,807,3.562,808,3.168,809,1.682,810,2.595,819,1.463,820,4.455,822,2.595,824,2.595,825,2.595,826,2.595,827,2.595,828,2.595,829,2.595,830,2.595,831,2.595,832,2.595,833,2.595,834,2.595,835,2.595,836,2.595,837,2.595,838,2.595,839,2.595,840,2.595,841,2.595,842,2.595,843,2.595,849,1.463,850,1.682,853,1.682,861,1.682,876,0.884,879,1.682,886,5.1,954,1.682,977,1.682,1017,1.682,1065,1.682,1066,1.682,1070,1.682,1071,2.015,1072,4.267,1073,2.015,1074,3.109,1075,2.015,1076,2.015,1077,2.015,1078,3.796,1079,3.796,1080,2.015,1081,3.109,1082,2.015,1083,2.015,1084,3.109,1085,2.015,1086,3.109,1087,3.109,1088,2.015,1089,2.015,1090,2.015,1091,2.015,1092,2.015,1093,3.109,1094,4.267,1095,2.015,1096,3.109,1097,2.015,1098,2.015,1099,3.109,1100,2.015,1101,3.109,1102,2.015,1103,3.109,1104,3.109,1105,2.015,1106,2.015,1107,2.015,1108,2.015,1109,2.015,1110,3.109,1111,2.015,1112,3.109,1113,3.109,1114,4.267,1115,2.015,1116,3.109,1117,2.015,1118,2.015,1119,2.015,1120,2.015,1121,3.109,1122,3.109,1123,2.015,1124,2.015,1125,2.015,1126,2.015,1127,2.015,1128,2.015,1129,2.015,1130,2.015,1131,2.015,1132,2.015,1133,3.796,1134,4.267,1135,2.015,1136,2.015,1137,2.015,1138,2.015,1139,2.015,1140,2.015,1141,2.015,1142,2.015,1143,2.015,1144,2.015,1145,2.015,1146,2.015,1147,2.015,1148,2.015,1149,2.015,1150,2.015,1151,2.015,1152,2.015,1153,3.109,1154,2.015,1155,2.015]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":316,"title":{},"body":{"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":847,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":846,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0123456789abcdef",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":441,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["1.1.5",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["1.6.4",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["1/21",{"_index":817,"title":{},"body":{"coverage.html":{}}}],["1/26",{"_index":816,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":693,"title":{},"body":{"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["14",{"_index":1061,"title":{},"body":{"overview.html":{}}}],["15",{"_index":635,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1].root.after(item.root",{"_index":621,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1].root[this.direction",{"_index":663,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1f1f1f",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":463,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["2.2.0",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":143,"title":{},"body":{"classes/App.html":{}}}],["200",{"_index":766,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["2020",{"_index":999,"title":{},"body":{"license.html":{}}}],["272728",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e2f30",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":465,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["3.0.1",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["3.1.3",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":524,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["300",{"_index":768,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["393939",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3f3f3f",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3px",{"_index":639,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["4",{"_index":467,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["4.3.1",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["4.3.5",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":770,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["454545",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["464749",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4px",{"_index":604,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["5",{"_index":518,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["5.1.1",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["5580c0",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5d5f61",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.4",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":144,"title":{},"body":{"classes/App.html":{}}}],["600",{"_index":772,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["680",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.2",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":633,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["729cd4",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":1062,"title":{},"body":{"overview.html":{}}}],["800",{"_index":695,"title":{},"body":{"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["808080",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["900",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_bgcolorclassname",{"_index":677,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_growclassname",{"_index":678,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_shrinkclassname",{"_index":679,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_type",{"_index":153,"title":{},"body":{"classes/AppearanceService.html":{}}}],["_view",{"_index":377,"title":{},"body":{"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["_waitformergeitem",{"_index":528,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["above",{"_index":1029,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":400,"title":{},"body":{"classes/SVController.html":{}}}],["action",{"_index":985,"title":{},"body":{"index.html":{},"license.html":{}}}],["active",{"_index":771,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["activeexpand",{"_index":433,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["activeid",{"_index":425,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["addcolumn",{"_index":530,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addcolumn(item",{"_index":549,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addconfig",{"_index":788,"title":{},"body":{"classes/classBuilder.html":{}}}],["addconfig(config",{"_index":781,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["added",{"_index":608,"title":{},"body":{"classes/SplitBoardView.html":{},"index.html":{}}}],["addexpandbutton",{"_index":680,"title":{},"body":{"classes/SplitItemView.html":{}}}],["addrow",{"_index":531,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addrow(item",{"_index":551,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["aliases",{"_index":1064,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["anchor",{"_index":228,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{}}}],["and/or",{"_index":1020,"title":{},"body":{"license.html":{}}}],["anycolor",{"_index":194,"title":{},"body":{"classes/ColorRef.html":{}}}],["anycolorhex",{"_index":892,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":1,"title":{"classes/App.html":{}},"body":{"classes/App.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app(document.body",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.quit",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appearance",{"_index":205,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearanceservice",{"_index":64,"title":{"classes/AppearanceService.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"coverage.html":{}}}],["appearancetype",{"_index":58,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"miscellaneous/enumerations.html":{}}}],["appearancetype.any",{"_index":211,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearancetype.dark",{"_index":114,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{}}}],["appearancetype.light",{"_index":212,"title":{},"body":{"classes/ColorRef.html":{}}}],["append",{"_index":538,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["append(child",{"_index":580,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["application",{"_index":977,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["applicationmenus",{"_index":70,"title":{},"body":{"classes/App.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationmenustype",{"_index":1065,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["applysplit",{"_index":532,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["applysplit(direction",{"_index":553,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["aps",{"_index":109,"title":{},"body":{"classes/App.html":{}}}],["aps.onmodechanged((type",{"_index":111,"title":{},"body":{"classes/App.html":{}}}],["arising",{"_index":1057,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1010,"title":{},"body":{"license.html":{}}}],["authors",{"_index":1047,"title":{},"body":{"license.html":{}}}],["auto",{"_index":751,"title":{},"body":{"classes/View.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["automatically",{"_index":988,"title":{},"body":{"index.html":{}}}],["available",{"_index":913,"title":{},"body":{"index.html":{}}}],["bababa",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar.svelte",{"_index":75,"title":{},"body":{"classes/App.html":{}}}],["base",{"_index":71,"title":{},"body":{"classes/App.html":{}}}],["basemenu",{"_index":175,"title":{"classes/BaseMenu.html":{}},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["bg",{"_index":691,"title":{},"body":{"classes/SplitItemView.html":{}}}],["bgcolor",{"_index":822,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["board",{"_index":593,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.controller",{"_index":589,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.controller.ts",{"_index":424,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["board.controller.ts:10",{"_index":448,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:11",{"_index":442,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:13",{"_index":443,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:14",{"_index":440,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:31",{"_index":456,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:46",{"_index":459,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:5",{"_index":446,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:53",{"_index":449,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:6",{"_index":444,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:61",{"_index":460,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:7",{"_index":445,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:72",{"_index":453,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:82",{"_index":451,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:9",{"_index":447,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.view.ts",{"_index":527,"title":{},"body":{"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["board.view.ts:104",{"_index":559,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:109",{"_index":573,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:129",{"_index":575,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:13",{"_index":545,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:14",{"_index":544,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:149",{"_index":577,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:15",{"_index":547,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:158",{"_index":567,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:16",{"_index":543,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:17",{"_index":541,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:190",{"_index":561,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:23",{"_index":562,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:27",{"_index":552,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:38",{"_index":550,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:49",{"_index":565,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:59",{"_index":571,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:64",{"_index":579,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:74",{"_index":556,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:80",{"_index":558,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:92",{"_index":555,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["boolean",{"_index":230,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["bootstrap",{"_index":13,"title":{},"body":{"classes/App.html":{}}}],["bordercolor",{"_index":824,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":972,"title":{},"body":{"index.html":{}}}],["browserwindow",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder",{"_index":974,"title":{},"body":{"index.html":{}}}],["builder.ts",{"_index":759,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["builder.ts:11",{"_index":761,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["builder.ts:24",{"_index":791,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:30",{"_index":794,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:33",{"_index":793,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:36",{"_index":795,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:44",{"_index":797,"title":{},"body":{"classes/classBuilder.html":{}}}],["building",{"_index":925,"title":{},"body":{"index.html":{}}}],["bundled",{"_index":939,"title":{},"body":{"index.html":{}}}],["button",{"_index":705,"title":{},"body":{"classes/SplitItemView.html":{}}}],["c",{"_index":783,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"license.html":{},"interfaces/stateConfig.html":{}}}],["c0c0c1",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c4666f",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c6c6c6",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback",{"_index":351,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["cancelformerge",{"_index":245,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["cancelwaitformerge",{"_index":681,"title":{},"body":{"classes/SplitItemView.html":{}}}],["case",{"_index":210,"title":{},"body":{"classes/ColorRef.html":{}}}],["cgray",{"_index":692,"title":{},"body":{"classes/SplitItemView.html":{}}}],["charge",{"_index":1005,"title":{},"body":{"license.html":{}}}],["check",{"_index":235,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["checkdirection",{"_index":533,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["checkdirection(type",{"_index":557,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["checkexpandstate",{"_index":434,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["checkexpandstate(clientx",{"_index":450,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["child",{"_index":582,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["children",{"_index":352,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["childs",{"_index":585,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["claim",{"_index":1050,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classbuilder",{"_index":774,"title":{"classes/classBuilder.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classconfig",{"_index":762,"title":{"interfaces/classConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["classname",{"_index":714,"title":{},"body":{"classes/SplitItemView.html":{}}}],["clear",{"_index":779,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["clientheight",{"_index":665,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["clientwidth",{"_index":664,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["clientx",{"_index":269,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["clienty",{"_index":270,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["code",{"_index":906,"title":{},"body":{"index.html":{}}}],["col",{"_index":257,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":197,"title":{},"body":{"classes/ColorRef.html":{},"dependencies.html":{},"index.html":{}}}],["color(appearancetype",{"_index":203,"title":{},"body":{"classes/ColorRef.html":{}}}],["color.ts",{"_index":820,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["colorref",{"_index":191,"title":{"classes/ColorRef.html":{}},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["colorsetroot",{"_index":104,"title":{},"body":{"classes/App.html":{}}}],["column",{"_index":507,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["command",{"_index":367,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["common",{"_index":944,"title":{},"body":{"index.html":{}}}],["community",{"_index":904,"title":{},"body":{"index.html":{}}}],["comp",{"_index":378,"title":{},"body":{"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["compilation",{"_index":963,"title":{},"body":{"index.html":{}}}],["compile",{"_index":958,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":980,"title":{},"body":{"index.html":{}}}],["completed",{"_index":396,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["component",{"_index":392,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["components",{"_index":946,"title":{},"body":{"index.html":{}}}],["concrete",{"_index":899,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1028,"title":{},"body":{"license.html":{}}}],["config",{"_index":85,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/classBuilder.html":{}}}],["configs",{"_index":792,"title":{},"body":{"classes/classBuilder.html":{}}}],["configs.foreach((config",{"_index":777,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["configured",{"_index":976,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1058,"title":{},"body":{"license.html":{}}}],["console",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(config",{"_index":99,"title":{},"body":{"classes/App.html":{}}}],["console.log(item",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.warn('direction",{"_index":606,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["const",{"_index":103,"title":{},"body":{"classes/App.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{}}}],["constructor(anycolor",{"_index":198,"title":{},"body":{"classes/ColorRef.html":{}}}],["constructor(config",{"_index":354,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["constructor(configs",{"_index":776,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["constructor(container",{"_index":280,"title":{},"body":{"classes/Menu.html":{}}}],["constructor(groupmenuservice",{"_index":181,"title":{},"body":{"classes/BaseMenu.html":{}}}],["constructor(private",{"_index":88,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/SplitBoardController.html":{}}}],["constructor(root",{"_index":27,"title":{},"body":{"classes/App.html":{},"classes/View.html":{}}}],["constructor(view",{"_index":439,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["container",{"_index":10,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{}}}],["containermodule",{"_index":170,"title":{},"body":{"classes/AppearanceService.html":{}}}],["contentview",{"_index":643,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["contentview.classlist.add('flex",{"_index":726,"title":{},"body":{"classes/SplitItemView.html":{}}}],["context",{"_index":11,"title":{},"body":{"classes/App.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["contextisolation",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":1054,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":994,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":991,"title":{},"body":{"index.html":{}}}],["controlaccentcolor",{"_index":825,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlbackgroundcolor",{"_index":826,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controldisabledcolor",{"_index":827,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlforbiddencolor",{"_index":828,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlhighlightcolor",{"_index":829,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":214,"title":{"interfaces/Controller.html":{}},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{},"classes/SplitBoardView.html":{},"coverage.html":{}}}],["controller.ts",{"_index":398,"title":{},"body":{"classes/SVController.html":{},"coverage.html":{}}}],["controller.ts:12",{"_index":404,"title":{},"body":{"classes/SVController.html":{}}}],["controller.ts:20",{"_index":405,"title":{},"body":{"classes/SVController.html":{}}}],["controller.ts:22",{"_index":409,"title":{},"body":{"classes/SVController.html":{}}}],["controller.ts:23",{"_index":407,"title":{},"body":{"classes/SVController.html":{}}}],["controller.ts:25",{"_index":410,"title":{},"body":{"classes/SVController.html":{}}}],["controller.ts:26",{"_index":408,"title":{},"body":{"classes/SVController.html":{}}}],["controller.ts:28",{"_index":403,"title":{},"body":{"classes/SVController.html":{}}}],["controller.ts:5",{"_index":402,"title":{},"body":{"classes/SVController.html":{}}}],["controller.ts:6",{"_index":401,"title":{},"body":{"classes/SVController.html":{}}}],["controller.ts:8",{"_index":406,"title":{},"body":{"classes/SVController.html":{}}}],["copies",{"_index":1022,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1008,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":998,"title":{},"body":{"license.html":{}}}],["cosmic",{"_index":895,"title":{},"body":{"index.html":{}}}],["cosmic/core/browser",{"_index":84,"title":{},"body":{"classes/App.html":{}}}],["cosmic/core/common",{"_index":63,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{}}}],["cosmic/core/parts",{"_index":395,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["cosmic/workbench/services/appearance",{"_index":65,"title":{},"body":{"classes/App.html":{}}}],["cosmic/workbench/services/menu",{"_index":68,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["coverage",{"_index":798,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createmenu",{"_index":277,"title":{},"body":{"classes/Menu.html":{}}}],["createwindow",{"_index":804,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["crosshair",{"_index":260,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["current",{"_index":981,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":785,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["d00000",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d1905d",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d2r",{"_index":901,"title":{},"body":{"index.html":{}}}],["d7d7d7",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d9d9d9",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":1051,"title":{},"body":{"license.html":{}}}],["dark",{"_index":116,"title":{},"body":{"classes/App.html":{},"miscellaneous/enumerations.html":{}}}],["dark:bg",{"_index":694,"title":{},"body":{"classes/SplitItemView.html":{}}}],["darkcolor",{"_index":195,"title":{},"body":{"classes/ColorRef.html":{}}}],["darkcolorhex",{"_index":891,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date.now",{"_index":340,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["deal",{"_index":1011,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1059,"title":{},"body":{"license.html":{}}}],["debugging",{"_index":983,"title":{},"body":{"index.html":{}}}],["declare",{"_index":224,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{}}}],["default",{"_index":38,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":240,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["defaultscope",{"_index":90,"title":{},"body":{"classes/App.html":{}}}],["defaultweightmap",{"_index":765,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{}}}],["dependencies",{"_index":857,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["design",{"_index":896,"title":{},"body":{"index.html":{}}}],["desktop/menu",{"_index":336,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["destorysplit",{"_index":534,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["destroy",{"_index":217,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/Menu.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["dev",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["develop",{"_index":902,"title":{},"body":{"index.html":{}}}],["development",{"_index":911,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":246,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["directionstyles",{"_index":722,"title":{},"body":{"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["directionstyles[direction",{"_index":744,"title":{},"body":{"classes/SplitItemView.html":{}}}],["directiontype",{"_index":253,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"miscellaneous/enumerations.html":{}}}],["directiontype.col",{"_index":505,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["directiontype.row",{"_index":511,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["disable",{"_index":365,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["disabled",{"_index":773,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["dist/workbench/desktop",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":986,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribution",{"_index":965,"title":{},"body":{"index.html":{}}}],["divided",{"_index":935,"title":{},"body":{"index.html":{}}}],["document.body.classlist.add('mode",{"_index":115,"title":{},"body":{"classes/App.html":{}}}],["document.body.classlist.remove('mode",{"_index":117,"title":{},"body":{"classes/App.html":{}}}],["document.createelement('div",{"_index":339,"title":{},"body":{"classes/MenuGroupService.html":{},"classes/SVController.html":{},"classes/View.html":{}}}],["document.createelement('style",{"_index":105,"title":{},"body":{"classes/App.html":{}}}],["document.queryselector('#main",{"_index":126,"title":{},"body":{"classes/App.html":{}}}],["documentation",{"_index":799,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["draft",{"_index":989,"title":{},"body":{"index.html":{}}}],["e",{"_index":261,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["e0e0e0",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":940,"title":{},"body":{"index.html":{}}}],["electron",{"_index":237,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{},"index.html":{}}}],["electron/.exec(process.execpath",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["electronstore",{"_index":236,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":227,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["enableremotemodule",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entire",{"_index":933,"title":{},"body":{"index.html":{}}}],["enum",{"_index":256,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitItemView.html":{}}}],["enumerations",{"_index":877,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eslint",{"_index":364,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":457,"title":{},"body":{"classes/SplitBoardController.html":{},"license.html":{}}}],["event.clientx",{"_index":483,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.clienty",{"_index":470,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.preventdefault",{"_index":484,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.stoppropagation",{"_index":485,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.target",{"_index":477,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["eventemitter2",{"_index":159,"title":{},"body":{"classes/AppearanceService.html":{},"dependencies.html":{}}}],["everyone",{"_index":914,"title":{},"body":{"index.html":{}}}],["evt",{"_index":154,"title":{},"body":{"classes/AppearanceService.html":{}}}],["expand",{"_index":461,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{}}}],["expand.svelte",{"_index":721,"title":{},"body":{"classes/SplitItemView.html":{}}}],["expandactive",{"_index":426,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expanded",{"_index":569,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["expandleavehandler",{"_index":427,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmouseuphandler",{"_index":428,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmovehandler",{"_index":429,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandtype",{"_index":430,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["explorer.svelte",{"_index":394,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["explorer/index.ts",{"_index":375,"title":{},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["export",{"_index":87,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["express",{"_index":1038,"title":{},"body":{"license.html":{}}}],["extends",{"_index":244,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/ResourceExplorer.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["f2f2f2",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f9f9f9",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":241,"title":{},"body":{"interfaces/ISettings.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["ffae2b",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["file://${join(__dirname",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":987,"title":{},"body":{"index.html":{},"license.html":{}}}],["fitness",{"_index":1043,"title":{},"body":{"license.html":{}}}],["flex",{"_index":599,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["flowvalue",{"_index":587,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["fn",{"_index":163,"title":{},"body":{"classes/AppearanceService.html":{}}}],["focus",{"_index":767,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":1027,"title":{},"body":{"license.html":{}}}],["fourthbgcolor",{"_index":830,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":1004,"title":{},"body":{"license.html":{}}}],["function",{"_index":164,"title":{},"body":{"classes/AppearanceService.html":{},"interfaces/Controller.html":{},"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":884,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1025,"title":{},"body":{"license.html":{}}}],["getexpandresizes",{"_index":535,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["getexpandresizes(index",{"_index":560,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["getmenuinsatance",{"_index":327,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["getting",{"_index":893,"title":{"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":984,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1003,"title":{},"body":{"license.html":{}}}],["gridbackgroundcolor",{"_index":831,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":69,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["groupmenu",{"_index":127,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.getmenuinsatance().init(menu.title",{"_index":131,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.initcontainer(header",{"_index":129,"title":{},"body":{"classes/App.html":{}}}],["groupmenuservice",{"_index":183,"title":{},"body":{"classes/BaseMenu.html":{}}}],["grow",{"_index":715,"title":{},"body":{"classes/SplitItemView.html":{}}}],["guide",{"_index":912,"title":{},"body":{"index.html":{}}}],["gutterstyle",{"_index":637,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["header",{"_index":125,"title":{},"body":{"classes/App.html":{}}}],["height",{"_index":638,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":908,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1002,"title":{},"body":{"license.html":{}}}],["hexdigits",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hidden",{"_index":602,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["hide",{"_index":704,"title":{},"body":{"classes/SplitItemView.html":{}}}],["hideexpandbutton",{"_index":682,"title":{},"body":{"classes/SplitItemView.html":{}}}],["holders",{"_index":1048,"title":{},"body":{"license.html":{}}}],["hor",{"_index":462,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["horizontal",{"_index":506,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["host",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hover",{"_index":769,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["htmlelement",{"_index":28,"title":{},"body":{"classes/App.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["http://localhost:5000/workbench/desktop",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hydrate",{"_index":229,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{}}}],["icomponentoptions",{"_index":226,"title":{"interfaces/IComponentOptions.html":{}},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"coverage.html":{}}}],["id",{"_index":273,"title":{},"body":{"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["identifier",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":399,"title":{},"body":{"classes/SVController.html":{},"classes/SplitBoardView.html":{}}}],["implied",{"_index":1039,"title":{},"body":{"license.html":{}}}],["import",{"_index":61,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["include",{"_index":943,"title":{},"body":{"index.html":{}}}],["included",{"_index":1032,"title":{},"body":{"license.html":{}}}],["including",{"_index":1014,"title":{},"body":{"license.html":{}}}],["independently",{"_index":941,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indexable",{"_index":760,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["ing",{"_index":897,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":380,"title":{},"body":{"classes/ResourceExplorer.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["init",{"_index":218,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/Menu.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardView.html":{}}}],["init(name",{"_index":294,"title":{},"body":{"classes/Menu.html":{}}}],["initcontainer",{"_index":328,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["initcontainer(container",{"_index":333,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["initflowtable",{"_index":14,"title":{},"body":{"classes/App.html":{}}}],["initframe",{"_index":15,"title":{},"body":{"classes/App.html":{}}}],["initial",{"_index":752,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["initmenu",{"_index":180,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenu(menuitems",{"_index":184,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenus",{"_index":16,"title":{},"body":{"classes/App.html":{}}}],["initmodules",{"_index":17,"title":{},"body":{"classes/App.html":{}}}],["initnavigationbar",{"_index":18,"title":{},"body":{"classes/App.html":{}}}],["initpreferences",{"_index":19,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel",{"_index":20,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel(container",{"_index":51,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel",{"_index":21,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel(container",{"_index":53,"title":{},"body":{"classes/App.html":{}}}],["initstatusbar",{"_index":22,"title":{},"body":{"classes/App.html":{}}}],["initstyle",{"_index":23,"title":{},"body":{"classes/App.html":{}}}],["initstylemode",{"_index":24,"title":{},"body":{"classes/App.html":{}}}],["initstylemode(type",{"_index":57,"title":{},"body":{"classes/App.html":{}}}],["initwithcomponent",{"_index":379,"title":{},"body":{"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["initwithcomponent(target",{"_index":384,"title":{},"body":{"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["initworkarea",{"_index":25,"title":{},"body":{"classes/App.html":{}}}],["inject",{"_index":169,"title":{},"body":{"classes/AppearanceService.html":{},"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject(token",{"_index":887,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":168,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardView.html":{}}}],["inline",{"_index":232,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{}}}],["insertconfig",{"_index":789,"title":{},"body":{"classes/classBuilder.html":{}}}],["insertconfig(config",{"_index":782,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["insertitemat",{"_index":536,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["insertitemat(item",{"_index":563,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["interface",{"_index":213,"title":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["interfaces",{"_index":215,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["intro",{"_index":231,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{}}}],["inversify",{"_index":62,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardView.html":{},"dependencies.html":{}}}],["ipc",{"_index":947,"title":{},"body":{"index.html":{}}}],["isettings",{"_index":233,"title":{"interfaces/ISettings.html":{}},"body":{"interfaces/ISettings.html":{},"coverage.html":{}}}],["isplitboardview",{"_index":242,"title":{"interfaces/ISplitBoardView.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"coverage.html":{}}}],["isprod",{"_index":806,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isshrink",{"_index":683,"title":{},"body":{"classes/SplitItemView.html":{}}}],["issues",{"_index":907,"title":{},"body":{"index.html":{}}}],["item",{"_index":301,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["item.contentview",{"_index":644,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.hideexpandbutton",{"_index":649,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.id",{"_index":347,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["item.replacecontent(newboard.root",{"_index":645,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.root",{"_index":479,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientheight",{"_index":514,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.clientwidth",{"_index":510,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.getboundingclientrect().left",{"_index":509,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.getboundingclientrect().top",{"_index":513,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.ts",{"_index":350,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["item.ts:18",{"_index":358,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:19",{"_index":359,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:20",{"_index":361,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:21",{"_index":357,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:22",{"_index":355,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.view",{"_index":255,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["item.view.ts",{"_index":676,"title":{},"body":{"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["item.view.ts:12",{"_index":697,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:13",{"_index":698,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:14",{"_index":696,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:16",{"_index":699,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:17",{"_index":690,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:25",{"_index":710,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:32",{"_index":708,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:39",{"_index":713,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:46",{"_index":717,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:53",{"_index":706,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:57",{"_index":711,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:63",{"_index":701,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:67",{"_index":703,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:71",{"_index":720,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:77",{"_index":702,"title":{},"body":{"classes/SplitItemView.html":{}}}],["items",{"_index":247,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["join(__dirname",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keycode",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["kind",{"_index":1037,"title":{},"body":{"license.html":{}}}],["labelcolor",{"_index":832,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["length",{"_index":267,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["liability",{"_index":1052,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1049,"title":{},"body":{"license.html":{}}}],["license",{"_index":918,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["light",{"_index":883,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lightcolor",{"_index":196,"title":{},"body":{"classes/ColorRef.html":{}}}],["lightcolorhex",{"_index":890,"title":{},"body":{"miscellaneous/functions.html":{}}}],["limitation",{"_index":1015,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1040,"title":{},"body":{"license.html":{}}}],["linux",{"_index":968,"title":{},"body":{"index.html":{}}}],["literal",{"_index":1069,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["live",{"_index":568,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["liveresize",{"_index":435,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["liveresize(clientx",{"_index":452,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["local",{"_index":1144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":861,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":810,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error(json.stringify(err",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lowboardroot",{"_index":591,"title":{},"body":{"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["macos",{"_index":966,"title":{},"body":{"index.html":{}}}],["main",{"_index":949,"title":{},"body":{"index.html":{}}}],["mainwindow",{"_index":807,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mainwindow.loadurl(url).catch((err",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.on('closed",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.webcontents.opendevtools",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor",{"_index":821,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makecolor('#000000",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#3f3f3f",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#5580c0",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#729cd4",{"_index":1109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#bababa",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c0c0c1",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c4666f",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c6c6c6",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d00000",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d1905d",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d7d7d7",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d9d9d9",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#e0e0e0",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f2f2f2",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f9f9f9",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffae2b",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffffff",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor(anycolorhex",{"_index":889,"title":{},"body":{"miscellaneous/functions.html":{}}}],["map",{"_index":41,"title":{},"body":{"classes/App.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/Menu.html":{}}}],["matching",{"_index":149,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":662,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["menu",{"_index":130,"title":{"classes/Menu.html":{}},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menu(menucontainer",{"_index":343,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menu.id",{"_index":348,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menu.items",{"_index":132,"title":{},"body":{"classes/App.html":{}}}],["menu.svelte",{"_index":300,"title":{},"body":{"classes/Menu.html":{}}}],["menu.ts",{"_index":178,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["menu.ts:5",{"_index":182,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu.ts:8",{"_index":186,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu/base",{"_index":177,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["menu/config",{"_index":72,"title":{},"body":{"classes/App.html":{}}}],["menu/config.ts",{"_index":849,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menucommonfunction",{"_index":356,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/typealiases.html":{}}}],["menucontainer",{"_index":338,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menugroupservice",{"_index":67,"title":{"classes/MenuGroupService.html":{}},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/MenuGroupService.html":{},"coverage.html":{}}}],["menuinstance",{"_index":179,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuitem",{"_index":286,"title":{"classes/MenuItem.html":{}},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menuitem(config",{"_index":317,"title":{},"body":{"classes/Menu.html":{}}}],["menuitem(menuitem",{"_index":311,"title":{},"body":{"classes/Menu.html":{}}}],["menuitemconfig",{"_index":185,"title":{"interfaces/MenuItemConfig.html":{}},"body":{"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menuitems",{"_index":187,"title":{},"body":{"classes/BaseMenu.html":{},"classes/Menu.html":{}}}],["menuitemtype",{"_index":360,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/enumerations.html":{}}}],["menuitemtype.group",{"_index":368,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["menusvelte",{"_index":274,"title":{},"body":{"classes/Menu.html":{}}}],["merchantability",{"_index":1042,"title":{},"body":{"license.html":{}}}],["merge",{"_index":466,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["metadata",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":12,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{}}}],["meuns",{"_index":326,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["meunswritable",{"_index":275,"title":{},"body":{"classes/Menu.html":{}}}],["minimum",{"_index":922,"title":{},"body":{"index.html":{}}}],["minsize",{"_index":634,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["miscellaneous",{"_index":876,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":917,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":517,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["modify",{"_index":1018,"title":{},"body":{"license.html":{}}}],["modules",{"_index":937,"title":{"modules.html":{}},"body":{"index.html":{},"modules.html":{}}}],["monorepo",{"_index":932,"title":{},"body":{"index.html":{}}}],["more",{"_index":927,"title":{},"body":{"index.html":{}}}],["mousedown",{"_index":486,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["mouseevent",{"_index":455,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["n",{"_index":264,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":33,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["namewritable",{"_index":276,"title":{},"body":{"classes/Menu.html":{}}}],["navigation",{"_index":73,"title":{},"body":{"classes/App.html":{}}}],["navigationbar",{"_index":119,"title":{},"body":{"classes/App.html":{}}}],["new",{"_index":40,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/ResourceExplorer.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newboard",{"_index":642,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addcolumn(newemptyview",{"_index":651,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addcolumn(newitemview",{"_index":650,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addrow(newemptyview",{"_index":656,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addrow(newitemview",{"_index":655,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.controller.checkexpandstate(clientx",{"_index":653,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.controller.setactivestate(0",{"_index":652,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newemptyview",{"_index":648,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newitem",{"_index":659,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newitemview",{"_index":646,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsize",{"_index":669,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes",{"_index":657,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(newsize",{"_index":671,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(size",{"_index":673,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(sum",{"_index":672,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(w",{"_index":675,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["next",{"_index":959,"title":{},"body":{"index.html":{}}}],["none",{"_index":753,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["noninfringement",{"_index":1046,"title":{},"body":{"license.html":{}}}],["normalizeweight",{"_index":790,"title":{},"body":{"classes/classBuilder.html":{}}}],["normalizeweight(config",{"_index":796,"title":{},"body":{"classes/classBuilder.html":{}}}],["nothing",{"_index":926,"title":{},"body":{"index.html":{}}}],["notice",{"_index":1030,"title":{},"body":{"license.html":{}}}],["notification",{"_index":808,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nowrap",{"_index":600,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["npm",{"_index":975,"title":{},"body":{"index.html":{}}}],["null",{"_index":542,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":265,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":1007,"title":{},"body":{"license.html":{}}}],["offsetx",{"_index":515,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["offsety",{"_index":516,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["onmodechanged",{"_index":156,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmodechanged(fn",{"_index":161,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmousedown",{"_index":436,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["onmousedown(event",{"_index":454,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["optional",{"_index":35,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/IComponentOptions.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{}}}],["orderedconfigs",{"_index":775,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["organization",{"_index":995,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1056,"title":{},"body":{"license.html":{}}}],["out",{"_index":971,"title":{},"body":{"index.html":{},"license.html":{}}}],["overflow",{"_index":601,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["overview",{"_index":1060,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":856,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":938,"title":{},"body":{"index.html":{}}}],["packaging",{"_index":962,"title":{},"body":{"index.html":{}}}],["page",{"_index":955,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":1044,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1001,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1023,"title":{},"body":{"license.html":{}}}],["person",{"_index":1006,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1024,"title":{},"body":{"license.html":{}}}],["platform",{"_index":982,"title":{},"body":{"index.html":{}}}],["port",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":1034,"title":{},"body":{"license.html":{}}}],["pos",{"_index":564,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["position",{"_index":268,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["possible",{"_index":979,"title":{},"body":{"index.html":{}}}],["practice",{"_index":900,"title":{},"body":{"index.html":{}}}],["preload",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preload.js",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepend",{"_index":539,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["prepend(...childs",{"_index":583,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["private",{"_index":9,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["process.env.node_env",{"_index":1133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":934,"title":{},"body":{"index.html":{}}}],["project",{"_index":928,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["propertypanel",{"_index":80,"title":{},"body":{"classes/App.html":{}}}],["props",{"_index":122,"title":{},"body":{"classes/App.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"miscellaneous/typealiases.html":{}}}],["provided",{"_index":1035,"title":{},"body":{"license.html":{}}}],["public",{"_index":155,"title":{},"body":{"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["publish",{"_index":909,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":1045,"title":{},"body":{"license.html":{}}}],["qiansc",{"_index":1000,"title":{},"body":{"license.html":{}}}],["quickly",{"_index":978,"title":{},"body":{"index.html":{}}}],["r",{"_index":666,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["readonly",{"_index":272,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["ready",{"_index":964,"title":{},"body":{"index.html":{}}}],["record",{"_index":225,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"miscellaneous/typealiases.html":{}}}],["ref.ts",{"_index":193,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["ref.ts:15",{"_index":204,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:5",{"_index":201,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:6",{"_index":202,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:7",{"_index":199,"title":{},"body":{"classes/ColorRef.html":{}}}],["reflect",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["registeritem",{"_index":278,"title":{},"body":{"classes/Menu.html":{}}}],["registeritem(config",{"_index":296,"title":{},"body":{"classes/Menu.html":{}}}],["release",{"_index":990,"title":{},"body":{"index.html":{}}}],["removecolumn(item",{"_index":628,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["removeitem",{"_index":279,"title":{},"body":{"classes/Menu.html":{}}}],["removeitem(index",{"_index":298,"title":{},"body":{"classes/Menu.html":{}}}],["removemenuinstances",{"_index":329,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["removemenuinstances(menu",{"_index":334,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["removerow(item",{"_index":629,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["replacecontent",{"_index":684,"title":{},"body":{"classes/SplitItemView.html":{}}}],["replacecontent(contentview",{"_index":707,"title":{},"body":{"classes/SplitItemView.html":{}}}],["repository",{"_index":898,"title":{},"body":{"index.html":{}}}],["required",{"_index":921,"title":{},"body":{"index.html":{}}}],["resize",{"_index":259,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["resizeat",{"_index":248,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["resizeat(index",{"_index":566,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["resource",{"_index":393,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["resourceexplorer",{"_index":373,"title":{"classes/ResourceExplorer.html":{}},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["resourcepage",{"_index":78,"title":{},"body":{"classes/App.html":{}}}],["restriction",{"_index":1013,"title":{},"body":{"license.html":{}}}],["result",{"_index":148,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":150,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":174,"title":{},"body":{"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["returns",{"_index":43,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{}}}],["right",{"_index":607,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["rights",{"_index":1016,"title":{},"body":{"license.html":{}}}],["roadmap",{"_index":910,"title":{},"body":{"index.html":{}}}],["rollup",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":36,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["rounded",{"_index":735,"title":{},"body":{"classes/SplitItemView.html":{}}}],["row",{"_index":258,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":961,"title":{},"body":{"index.html":{}}}],["s",{"_index":263,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["script",{"_index":950,"title":{},"body":{"index.html":{}}}],["secondarybgcolor",{"_index":833,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["secondarylabelcolor",{"_index":834,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":992,"title":{},"body":{"index.html":{}}}],["sell",{"_index":1021,"title":{},"body":{"license.html":{}}}],["server",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":66,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["service.ts",{"_index":152,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":160,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:12",{"_index":167,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{}}}],["service.ts:18",{"_index":162,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:19",{"_index":332,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:21",{"_index":165,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:28",{"_index":335,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:6",{"_index":331,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:7",{"_index":330,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:9",{"_index":158,"title":{},"body":{"classes/AppearanceService.html":{}}}],["set",{"_index":997,"title":{},"body":{"index.html":{}}}],["setactivestate",{"_index":437,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setactivestate(index",{"_index":458,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setcontent",{"_index":685,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setcontent(contentview",{"_index":709,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setcursor",{"_index":249,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["setcursor(type",{"_index":570,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["setdefaultclass",{"_index":686,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setflow",{"_index":540,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setflow(type",{"_index":586,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setgrow",{"_index":687,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setgrow(classname",{"_index":712,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setshrink",{"_index":688,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setshrink(classname",{"_index":716,"title":{},"body":{"classes/SplitItemView.html":{}}}],["settings",{"_index":239,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shadow",{"_index":366,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["shall",{"_index":1031,"title":{},"body":{"license.html":{}}}],["shrink",{"_index":718,"title":{},"body":{"classes/SplitItemView.html":{}}}],["similar",{"_index":931,"title":{},"body":{"index.html":{}}}],["singleton",{"_index":91,"title":{},"body":{"classes/App.html":{}}}],["size",{"_index":668,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["sizes",{"_index":554,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["smelte",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["snapoffset",{"_index":636,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["software",{"_index":1009,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["split",{"_index":254,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["split(array.prototype.slice.call(this.root.children",{"_index":632,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["split.instance",{"_index":546,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["split.js",{"_index":590,"title":{},"body":{"classes/SplitBoardView.html":{},"dependencies.html":{}}}],["splitboard",{"_index":133,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view0",{"_index":139,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view1",{"_index":140,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view2",{"_index":141,"title":{},"body":{"classes/App.html":{}}}],["splitboard.applysplit('horizontal",{"_index":142,"title":{},"body":{"classes/App.html":{}}}],["splitboardcontroller",{"_index":422,"title":{"classes/SplitBoardController.html":{}},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"coverage.html":{}}}],["splitboardcontroller(this",{"_index":597,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitboardview",{"_index":82,"title":{"classes/SplitBoardView.html":{}},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{},"coverage.html":{}}}],["splitboardview().setflow('1",{"_index":134,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["splitcolumnat",{"_index":250,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["splitcolumnat(index",{"_index":572,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitexpand",{"_index":700,"title":{},"body":{"classes/SplitItemView.html":{}}}],["splitinstance",{"_index":529,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splititemview",{"_index":83,"title":{"classes/SplitItemView.html":{}},"body":{"classes/App.html":{},"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{}}}],["splititemview().setcontent(contentview",{"_index":647,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splititemview().setcontent(document.createelement('div",{"_index":136,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["splitrowat",{"_index":251,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["splitrowat(index",{"_index":574,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["src/.../appearance.ts",{"_index":878,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../class",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.ts",{"_index":1066,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../controller.ts",{"_index":1068,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../index.ts",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inject.ts",{"_index":885,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.ts",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu",{"_index":881,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../settings.ts",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../split",{"_index":879,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../type.ts",{"_index":880,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../ui",{"_index":886,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../view.ts",{"_index":1067,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app",{"_index":948,"title":{},"body":{"index.html":{}}}],["src/app/index.ts",{"_index":802,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/logger.ts",{"_index":809,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/settings.ts",{"_index":234,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core",{"_index":942,"title":{},"body":{"index.html":{}}}],["src/core/browser/class",{"_index":758,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/layout/split",{"_index":423,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/layout/type.ts",{"_index":243,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/browser/style/ui",{"_index":819,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/view.ts",{"_index":746,"title":{},"body":{"classes/View.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/browser/view.ts:13",{"_index":748,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:17",{"_index":749,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:4",{"_index":747,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:8",{"_index":750,"title":{},"body":{"classes/View.html":{}}}],["src/core/common/appearance.ts",{"_index":882,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/common/color",{"_index":192,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["src/core/components",{"_index":957,"title":{},"body":{"index.html":{}}}],["src/core/parts/ioc/inject.ts",{"_index":845,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/core/parts/modules/controller.ts",{"_index":216,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/parts/modules/svelte",{"_index":397,"title":{},"body":{"classes/SVController.html":{},"coverage.html":{}}}],["src/modules",{"_index":951,"title":{},"body":{"index.html":{}}}],["src/modules/resource",{"_index":374,"title":{},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["src/workbench",{"_index":953,"title":{},"body":{"index.html":{}}}],["src/workbench/desktop/app.ts",{"_index":6,"title":{},"body":{"classes/App.html":{},"coverage.html":{}}}],["src/workbench/desktop/app.ts:103",{"_index":52,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:111",{"_index":60,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:115",{"_index":55,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:15",{"_index":37,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:16",{"_index":30,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:23",{"_index":42,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:30",{"_index":48,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:34",{"_index":50,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:39",{"_index":56,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:49",{"_index":59,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:57",{"_index":46,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:61",{"_index":49,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:71",{"_index":47,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:80",{"_index":45,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:95",{"_index":54,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/base",{"_index":176,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/desktop/main.ts",{"_index":850,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/desktop/menu/menu",{"_index":349,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/workbench/desktop/menu/menu.ts",{"_index":271,"title":{},"body":{"classes/Menu.html":{},"coverage.html":{}}}],["src/workbench/desktop/menu/menu.ts:10",{"_index":287,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:11",{"_index":288,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:12",{"_index":284,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:13",{"_index":290,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:14",{"_index":282,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:23",{"_index":295,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:31",{"_index":293,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:38",{"_index":297,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:43",{"_index":299,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:49",{"_index":292,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:7",{"_index":283,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:8",{"_index":285,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:9",{"_index":291,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/utils/utils.ts",{"_index":853,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/services/appearance",{"_index":151,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["src/workbench/services/menu",{"_index":325,"title":{},"body":{"classes/MenuGroupService.html":{},"coverage.html":{}}}],["standard",{"_index":916,"title":{},"body":{"index.html":{}}}],["start",{"_index":266,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["started",{"_index":894,"title":{"index.html":{},"license.html":{}},"body":{}}],["starttoexpand",{"_index":537,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["starttoexpand(index",{"_index":576,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["startx",{"_index":431,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["starty",{"_index":432,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["stateconfig",{"_index":763,"title":{"interfaces/stateConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["statements",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["statically",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statusbar",{"_index":76,"title":{},"body":{"classes/App.html":{}}}],["step",{"_index":960,"title":{},"body":{"index.html":{}}}],["sth",{"_index":118,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["store",{"_index":238,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{}}}],["storybook",{"_index":956,"title":{},"body":{"index.html":{}}}],["string",{"_index":281,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":929,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1026,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1019,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1033,"title":{},"body":{"license.html":{}}}],["such",{"_index":945,"title":{},"body":{"index.html":{}}}],["sum",{"_index":667,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["super",{"_index":594,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["support",{"_index":970,"title":{},"body":{"index.html":{}}}],["svcontroller",{"_index":376,"title":{"classes/SVController.html":{}},"body":{"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"coverage.html":{}}}],["svcontroller:11",{"_index":387,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["svcontroller:12",{"_index":390,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["svcontroller:14",{"_index":385,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["svcontroller:18",{"_index":388,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["svcontroller:21",{"_index":386,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["svcontroller:28",{"_index":389,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["svcontroller:5",{"_index":383,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["svcontroller:6",{"_index":381,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["svcontroller:8",{"_index":391,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["svelte/internal",{"_index":411,"title":{},"body":{"classes/SVController.html":{}}}],["svelte/store",{"_index":302,"title":{},"body":{"classes/Menu.html":{}}}],["sveltecomponentdev",{"_index":382,"title":{},"body":{"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["switch",{"_index":209,"title":{},"body":{"classes/ColorRef.html":{}}}],["symbol.for('flowtableroot",{"_index":592,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["systembluecolor",{"_index":835,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemgraycolor",{"_index":836,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemorangecolor",{"_index":837,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systempinkcolor",{"_index":838,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemredcolor",{"_index":839,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemyellowcolor",{"_index":840,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":120,"title":{},"body":{"classes/App.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/Menu.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/variables.html":{}}}],["target.classlist.contains('split",{"_index":481,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["target.parentelement",{"_index":480,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["template",{"_index":920,"title":{},"body":{"index.html":{}}}],["tertiarybgcolor",{"_index":841,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tertiarylabelcolor",{"_index":842,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["textfieldbackground",{"_index":843,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["this._growclassname",{"_index":731,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._shrinkclassname",{"_index":730,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._type",{"_index":171,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this._view",{"_index":412,"title":{},"body":{"classes/SVController.html":{}}}],["this._view.parentnode",{"_index":419,"title":{},"body":{"classes/SVController.html":{}}}],["this._view.parentnode.removechild(this._view",{"_index":420,"title":{},"body":{"classes/SVController.html":{}}}],["this._waitformergeitem",{"_index":623,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this._waitformergeitem.cancelwaitformerge",{"_index":627,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.activeexpand",{"_index":489,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.activeid",{"_index":490,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.addexpandbutton",{"_index":723,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.anycolor",{"_index":206,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.applysplit",{"_index":615,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.applysplit('vertical",{"_index":613,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.applysplit(this.direction",{"_index":661,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.callback",{"_index":372,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.cancelformerge",{"_index":625,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.cancelwaitformerge",{"_index":741,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.checkdirection(directiontype.col",{"_index":614,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.checkdirection(directiontype.row",{"_index":605,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.checkexpandstate(event.clientx",{"_index":471,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.children",{"_index":369,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.comp",{"_index":414,"title":{},"body":{"classes/SVController.html":{}}}],["this.comp.$destroy",{"_index":418,"title":{},"body":{"classes/SVController.html":{}}}],["this.container",{"_index":89,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{}}}],["this.container.append(menucontainer",{"_index":342,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.container.bind(appearanceservice).to(appearanceservice",{"_index":100,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(colorset).to(colorset",{"_index":102,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(colorsetroot).todynamicvalue",{"_index":106,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(menugroupservice).to(menugroupservice",{"_index":101,"title":{},"body":{"classes/App.html":{}}}],["this.container.firstchild",{"_index":313,"title":{},"body":{"classes/Menu.html":{}}}],["this.container.get(appearanceservice",{"_index":110,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(colorset",{"_index":108,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(menugroupservice",{"_index":128,"title":{},"body":{"classes/App.html":{}}}],["this.container.removechild(menu.container",{"_index":345,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.container.removechild(this.container.firstchild",{"_index":314,"title":{},"body":{"classes/Menu.html":{}}}],["this.contentview",{"_index":725,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.context",{"_index":123,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{}}}],["this.context.set('container",{"_index":92,"title":{},"body":{"classes/App.html":{}}}],["this.context.set('menus",{"_index":305,"title":{},"body":{"classes/Menu.html":{}}}],["this.context.set('name",{"_index":307,"title":{},"body":{"classes/Menu.html":{}}}],["this.controller",{"_index":596,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.createmenu",{"_index":312,"title":{},"body":{"classes/Menu.html":{}}}],["this.darkcolor",{"_index":208,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.destorysplit",{"_index":630,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.direction",{"_index":609,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.evt.emit('onmodechanged",{"_index":172,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.evt.on('onmodechanged",{"_index":173,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.expand",{"_index":739,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.expandhidden",{"_index":740,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.mergedirection",{"_index":743,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expandactive",{"_index":494,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandleavehandler",{"_index":472,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmouseuphandler",{"_index":474,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmovehandler",{"_index":468,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandtype",{"_index":496,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.getexpandresizes(index",{"_index":658,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.groupmenuservice.getmenuinsatance",{"_index":189,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.id",{"_index":303,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.init",{"_index":595,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.initflowtable",{"_index":96,"title":{},"body":{"classes/App.html":{}}}],["this.initmenus",{"_index":124,"title":{},"body":{"classes/App.html":{}}}],["this.initmodules",{"_index":98,"title":{},"body":{"classes/App.html":{}}}],["this.initnavigationbar",{"_index":95,"title":{},"body":{"classes/App.html":{}}}],["this.initpreferences",{"_index":93,"title":{},"body":{"classes/App.html":{}}}],["this.initpropertypanel(view2.contentview",{"_index":147,"title":{},"body":{"classes/App.html":{}}}],["this.initresourcepanel(view0.contentview",{"_index":146,"title":{},"body":{"classes/App.html":{}}}],["this.initstatusbar",{"_index":97,"title":{},"body":{"classes/App.html":{}}}],["this.initstyle",{"_index":94,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(appearancetype.dark",{"_index":113,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(type",{"_index":112,"title":{},"body":{"classes/App.html":{}}}],["this.initwithcomponent(this._view",{"_index":415,"title":{},"body":{"classes/SVController.html":{}}}],["this.insertconfig(config",{"_index":778,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.insertitemat(item",{"_index":612,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.insertitemat(newitem",{"_index":660,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items.length",{"_index":617,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items.splice(pos",{"_index":618,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[index",{"_index":624,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[index].waitformerge(direction",{"_index":626,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[pos",{"_index":620,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.lightcolor",{"_index":207,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.liveresize(event.clientx",{"_index":469,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.menuinstance",{"_index":188,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.menuinstance.init",{"_index":190,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.menuitems",{"_index":304,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.filter((_",{"_index":321,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.push(new",{"_index":310,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.splice(index",{"_index":315,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems[index",{"_index":319,"title":{},"body":{"classes/Menu.html":{}}}],["this.menusvelte",{"_index":322,"title":{},"body":{"classes/Menu.html":{}}}],["this.meuns",{"_index":337,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meuns.filter((item",{"_index":346,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meuns.length",{"_index":341,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meuns.push(menu",{"_index":344,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meunswritable",{"_index":306,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set((this.menuitems",{"_index":320,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set([...this.menuitems",{"_index":318,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set(this.menuitems",{"_index":324,"title":{},"body":{"classes/Menu.html":{}}}],["this.name",{"_index":309,"title":{},"body":{"classes/Menu.html":{}}}],["this.namewritable",{"_index":308,"title":{},"body":{"classes/Menu.html":{}}}],["this.namewritable.set(this.name",{"_index":323,"title":{},"body":{"classes/Menu.html":{}}}],["this.normalizeweight(config",{"_index":784,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.onmousedown(event",{"_index":476,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.orderedconfigs",{"_index":780,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor",{"_index":786,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor].weight",{"_index":787,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.prepend(contentview",{"_index":727,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root",{"_index":121,"title":{},"body":{"classes/App.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["this.root.appendchild(child",{"_index":755,"title":{},"body":{"classes/View.html":{}}}],["this.root.appendchild(colorsetroot",{"_index":107,"title":{},"body":{"classes/App.html":{}}}],["this.root.appendchild(item.root",{"_index":619,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.root.appendchild(splitboard.root",{"_index":145,"title":{},"body":{"classes/App.html":{}}}],["this.root.classlist.add('flex",{"_index":611,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["this.root.classlist.add('relative",{"_index":737,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('split",{"_index":598,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["this.root.classlist.add('wait",{"_index":742,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(...this._bgcolorclassname",{"_index":738,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(`flex",{"_index":754,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.add(this._growclassname",{"_index":732,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(this._shrinkclassname",{"_index":734,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove('flex",{"_index":610,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/View.html":{}}}],["this.root.classlist.remove('wait",{"_index":745,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._growclassname",{"_index":733,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._shrinkclassname",{"_index":729,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.prepend(...childs",{"_index":756,"title":{},"body":{"classes/View.html":{}}}],["this.root.replacechild(contentview",{"_index":728,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.style.cursor",{"_index":622,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.root.style.margin",{"_index":603,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.setactivestate(index",{"_index":482,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.setdefaultclass",{"_index":724,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.splitinstance",{"_index":631,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.destroy",{"_index":641,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.getsizes().foreach((size",{"_index":670,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.setsizes(newsizes",{"_index":674,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.starttoexpand(index",{"_index":654,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.startx",{"_index":487,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.starty",{"_index":488,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.title",{"_index":370,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.type",{"_index":371,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.unactiveexpand",{"_index":473,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.cancelformerge",{"_index":501,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.direction",{"_index":504,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items.foreach((item",{"_index":478,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items[this.activeid",{"_index":503,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.resizeat(this.activeid",{"_index":508,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousedown",{"_index":475,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseleave",{"_index":492,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousemove",{"_index":491,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseup",{"_index":493,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseleave",{"_index":499,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mousemove",{"_index":498,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseup",{"_index":500,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor",{"_index":502,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('col",{"_index":519,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('crosshair",{"_index":497,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('n",{"_index":523,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('row",{"_index":520,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('w",{"_index":521,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitcolumnat(this.activeid",{"_index":525,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitrowat(this.activeid",{"_index":526,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.waitformergeatitem(this.activeid",{"_index":522,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.viewdidappear",{"_index":416,"title":{},"body":{"classes/SVController.html":{}}}],["this.viewdiddisappear",{"_index":421,"title":{},"body":{"classes/SVController.html":{}}}],["this.viewwillappear",{"_index":413,"title":{},"body":{"classes/SVController.html":{}}}],["this.viewwilldisappear",{"_index":417,"title":{},"body":{"classes/SVController.html":{}}}],["three",{"_index":936,"title":{},"body":{"index.html":{}}}],["title",{"_index":353,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["together",{"_index":903,"title":{},"body":{"index.html":{}}}],["token",{"_index":888,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tools",{"_index":952,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1055,"title":{},"body":{"license.html":{}}}],["true",{"_index":495,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":34,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1063,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/color",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["ui/components/navigation/navigation",{"_index":74,"title":{},"body":{"classes/App.html":{}}}],["ui/components/property/proterty.svelte",{"_index":81,"title":{},"body":{"classes/App.html":{}}}],["ui/components/resource/resource.svelte",{"_index":79,"title":{},"body":{"classes/App.html":{}}}],["ui/components/status/status",{"_index":77,"title":{},"body":{"classes/App.html":{}}}],["unactiveexpand",{"_index":438,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["undefined",{"_index":616,"title":{},"body":{"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":915,"title":{},"body":{"index.html":{}}}],["update",{"_index":969,"title":{},"body":{"index.html":{}}}],["updatemode",{"_index":157,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updatemode(type",{"_index":166,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updater",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["url",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":1017,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":924,"title":{},"body":{"index.html":{}}}],["user",{"_index":996,"title":{},"body":{"index.html":{}}}],["using",{"_index":973,"title":{},"body":{"index.html":{}}}],["utils",{"_index":363,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"index.html":{}}}],["uuid",{"_index":362,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":39,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/classBuilder.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1070,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":464,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["version",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":512,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["very",{"_index":930,"title":{},"body":{"index.html":{}}}],["view",{"_index":219,"title":{"classes/View.html":{}},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISplitBoardView.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"coverage.html":{}}}],["view0",{"_index":135,"title":{},"body":{"classes/App.html":{}}}],["view1",{"_index":137,"title":{},"body":{"classes/App.html":{}}}],["view2",{"_index":138,"title":{},"body":{"classes/App.html":{}}}],["view:13",{"_index":581,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:17",{"_index":584,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:4",{"_index":548,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:8",{"_index":588,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["viewdidappear",{"_index":220,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["viewdiddisappear",{"_index":221,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["viewwillappear",{"_index":222,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["viewwilldisappear",{"_index":223,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["vite",{"_index":923,"title":{},"body":{"index.html":{}}}],["void",{"_index":44,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["w",{"_index":262,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["waitformerge",{"_index":689,"title":{},"body":{"classes/SplitItemView.html":{}}}],["waitformerge(direction",{"_index":719,"title":{},"body":{"classes/SplitItemView.html":{}}}],["waitformergeatitem",{"_index":252,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["waitformergeatitem(index",{"_index":578,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["warranties",{"_index":1041,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1036,"title":{},"body":{"license.html":{}}}],["web",{"_index":954,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["webpreferences",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":764,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["weightmap",{"_index":757,"title":{"interfaces/WeightMap.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["whether",{"_index":1053,"title":{},"body":{"license.html":{}}}],["width",{"_index":640,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["wiki",{"_index":993,"title":{},"body":{"index.html":{}}}],["windows",{"_index":967,"title":{},"body":{"index.html":{}}}],["without",{"_index":1012,"title":{},"body":{"license.html":{}}}],["work",{"_index":905,"title":{},"body":{"index.html":{}}}],["workbench/desktop/app.config.json",{"_index":86,"title":{},"body":{"classes/App.html":{}}}],["works",{"_index":919,"title":{},"body":{"index.html":{}}}],["writable",{"_index":289,"title":{},"body":{"classes/Menu.html":{}}}],["xl",{"_index":736,"title":{},"body":{"classes/SplitItemView.html":{}}}],["yes",{"_index":200,"title":{},"body":{"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/SplitBoardView.html":{},"classes/View.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/App.html":{"url":"classes/App.html","title":"class - App","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/app.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                context\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bootstrap\n                            \n                            \n                                initFlowTable\n                            \n                            \n                                initFrame\n                            \n                            \n                                initMenus\n                            \n                            \n                                initModules\n                            \n                            \n                                initNavigationBar\n                            \n                            \n                                initPreferences\n                            \n                            \n                                initPropertyPanel\n                            \n                            \n                                initResourcePanel\n                            \n                            \n                                initStatusBar\n                            \n                            \n                                initStyle\n                            \n                            \n                                initStyleMode\n                            \n                            \n                                initWorkArea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/app.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Container\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFlowTable\n                        \n                    \n                \n            \n            \n                \ninitFlowTable()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFrame\n                        \n                    \n                \n            \n            \n                \ninitFrame()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initMenus\n                        \n                    \n                \n            \n            \n                \ninitMenus()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initModules\n                        \n                    \n                \n            \n            \n                \ninitModules()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNavigationBar\n                        \n                    \n                \n            \n            \n                \ninitNavigationBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPreferences\n                        \n                    \n                \n            \n            \n                \ninitPreferences()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPropertyPanel\n                        \n                    \n                \n            \n            \n                \ninitPropertyPanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initResourcePanel\n                        \n                    \n                \n            \n            \n                \ninitResourcePanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStatusBar\n                        \n                    \n                \n            \n            \n                \ninitStatusBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyle\n                        \n                    \n                \n            \n            \n                \ninitStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyleMode\n                        \n                    \n                \n            \n            \n                \ninitStyleMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initWorkArea\n                        \n                    \n                \n            \n            \n                \ninitWorkArea()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Container } from 'inversify';\nimport { AppearanceType } from '@cosmic/core/common';\nimport { AppearanceService } from '@cosmic/workbench/services/appearance-service';\nimport { MenuGroupService } from '@cosmic/workbench/services/menu-group-service';\nimport { applicationMenus } from './base-menu/config';\nimport Navigation from '../ui/components/navigation/navigation-bar.svelte';\nimport StatusBar from '../ui/components/status/status-bar.svelte';\nimport ResourcePage from '../ui/components/resource/resource.svelte';\nimport PropertyPanel from '../ui/components/property/proterty.svelte';\nimport { SplitBoardView, SplitItemView } from '@cosmic/core/browser';\n\nimport config from 'workbench/desktop/app.config.json';\n\nexport default class App {\n  private container: Container;\n  private context = new Map();\n  constructor(private root: HTMLElement) {\n    this.container = new Container({ defaultScope: 'Singleton' });\n    this.context.set('container', this.container);\n    this.initPreferences();\n    this.initStyle();\n  }\n  bootstrap(): void {\n    this.initNavigationBar();\n    this.initFlowTable();\n    this.initStatusBar();\n    this.initModules();\n  }\n\n  initModules(): void {\n    console.log(config);\n  }\n\n  initPreferences(): void {\n    this.container.bind(AppearanceService).to(AppearanceService);\n    this.container.bind(MenuGroupService).to(MenuGroupService);\n  }\n\n  initStyle(): void {\n    // this.container.bind(ColorSet).to(ColorSet);\n    // const colorSetRoot = document.createElement('style');\n    // this.container.bind(ColorSetRoot).toDynamicValue(() => colorSetRoot);\n    // this.root.appendChild(colorSetRoot);\n    // this.container.get(ColorSet);\n    const aps = this.container.get(AppearanceService);\n    aps.onModeChanged((type: AppearanceType) => this.initStyleMode(type));\n    this.initStyleMode(AppearanceType.dark);\n  }\n  initStyleMode(type: AppearanceType): void {\n    if (type === AppearanceType.dark) {\n      document.body.classList.add('mode-dark');\n    } else {\n      document.body.classList.remove('mode-dark');\n    }\n  }\n\n  initFrame(): void {\n    // to do sth.\n  }\n\n  initNavigationBar(): void {\n    // to do sth.\n    const navigationBar = new Navigation({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    this.initMenus();\n  }\n\n  initMenus(): void {\n    const header = document.querySelector('#main-header');\n    const groupMenu = this.container.get(MenuGroupService);\n    groupMenu.initContainer(header as HTMLElement);\n    for (const menu of applicationMenus) {\n      groupMenu.getMenuInsatance().init(menu.title, menu.items);\n    }\n  }\n\n  initFlowTable(): void {\n    const splitBoard = new SplitBoardView().setFlow('1');\n    const view0 = new SplitItemView().setContent(document.createElement('div'));\n    const view1 = new SplitItemView().setContent(document.createElement('div'));\n    const view2 = new SplitItemView().setContent(document.createElement('div'));\n    splitBoard.addColumn(view0);\n    splitBoard.addColumn(view1);\n    splitBoard.addColumn(view2);\n    splitBoard.applySplit('horizontal', [20, 60, 20]);\n\n    this.root.appendChild(splitBoard.root);\n    this.initResourcePanel(view0.contentView);\n    this.initPropertyPanel(view2.contentView);\n  }\n\n  initResourcePanel(container: HTMLElement): void {\n    new ResourcePage({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initPropertyPanel(container: HTMLElement): void {\n    new PropertyPanel({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initWorkArea(): void {\n    // to do sth.\n  }\n\n  initStatusBar(): void {\n    new StatusBar({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    // to do sth.\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppearanceService.html":{"url":"classes/AppearanceService.html","title":"class - AppearanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppearanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/appearance-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Private\n                                evt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onModeChanged\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                updateMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppearanceType\n\n                    \n                \n                \n                    \n                        Default value : AppearanceType.dark\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        evt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter2()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onModeChanged\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModeChanged(fn: (type: AppearanceType) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        type\n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject, ContainerModule } from 'inversify';\nimport { EventEmitter2 } from 'eventemitter2';\n\nimport { AppearanceType } from '@cosmic/core/common';\n\n@injectable()\n/** 外观设置服务 */\nexport class AppearanceService {\n  private _type: AppearanceType = AppearanceType.dark;\n  private evt = new EventEmitter2();\n\n  public updateMode(type: AppearanceType) {\n    if (this._type !== type) {\n      this._type = type;\n      this.evt.emit('onModeChanged', type);\n    }\n  }\n  public onModeChanged(fn: (type: AppearanceType) => void) {\n    this.evt.on('onModeChanged', fn);\n  }\n  public type() {\n    return this._type;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseMenu.html":{"url":"classes/BaseMenu.html","title":"class - BaseMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/base-menu/base-menu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                menuInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(groupMenuService: MenuGroupService)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/base-menu/base-menu.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupMenuService\n                                                  \n                                                        \n                                                                        MenuGroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/base-menu/base-menu.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    initMenu(menuItems: MenuItemConfig[])\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/base-menu/base-menu.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuItems\n                                    \n                                                MenuItemConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { MenuGroupService } from '@cosmic/workbench/services/menu-group-service';\nimport type { Menu, MenuItemConfig } from '../menu';\n\nexport class BaseMenu {\n  private menuInstance!: Menu;\n  constructor(private groupMenuService: MenuGroupService) {}\n\n  public initMenu(menuItems: MenuItemConfig[]): void {\n    this.menuInstance = this.groupMenuService.getMenuInsatance();\n    this.menuInstance.init('文件', menuItems);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColorRef.html":{"url":"classes/ColorRef.html","title":"class - ColorRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColorRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/common/color-ref.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                anyColor\n                            \n                            \n                                    Private\n                                darkColor\n                            \n                            \n                                    Private\n                                lightColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                color\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(anyColor: Color, lightColor?: Color, darkColor?: Color)\n                    \n                \n                        \n                            \n                                Defined in src/core/common/color-ref.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        anyColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lightColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        darkColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        anyColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        darkColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lightColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        color\n                        \n                    \n                \n            \n            \n                \n                    \n                    color(appearanceType: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/common/color-ref.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appearanceType\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type * as Color from 'color';\nimport { AppearanceType } from './appearance';\n\nexport default class ColorRef {\n  private anyColor: Color;\n  private lightColor: Color;\n  private darkColor: Color;\n\n  constructor(anyColor: Color, lightColor?: Color, darkColor?: Color) {\n    this.anyColor = anyColor;\n    this.lightColor = lightColor || anyColor;\n    this.darkColor = darkColor || anyColor;\n  }\n\n  public color(appearanceType: AppearanceType) {\n    switch (appearanceType) {\n      case AppearanceType.any:\n        return this.anyColor;\n      case AppearanceType.light:\n        return this.lightColor;\n      case AppearanceType.dark:\n        return this.darkColor;\n      default:\n        return this.anyColor;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Controller.html":{"url":"interfaces/Controller.html","title":"interface - Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Controller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destroy\n                                        \n                                \n                                \n                                        \n                                            init\n                                        \n                                \n                                \n                                        \n                                            view\n                                        \n                                \n                                \n                                        \n                                            viewDidAppear\n                                        \n                                \n                                \n                                        \n                                            viewDidDisappear\n                                        \n                                \n                                \n                                        \n                                            viewWillAppear\n                                        \n                                \n                                \n                                        \n                                            viewWillDisappear\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destroy:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        init\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        init:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        view\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        view:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewDidAppear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewDidAppear:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewDidDisappear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewDidDisappear:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewWillAppear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewWillAppear:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewWillDisappear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewWillDisappear:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Controller {\n  view: () => HTMLElement;\n  init: () => Controller;\n  viewWillAppear: () => void;\n  viewDidAppear: () => void;\n\n  viewWillDisappear: () => void;\n  viewDidDisappear: () => void;\n\n  destroy: () => void;\n}\n\ndeclare type Props = Record;\ninterface IComponentOptions {\n  target: Element;\n  anchor?: Element;\n  props?: Props;\n  context?: Map;\n  hydrate?: boolean;\n  intro?: boolean;\n  $$inline?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IComponentOptions.html":{"url":"interfaces/IComponentOptions.html","title":"interface - IComponentOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IComponentOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            $$inline\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            anchor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            context\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hydrate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            intro\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            props\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $$inline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $$inline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        anchor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anchor:     Element\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Element\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        context:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hydrate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hydrate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intro\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        intro:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        props\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        props:         Props\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Props\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     Element\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Element\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Controller {\n  view: () => HTMLElement;\n  init: () => Controller;\n  viewWillAppear: () => void;\n  viewDidAppear: () => void;\n\n  viewWillDisappear: () => void;\n  viewDidDisappear: () => void;\n\n  destroy: () => void;\n}\n\ndeclare type Props = Record;\ninterface IComponentOptions {\n  target: Element;\n  anchor?: Element;\n  props?: Props;\n  context?: Map;\n  hydrate?: boolean;\n  intro?: boolean;\n  $$inline?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISettings.html":{"url":"interfaces/ISettings.html","title":"interface - ISettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/settings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            check\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import ElectronStore from 'electron-store';\n\ninterface ISettings {\n  check: boolean;\n}\n\nconst settings = new ElectronStore({\n  defaults: {\n    check: false,\n  },\n});\n\nexport default settings;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISplitBoardView.html":{"url":"interfaces/ISplitBoardView.html","title":"interface - ISplitBoardView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISplitBoardView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/type.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cancelForMerge\n                                        \n                                \n                                \n                                        \n                                            direction\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            resizeAt\n                                        \n                                \n                                \n                                        \n                                            setCursor\n                                        \n                                \n                                \n                                        \n                                            splitColumnAt\n                                        \n                                \n                                \n                                        \n                                            splitRowAt\n                                        \n                                \n                                \n                                        \n                                            waitForMergeAtItem\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancelForMerge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelForMerge:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:         directionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         directionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     SplitItemView[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SplitItemView[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizeAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resizeAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setCursor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setCursor:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitColumnAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitColumnAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitRowAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitRowAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        waitForMergeAtItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        waitForMergeAtItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type View from '../view';\nimport type SplitItemView from './split-item.view';\n\nexport enum directionType {\n  'col',\n  'row',\n}\n\nexport interface ISplitBoardView extends View {\n  items: SplitItemView[];\n  direction: directionType;\n  setCursor: (\n    type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize'\n  ) => void;\n  cancelForMerge: () => void;\n  resizeAt: (index: number, start: number, length: number, position: number) => void;\n  waitForMergeAtItem: (index: number, direction: 'w' | 'e' | 'n' | 's') => void;\n  splitColumnAt: (index: number, clientX: number, clientY: number) => void;\n  splitRowAt: (index: number, clientX: number, clientY: number) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Menu.html":{"url":"classes/Menu.html","title":"class - Menu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Menu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                container\n                            \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                menuItems\n                            \n                            \n                                    Private\n                                menuSvelte\n                            \n                            \n                                    Private\n                                    Readonly\n                                meunsWritable\n                            \n                            \n                                    Private\n                                name\n                            \n                            \n                                    Private\n                                    Readonly\n                                nameWritable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMenu\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                registerItem\n                            \n                            \n                                    Public\n                                removeItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: HTMLElement, id: string)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/menu/menu.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuSvelte\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        meunsWritable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : writable([])\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        nameWritable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : writable('')\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(name: string, config: MenuItemConfig[])\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                MenuItemConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerItem(config: MenuItemConfig, index: number, group?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                MenuItemConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItem(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MenuItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import MenuSvelte from './menu.svelte';\nimport type { MenuItemConfig } from './menu-item';\nimport { MenuItem } from './menu-item';\nimport { writable } from 'svelte/store';\n\nexport default class Menu {\n  public readonly container!: HTMLElement;\n  public readonly id!: string;\n  private name!: string;\n  private menuItems!: MenuItem[];\n  private menuSvelte: any;\n  private readonly context = new Map();\n  private readonly meunsWritable = writable([]);\n  private readonly nameWritable = writable('');\n  constructor(container: HTMLElement, id: string) {\n    this.container = container;\n    this.id = id;\n    this.menuItems = [];\n    this.context.set('menus', this.meunsWritable);\n    this.context.set('name', this.nameWritable);\n  }\n\n  public init(name: string, config: MenuItemConfig[]): void {\n    this.name = name;\n    for (const menuItem of config) {\n      this.menuItems.push(new MenuItem(menuItem));\n    }\n    return this.createMenu();\n  }\n\n  public destroy(): void {\n    while (this.container.firstChild) {\n      this.container.removeChild(this.container.firstChild);\n    }\n    return;\n  }\n\n  public registerItem(config: MenuItemConfig, index: number, group?: string): void {\n    this.menuItems.splice(index, 0, new MenuItem(config));\n    this.meunsWritable.set([...this.menuItems]);\n  }\n\n  public removeItem(index: number): MenuItem {\n    const menuItem = this.menuItems[index];\n    this.meunsWritable.set((this.menuItems = this.menuItems.filter((_, i) => index !== i)));\n    return menuItem;\n  }\n\n  private createMenu(): void {\n    this.menuSvelte = new MenuSvelte({\n      target: this.container,\n      context: this.context,\n    });\n    this.nameWritable.set(this.name);\n    this.meunsWritable.set(this.menuItems);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuGroupService.html":{"url":"classes/MenuGroupService.html","title":"class - MenuGroupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuGroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/menu-group-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                meuns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMenuInsatance\n                            \n                            \n                                    Public\n                                initContainer\n                            \n                            \n                                    Public\n                                removeMenuInstances\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/workbench/services/menu-group-service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/menu-group-service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        meuns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/menu-group-service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getMenuInsatance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenuInsatance()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/menu-group-service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Menu\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initContainer\n                        \n                    \n                \n            \n            \n                \n                    \n                    initContainer(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/menu-group-service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeMenuInstances\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeMenuInstances(menu: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/menu-group-service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\nimport { Menu } from '../desktop/menu';\n\n@injectable()\nexport class MenuGroupService {\n  private container!: HTMLElement;\n  private meuns!: Menu[];\n  constructor() {\n    this.meuns = [];\n  }\n\n  public initContainer(container: HTMLElement): void {\n    if (this.container) {\n      return;\n    }\n    this.container = container;\n  }\n\n  public getMenuInsatance(): Menu {\n    const menuContainer = document.createElement('div');\n    const id = Date.now() + '' + this.meuns.length;\n    this.container.append(menuContainer);\n    const menu = new Menu(menuContainer, id);\n    this.meuns.push(menu);\n    return menu;\n  }\n\n  public removeMenuInstances(menu: Menu): void {\n    this.container.removeChild(menu.container);\n    this.meuns = this.meuns.filter((item) => item.id === menu.id);\n    this.container.removeChild(menu.container);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItem.html":{"url":"classes/MenuItem.html","title":"class - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu-item.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                callback\n                            \n                            \n                                    Private\n                                children\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                title\n                            \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MenuItemConfig)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/menu/menu-item.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MenuItemConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        callback\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuCommonFunction\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItemType\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { uuid } from '../utils';\n/* eslint-disable no-shadow */\nexport enum MenuItemType {\n  group,\n  item,\n}\n\nexport type MenuCommonFunction = (menu: MenuItem, context: any) => void;\n\nexport interface MenuItemConfig {\n  title: string;\n  type: MenuItemType;\n  callback: MenuCommonFunction;\n  command?: string;\n}\n\nexport class MenuItem {\n  public readonly id!: string;\n  private title!: string;\n  private type!: MenuItemType;\n  private callback: MenuCommonFunction;\n  private children!: MenuItem[];\n  constructor(config: MenuItemConfig) {\n    this.id = uuid();\n    const { title, type, callback } = config;\n    if (type === MenuItemType.group) {\n      this.children = [];\n    }\n    this.title = title;\n    this.type = type;\n    this.callback = callback;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemConfig.html":{"url":"interfaces/MenuItemConfig.html","title":"interface - MenuItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu-item.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            command\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         MenuCommonFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuCommonFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         MenuItemType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItemType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { uuid } from '../utils';\n/* eslint-disable no-shadow */\nexport enum MenuItemType {\n  group,\n  item,\n}\n\nexport type MenuCommonFunction = (menu: MenuItem, context: any) => void;\n\nexport interface MenuItemConfig {\n  title: string;\n  type: MenuItemType;\n  callback: MenuCommonFunction;\n  command?: string;\n}\n\nexport class MenuItem {\n  public readonly id!: string;\n  private title!: string;\n  private type!: MenuItemType;\n  private callback: MenuCommonFunction;\n  private children!: MenuItem[];\n  constructor(config: MenuItemConfig) {\n    this.id = uuid();\n    const { title, type, callback } = config;\n    if (type === MenuItemType.group) {\n      this.children = [];\n    }\n    this.title = title;\n    this.type = type;\n    this.callback = callback;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceExplorer.html":{"url":"classes/ResourceExplorer.html","title":"class - ResourceExplorer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceExplorer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/resource-explorer/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SVController\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewWillDisappear\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SVController\n\n                            \n                        \n                    \n                        \n                                Defined in         SVController:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SVController\n\n                            \n                        \n                    \n                        \n                                Defined in         SVController:5\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     this\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './resource-explorer.svelte';\nimport { SVController } from '@cosmic/core/parts';\n\nexport class ResourceExplorer extends SVController {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n\n  viewWillAppear(): void {\n    /** to be completed */\n  }\n  viewDidAppear(): void {\n    /** to be completed */\n  }\n\n  viewWillDisappear(): void {\n    /** to be completed */\n  }\n  viewDidDisappear(): void {\n    /** to be completed */\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SVController.html":{"url":"classes/SVController.html","title":"class - SVController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SVController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/svelte-controller.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Controller\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Abstract\n                                initWithComponent\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                    Abstract\n                                viewDidAppear\n                            \n                            \n                                    Abstract\n                                viewDidDisappear\n                            \n                            \n                                    Abstract\n                                viewWillAppear\n                            \n                            \n                                    Abstract\n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-controller.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-controller.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     this\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    initWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SvelteComponentDev\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-controller.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \n                    \n                    viewDidAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \n                    \n                    viewDidDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \n                    \n                    viewWillAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \n                    \n                    viewWillDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { SvelteComponentDev } from 'svelte/internal';\nimport type { Controller } from './controller';\n\nexport abstract class SVController implements Controller {\n  private comp: SvelteComponentDev;\n  private _view: HTMLElement;\n\n  public view() {\n    return this._view;\n  }\n\n  public init() {\n    this._view = this._view || document.createElement('div');\n    this.viewWillAppear();\n    this.comp = this.initWithComponent(this._view);\n    this.viewDidAppear();\n    return this;\n  }\n\n  abstract initWithComponent(target: Element): SvelteComponentDev;\n\n  abstract viewWillAppear(): void;\n  abstract viewDidAppear(): void;\n\n  abstract viewWillDisappear(): void;\n  abstract viewDidDisappear(): void;\n\n  public destroy() {\n    this.viewWillDisappear();\n    this.comp.$destroy();\n    if (this._view.parentNode) {\n      this._view.parentNode.removeChild(this._view);\n    }\n    this.viewDidDisappear();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardController.html":{"url":"classes/SplitBoardController.html","title":"class - SplitBoardController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeId\n                            \n                            \n                                    Private\n                                expandActive\n                            \n                            \n                                    Private\n                                expandLeaveHandler\n                            \n                            \n                                    Private\n                                expandMouseUpHandler\n                            \n                            \n                                    Private\n                                expandMoveHandler\n                            \n                            \n                                    Private\n                                expandType\n                            \n                            \n                                    Private\n                                startX\n                            \n                            \n                                    Private\n                                startY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeExpand\n                            \n                            \n                                    Public\n                                checkExpandState\n                            \n                            \n                                    Private\n                                liveResize\n                            \n                            \n                                    Public\n                                onMouseDown\n                            \n                            \n                                    Public\n                                setActiveState\n                            \n                            \n                                    Private\n                                unactiveExpand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(view: ISplitBoardView)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        view\n                                                  \n                                                        \n                                                                        ISplitBoardView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandLeaveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMouseUpHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMoveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        activeExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    activeExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkExpandState\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkExpandState(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        liveResize\n                        \n                    \n                \n            \n            \n                \n                    \n                    liveResize(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onMouseDown\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseDown(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setActiveState\n                        \n                    \n                \n            \n            \n                \n                    \n                    setActiveState(index: number, startX: number, startY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        unactiveExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    unactiveExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { directionType } from './type';\nimport type { ISplitBoardView } from './type';\n\nexport default class SplitBoardController {\n  private expandMoveHandler!: (event: MouseEvent) => void;\n  private expandLeaveHandler!: (event: MouseEvent) => void;\n  private expandMouseUpHandler!: (event: MouseEvent) => void;\n\n  private startX = 0;\n  private startY = 0;\n  private activeId = -1;\n\n  private expandActive = false;\n  private expandType = 0; // 是否超过偏移值 0 / 1 expand hor | 2 expand ver | 3 merge hor | 4 merge ver\n\n  constructor(private view: ISplitBoardView) {\n    this.expandMoveHandler = (event: MouseEvent) => {\n      this.liveResize(event.clientX, event.clientY);\n      this.checkExpandState(event.clientX, event.clientY);\n    };\n    this.expandLeaveHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.expandMouseUpHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.view.root.addEventListener('mousedown', (event: MouseEvent) => {\n      this.onMouseDown(event);\n    });\n  }\n  public onMouseDown(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    let index = -1;\n    this.view.items.forEach((item, i) => {\n      if (target && item.root === target.parentElement && target.classList.contains('split-expand')) index = i;\n    });\n    if (index === -1) {\n      return;\n    }\n    if (index > -1) {\n      this.setActiveState(index, event.clientX, event.clientY);\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  public setActiveState(index: number, startX: number, startY: number) {\n    // 锚点mousedown\n    this.startX = startX;\n    this.startY = startY;\n    this.activeExpand();\n    this.activeId = index;\n  }\n  private activeExpand() {\n    this.view.root.addEventListener('mousemove', this.expandMoveHandler);\n    this.view.root.addEventListener('mouseleave', this.expandLeaveHandler);\n    this.view.root.addEventListener('mouseup', this.expandMouseUpHandler);\n    this.expandActive = true;\n    this.expandType = 0;\n    this.view.setCursor('crosshair');\n  }\n  private unactiveExpand() {\n    if (this.expandActive) {\n      this.view.root.removeEventListener('mousemove', this.expandMoveHandler);\n      this.view.root.removeEventListener('mouseleave', this.expandLeaveHandler);\n      this.view.root.removeEventListener('mouseup', this.expandMouseUpHandler);\n      this.view.cancelForMerge();\n      this.expandActive = false;\n      this.expandType = 0;\n      this.view.setCursor('');\n    }\n  }\n  private liveResize(clientX: number, clientY: number) {\n    const item = this.view.items[this.activeId];\n    if (this.expandType === 1 && this.view.direction === directionType.col) {\n      // horizontal expand column\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n    } else if (this.expandType === 2 && this.view.direction === directionType.row) {\n      // vertical expand row\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n    }\n  }\n  public checkExpandState(clientX: number, clientY: number) {\n    const offsetX = this.startX - clientX;\n    const offsetY = this.startY - clientY;\n    /** expand mode */\n    if (this.expandType === 0 && offsetX > 0 && offsetY > 0 && (offsetX > 5 || offsetY > 5)) {\n      if (offsetX > offsetY) {\n        this.view.setCursor('col-resize');\n      } else {\n        this.view.setCursor('row-resize');\n      }\n    }\n    /** merge mode */\n    if (offsetX  5) {\n      this.view.setCursor('w-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'w');\n      return;\n    }\n\n    if (offsetY  5) {\n      this.view.setCursor('n-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'n');\n      return;\n    }\n\n    if (this.expandType) return;\n    /** do expand */\n    if (offsetX > 30) {\n      this.expandType = 1;\n      this.view.setCursor('col-resize');\n      this.view.splitColumnAt(this.activeId, clientX, clientY);\n      return;\n    }\n    if (offsetY > 30) {\n      this.expandType = 2;\n      this.view.setCursor('row-resize');\n      this.view.splitRowAt(this.activeId, clientX, clientY);\n    }\n    if (\n      (this.expandType === 1 && this.view.direction === directionType.row) ||\n      (this.expandType === 2 && this.view.direction === directionType.col)\n    ) {\n      this.unactiveExpand();\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardView.html":{"url":"classes/SplitBoardView.html","title":"class - SplitBoardView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n            \n                Implements\n            \n            \n                            ISplitBoardView\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _waitForMergeItem\n                            \n                            \n                                    Public\n                                controller\n                            \n                            \n                                    Public\n                                direction\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Private\n                                splitInstance\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addColumn\n                            \n                            \n                                    Public\n                                addRow\n                            \n                            \n                                    Public\n                                applySplit\n                            \n                            \n                                    Public\n                                cancelForMerge\n                            \n                            \n                                    Private\n                                checkDirection\n                            \n                            \n                                    Private\n                                destorySplit\n                            \n                            \n                                    Private\n                                getExpandResizes\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Public\n                                insertItemAt\n                            \n                            \n                                    Public\n                                resizeAt\n                            \n                            \n                                    Public\n                                setCursor\n                            \n                            \n                                    Public\n                                splitColumnAt\n                            \n                            \n                                    Public\n                                splitRowAt\n                            \n                            \n                                    Private\n                                startToExpand\n                            \n                            \n                                    Public\n                                waitForMergeAtItem\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.view.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _waitForMergeItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitItemView | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        controller\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SplitBoardController\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        direction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         directionType\n\n                    \n                \n                \n                    \n                        Default value : directionType.col\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitItemView[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        splitInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Split.Instance | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addColumn\n                        \n                    \n                \n            \n            \n                \n                    \n                    addColumn(item: SplitItemView)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addRow\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRow(item: SplitItemView)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applySplit\n                        \n                    \n                \n            \n            \n                \n                    \n                    applySplit(direction: \"vertical\" | \"horizontal\", sizes?: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"vertical\" | \"horizontal\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'horizontal'\n                                    \n\n                                \n                                \n                                    sizes\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkDirection\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkDirection(type: directionType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                directionType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        destorySplit\n                        \n                    \n                \n            \n            \n                \n                    \n                    destorySplit()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getExpandResizes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getExpandResizes(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        insertItemAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertItemAt(item: SplitItemView, pos?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pos\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resizeAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    resizeAt(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:158\n                \n            \n\n\n            \n                \n                    live resize after expanded\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCursor\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCursor(type: string | \"row-resize\" | \"col-resize\" | \"crosshair\" | \"e-resize\" | \"w-resize\" | \"s-resize\" | \"n-resize\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            string | \"row-resize\" | \"col-resize\" | \"crosshair\" | \"e-resize\" | \"w-resize\" | \"s-resize\" | \"n-resize\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        splitColumnAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    splitColumnAt(index: number, clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        splitRowAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    splitRowAt(index: number, clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        startToExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    startToExpand(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMergeAtItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMergeAtItem(index: number, direction: \"w\" | \"e\" | \"n\" | \"s\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"n\" | \"s\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view';\nimport { injectable, inject } from 'inversify';\nimport SplitItemView from './split-item.view';\nimport SplitBoardController from './split-board.controller';\nimport Split from 'split.js';\nimport type { ISplitBoardView } from './type';\nimport { directionType } from './type';\nexport const lowBoardRoot = Symbol.for('FlowTableRoot');\n\n@injectable()\n/** Split Board View */\nexport default class SplitBoardView extends View implements ISplitBoardView {\n  public items: SplitItemView[] = [];\n  public direction: directionType = directionType.col;\n  private splitInstance: Split.Instance | null = null;\n  public controller: SplitBoardController;\n  private _waitForMergeItem: SplitItemView | null = null;\n  constructor() {\n    super();\n    this.init();\n    this.controller = new SplitBoardController(this);\n  }\n  private init() {\n    this.root.classList.add('split-board', 'flex', 'flex-nowrap', 'overflow-hidden');\n    // this.root.style.margin = '0 4px';\n  }\n  public addRow(item: SplitItemView): void {\n    if (!this.checkDirection(directionType.row)) {\n      console.warn('direction is not right when added row', item);\n      return;\n    }\n    this.direction = directionType.row;\n    this.root.classList.remove('flex-row');\n    this.root.classList.add('flex-col');\n    this.insertItemAt(item);\n    this.applySplit('vertical');\n  }\n  public addColumn(item: SplitItemView): void {\n    if (!this.checkDirection(directionType.col)) {\n      console.warn('direction is not right when added col', item);\n      return;\n    }\n    this.direction = directionType.col;\n    this.root.classList.remove('flex-col');\n    this.root.classList.add('flex-row');\n    this.insertItemAt(item);\n    this.applySplit();\n  }\n  public insertItemAt(item: SplitItemView, pos?: number): void {\n    pos = pos === undefined ? this.items.length : pos;\n    this.items.splice(pos, 0, item);\n    if (pos === 0) {\n      this.root.appendChild(item.root);\n    } else {\n      this.items[pos - 1].root.after(item.root);\n    }\n  }\n\n  public setCursor(\n    type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize' = ''\n  ): void {\n    this.root.style.cursor = type;\n  }\n  public waitForMergeAtItem(index: number, direction: 'w' | 'e' | 'n' | 's'): void {\n    if (this._waitForMergeItem === this.items[index]) {\n      return;\n    }\n    this.cancelForMerge();\n    if (this.items[index]) {\n      this.items[index].waitForMerge(direction);\n      this._waitForMergeItem = this.items[index];\n    }\n  }\n  public cancelForMerge(): void {\n    if (this._waitForMergeItem) {\n      this._waitForMergeItem.cancelWaitForMerge();\n      this._waitForMergeItem = null;\n    }\n  }\n  private checkDirection(type: directionType) {\n    if (this.items.length > 1 && this.direction !== type) {\n      return false;\n    }\n    return true;\n  }\n  // public removeColumn(item: SplitItemView) {\n  //     // do sth.\n  // }\n  // public removeRow(item: SplitItemView) {\n  //     // do sth.\n  // }\n  public applySplit(direction: 'vertical' | 'horizontal' = 'horizontal', sizes?: number[]): void {\n    this.destorySplit();\n    this.splitInstance = Split(Array.prototype.slice.call(this.root.children), {\n      sizes,\n      // sizes: [30, 70],\n      minSize: 15,\n      direction,\n      snapOffset: 0,\n      gutterStyle: () => (direction === 'vertical' ? { height: '3px' } : { width: '3px' }),\n    });\n  }\n\n  private destorySplit() {\n    if (this.splitInstance) this.splitInstance.destroy();\n    this.splitInstance = null;\n  }\n  // 切分列\n  public splitColumnAt(index: number, clientX: number, clientY: number): void {\n    const item = this.items[index];\n    if (!this.checkDirection(directionType.col)) {\n      // 列切分行\n      const newBoard = new SplitBoardView().setFlow('1');\n      const contentView = item.contentView;\n      item.replaceContent(newBoard.root);\n      const newItemView = new SplitItemView().setContent(contentView);\n      const newEmptyView = new SplitItemView().setContent(document.createElement('div'));\n      item.hideExpandButton(); // 不再使用该item的拉伸按钮\n      newBoard.addColumn(newItemView);\n      // newBoard.addColumn(newEmptyView);\n      newBoard.controller.setActiveState(0, clientX, clientY);\n      newBoard.controller.checkExpandState(clientX, clientY);\n      return;\n    }\n    // 列扩展列\n    this.startToExpand(index, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n  }\n  // 切分行\n  public splitRowAt(index: number, clientX: number, clientY: number): void {\n    const item = this.items[index];\n    if (!this.checkDirection(directionType.row)) {\n      // 行切分列\n      const newBoard = new SplitBoardView().setFlow('1');\n      const contentView = item.contentView;\n      item.replaceContent(newBoard.root);\n      const newItemView = new SplitItemView().setContent(contentView);\n      const newEmptyView = new SplitItemView().setContent(document.createElement('div'));\n      item.hideExpandButton(); // 不再使用该item的拉伸按钮\n      newBoard.addRow(newItemView);\n      // newBoard.addRow(newEmptyView);\n      newBoard.controller.setActiveState(0, clientX, clientY);\n      newBoard.controller.checkExpandState(clientX, clientY);\n      return;\n    }\n    // 行切分行\n    this.startToExpand(index, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n  }\n\n  private startToExpand(index: number, start: number, length: number, position: number) {\n    const newSizes = this.getExpandResizes(index, start, length, position);\n    const newItem = new SplitItemView().setContent(document.createElement('div'));\n    this.destorySplit();\n    this.insertItemAt(newItem, index + 1);\n    this.applySplit(this.direction === directionType.col ? 'horizontal' : 'vertical', newSizes);\n  }\n\n  /** live resize after expanded  */\n  public resizeAt(index: number, start: number, length: number, position: number): void {\n    if (!this.splitInstance) return;\n    // const item = this.items[index];\n    let max = length;\n    if (this.items[index + 1]) {\n      max += this.items[index + 1].root[this.direction === directionType.col ? 'clientWidth' : 'clientHeight'];\n    }\n    const r = (position - start) / max;\n    if (position - start  {\n      sum += size;\n      if (i === index || i === index + 1) return;\n      other += size;\n    });\n    let newSize = 0;\n    const newSizes: number[] = [];\n    this.splitInstance.getSizes().forEach((size, i) => {\n      if (index === i) {\n        newSize = (sum - other) * r;\n        newSizes.push(newSize);\n      } else if (index + 1 === i) {\n        newSizes.push(sum - other - newSize);\n      } else if (index !== i) {\n        newSizes.push(size);\n      }\n    });\n    this.splitInstance.setSizes(newSizes);\n  }\n\n  private getExpandResizes(index: number, start: number, length: number, position: number) {\n    const r = (position - start) / length;\n    if (r = 1) return undefined;\n    const newSizes: number[] = [];\n    if (this.splitInstance) {\n      this.splitInstance.getSizes().forEach((size, i) => {\n        if (index !== i) {\n          newSizes.push(size);\n          return;\n        }\n        const w = size * r;\n        newSizes.push(w, size - w);\n      });\n    }\n    return newSizes;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitItemView.html":{"url":"classes/SplitItemView.html","title":"class - SplitItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-item.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitExpand\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:67\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view';\nimport SplitExpand from './split-expand.svelte';\n\nenum directionStyles {\n  'w' = 'merge-w',\n  'e' = 'merge-e',\n  's' = 'merge-s',\n  'n' = 'merge-n',\n}\n\nexport default class SplitItemView extends View {\n  private _growClassName = '';\n  private _shrinkClassName = '';\n  private _bgColorClassName: string[] = ['bg-cgray-100', 'dark:bg-cgray-800'];\n\n  public contentView!: HTMLElement;\n  private expand!: SplitExpand;\n\n  constructor() {\n    super();\n    this.addExpandButton();\n    this.setDefaultClass();\n  }\n\n  public setContent(contentView: HTMLElement): SplitItemView {\n    this.contentView = contentView;\n    this.root.classList.add('split-item', 'flex');\n    contentView.classList.add('flex', 'flex-1');\n    return this.prepend(contentView);\n  }\n\n  public replaceContent(contentView: HTMLElement): SplitItemView {\n    this.root.replaceChild(contentView, this.contentView);\n    this.contentView = contentView;\n    contentView.classList.add('flex', 'flex-1');\n    return this;\n  }\n\n  public setGrow(className = 'flex-grow'): void {\n    this.root.classList.remove(this._shrinkClassName);\n    this._shrinkClassName = '';\n    this._growClassName = className;\n    this.root.classList.add(this._growClassName);\n  }\n\n  public setShrink(className = 'flex-shrink'): void {\n    this.root.classList.remove(this._growClassName);\n    this._growClassName = '';\n    this._shrinkClassName = className;\n    this.root.classList.add(this._shrinkClassName);\n  }\n\n  public isShrink(): boolean {\n    return !!this._growClassName;\n  }\n\n  private setDefaultClass() {\n    this.root.classList.add('flex-grow', 'rounded-xl');\n    this.root.classList.add('relative');\n    this.root.classList.add(...this._bgColorClassName);\n  }\n\n  private addExpandButton() {\n    this.expand = new SplitExpand({ target: this.root });\n  }\n  /** To hide expand button */\n  public hideExpandButton(): void {\n    this.expand.expandHidden = true;\n  }\n\n  public waitForMerge(direction: 'w' | 'e' | 's' | 'n'): void {\n    this.cancelWaitForMerge();\n    this.root.classList.add('wait-for-merge');\n    this.expand.mergeDirection = directionStyles[direction];\n  }\n\n  public cancelWaitForMerge(): void {\n    this.root.classList.remove('wait-for-merge');\n    this.expand.mergeDirection = '';\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/View.html":{"url":"classes/View.html","title":"class - View","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  View\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/view.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root?: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/view.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/view.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        type FlowValue = '1' | 'auto' | 'initial' | 'none';\n\nexport default class View {\n  public root: HTMLElement;\n  constructor(root?: HTMLElement) {\n    this.root = root || document.createElement('div');\n  }\n  setFlow(type: FlowValue) {\n    this.root.classList.remove('flex-1', 'flex-auto', 'flex-initial', 'flex-none');\n    this.root.classList.add(`flex-${type}`);\n    return this;\n  }\n  append(child: HTMLElement) {\n    this.root.appendChild(child);\n    return this;\n  }\n  prepend(...childs: HTMLElement[]) {\n    this.root.prepend(...childs);\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeightMap.html":{"url":"interfaces/WeightMap.html","title":"interface - WeightMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WeightMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [index: string]:        number\n\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:11\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/classBuilder.html":{"url":"classes/classBuilder.html","title":"class - classBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  classBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                orderedConfigs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addConfig\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Private\n                                insertConfig\n                            \n                            \n                                    Private\n                                normalizeWeight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configs: stateConfig[], weightMap: WeightMap)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                        stateConfig[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weightMap\n                                                  \n                                                        \n                                                                        WeightMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orderedConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         stateConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/class-builder.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    addConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        normalizeWeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    normalizeWeight(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         stateConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/classConfig.html":{"url":"interfaces/classConfig.html","title":"interface - classConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  classConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            createWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            mainWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            notification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            interface\n            ISettings\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            variable\n            settings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            class\n            classBuilder\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            classConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            stateConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            WeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            variable\n            defaultWeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.controller.ts\n            \n            class\n            SplitBoardController\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            class\n            SplitBoardView\n            \n                3 %\n                (1/26)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            variable\n            lowBoardRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-item.view.ts\n            \n            class\n            SplitItemView\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/core/browser/layout/type.ts\n            \n            interface\n            ISplitBoardView\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            function\n            makeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BgColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BorderColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlAccentColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlBackgroundColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlDisabledColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlForbiddenColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlHighlightColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            FourthBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            GridBackgroundColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            LabelColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemBlueColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemGrayColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemOrangeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemPinkColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemRedColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemYellowColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TextFieldBackground\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/view.ts\n            \n            class\n            View\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/color-ref.ts\n            \n            class\n            ColorRef\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/parts/ioc/inject.ts\n            \n            function\n            inject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/modules/controller.ts\n            \n            interface\n            Controller\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/core/parts/modules/controller.ts\n            \n            interface\n            IComponentOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/core/parts/modules/svelte-controller.ts\n            \n            class\n            SVController\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/index.ts\n            \n            class\n            ResourceExplorer\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/workbench/desktop/app.ts\n            \n            class\n            App\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/workbench/desktop/base-menu/base-menu.ts\n            \n            class\n            BaseMenu\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/workbench/desktop/base-menu/config.ts\n            \n            variable\n            applicationMenus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/desktop/main.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu-item.ts\n            \n            class\n            MenuItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu-item.ts\n            \n            interface\n            MenuItemConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu.ts\n            \n            class\n            Menu\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/workbench/desktop/utils/utils.ts\n            \n            variable\n            uuid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/services/appearance-service.ts\n            \n            class\n            AppearanceService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/workbench/services/menu-group-service.ts\n            \n            class\n            MenuGroupService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @types/color : ^3.0.1\n        \n            color : ^3.1.3\n        \n            electron-log : ^4.3.1\n        \n            electron-store : ^7.0.2\n        \n            electron-updater : ^4.3.5\n        \n            eventemitter2 : ^6.4.4\n        \n            inversify : ^5.1.1\n        \n            keycode : ^2.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            smelte : ^1.1.5\n        \n            split.js : ^1.6.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppearanceType   (src/.../appearance.ts)\n                        \n                        \n                            directionStyles   (src/.../split-item.view.ts)\n                        \n                        \n                            directionType   (src/.../type.ts)\n                        \n                        \n                            MenuItemType   (src/.../menu-item.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/common/appearance.ts\n    \n        \n            \n                \n                    \n                        \n                        AppearanceType\n                    \n                \n                    \n                        \n                            模式类型\n\n                        \n                    \n                        \n                            \n                                 any\n                            \n                        \n                        \n                            \n                                 light\n                            \n                        \n                        \n                            \n                                 dark\n                            \n                        \n            \n        \n\n    src/core/browser/layout/split-item.view.ts\n    \n        \n            \n                \n                    \n                        \n                        directionStyles\n                    \n                \n                        \n                            \n                                 w\n                            \n                        \n                        \n                            \n                                Value : merge-w\n                            \n                        \n                        \n                            \n                                 e\n                            \n                        \n                        \n                            \n                                Value : merge-e\n                            \n                        \n                        \n                            \n                                 s\n                            \n                        \n                        \n                            \n                                Value : merge-s\n                            \n                        \n                        \n                            \n                                 n\n                            \n                        \n                        \n                            \n                                Value : merge-n\n                            \n                        \n            \n        \n\n    src/core/browser/layout/type.ts\n    \n        \n            \n                \n                    \n                        \n                        directionType\n                    \n                \n                        \n                            \n                                 col\n                            \n                        \n                        \n                            \n                                 row\n                            \n                        \n            \n        \n\n    src/workbench/desktop/menu/menu-item.ts\n    \n        \n            \n                \n                    \n                        \n                        MenuItemType\n                    \n                \n                        \n                            \n                                 group\n                            \n                        \n                        \n                            \n                                 item\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            inject   (src/.../inject.ts)\n                        \n                        \n                            makeColor   (src/.../ui-color.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/parts/ioc/inject.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inject\n                        \n                    \n                \n            \n            \n                \ninject(token)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        makeColor\n                        \n                    \n                \n            \n            \n                \nmakeColor(anyColorHex, lightColorHex?, darkColorHex?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anyColorHex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    darkColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCosmic Design\n\n\n\n\n\n\n🚧 ing...\n\nThe Repository\nCosmic design is a concrete practice of D2R.\nThis repository is where we develop it together with the community. Not only do we work on code and issues here, we also publish our roadmap , development guide. This source code is available to everyone under the standard MIT license.\nAbout Cosmic Design\n\n🚧 ing...\n\nHow it works\nThe template required a minimum dependencies. Only Vite is used for building, nothing more.\nProject Structure\nThe structure of this template is very similar to the structure of a monorepo.\nThe entire source code of the program is divided into three modules (packages) that are bundled each independently:\n\nsrc/core\nInclude common dependencies, such as components, utils, ipc.\nsrc/app\nElectron main script.\nsrc/modules\nModules of tools\nsrc/workbench\nElectron web page.\n\nCosmic Components\n\nComponents StoryBook\nsrc/core/components\n\nCompile App\nNext step is run packaging and compilation a ready for distribution Electron app for macOS, Windows and Linux with \"auto update\" support out of the box.\nTo do this, using the electron-builder:\n\nIn npm script compile: This script is configured to compile the application as quickly as possible. It is not ready for distribution, is compiled only for the current platform and is used for debugging.\nIn GitHub Action: The application is compiled for any platform and ready-to-distribute files are automatically added to the draft GitHub release.\n\nContribution\nSee Wiki Contributing\n\nSource Code Organization\nUser Interface\nColor Set\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 qiansc\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/stateConfig.html":{"url":"interfaces/stateConfig.html","title":"interface - stateConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  stateConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:         classConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         classConfig[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationMenusType   (src/.../config.ts)\n                        \n                        \n                            FlowValue   (src/.../view.ts)\n                        \n                        \n                            MenuCommonFunction   (src/.../menu-item.ts)\n                        \n                        \n                            Props   (src/.../controller.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/base-menu/config.ts\n    \n    \n        \n            \n                \n                    \n                    ApplicationMenusType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/core/browser/view.ts\n    \n    \n        \n            \n                \n                    \n                    FlowValue\n                \n            \n            \n                \n                        \"1\" | \"auto\" | \"initial\" | \"none\"\n\n                \n            \n        \n    \n    src/workbench/desktop/menu/menu-item.ts\n    \n    \n        \n            \n                \n                    \n                    MenuCommonFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/core/parts/modules/controller.ts\n    \n    \n        \n            \n                \n                    \n                    Props\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (src/.../main.ts)\n                        \n                        \n                            applicationMenus   (src/.../config.ts)\n                        \n                        \n                            BgColor   (src/.../ui-color.ts)\n                        \n                        \n                            BorderColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlAccentColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlDisabledColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlForbiddenColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlHighlightColor   (src/.../ui-color.ts)\n                        \n                        \n                            createWindow   (src/.../index.ts)\n                        \n                        \n                            defaultWeightMap   (src/.../class-builder.ts)\n                        \n                        \n                            FourthBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            GridBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            isProd   (src/.../index.ts)\n                        \n                        \n                            isProd   (src/.../logger.ts)\n                        \n                        \n                            LabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            logger   (src/.../logger.ts)\n                        \n                        \n                            lowBoardRoot   (src/.../split-board.view.ts)\n                        \n                        \n                            mainWindow   (src/.../index.ts)\n                        \n                        \n                            notification   (src/.../index.ts)\n                        \n                        \n                            SecondaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            SecondaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            settings   (src/.../settings.ts)\n                        \n                        \n                            SystemBlueColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemGrayColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemOrangeColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemPinkColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemRedColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemYellowColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            TextFieldBackground   (src/.../ui-color.ts)\n                        \n                        \n                            uuid   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new App(document.body)\n                    \n                \n\n\n        \n    \n\n    src/workbench/desktop/base-menu/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applicationMenus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationMenusType[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    title: '文件',\n    items: [\n      {\n        title: '打开文件',\n        type: MenuItemType.group,\n        /* eslint no-console: \"off\" */\n        callback: (item, context) => console.log(item, context),\n      },\n      {\n        title: '保存',\n        type: MenuItemType.group,\n        /* eslint no-console: \"off\" */\n        callback: (item, context) => console.log(item, context),\n      },\n\n      {\n        title: '另存为',\n        type: MenuItemType.group,\n        /* eslint no-console: \"off\" */\n        callback: (item, context) => console.log(item, context),\n      },\n    ],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#E0E0E0', '#E0E0E0', '#1F1F1F')\n                    \n                \n\n            \n                \n                    三级背景色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BorderColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D9D9D9', '#D9D9D9', '#D9D9D9')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlAccentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#5580c0', '#5580c0', '#5580c0')\n                    \n                \n\n            \n                \n                    高亮色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#FFFFFF', '#5D5F61')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlDisabledColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F9F9F9', '#F9F9F9', '#464749')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlForbiddenColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlHighlightColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#ffae2b', '#ffae2b', '#ffae2b')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FourthBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#BABABA', '#BABABA', '#454545')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GridBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F2F2F2', '#F2F2F2', '#2E2F30')\n                    \n                \n\n            \n                \n                    组件色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#E0E0E0')\n                    \n                \n\n            \n                \n                    三级标签色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D7D7D7', '#D7D7D7', '#272728')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#808080')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemBlueColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#729cd4', '#729cd4', '#729cd4')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemGrayColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c0c0c1', '#c0c0c1', '#c0c0c1')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemOrangeColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemPinkColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c4666f', '#c4666f', '#c4666f')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemRedColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemYellowColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n            \n                \n                    辅助色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#C6C6C6', '#C6C6C6', '#393939')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#3F3F3F', '#3F3F3F', '#3F3F3F')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TextFieldBackground\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#F2F2F2', '#454545')\n                    \n                \n\n\n        \n    \n\n    src/app/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createWindow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  mainWindow = new BrowserWindow({\n    width: 900,\n    height: 680,\n    webPreferences: {\n      devTools: isProd ? false : true,\n      contextIsolation: true,\n      enableRemoteModule: false,\n      // preload: join(__dirname, 'preload.js'),\n    },\n  });\n\n  const url =\n    // process.env.NODE_ENV === \"production\"\n    isProd\n      ? // in production, use the statically build version of our application\n        `file://${join(__dirname, 'dist/workbench/desktop/', 'index.html')}`\n      : // in dev, target the host and port of the local rollup web server\n        'http://localhost:5000/workbench/desktop/';\n\n  mainWindow.loadURL(url).catch((err: any) => {\n    logger.error(JSON.stringify(err));\n    app.quit();\n  });\n\n  if (!isProd) mainWindow.webContents.openDevTools();\n\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BrowserWindow | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Notification | null\n\n                    \n                \n\n\n        \n    \n\n    src/core/browser/class-builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultWeightMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WeightMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/utils/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log\n                    \n                \n\n\n        \n    \n\n    src/core/browser/layout/split-board.view.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lowBoardRoot\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('FlowTableRoot')\n                    \n                \n\n\n        \n    \n\n    src/app/utils/settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ElectronStore({\n  defaults: {\n    check: false,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/workbench/desktop/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): string => {\n  const s: string[] | number[] = [];\n  const hexDigits = '0123456789abcdef';\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
