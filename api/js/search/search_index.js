var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/App.html",[0,0.084,1,2.004]],["body/classes/App.html",[0,0.055,1,2.006,2,0.387,3,0.22,4,0.195,5,0.195,6,1.848,7,0.106,8,0.414,9,0.912,10,4.359,11,5.387,12,0.805,13,1.915,14,4.558,15,4.558,16,4.558,17,4.558,18,4.558,19,4.558,20,3.354,21,3.354,22,4.558,23,4.558,24,3.354,25,4.558,26,0.941,27,1.848,28,1.998,29,1.378,30,3.354,31,1.094,32,0.029,33,1.094,34,0.479,35,0.941,36,2.214,37,2.195,38,0.591,39,0.941,40,1.434,41,2.475,42,2.195,43,1.438,44,2.195,45,1.114,46,2.195,47,2.195,48,2.195,49,2.195,50,3.354,51,2.195,52,3.354,53,2.195,54,2.195,55,2.195,56,3.354,57,3.242,58,2.195,59,2.195,60,1.056,61,0.812,62,1.848,63,1.746,64,0.941,65,1.154,66,1.102,67,1.449,68,2.195,69,2.824,70,1.848,71,2.195,72,1.848,73,3.354,74,2.195,75,2.195,76,3.354,77,2.195,78,3.354,79,3.354,80,2.195,81,3.354,82,2.195,83,2.214,84,2.195,85,1.848,86,2.195,87,0.22,88,1.313,89,3.354,90,2.195,91,1.619,92,2.195,93,2.195,94,2.195,95,2.195,96,2.195,97,2.475,98,2.195,99,1.495,100,2.195,101,2.195,102,2.006,103,2.195,104,2.195,105,1.619,106,2.195,107,2.195,108,2.195,109,2.195,110,2.195,111,2.195,112,2.195,113,2.195,114,2.195,115,2.195,116,1.619,117,2.195,118,2.824,119,2.195,120,4.558,121,2.195,122,2.112,123,2.475,124,1.568,125,4.558,126,2.195,127,3.354,128,2.195,129,2.195,130,2.195,131,2.195,132,1.449,133,2.195,134,2.195,135,0.009,136,0.014,137,0.009]],["title/classes/AppearanceService.html",[0,0.084,67,2.212]],["body/classes/AppearanceService.html",[0,0.088,2,0.616,3,0.35,4,0.311,5,0.311,7,0.169,8,0.579,9,1.069,12,1.125,29,1.313,31,1.125,32,0.028,33,1.125,34,0.586,35,0.968,38,0.826,39,2.011,40,1.21,43,1.269,45,0.996,57,4.157,60,0.932,61,1.294,62,2.946,67,3.096,87,0.35,116,3.46,135,0.014,136,0.019,137,0.014,138,5.108,139,2.946,140,5.29,141,5.29,142,1.317,143,4.69,144,4.69,145,3.499,146,4.759,147,3.499,148,4.69,149,3.499,150,4.69,151,1.911,152,3.499,153,4.69,154,3.499,155,2.011,156,1.756,157,3.499,158,5.29,159,3.499,160,3.499,161,0.903]],["title/classes/BaseMenu.html",[0,0.084,162,2.472]],["body/classes/BaseMenu.html",[0,0.101,2,0.711,3,0.404,4,0.359,5,0.359,7,0.195,8,0.636,9,0.999,12,1.236,26,1.732,29,1.263,31,1.236,32,0.028,33,1.236,34,0.549,35,1.063,43,0.969,45,0.908,60,0.908,69,3.399,70,5.03,72,3.399,87,0.404,88,2.414,132,4.074,135,0.017,136,0.021,137,0.017,142,1.171,162,3.8,163,3.943,164,5.03,165,3.399,166,5.672,167,5.15,168,4.037,169,5.15,170,5.15,171,5.15,172,5.974,173,4.037,174,5.15,175,4.037,176,4.037,177,4.037]],["title/classes/ColorRef.html",[0,0.084,178,2.472]],["body/classes/ColorRef.html",[0,0.088,2,0.621,3,0.352,4,0.313,5,0.313,7,0.17,8,0.581,9,1.126,12,1.13,26,1.511,29,1.316,31,1.13,32,0.028,33,1.13,34,0.541,35,0.972,38,0.83,43,0.845,57,4.012,60,0.83,87,0.352,116,2.599,135,0.014,136,0.019,137,0.014,142,1.096,161,1.463,178,3.476,179,5.118,180,2.965,181,6.207,182,6.207,183,6.207,184,4.98,185,4.711,186,4.711,187,3.476,188,3.522,189,3.522,190,4.711,191,3.522,192,3.522,193,5.308,194,4.711,195,4.711,196,2.599,197,3.916,198,3.522,199,3.522]],["title/classes/Controller.html",[0,0.084,65,1.153]],["body/classes/Controller.html",[0,0.101,2,0.71,3,0.403,4,0.358,5,0.358,7,0.195,12,1.234,28,1.769,29,1.373,32,0.028,43,1.479,45,1.052,60,0.71,61,1.489,65,1.769,87,0.403,135,0.017,136,0.021,137,0.017,155,2.205,200,3.391,201,5.025,202,1.432,203,2.765,204,2.765,205,2.56,206,2.765,207,4.027,208,4.027,209,4.027,210,4.027,211,4.027,212,5.665,213,4.027,214,4.027,215,2.408,216,4.027,217,4.027,218,4.027,219,5.142]],["title/interfaces/ISettings.html",[220,0.374,221,2.472]],["body/interfaces/ISettings.html",[3,0.472,4,0.42,5,0.42,7,0.228,8,0.7,32,0.028,34,0.42,38,0.831,40,1.217,60,0.831,87,0.472,99,1.308,135,0.019,136,0.023,137,0.019,220,0.526,221,4.184,222,1.744,223,3.479,224,5.435,225,4.487,226,4.774,227,3.479,228,3.97,229,4.184,230,3.97,231,3.479]],["title/interfaces/ISplitBoardView.html",[220,0.374,232,2.004]],["body/interfaces/ISplitBoardView.html",[3,0.333,4,0.296,5,0.296,7,0.289,8,0.56,32,0.028,34,0.574,45,1.053,60,0.799,87,0.516,135,0.014,136,0.019,137,0.014,151,3.549,202,1.328,220,0.506,222,1.231,232,2.711,233,2.197,234,1.56,235,4.662,236,3.824,237,4.662,238,4.662,239,4.662,240,4.662,241,4.662,242,4.662,243,2.566,244,3.025,245,2.456,246,2.802,247,2.456,248,2.711,249,2.477,250,1.542,251,2.456,252,2.802,253,2.276,254,2.585,255,4.411,256,2.802,257,2.711,258,2.477,259,2.477,260,2.477,261,2.802,262,2.802,263,2.802,264,3.346,265,3.346]],["title/interfaces/ItemGenerateDelegate.html",[220,0.374,250,1.552]],["body/interfaces/ItemGenerateDelegate.html",[3,0.373,4,0.332,5,0.332,7,0.299,8,0.604,32,0.028,34,0.516,45,1.089,60,0.862,87,0.546,135,0.015,136,0.02,137,0.015,151,2.674,202,1.31,220,0.546,222,1.38,232,2.231,233,2.463,234,1.283,235,3.141,236,3.231,237,3.141,238,3.141,239,3.141,240,3.141,241,3.141,242,3.141,243,2.268,244,2.674,245,2.753,246,3.141,247,2.753,248,2.927,249,2.674,250,2.268,251,4.278,252,3.141,253,2.457,254,2.631,255,4.558,256,3.141,257,2.927,258,2.674,259,2.674,260,2.674,261,3.141,262,3.141,263,3.141,264,3.611,265,3.611]],["title/classes/MenuBar.html",[0,0.084,266,2.212]],["body/classes/MenuBar.html",[0,0.072,2,0.509,3,0.289,4,0.257,5,0.257,7,0.14,8,0.507,9,0.918,12,0.985,13,2.114,28,1.413,29,1.382,31,0.693,32,0.028,33,0.693,34,0.49,35,0.596,38,0.509,40,0.745,43,1.442,45,0.918,60,0.969,61,1.068,63,1.239,64,1.239,65,2.068,66,2.062,87,0.289,99,1.14,124,1.791,132,3.632,135,0.012,136,0.017,137,0.012,142,0.987,155,1.762,156,1.45,161,1.344,163,3.774,202,1.249,203,2.215,204,2.215,205,2.234,206,2.215,220,0.322,234,1.413,243,1.338,250,1.338,266,2.712,267,2.131,268,2.457,269,1.768,270,2.612,271,2.234,272,2.062,273,2.234,274,2.888,275,3.774,276,2.888,277,2.888,278,2.062,279,1.903,280,2.888,281,2.888,282,4.025,283,1.519,284,2.549,285,2.888,286,2.888,287,1.727,288,1.727,289,1.727,290,1.338,291,1.727,292,2.432,293,3.031,294,1.906,295,1.903,296,2.432,297,2.432,298,2.432,299,2.432,300,2.432,301,2.432,302,2.432,303,2.432,304,2.432,305,2.432]],["title/interfaces/MenuProps.html",[220,0.374,275,2.212]],["body/interfaces/MenuProps.html",[0,0.091,3,0.362,4,0.322,5,0.322,7,0.175,8,0.592,9,0.845,13,1.774,28,1.245,32,0.029,34,0.479,38,0.638,40,0.934,60,1.05,61,1.338,63,1.552,64,1.552,65,1.65,66,2.408,87,0.362,99,1.331,124,1.245,132,3.935,135,0.015,136,0.02,137,0.015,142,0.747,155,2.057,156,1.817,161,1.479,163,2.389,202,0.868,205,1.552,220,0.404,222,1.338,234,1.245,243,1.677,250,1.677,266,2.389,267,2.671,268,2.164,269,1.774,270,1.977,271,1.552,273,1.552,275,3.782,279,1.677,282,5.019,283,1.99,290,1.677,291,2.164,292,3.047,293,3.539,294,2.389,295,2.223,296,3.047,297,3.047,298,3.047,299,3.047,300,3.047,301,3.047,302,3.047,303,3.047,304,3.047,305,3.047]],["title/interfaces/Module.html",[220,0.374,269,1.239]],["body/interfaces/Module.html",[3,0.436,4,0.388,5,0.388,7,0.211,8,0.667,32,0.028,34,0.547,87,0.436,124,2.172,135,0.018,136,0.022,137,0.018,151,3.516,220,0.486,222,1.613,253,3.17,269,2,271,2.635,272,3.084,273,2.635,306,3.673,307,5.407,308,5.407,309,5.407,310,4.553]],["title/interfaces/ModuleConfig.html",[220,0.374,290,1.552]],["body/interfaces/ModuleConfig.html",[0,0.089,3,0.357,4,0.318,5,0.318,7,0.173,8,0.587,9,0.629,10,3.943,13,1.32,32,0.028,34,0.476,40,1.227,41,3.507,60,0.942,61,1.758,63,1.531,87,0.476,88,2.135,91,3.507,97,3.507,99,1.319,124,1.228,135,0.015,136,0.019,137,0.015,155,2.039,161,1.471,196,2.634,197,3.943,220,0.398,222,1.32,269,2.369,283,2.303,290,2.202,295,2.64,311,2.634,312,2.634,313,3.006,314,3.006,315,3.006,316,2.634,317,3.006,318,2.386,319,3.006,320,4.002,321,4.797,322,4.002,323,4.002,324,3.006,325,3.006,326,3.006,327,3.006,328,4.499,329,3.006,330,3.006,331,3.006,332,3.006,333,3.006,334,3.006,335,3.006,336,3.006,337,3.006,338,3.006,339,3.006,340,3.006,341,3.006]],["title/classes/ModuleFactory.html",[0,0.084,63,1.437]],["body/classes/ModuleFactory.html",[0,0.072,2,0.505,3,0.287,4,0.255,5,0.255,7,0.139,8,0.504,9,0.839,10,4.208,12,0.98,13,1.761,26,1.23,29,1.27,31,1.316,32,0.028,33,1.316,34,0.534,35,1.133,38,0.72,39,1.753,40,1.229,41,3.83,43,1.245,45,0.505,60,0.839,61,1.511,63,1.753,87,0.409,88,1.715,91,3.83,97,3.015,99,1.134,124,1.638,135,0.012,136,0.017,137,0.012,155,1.753,161,1.34,196,2.115,197,3.513,220,0.32,269,2.318,278,1.439,283,2.361,290,1.328,295,1.328,311,4.331,312,2.115,313,2.414,314,2.414,315,2.414,316,2.115,317,2.414,318,2.606,319,3.441,320,4.37,321,4.942,322,4.37,323,3.441,324,2.414,325,2.414,326,2.414,327,2.414,328,4.009,329,2.414,330,2.414,331,3.441,332,2.414,333,3.441,334,2.414,335,3.441,336,2.414,337,2.414,338,2.414,339,2.414,340,2.414,341,2.414,342,4.086,343,4.086,344,4.086,345,2.867,346,2.867,347,2.867,348,2.867,349,4.37,350,2.867,351,2.867,352,2.867]],["title/classes/ModuleItem.html",[0,0.084,353,2.004]],["body/classes/ModuleItem.html",[0,0.056,2,0.392,3,0.223,4,0.198,5,0.198,7,0.108,8,0.418,9,1.059,12,0.813,28,2.006,29,1.446,31,1.339,32,0.028,33,1.339,34,0.567,35,1.152,36,2.238,38,0.871,39,2.12,40,0.575,43,1.475,45,0.954,60,0.597,64,0.955,66,1.118,87,0.223,99,0.618,135,0.009,136,0.014,137,0.009,142,1.374,161,0.575,202,1.102,225,1.642,234,1.166,236,1.469,244,3.501,257,2.028,258,1.852,259,1.852,260,1.852,269,1.925,283,2.114,284,2.953,310,2.855,349,3.458,353,2.746,354,4.161,355,1.874,356,4.107,357,2.855,358,2.855,359,2.855,360,3.866,361,3.03,362,4.592,363,3.458,364,3.458,365,3.458,366,3.458,367,2.855,368,2.855,369,3.458,370,2.855,371,2.855,372,2.855,373,2.502,374,2.502,375,2.502,376,2.226,377,2.226,378,2.226,379,1.874,380,2.855,381,1.031,382,1.874,383,1.118,384,2.226,385,2.226,386,2.226,387,2.226,388,1.874,389,2.226,390,1.874,391,2.226,392,2.226,393,2.226,394,2.226,395,1.874,396,1.874,397,2.226,398,1.874,399,2.226,400,1.874,401,2.226,402,2.226,403,1.874,404,2.226,405,2.855,406,2.502,407,1.874,408,1.874,409,2.226,410,1.874,411,1.874,412,2.226,413,1.642,414,1.874,415,1.642,416,1.642,417,1.874,418,1.642,419,1.642,420,2.238,421,1.874,422,2.028,423,1.642,424,2.226]],["title/classes/PropertyPanel.html",[0,0.084,83,2.212]],["body/classes/PropertyPanel.html",[0,0.081,2,0.572,3,0.325,4,0.289,5,0.289,7,0.157,8,0.55,9,0.966,12,1.069,13,2.026,28,1.117,29,1.441,31,1.069,32,0.028,33,1.069,34,0.511,35,0.92,38,0.572,40,0.838,43,1.507,45,0.966,60,0.785,64,1.392,65,1.976,83,2.942,87,0.325,122,2.065,124,1.751,135,0.013,136,0.018,137,0.013,142,1.278,161,1.15,202,1.221,203,2.358,204,2.358,205,2.183,206,2.358,215,3.044,234,1.533,253,2.556,270,2.435,271,2.183,272,2.238,273,2.35,278,2.238,279,1.504,284,2.997,287,1.941,288,1.941,289,1.941,425,2.733,426,2.733,427,3.471,428,2.942,429,2.942,430,2.395,431,2.143,432,2.395,433,3.289,434,2.942,435,2.395,436,2.395,437,2.395,438,2.143,439,2.143,440,3.289,441,2.395]],["title/classes/ResourceExplorer.html",[0,0.084,442,2.472]],["body/classes/ResourceExplorer.html",[0,0.081,2,0.572,3,0.325,4,0.289,5,0.289,7,0.157,8,0.55,9,0.966,12,1.069,13,2.026,28,1.117,29,1.441,31,1.069,32,0.028,33,1.069,34,0.511,35,0.92,38,0.572,40,0.838,43,1.507,45,0.966,60,0.785,64,1.392,65,1.976,87,0.325,122,2.065,124,1.751,135,0.013,136,0.018,137,0.013,142,1.278,161,1.15,202,1.221,203,2.358,204,2.358,205,2.183,206,2.358,215,3.044,234,1.533,253,2.556,270,2.435,271,2.183,272,2.238,273,2.35,278,2.238,279,1.504,284,2.997,287,1.941,288,1.941,289,1.941,427,3.471,428,2.942,429,2.942,430,2.395,431,2.143,432,2.395,433,3.289,434,2.942,435,2.395,436,2.395,437,2.395,438,2.143,439,2.143,440,3.289,441,2.395,442,3.289,443,2.733,444,2.733]],["title/classes/ShapeCanvas.html",[0,0.084,445,2.472]],["body/classes/ShapeCanvas.html",[0,0.081,2,0.572,3,0.325,4,0.289,5,0.289,7,0.157,8,0.55,9,0.966,12,1.069,13,2.026,28,1.117,29,1.441,31,1.069,32,0.028,33,1.069,34,0.511,35,0.92,38,0.572,40,0.838,43,1.507,45,0.966,60,0.785,64,1.392,65,1.976,87,0.325,122,2.065,124,1.751,135,0.013,136,0.018,137,0.013,142,1.278,161,1.15,202,1.221,203,2.358,204,2.358,205,2.183,206,2.358,215,3.044,234,1.533,253,2.556,270,2.435,271,2.183,272,2.238,273,2.35,278,2.238,279,1.504,284,2.997,287,1.941,288,1.941,289,1.941,427,3.471,428,2.942,429,2.942,430,2.395,431,2.143,432,2.395,433,3.289,434,2.942,435,2.395,436,2.395,437,2.395,438,2.143,439,2.143,440,3.289,441,2.395,445,3.289,446,2.733,447,2.733]],["title/classes/SplitBoardController.html",[0,0.084,448,2.472]],["body/classes/SplitBoardController.html",[0,0.043,2,0.303,3,0.172,4,0.153,5,0.153,7,0.238,8,0.342,9,1.144,12,0.664,26,0.738,28,0.592,29,1.31,31,1.048,32,0.029,33,1.048,34,0.517,35,0.902,38,0.823,39,1.875,43,1.12,45,0.954,60,0.488,87,0.172,88,1.028,99,1.106,122,1.283,135,0.007,136,0.011,137,0.007,142,1.089,151,1.9,161,1.128,202,0.664,231,2.566,232,2.384,243,0.797,249,0.939,254,2.503,255,3.446,258,0.939,260,0.939,264,3.446,265,3.994,361,3.624,422,1.028,448,2.044,449,3.556,450,1.448,451,3.477,452,3.477,453,3.477,454,3.477,455,3.477,456,3.477,457,4.911,458,4.911,459,3.986,460,2.77,461,2.77,462,2.77,463,2.77,464,3.986,465,1.72,466,2.77,467,3.481,468,1.72,469,1.72,470,1.72,471,1.72,472,1.72,473,2.83,474,1.72,475,1.72,476,1.72,477,2.77,478,1.72,479,2.77,480,1.72,481,2.77,482,5.414,483,1.72,484,4.301,485,2.77,486,1.72,487,1.72,488,2.77,489,3.986,490,2.77,491,1.448,492,2.295,493,1.448,494,3.477,495,1.72,496,3.477,497,1.72,498,3.477,499,3.477,500,3.477,501,1.72,502,1.72,503,1.72,504,1.72,505,1.72,506,1.72,507,1.72,508,1.72,509,1.72,510,1.72,511,1.72,512,1.72,513,2.77,514,2.77,515,1.72,516,1.72,517,1.72,518,1.72,519,1.72,520,3.477,521,1.269,522,5.414,523,1.72,524,1.72,525,1.72,526,1.72,527,1.72,528,1.72,529,1.72,530,3.986,531,2.044,532,1.269,533,1.72,534,2.77,535,1.72,536,1.72,537,2.77,538,1.269,539,1.72,540,1.72,541,4.67,542,4.67,543,2.77,544,3.986,545,2.77,546,2.77,547,1.72,548,2.77,549,1.72,550,2.77,551,1.72,552,1.72]],["title/classes/SplitItemView.html",[0,0.084,244,1.83]],["body/classes/SplitItemView.html",[0,0.048,2,0.341,3,0.194,4,0.172,5,0.172,7,0.094,8,0.376,9,1.091,12,0.73,26,1.613,28,2.029,29,1.397,31,1.279,32,0.028,33,1.279,34,0.537,35,1.1,36,2.009,38,0.867,39,1.987,40,0.5,43,1.415,45,1.025,60,0.536,87,0.194,122,0.897,123,1.428,135,0.008,136,0.012,137,0.008,142,1.344,161,0.97,202,1.279,225,2.245,234,1.047,236,1.278,244,2.687,245,1.428,247,1.428,257,2.771,258,2.531,259,2.531,260,2.531,283,1.971,284,1.975,357,3.166,358,3.166,359,3.166,360,4.332,361,3.419,363,3.588,364,3.588,365,3.588,366,3.588,367,2.562,368,2.562,369,3.588,370,2.562,371,2.562,372,2.562,373,2.245,374,2.245,375,2.245,379,2.562,380,3.588,381,1.41,382,2.562,383,1.528,388,3.588,390,1.63,395,2.562,396,2.562,398,2.562,400,2.562,403,2.562,405,3.588,406,3.796,407,3.166,408,2.562,410,2.562,411,2.562,413,1.428,414,1.63,415,1.428,416,1.428,417,1.63,418,1.428,419,1.428,420,2.009,421,1.63,422,1.157,449,3.674,467,2.009,492,3.247,521,1.428,553,1.428,554,3.043,555,1.936,556,1.936,557,1.936,558,1.936,559,1.936,560,1.936,561,1.936,562,1.936,563,1.936,564,1.936,565,1.936,566,1.936,567,1.936,568,1.936,569,1.936,570,1.63,571,1.428,572,1.936,573,1.936,574,3.76,575,1.936,576,3.043,577,1.936,578,1.936,579,1.936,580,3.043,581,3.76,582,1.936,583,1.936,584,1.936,585,1.936,586,1.936,587,1.936,588,1.936,589,1.936,590,1.936,591,1.936,592,1.936,593,1.936,594,3.043,595,1.936,596,1.936]],["title/classes/SvelteModule.html",[0,0.084,427,1.83]],["body/classes/SvelteModule.html",[0,0.073,2,0.512,3,0.291,4,0.258,5,0.258,7,0.14,8,0.509,9,1.009,12,0.989,13,2.118,28,1.419,29,1.413,31,0.989,32,0.028,33,0.989,34,0.524,35,0.851,43,1.469,45,0.92,60,0.92,61,1.074,65,2.071,66,1.458,87,0.291,122,1.346,124,1.897,135,0.012,136,0.017,137,0.012,142,1.31,155,1.769,161,1.238,201,4.96,202,1.252,203,2.222,204,2.222,205,2.239,206,2.222,215,2.868,234,1.419,253,2.958,268,2.466,269,1.93,270,2.62,271,2.239,272,2.07,273,2.239,278,2.07,279,1.911,284,2.555,287,1.737,288,1.737,289,1.737,293,3.538,294,1.917,427,2.253,428,3.165,429,2.722,431,3.639,434,2.722,438,1.917,439,1.917,597,5.069,598,2.445,599,2.904,600,2.904,601,2.904,602,2.904,603,2.904,604,2.904,605,2.904,606,2.904,607,2.143,608,2.904,609,2.904,610,2.904,611,2.904,612,2.904]],["title/classes/View.html",[0,0.084,202,0.804]],["body/classes/View.html",[0,0.092,2,0.65,3,0.369,4,0.328,5,0.328,7,0.178,8,0.599,12,1.165,26,1.581,27,4.089,28,2.256,29,1.336,31,1.384,32,0.028,33,1.384,34,0.567,35,1.191,36,3.959,38,0.65,43,1.303,87,0.369,123,2.721,135,0.015,136,0.02,137,0.015,142,1.121,161,1.402,187,2.721,202,1.165,294,2.434,373,3.583,374,3.583,375,3.583,406,4.007,413,3.583,415,2.721,416,3.583,418,2.721,419,3.583,420,3.809,467,3.206,613,2.721,614,4.856,615,3.687,616,3.687,617,3.687,618,3.583,619,4.089,620,4.089,621,3.687,622,3.687,623,3.687,624,3.687]],["title/interfaces/WeightMap.html",[220,0.374,625,1.682]],["body/interfaces/WeightMap.html",[0,0.126,2,0.687,3,0.39,4,0.347,5,0.347,7,0.244,9,0.983,29,0.868,32,0.028,38,0.687,45,0.887,87,0.39,99,1.397,135,0.016,136,0.021,137,0.016,142,1.039,220,0.622,222,1.441,254,2.22,283,2.257,295,2.333,381,1.806,383,1.957,473,1.957,625,3.065,626,2.751,627,2.129,628,3.897,629,3.897,630,2.751,631,3.415,632,2.573,633,2.751,634,2.331,635,2.331,636,2.331,637,2.331,638,2.331,639,2.331,640,2.331,641,2.331,642,2.331,643,2.129,644,2.573,645,2.573,646,2.573,647,3.324,648,2.573,649,2.573,650,2.573,651,2.573,652,2.331,653,2.573,654,2.573,655,2.573,656,2.573]],["title/classes/Workbench.html",[0,0.084,102,2.004]],["body/classes/Workbench.html",[0,0.055,2,0.39,3,0.221,4,0.197,5,0.197,7,0.238,8,0.417,9,0.915,12,0.81,13,1.921,26,0.949,29,1.353,31,0.982,32,0.029,33,0.982,34,0.527,35,0.845,38,0.39,40,0.871,43,1.369,45,0.982,60,0.869,61,0.819,63,2.575,64,0.949,65,2.003,66,1.695,87,0.221,99,1.368,102,2.019,105,2.491,124,1.696,135,0.009,136,0.014,137,0.009,142,1.072,155,1.448,156,1.111,161,1.272,202,1.296,203,2.121,204,2.121,205,1.964,206,2.121,220,0.247,234,1.161,243,1.026,248,2.019,249,1.844,250,1.896,251,2.491,254,2.067,268,2.019,269,2.06,271,1.964,272,1.695,273,1.964,278,1.695,279,1.564,284,2.284,290,1.564,291,2.447,318,2.055,353,2.948,422,2.738,423,1.633,531,1.633,532,1.633,538,1.633,571,1.633,607,1.633,657,1.633,658,3.446,659,2.213,660,3.376,661,3.429,662,2.213,663,2.213,664,2.213,665,2.842,666,2.213,667,2.213,668,2.213,669,3.446,670,3.446,671,2.213,672,2.213,673,2.213,674,2.213,675,2.213,676,1.864,677,1.864,678,1.864,679,1.864,680,1.864,681,1.864,682,2.842,683,1.864,684,2.842,685,1.864,686,2.842,687,1.864,688,1.864,689,1.864,690,1.864,691,1.864,692,1.864,693,1.864,694,2.842,695,1.864,696,1.864,697,2.842,698,2.842,699,3.855,700,1.864,701,1.864,702,1.864,703,1.864,704,1.864,705,1.864,706,1.864,707,1.864,708,1.864,709,1.864,710,1.864,711,1.864,712,1.864]],["title/interfaces/WorkbenchProps.html",[220,0.374,661,2.212]],["body/interfaces/WorkbenchProps.html",[0,0.068,3,0.271,4,0.241,5,0.241,7,0.223,8,0.484,9,0.69,13,1.449,32,0.029,34,0.551,35,0.809,38,0.477,40,1.011,45,0.89,60,0.945,61,1,63,2.399,64,1.16,65,1.738,66,1.967,87,0.271,99,1.488,102,1.617,105,2.891,124,1.348,135,0.011,136,0.016,137,0.011,142,0.809,155,1.681,156,1.358,161,1.384,202,1.105,203,1.253,204,1.253,205,1.16,206,1.253,220,0.302,222,1,234,0.93,243,1.253,248,2.756,249,2.517,250,1.816,254,2.295,268,1.617,269,2.133,271,1.16,273,1.16,279,1.253,290,2.341,291,2.343,318,2.693,353,2.756,422,3.022,423,1.995,531,1.995,532,1.995,538,1.995,571,1.995,607,1.995,657,1.995,658,2.277,661,3.335,665,2.277,669,4.515,670,4.515,676,2.277,677,2.277,678,2.277,679,2.277,680,2.277,681,2.277,682,3.299,683,2.277,684,3.299,685,2.277,686,3.299,687,2.277,688,2.277,689,2.277,690,2.277,691,2.277,692,2.277,693,2.277,694,3.299,695,2.277,696,2.277,697,3.299,698,3.299,699,4.254,700,2.277,701,2.277,702,2.277,703,2.277,704,2.277,705,2.277,706,2.277,707,2.277,708,2.277,709,2.277,710,2.277,711,2.277,712,2.277]],["title/classes/classBuilder.html",[0,0.084,643,1.83]],["body/classes/classBuilder.html",[0,0.109,2,0.768,3,0.314,4,0.28,5,0.28,7,0.211,8,0.538,9,1.099,12,1.046,26,1.348,29,1.308,31,1.296,32,0.028,33,1.296,34,0.505,35,1.116,38,0.768,39,1.348,43,1.296,45,1,85,4.213,87,0.314,99,1.209,135,0.013,136,0.018,137,0.013,142,1.213,220,0.558,254,1.734,283,1.998,295,2.019,381,1.456,383,1.577,473,1.577,625,3.083,626,3.291,627,1.717,630,2.381,631,3.6,632,2.074,633,2.381,634,1.879,635,1.879,636,1.879,637,1.879,638,1.879,639,1.879,640,1.879,641,1.879,642,1.879,643,2.381,644,3.303,645,2.877,646,2.074,647,2.877,648,3.567,649,2.074,650,2.877,651,2.877,652,1.879,653,2.074,654,2.074,655,2.074,656,2.074,713,4.358,714,4.358,715,4.358,716,4.358,717,3.142,718,3.142,719,3.142,720,3.142,721,3.142,722,3.142]],["title/interfaces/classConfig.html",[220,0.374,630,1.83]],["body/interfaces/classConfig.html",[0,0.152,2,0.67,3,0.381,4,0.339,5,0.339,7,0.24,8,0.612,9,0.971,32,0.028,34,0.441,38,0.67,45,0.873,87,0.381,99,1.375,135,0.016,136,0.02,137,0.016,142,1.023,220,0.615,222,1.406,254,1.972,283,2.372,295,2.806,381,1.762,383,1.909,473,1.909,625,2.932,626,2.078,627,2.078,630,3.012,631,3.393,632,2.51,633,2.707,634,2.274,635,2.274,636,2.274,637,2.274,638,2.274,639,2.274,640,2.274,641,2.274,642,2.274,643,2.078,644,2.51,645,2.51,646,2.51,647,3.271,648,2.51,649,2.51,650,2.51,651,2.51,652,2.274,653,2.51,654,2.51,655,2.51,656,2.51]],["title/coverage.html",[723,3.835]],["body/coverage.html",[0,0.158,1,2.002,5,0.195,6,1.843,32,0.028,34,0.195,40,0.565,63,0.939,65,0.753,67,1.445,83,1.445,102,1.309,135,0.009,136,0.014,137,0.009,138,1.843,139,1.843,151,1.829,156,1.099,162,1.615,163,2.683,164,1.843,165,1.843,178,1.615,179,1.843,180,1.843,200,1.843,202,0.525,220,0.647,221,1.615,223,2.47,229,1.615,232,1.309,233,2.209,244,1.196,250,1.014,266,1.445,267,2.47,269,0.809,275,1.445,290,1.014,291,1.309,306,1.843,311,2.47,312,2.47,353,1.309,354,1.843,355,1.843,381,2.273,425,1.843,426,1.843,427,1.196,442,1.615,443,1.843,444,1.843,445,1.615,446,1.843,447,1.843,448,1.615,449,2.722,450,1.843,473,3.425,491,1.843,493,2.818,553,1.615,597,1.843,598,1.843,613,1.615,625,1.099,626,2.68,627,2.68,630,1.196,631,1.196,633,1.196,643,1.196,657,2.47,661,1.445,723,1.843,724,1.843,725,2.189,726,2.189,727,3.832,728,6.644,729,1.843,730,6.615,731,2.818,732,1.843,733,1.843,734,2.818,735,1.843,736,4.552,737,3.347,738,2.189,739,3.347,740,4.552,741,3.347,742,2.818,743,2.189,744,1.843,745,2.189,746,2.189,747,4.76,748,4.76,749,1.843,750,1.843,751,4.905,752,1.843,753,1.843,754,1.843,755,1.843,756,1.843,757,1.843,758,1.843,759,1.843,760,1.843,761,1.843,762,1.843,763,1.843,764,1.843,765,1.843,766,1.843,767,1.843,768,1.843,769,1.843,770,1.843,771,1.843,772,1.843,773,1.843,774,1.843,775,2.189,776,2.189,777,4.552,778,2.189,779,2.189,780,2.189,781,2.189,782,1.843,783,2.189,784,2.189]],["title/dependencies.html",[785,2.807,786,2.97]],["body/dependencies.html",[32,0.028,61,1.754,135,0.019,136,0.023,137,0.019,146,3.994,184,3.5,227,4.498,228,3.994,786,3.5,787,4.744,788,4.744,789,4.744,790,3.994,791,4.744,792,4.744,793,4.744,794,4.744,795,4.744,796,4.744,797,4.744,798,4.744,799,4.744,800,4.744,801,4.744,802,4.744,803,4.744,804,4.744,805,4.744]],["title/miscellaneous/enumerations.html",[806,1.3,807,3.389]],["body/miscellaneous/enumerations.html",[7,0.227,32,0.027,39,2.701,57,3.73,118,3.946,135,0.019,136,0.023,137,0.019,233,3.094,243,2.618,248,2.803,249,2.561,257,3.379,258,3.087,259,3.087,260,3.087,449,2.803,492,4.156,553,4.169,570,4.757,806,2.172,807,3.946,808,4.687,809,3.946,810,4.687,811,4.687,812,4.687]],["title/miscellaneous/functions.html",[806,1.3,813,3.389]],["body/miscellaneous/functions.html",[7,0.234,31,1.383,32,0.026,33,1.383,35,1.19,135,0.02,136,0.024,137,0.02,156,2.894,187,4.253,747,3.576,748,4.253,749,4.853,774,4.08,806,2.245,813,4.08,814,4.846,815,4.08,816,4.846,817,4.846,818,4.846,819,5.764,820,5.764,821,4.846]],["title/index.html",[7,0.136,822,2.363,823,2.363]],["body/index.html",[1,2.83,4,0.474,32,0.024,135,0.015,136,0.019,137,0.015,184,2.616,220,0.395,227,4.193,316,2.616,318,2.376,618,2.616,786,3.492,824,5.682,825,5.326,826,4.732,827,4.732,828,3.546,829,3.546,830,3.546,831,3.546,832,3.546,833,3.546,834,3.546,835,5.682,836,3.546,837,3.546,838,2.985,839,3.546,840,3.546,841,3.546,842,3.546,843,3.546,844,3.546,845,3.546,846,2.985,847,2.616,848,3.546,849,4.732,850,3.546,851,3.546,852,3.546,853,4.732,854,3.546,855,3.546,856,3.546,857,3.546,858,5.326,859,3.546,860,3.546,861,3.546,862,3.546,863,3.546,864,3.546,865,3.546,866,3.546,867,3.546,868,3.546,869,3.546,870,3.546,871,3.546,872,3.546,873,3.546,874,5.326,875,3.546,876,3.546,877,3.546,878,3.546,879,5.326,880,3.546,881,3.546,882,3.546,883,2.985,884,3.546,885,3.546,886,3.546,887,5.326,888,3.546,889,3.546,890,3.546,891,3.546,892,5.326,893,4.732,894,3.546,895,3.546,896,3.546,897,3.546,898,3.546,899,2.985,900,3.546,901,3.546,902,3.546,903,3.546,904,3.546,905,3.984,906,3.546,907,3.546,908,4.732,909,3.546,910,4.732,911,3.546,912,4.732,913,2.985,914,2.985,915,2.985,916,3.546,917,3.546,918,3.546,919,3.546,920,3.546,921,3.546,922,3.546,923,3.546,924,3.546,925,3.546,926,3.546]],["title/license.html",[822,2.363,823,2.363,847,2.071]],["body/license.html",[32,0.021,135,0.017,136,0.021,137,0.017,484,3.435,492,2.693,652,2.439,724,3.435,838,3.435,846,3.435,847,3.01,899,3.435,913,3.435,914,3.435,915,3.435,927,5.699,928,4.079,929,4.079,930,5.184,931,4.079,932,4.079,933,4.079,934,4.079,935,4.079,936,4.079,937,5.184,938,6.568,939,4.079,940,4.079,941,5.699,942,4.079,943,5.184,944,4.079,945,4.079,946,4.365,947,4.079,948,4.079,949,4.079,950,4.079,951,5.184,952,4.079,953,4.079,954,4.079,955,4.079,956,4.079,957,4.079,958,4.079,959,5.184,960,5.184,961,4.079,962,4.079,963,4.079,964,4.079,965,4.079,966,4.079,967,4.079,968,4.079,969,4.079,970,4.079,971,4.079,972,4.079,973,4.079,974,4.079,975,4.079,976,4.079,977,4.079,978,4.079,979,4.079,980,4.079,981,4.079,982,4.079,983,4.079,984,4.079,985,4.079,986,4.079,987,4.079,988,4.079]],["title/modules.html",[318,2.287]],["body/modules.html",[32,0.025,135,0.022,136,0.025,137,0.022,318,2.681]],["title/overview.html",[989,3.835]],["body/overview.html",[2,0.928,32,0.025,135,0.022,136,0.025,137,0.022,222,1.948,989,4.436,990,5.268,991,5.268]],["title/interfaces/stateConfig.html",[220,0.374,631,1.83]],["body/interfaces/stateConfig.html",[0,0.122,2,1.021,3,0.372,4,0.331,5,0.331,7,0.236,8,0.603,9,0.961,32,0.028,34,0.486,35,1.009,38,0.656,45,0.861,87,0.372,99,1.356,135,0.015,136,0.02,137,0.015,142,1.009,220,0.608,222,1.376,254,2.305,283,2.283,295,2.787,381,1.725,383,1.869,473,1.869,625,2.908,626,2.033,627,2.033,630,3.164,631,3.438,632,3.824,633,2.67,634,2.226,635,2.226,636,2.226,637,2.226,638,2.226,639,2.226,640,2.226,641,2.226,642,2.226,643,2.033,644,2.457,645,2.457,646,2.457,647,3.225,648,2.457,649,2.457,650,2.457,651,2.457,652,2.226,653,2.457,654,2.457,655,2.457,656,2.457]],["title/miscellaneous/typealiases.html",[806,1.3,992,4.025]],["body/miscellaneous/typealiases.html",[7,0.247,32,0.027,34,0.454,135,0.021,136,0.024,137,0.021,420,3.92,467,3.365,613,3.761,618,3.761,619,4.292,620,4.292,806,2.362,993,5.097,994,5.097]],["title/miscellaneous/variables.html",[806,1.3,995,3.389]],["body/miscellaneous/variables.html",[1,1.985,7,0.105,32,0.028,34,0.359,38,1.167,39,2.834,40,1.042,99,1.12,122,1.003,135,0.009,136,0.014,137,0.009,223,1.597,224,1.823,226,1.823,229,2.449,230,1.823,231,2.978,254,0.861,259,1.183,283,1.227,381,1.003,383,1.087,449,1.294,473,1.087,521,2.449,625,1.087,626,1.183,627,1.813,633,1.813,634,1.294,635,1.294,636,1.294,637,1.294,638,1.294,639,1.294,640,1.294,641,1.294,642,1.294,727,1.823,729,2.794,731,4.514,732,3.81,733,3.398,734,1.823,735,2.794,742,2.794,744,2.794,747,1.597,748,4.753,750,2.794,752,2.794,753,2.794,754,2.794,755,2.794,756,2.794,757,2.794,758,2.794,759,2.794,760,2.794,761,2.794,762,2.794,763,2.794,764,2.794,765,2.794,766,2.794,767,2.794,768,2.794,769,2.794,770,2.794,771,2.794,772,1.823,773,2.794,782,1.823,790,1.823,806,1.003,809,1.823,815,5.399,883,1.823,905,1.823,946,1.823,995,1.823,996,2.165,997,4.526,998,2.165,999,3.319,1000,2.165,1001,2.165,1002,2.165,1003,2.165,1004,3.319,1005,2.165,1006,2.165,1007,3.319,1008,2.165,1009,3.319,1010,3.319,1011,2.165,1012,2.165,1013,2.165,1014,2.165,1015,2.165,1016,3.319,1017,4.526,1018,2.165,1019,3.319,1020,2.165,1021,2.165,1022,3.319,1023,2.165,1024,3.319,1025,2.165,1026,3.319,1027,3.319,1028,2.165,1029,2.165,1030,2.165,1031,2.165,1032,2.165,1033,3.319,1034,2.165,1035,3.319,1036,3.319,1037,4.526,1038,2.165,1039,3.319,1040,2.165,1041,2.165,1042,2.165,1043,2.165,1044,3.319,1045,3.319,1046,2.165,1047,2.165,1048,2.165,1049,2.165,1050,2.165,1051,2.165,1052,2.165,1053,2.165,1054,2.165,1055,2.165,1056,2.165,1057,2.165,1058,4.036,1059,4.526,1060,2.165,1061,2.165,1062,2.165,1063,2.165,1064,2.165,1065,2.165,1066,2.165,1067,2.165,1068,2.165,1069,2.165,1070,2.165,1071,2.165,1072,2.165,1073,2.165,1074,2.165,1075,2.165,1076,2.165,1077,2.165,1078,4.036,1079,3.319,1080,2.165,1081,2.165,1082,2.165]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":473,"title":{},"body":{"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":778,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":777,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":779,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":741,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":739,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":780,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0123456789abcdef",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":467,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["1.1.5",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["1.6.4",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["1/21",{"_index":745,"title":{},"body":{"coverage.html":{}}}],["1/24",{"_index":781,"title":{},"body":{"coverage.html":{}}}],["1/28",{"_index":743,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":991,"title":{},"body":{"overview.html":{}}}],["100",{"_index":381,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["18",{"_index":990,"title":{},"body":{"overview.html":{}}}],["1f1f1f",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":489,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["2.2.0",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":776,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":635,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["2020",{"_index":928,"title":{},"body":{"license.html":{}}}],["272728",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e2f30",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":491,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["3.0.1",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["3.1.3",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":550,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["300",{"_index":637,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["393939",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3f3f3f",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":493,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["4.3.1",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["4.3.5",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":639,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["454545",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["464749",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":544,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["5.1.1",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["5580c0",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5d5f61",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.4",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":641,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["680",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.2",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["729cd4",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["800",{"_index":383,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["808080",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["900",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_bgcolorclassname",{"_index":357,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["_growclassname",{"_index":358,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["_shrinkclassname",{"_index":359,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["_type",{"_index":140,"title":{},"body":{"classes/AppearanceService.html":{}}}],["_view",{"_index":270,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["ability",{"_index":314,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["above",{"_index":958,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":201,"title":{},"body":{"classes/Controller.html":{},"classes/SvelteModule.html":{}}}],["action",{"_index":913,"title":{},"body":{"index.html":{},"license.html":{}}}],["active",{"_index":640,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["activeexpand",{"_index":459,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["activeid",{"_index":451,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["add",{"_index":342,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["add(moduleid",{"_index":319,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["addconfig",{"_index":713,"title":{},"body":{"classes/classBuilder.html":{}}}],["addconfig(config",{"_index":650,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["added",{"_index":917,"title":{},"body":{"index.html":{}}}],["addexpandbutton",{"_index":363,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["aliases",{"_index":993,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":949,"title":{},"body":{"license.html":{}}}],["anycolor",{"_index":181,"title":{},"body":{"classes/ColorRef.html":{}}}],["anycolorhex",{"_index":821,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":1,"title":{"classes/App.html":{}},"body":{"classes/App.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app(document.body",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.quit",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appearance",{"_index":192,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearanceservice",{"_index":67,"title":{"classes/AppearanceService.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"coverage.html":{}}}],["appearancetype",{"_index":57,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"miscellaneous/enumerations.html":{}}}],["appearancetype.any",{"_index":198,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearancetype.dark",{"_index":116,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{}}}],["appearancetype.light",{"_index":199,"title":{},"body":{"classes/ColorRef.html":{}}}],["appeared",{"_index":218,"title":{},"body":{"classes/Controller.html":{}}}],["append",{"_index":373,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["append(child",{"_index":413,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["appending",{"_index":214,"title":{},"body":{"classes/Controller.html":{}}}],["application",{"_index":905,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["applicationmenus",{"_index":73,"title":{},"body":{"classes/App.html":{}}}],["aps",{"_index":111,"title":{},"body":{"classes/App.html":{}}}],["aps.onmodechanged((type",{"_index":113,"title":{},"body":{"classes/App.html":{}}}],["arising",{"_index":986,"title":{},"body":{"license.html":{}}}],["associated",{"_index":939,"title":{},"body":{"license.html":{}}}],["async",{"_index":13,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["authors",{"_index":976,"title":{},"body":{"license.html":{}}}],["auto",{"_index":618,"title":{},"body":{"classes/View.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["automatically",{"_index":916,"title":{},"body":{"index.html":{}}}],["available",{"_index":842,"title":{},"body":{"index.html":{}}}],["await",{"_index":97,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["bababa",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar.svelte",{"_index":78,"title":{},"body":{"classes/App.html":{}}}],["base",{"_index":74,"title":{},"body":{"classes/App.html":{}}}],["basemenu",{"_index":162,"title":{"classes/BaseMenu.html":{}},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["bg",{"_index":379,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["bgcolor",{"_index":750,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["board.controller.ts",{"_index":450,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["board.controller.ts:10",{"_index":475,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:11",{"_index":468,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:13",{"_index":469,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:14",{"_index":466,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:31",{"_index":483,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:46",{"_index":486,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:5",{"_index":472,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:53",{"_index":476,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:6",{"_index":470,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:61",{"_index":487,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:7",{"_index":471,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:72",{"_index":480,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:82",{"_index":478,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:9",{"_index":474,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.view.ts",{"_index":742,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":225,"title":{},"body":{"interfaces/ISettings.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["bootstrap",{"_index":14,"title":{},"body":{"classes/App.html":{}}}],["bordercolor",{"_index":752,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":900,"title":{},"body":{"index.html":{}}}],["break",{"_index":328,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["browserwindow",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder",{"_index":902,"title":{},"body":{"index.html":{}}}],["builder.ts",{"_index":627,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["builder.ts:11",{"_index":629,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["builder.ts:24",{"_index":716,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:30",{"_index":719,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:33",{"_index":718,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:36",{"_index":720,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:44",{"_index":722,"title":{},"body":{"classes/classBuilder.html":{}}}],["building",{"_index":854,"title":{},"body":{"index.html":{}}}],["bundled",{"_index":867,"title":{},"body":{"index.html":{}}}],["button",{"_index":396,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["c",{"_index":652,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"license.html":{},"interfaces/stateConfig.html":{}}}],["c0c0c1",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c4666f",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c6c6c6",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":315,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["cancelformerge",{"_index":235,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["cancelwaitformerge",{"_index":364,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["canvas/index.ts",{"_index":447,"title":{},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["case",{"_index":197,"title":{},"body":{"classes/ColorRef.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["cgray",{"_index":380,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["charge",{"_index":934,"title":{},"body":{"license.html":{}}}],["check",{"_index":224,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["checkexpandstate",{"_index":460,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["checkexpandstate(clientx",{"_index":477,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["child",{"_index":415,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["childs",{"_index":418,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["claim",{"_index":979,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classbuilder",{"_index":643,"title":{"classes/classBuilder.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classconfig",{"_index":630,"title":{"interfaces/classConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["classname",{"_index":405,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["clear",{"_index":648,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["clientx",{"_index":264,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{}}}],["clienty",{"_index":265,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{}}}],["clone",{"_index":362,"title":{},"body":{"classes/ModuleItem.html":{}}}],["code",{"_index":835,"title":{},"body":{"index.html":{}}}],["col",{"_index":248,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":184,"title":{},"body":{"classes/ColorRef.html":{},"dependencies.html":{},"index.html":{}}}],["color(appearancetype",{"_index":190,"title":{},"body":{"classes/ColorRef.html":{}}}],["color.ts",{"_index":748,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["colorref",{"_index":178,"title":{"classes/ColorRef.html":{}},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["column",{"_index":533,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["common",{"_index":872,"title":{},"body":{"index.html":{}}}],["community",{"_index":833,"title":{},"body":{"index.html":{}}}],["comp",{"_index":428,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["compilation",{"_index":891,"title":{},"body":{"index.html":{}}}],["compile",{"_index":887,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":908,"title":{},"body":{"index.html":{}}}],["completed",{"_index":699,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["component",{"_index":440,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["components",{"_index":874,"title":{},"body":{"index.html":{}}}],["concrete",{"_index":828,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":957,"title":{},"body":{"license.html":{}}}],["config",{"_index":85,"title":{},"body":{"classes/App.html":{},"classes/classBuilder.html":{}}}],["config.workbench",{"_index":104,"title":{},"body":{"classes/App.html":{}}}],["configs",{"_index":717,"title":{},"body":{"classes/classBuilder.html":{}}}],["configs.foreach((config",{"_index":646,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["configured",{"_index":904,"title":{},"body":{"index.html":{}}}],["connection",{"_index":987,"title":{},"body":{"license.html":{}}}],["const",{"_index":99,"title":{},"body":{"classes/App.html":{},"interfaces/ISettings.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/ModuleFactory.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["constructor(@inject('modulefactory",{"_index":676,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["constructor(anycolor",{"_index":185,"title":{},"body":{"classes/ColorRef.html":{}}}],["constructor(configs",{"_index":645,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["constructor(container",{"_index":345,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["constructor(groupmenuservice",{"_index":168,"title":{},"body":{"classes/BaseMenu.html":{}}}],["constructor(modulefactory",{"_index":659,"title":{},"body":{"classes/Workbench.html":{}}}],["constructor(private",{"_index":88,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SplitBoardController.html":{}}}],["constructor(root",{"_index":27,"title":{},"body":{"classes/App.html":{},"classes/View.html":{}}}],["constructor(view",{"_index":465,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["container",{"_index":10,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["containermodule",{"_index":157,"title":{},"body":{"classes/AppearanceService.html":{}}}],["contentview",{"_index":360,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["contentview.classlist.add('flex",{"_index":576,"title":{},"body":{"classes/SplitItemView.html":{}}}],["context",{"_index":11,"title":{},"body":{"classes/App.html":{}}}],["contextisolation",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":983,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":923,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":920,"title":{},"body":{"index.html":{}}}],["controlaccentcolor",{"_index":753,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlbackgroundcolor",{"_index":754,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controldisabledcolor",{"_index":755,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlforbiddencolor",{"_index":756,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlhighlightcolor",{"_index":757,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":65,"title":{"classes/Controller.html":{}},"body":{"classes/App.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["controller:10",{"_index":287,"title":{},"body":{"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:12",{"_index":438,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:14",{"_index":289,"title":{},"body":{"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:16",{"_index":285,"title":{},"body":{"classes/MenuBar.html":{}}}],["controller:17",{"_index":288,"title":{},"body":{"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:23",{"_index":286,"title":{},"body":{"classes/MenuBar.html":{}}}],["controller:24",{"_index":439,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:28",{"_index":671,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:47",{"_index":674,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:61",{"_index":672,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:65",{"_index":675,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:68",{"_index":673,"title":{},"body":{"classes/Workbench.html":{}}}],["copies",{"_index":951,"title":{},"body":{"license.html":{}}}],["copy",{"_index":937,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":927,"title":{},"body":{"license.html":{}}}],["cosmic",{"_index":824,"title":{},"body":{"index.html":{}}}],["cosmic/core/browser",{"_index":66,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["cosmic/core/common",{"_index":62,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{}}}],["cosmic/core/parts",{"_index":64,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["cosmic/workbench/services/appearance",{"_index":68,"title":{},"body":{"classes/App.html":{}}}],["cosmic/workbench/services/menu",{"_index":71,"title":{},"body":{"classes/App.html":{}}}],["coverage",{"_index":723,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createwindow",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["crosshair",{"_index":256,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["current",{"_index":909,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":654,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["d00000",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d1905d",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d2r",{"_index":830,"title":{},"body":{"index.html":{}}}],["d7d7d7",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d9d9d9",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":980,"title":{},"body":{"license.html":{}}}],["dark",{"_index":118,"title":{},"body":{"classes/App.html":{},"miscellaneous/enumerations.html":{}}}],["dark:bg",{"_index":382,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["darkcolor",{"_index":182,"title":{},"body":{"classes/ColorRef.html":{}}}],["darkcolorhex",{"_index":820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date.now",{"_index":296,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["deal",{"_index":940,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":988,"title":{},"body":{"license.html":{}}}],["debugging",{"_index":911,"title":{},"body":{"index.html":{}}}],["default",{"_index":38,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":230,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["defaultscope",{"_index":90,"title":{},"body":{"classes/App.html":{}}}],["defaultweightmap",{"_index":633,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["dependencies",{"_index":786,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["design",{"_index":825,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":271,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["dev",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["develop",{"_index":831,"title":{},"body":{"index.html":{}}}],["development",{"_index":840,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":236,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["directionstyles",{"_index":570,"title":{},"body":{"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["directionstyles[direction",{"_index":595,"title":{},"body":{"classes/SplitItemView.html":{}}}],["directiontype",{"_index":243,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["directiontype.col",{"_index":531,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["directiontype.row",{"_index":537,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["directiontype[props.type",{"_index":683,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["disabled",{"_index":642,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["disappear",{"_index":219,"title":{},"body":{"classes/Controller.html":{}}}],["dist/workbench/desktop",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":914,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribution",{"_index":893,"title":{},"body":{"index.html":{}}}],["divided",{"_index":864,"title":{},"body":{"index.html":{}}}],["document.body.classlist.add('mode",{"_index":117,"title":{},"body":{"classes/App.html":{}}}],["document.body.classlist.remove('mode",{"_index":119,"title":{},"body":{"classes/App.html":{}}}],["document.createelement('div",{"_index":294,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/SvelteModule.html":{},"classes/View.html":{}}}],["document.queryselector('#main",{"_index":128,"title":{},"body":{"classes/App.html":{}}}],["documentation",{"_index":724,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":216,"title":{},"body":{"classes/Controller.html":{}}}],["draft",{"_index":918,"title":{},"body":{"index.html":{}}}],["e",{"_index":257,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["e0e0e0",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":868,"title":{},"body":{"index.html":{}}}],["electron",{"_index":227,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{},"index.html":{}}}],["electron/.exec(process.execpath",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["electronstore",{"_index":226,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":215,"title":{},"body":{"classes/Controller.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["enableremotemodule",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entire",{"_index":862,"title":{},"body":{"index.html":{}}}],["enum",{"_index":247,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitItemView.html":{}}}],["enumerations",{"_index":807,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["es",{"_index":317,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["event",{"_index":484,"title":{},"body":{"classes/SplitBoardController.html":{},"license.html":{}}}],["event.clientx",{"_index":509,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.clienty",{"_index":496,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.preventdefault",{"_index":510,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.stoppropagation",{"_index":511,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.target",{"_index":503,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["eventemitter2",{"_index":146,"title":{},"body":{"classes/AppearanceService.html":{},"dependencies.html":{}}}],["everyone",{"_index":843,"title":{},"body":{"index.html":{}}}],["evt",{"_index":141,"title":{},"body":{"classes/AppearanceService.html":{}}}],["exist",{"_index":343,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["exist(moduleid",{"_index":333,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["expand",{"_index":361,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{}}}],["expand.svelte",{"_index":569,"title":{},"body":{"classes/SplitItemView.html":{}}}],["expandactive",{"_index":452,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandleavehandler",{"_index":453,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmouseuphandler",{"_index":454,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmovehandler",{"_index":455,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandnewitem",{"_index":251,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Workbench.html":{}}}],["expandnewitem(view",{"_index":665,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["expandtype",{"_index":456,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["explorer/index.ts",{"_index":444,"title":{},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["export",{"_index":87,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["express",{"_index":967,"title":{},"body":{"license.html":{}}}],["extends",{"_index":234,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["f2f2f2",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f9f9f9",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factory.ts",{"_index":312,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"coverage.html":{}}}],["factory.ts:11",{"_index":346,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:13",{"_index":347,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:14",{"_index":348,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:30",{"_index":351,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:33",{"_index":350,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:36",{"_index":352,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["false",{"_index":231,"title":{},"body":{"interfaces/ISettings.html":{},"classes/SplitBoardController.html":{},"miscellaneous/variables.html":{}}}],["ffae2b",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["file://${join(__dirname",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":915,"title":{},"body":{"index.html":{},"license.html":{}}}],["fitness",{"_index":972,"title":{},"body":{"license.html":{}}}],["flex",{"_index":406,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["flowvalue",{"_index":420,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["fn",{"_index":150,"title":{},"body":{"classes/AppearanceService.html":{}}}],["focus",{"_index":636,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":956,"title":{},"body":{"license.html":{}}}],["fourthbgcolor",{"_index":758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":933,"title":{},"body":{"license.html":{}}}],["function",{"_index":151,"title":{},"body":{"classes/AppearanceService.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/Module.html":{},"classes/SplitBoardController.html":{},"coverage.html":{}}}],["functions",{"_index":813,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":954,"title":{},"body":{"license.html":{}}}],["get(moduleid",{"_index":331,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["getting",{"_index":822,"title":{"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":912,"title":{},"body":{"index.html":{}}}],["going",{"_index":212,"title":{},"body":{"classes/Controller.html":{}}}],["granted",{"_index":932,"title":{},"body":{"license.html":{}}}],["gridbackgroundcolor",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":72,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["group/base",{"_index":164,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["group/index.ts",{"_index":267,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["group/index.ts:13",{"_index":276,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:15",{"_index":274,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:19",{"_index":280,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:28",{"_index":281,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:31",{"_index":277,"title":{},"body":{"classes/MenuBar.html":{}}}],["groupmenu",{"_index":129,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.getmenuinsatance().init(menu.title",{"_index":133,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.initcontainer(header",{"_index":131,"title":{},"body":{"classes/App.html":{}}}],["groupmenuservice",{"_index":170,"title":{},"body":{"classes/BaseMenu.html":{}}}],["grow",{"_index":407,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["guide",{"_index":841,"title":{},"body":{"index.html":{}}}],["header",{"_index":127,"title":{},"body":{"classes/App.html":{}}}],["height",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["here",{"_index":837,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":931,"title":{},"body":{"license.html":{}}}],["hexdigits",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hide",{"_index":395,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["hideexpandbutton",{"_index":365,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["holders",{"_index":977,"title":{},"body":{"license.html":{}}}],["hor",{"_index":488,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["horizontal",{"_index":532,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["host",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hover",{"_index":638,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["htmlelement",{"_index":28,"title":{},"body":{"classes/App.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{}}}],["http://localhost:5000/workbench/desktop",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":295,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["identifier",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":268,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["implied",{"_index":968,"title":{},"body":{"license.html":{}}}],["import",{"_index":60,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["import(moduleid).then((modulesource",{"_index":336,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["include",{"_index":871,"title":{},"body":{"index.html":{}}}],["included",{"_index":961,"title":{},"body":{"license.html":{}}}],["including",{"_index":943,"title":{},"body":{"license.html":{}}}],["independently",{"_index":869,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index.svelte",{"_index":441,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["indexable",{"_index":628,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["ing",{"_index":826,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":284,"title":{},"body":{"classes/MenuBar.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{}}}],["init",{"_index":272,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{}}}],["init(props",{"_index":279,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["initframe",{"_index":15,"title":{},"body":{"classes/App.html":{}}}],["initial",{"_index":619,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["initmenu",{"_index":167,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenu(menuitems",{"_index":171,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenus",{"_index":16,"title":{},"body":{"classes/App.html":{}}}],["initmodules",{"_index":17,"title":{},"body":{"classes/App.html":{}}}],["initnavigationbar",{"_index":18,"title":{},"body":{"classes/App.html":{}}}],["initpreferences",{"_index":19,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel",{"_index":20,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel(container",{"_index":50,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel",{"_index":21,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel(container",{"_index":52,"title":{},"body":{"classes/App.html":{}}}],["initstatusbar",{"_index":22,"title":{},"body":{"classes/App.html":{}}}],["initstyle",{"_index":23,"title":{},"body":{"classes/App.html":{}}}],["initstylemode",{"_index":24,"title":{},"body":{"classes/App.html":{}}}],["initstylemode(type",{"_index":56,"title":{},"body":{"classes/App.html":{}}}],["initwithcomponent",{"_index":429,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["initwithcomponent(target",{"_index":434,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["initworkarea",{"_index":25,"title":{},"body":{"classes/App.html":{}}}],["inject",{"_index":156,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject(token",{"_index":816,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":155,"title":{},"body":{"classes/AppearanceService.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["insertconfig",{"_index":714,"title":{},"body":{"classes/classBuilder.html":{}}}],["insertconfig(config",{"_index":651,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["instanceof",{"_index":105,"title":{},"body":{"classes/App.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["interface",{"_index":220,"title":{"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/WorkbenchProps.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}},"body":{"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["interfaces",{"_index":222,"title":{},"body":{"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/WorkbenchProps.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["inversify",{"_index":61,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"dependencies.html":{}}}],["ipc",{"_index":876,"title":{},"body":{"index.html":{}}}],["isettings",{"_index":221,"title":{"interfaces/ISettings.html":{}},"body":{"interfaces/ISettings.html":{},"coverage.html":{}}}],["isplitboardview",{"_index":232,"title":{"interfaces/ISplitBoardView.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{},"coverage.html":{}}}],["isprod",{"_index":731,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isshrink",{"_index":366,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["issues",{"_index":836,"title":{},"body":{"index.html":{}}}],["item",{"_index":422,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.id",{"_index":304,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["item.loader",{"_index":686,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.loader.then((module",{"_index":694,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.module",{"_index":708,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.moduleid",{"_index":423,"title":{},"body":{"classes/ModuleItem.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.root",{"_index":505,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientheight",{"_index":540,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientwidth",{"_index":536,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.getboundingclientrect().left",{"_index":535,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.getboundingclientrect().top",{"_index":539,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.setcontent(module.view",{"_index":709,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.ts",{"_index":355,"title":{},"body":{"classes/ModuleItem.html":{},"coverage.html":{}}}],["item.ts:5",{"_index":376,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.ts:6",{"_index":378,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.ts:7",{"_index":377,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.ts:8",{"_index":391,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.view",{"_index":246,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["item.view.ts",{"_index":553,"title":{},"body":{"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["item.view.ts:12",{"_index":556,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:13",{"_index":557,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:14",{"_index":555,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:16",{"_index":558,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:17",{"_index":554,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:25",{"_index":564,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:32",{"_index":563,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:39",{"_index":566,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:46",{"_index":567,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:53",{"_index":562,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:57",{"_index":565,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:63",{"_index":559,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:67",{"_index":561,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:71",{"_index":568,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:77",{"_index":560,"title":{},"body":{"classes/SplitItemView.html":{}}}],["itemgeneratedelegate",{"_index":250,"title":{"interfaces/ItemGenerateDelegate.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["items",{"_index":237,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["join(__dirname",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keycode",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["kind",{"_index":966,"title":{},"body":{"license.html":{}}}],["labelcolor",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["length",{"_index":262,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["liability",{"_index":981,"title":{},"body":{"license.html":{}}}],["liable",{"_index":978,"title":{},"body":{"license.html":{}}}],["license",{"_index":847,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["light",{"_index":812,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lightcolor",{"_index":183,"title":{},"body":{"classes/ColorRef.html":{}}}],["lightcolorhex",{"_index":819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["limitation",{"_index":944,"title":{},"body":{"license.html":{}}}],["limited",{"_index":969,"title":{},"body":{"license.html":{}}}],["linux",{"_index":896,"title":{},"body":{"index.html":{}}}],["liveresize",{"_index":461,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["liveresize(clientx",{"_index":479,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["load",{"_index":344,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["load(moduleid",{"_index":335,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["loader",{"_index":356,"title":{},"body":{"classes/ModuleItem.html":{}}}],["loading",{"_index":307,"title":{},"body":{"interfaces/Module.html":{}}}],["local",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":790,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":735,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error(json.stringify(err",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lowboardroot",{"_index":744,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":325,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.inrequestscope",{"_index":330,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.insingletonscope",{"_index":327,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.intransientscope",{"_index":329,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["macos",{"_index":894,"title":{},"body":{"index.html":{}}}],["main",{"_index":878,"title":{},"body":{"index.html":{}}}],["mainwindow",{"_index":732,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mainwindow.loadurl(url).catch((err",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.on('closed",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.webcontents.opendevtools",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor",{"_index":749,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makecolor('#000000",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#3f3f3f",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#5580c0",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#729cd4",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#bababa",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c0c0c1",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c4666f",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c6c6c6",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d00000",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d1905d",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d7d7d7",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d9d9d9",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#e0e0e0",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f2f2f2",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f9f9f9",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffae2b",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffffff",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor(anycolorhex",{"_index":818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["map",{"_index":41,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["matching",{"_index":136,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":132,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["menu(this._view",{"_index":298,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["menu.id",{"_index":305,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["menu.items",{"_index":134,"title":{},"body":{"classes/App.html":{}}}],["menu.ts",{"_index":165,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["menu.ts:5",{"_index":169,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu.ts:8",{"_index":173,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu/config",{"_index":75,"title":{},"body":{"classes/App.html":{}}}],["menubar",{"_index":266,"title":{"classes/MenuBar.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["menugroupservice",{"_index":70,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["menuinstance",{"_index":166,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuitemconfig",{"_index":172,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuitems",{"_index":174,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuprops",{"_index":275,"title":{"interfaces/MenuProps.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["merchantability",{"_index":971,"title":{},"body":{"license.html":{}}}],["merge",{"_index":492,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["metadata",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":12,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["meuns",{"_index":292,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["minimum",{"_index":851,"title":{},"body":{"index.html":{}}}],["minwidth",{"_index":669,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["miscellaneous",{"_index":806,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":846,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":543,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["modify",{"_index":947,"title":{},"body":{"license.html":{}}}],["module",{"_index":269,"title":{"interfaces/Module.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["module.init(props",{"_index":341,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["module.ts",{"_index":598,"title":{},"body":{"classes/SvelteModule.html":{},"coverage.html":{}}}],["module.ts:10",{"_index":601,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:16",{"_index":603,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:22",{"_index":604,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:28",{"_index":602,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:36",{"_index":605,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:8",{"_index":600,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:9",{"_index":599,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.viewdiddisappear",{"_index":698,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["module.viewwillappear",{"_index":697,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["moduleconfig",{"_index":290,"title":{"interfaces/ModuleConfig.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modulefactory",{"_index":63,"title":{"classes/ModuleFactory.html":{}},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modulefactory(this.container",{"_index":100,"title":{},"body":{"classes/App.html":{}}}],["modulefactory.load(config.workbench.id",{"_index":103,"title":{},"body":{"classes/App.html":{}}}],["moduleid",{"_index":349,"title":{},"body":{"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{}}}],["moduleitem",{"_index":353,"title":{"classes/ModuleItem.html":{}},"body":{"classes/ModuleItem.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modules",{"_index":318,"title":{"modules.html":{}},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"index.html":{},"modules.html":{}}}],["modulesource.default",{"_index":338,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["monorepo",{"_index":861,"title":{},"body":{"index.html":{}}}],["more",{"_index":856,"title":{},"body":{"index.html":{}}}],["mousedown",{"_index":512,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["mouseevent",{"_index":482,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["n",{"_index":260,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":33,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["navigation",{"_index":76,"title":{},"body":{"classes/App.html":{}}}],["navigationbar",{"_index":121,"title":{},"body":{"classes/App.html":{}}}],["new",{"_index":40,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"interfaces/ISettings.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":888,"title":{},"body":{"index.html":{}}}],["none",{"_index":620,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["noninfringement",{"_index":975,"title":{},"body":{"license.html":{}}}],["normalizeweight",{"_index":715,"title":{},"body":{"classes/classBuilder.html":{}}}],["normalizeweight(config",{"_index":721,"title":{},"body":{"classes/classBuilder.html":{}}}],["nothing",{"_index":855,"title":{},"body":{"index.html":{}}}],["notice",{"_index":959,"title":{},"body":{"license.html":{}}}],["notification",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":903,"title":{},"body":{"index.html":{}}}],["null",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":254,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":936,"title":{},"body":{"license.html":{}}}],["offsetx",{"_index":541,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["offsety",{"_index":542,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["olditem",{"_index":252,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["onmodechanged",{"_index":143,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmodechanged(fn",{"_index":148,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmousedown",{"_index":462,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["onmousedown(event",{"_index":481,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["optional",{"_index":35,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{}}}],["options",{"_index":309,"title":{},"body":{"interfaces/Module.html":{}}}],["orderedconfigs",{"_index":644,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["organization",{"_index":924,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":985,"title":{},"body":{"license.html":{}}}],["out",{"_index":899,"title":{},"body":{"index.html":{},"license.html":{}}}],["overview",{"_index":989,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":684,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["p.id",{"_index":688,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["package",{"_index":785,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":866,"title":{},"body":{"index.html":{}}}],["packaging",{"_index":890,"title":{},"body":{"index.html":{}}}],["page",{"_index":884,"title":{},"body":{"index.html":{}}}],["panel/index.ts",{"_index":426,"title":{},"body":{"classes/PropertyPanel.html":{},"coverage.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":973,"title":{},"body":{"license.html":{}}}],["permission",{"_index":930,"title":{},"body":{"license.html":{}}}],["permit",{"_index":952,"title":{},"body":{"license.html":{}}}],["person",{"_index":935,"title":{},"body":{"license.html":{}}}],["persons",{"_index":953,"title":{},"body":{"license.html":{}}}],["platform",{"_index":910,"title":{},"body":{"index.html":{}}}],["port",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":963,"title":{},"body":{"license.html":{}}}],["position",{"_index":263,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["possible",{"_index":907,"title":{},"body":{"index.html":{}}}],["practice",{"_index":829,"title":{},"body":{"index.html":{}}}],["preload",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preload.js",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepend",{"_index":374,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["prepend(...childs",{"_index":416,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["private",{"_index":9,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["process.env.node_env",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":863,"title":{},"body":{"index.html":{}}}],["project",{"_index":857,"title":{},"body":{"index.html":{}}}],["promise",{"_index":310,"title":{},"body":{"interfaces/Module.html":{},"classes/ModuleItem.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["propertypanel",{"_index":83,"title":{"classes/PropertyPanel.html":{}},"body":{"classes/App.html":{},"classes/PropertyPanel.html":{},"coverage.html":{}}}],["props",{"_index":124,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.modules",{"_index":685,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.scale",{"_index":691,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.scope",{"_index":339,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["provided",{"_index":964,"title":{},"body":{"license.html":{}}}],["provides",{"_index":313,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["public",{"_index":142,"title":{},"body":{"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["publish",{"_index":838,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":974,"title":{},"body":{"license.html":{}}}],["qiansc",{"_index":929,"title":{},"body":{"license.html":{}}}],["quickly",{"_index":906,"title":{},"body":{"index.html":{}}}],["ready",{"_index":892,"title":{},"body":{"index.html":{}}}],["ref.ts",{"_index":180,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["ref.ts:15",{"_index":191,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:5",{"_index":188,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:6",{"_index":189,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:7",{"_index":186,"title":{},"body":{"classes/ColorRef.html":{}}}],["reflect",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["release",{"_index":919,"title":{},"body":{"index.html":{}}}],["remove(menu",{"_index":300,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["render",{"_index":213,"title":{},"body":{"classes/Controller.html":{}}}],["replacecontent",{"_index":367,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["replacecontent(contentview",{"_index":398,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["repository",{"_index":827,"title":{},"body":{"index.html":{}}}],["request",{"_index":322,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["required",{"_index":850,"title":{},"body":{"index.html":{}}}],["resize",{"_index":255,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{}}}],["resizeat",{"_index":238,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["resourceexplorer",{"_index":442,"title":{"classes/ResourceExplorer.html":{}},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["resourcepage",{"_index":81,"title":{},"body":{"classes/App.html":{}}}],["resoures",{"_index":308,"title":{},"body":{"interfaces/Module.html":{}}}],["restriction",{"_index":942,"title":{},"body":{"license.html":{}}}],["result",{"_index":135,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":137,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":161,"title":{},"body":{"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["returns",{"_index":43,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["rights",{"_index":945,"title":{},"body":{"license.html":{}}}],["roadmap",{"_index":839,"title":{},"body":{"index.html":{}}}],["rollup",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":36,"title":{},"body":{"classes/App.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["rounded",{"_index":586,"title":{},"body":{"classes/SplitItemView.html":{}}}],["row",{"_index":249,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":316,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"index.html":{}}}],["s",{"_index":259,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["scale",{"_index":670,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["scope",{"_index":320,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["script",{"_index":879,"title":{},"body":{"index.html":{}}}],["secondarybgcolor",{"_index":761,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["secondarylabelcolor",{"_index":762,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":921,"title":{},"body":{"index.html":{}}}],["sell",{"_index":950,"title":{},"body":{"license.html":{}}}],["serialize",{"_index":273,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["server",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":69,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["service.ts",{"_index":139,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":147,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:12",{"_index":154,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:18",{"_index":149,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:21",{"_index":152,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:9",{"_index":145,"title":{},"body":{"classes/AppearanceService.html":{}}}],["set",{"_index":926,"title":{},"body":{"index.html":{}}}],["setactivestate",{"_index":463,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setactivestate(index",{"_index":485,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setcontent",{"_index":368,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setcontent(contentview",{"_index":400,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setcursor",{"_index":239,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["setdefaultclass",{"_index":369,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setflow",{"_index":375,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setflow(type",{"_index":419,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setgrow",{"_index":370,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setgrow(classname",{"_index":403,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setshrink",{"_index":371,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setshrink(classname",{"_index":408,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["settings",{"_index":229,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shall",{"_index":960,"title":{},"body":{"license.html":{}}}],["shapecanvas",{"_index":445,"title":{"classes/ShapeCanvas.html":{}},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["shrink",{"_index":410,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["similar",{"_index":860,"title":{},"body":{"index.html":{}}}],["singleton",{"_index":91,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["smelte",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":938,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["split",{"_index":245,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitItemView.html":{}}}],["split.js",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["splitboard",{"_index":658,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["splitboardcontroller",{"_index":448,"title":{"classes/SplitBoardController.html":{}},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["splitboardview",{"_index":291,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["splitboardview>().setflow('1",{"_index":678,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["splitcolumnat",{"_index":240,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["splitexpand",{"_index":388,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["splititemview",{"_index":244,"title":{"classes/SplitItemView.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"coverage.html":{}}}],["splititemview:12",{"_index":385,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:13",{"_index":386,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:14",{"_index":384,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:16",{"_index":387,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:17",{"_index":389,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:25",{"_index":401,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:32",{"_index":399,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:39",{"_index":404,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:46",{"_index":409,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:53",{"_index":397,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:57",{"_index":402,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:63",{"_index":392,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:67",{"_index":394,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:71",{"_index":412,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:77",{"_index":393,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splitrowat",{"_index":241,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["src/.../appearance.ts",{"_index":808,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../class",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inject.ts",{"_index":814,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.ts",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settings.ts",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../split",{"_index":809,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../type.ts",{"_index":810,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../ui",{"_index":815,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../uuid.ts",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../view.ts",{"_index":994,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app",{"_index":877,"title":{},"body":{"index.html":{}}}],["src/app/index.ts",{"_index":727,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/logger.ts",{"_index":734,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/settings.ts",{"_index":223,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core",{"_index":870,"title":{},"body":{"index.html":{}}}],["src/core/browser/class",{"_index":626,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/controller.ts",{"_index":200,"title":{},"body":{"classes/Controller.html":{},"coverage.html":{}}}],["src/core/browser/controller.ts:10",{"_index":208,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:14",{"_index":211,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:17",{"_index":209,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:5",{"_index":207,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:7",{"_index":210,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/layout/split",{"_index":449,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/layout/type.ts",{"_index":233,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/browser/style/ui",{"_index":747,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/view.ts",{"_index":613,"title":{},"body":{"classes/View.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/browser/view.ts:13",{"_index":615,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:17",{"_index":616,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:4",{"_index":614,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:8",{"_index":617,"title":{},"body":{"classes/View.html":{}}}],["src/core/common/appearance.ts",{"_index":811,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/common/color",{"_index":179,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["src/core/common/uuid.ts",{"_index":772,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/components",{"_index":886,"title":{},"body":{"index.html":{}}}],["src/core/parts/ioc/inject.ts",{"_index":774,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/core/parts/modules/module",{"_index":311,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"coverage.html":{}}}],["src/core/parts/modules/module.ts",{"_index":306,"title":{},"body":{"interfaces/Module.html":{},"coverage.html":{}}}],["src/core/parts/modules/svelte",{"_index":597,"title":{},"body":{"classes/SvelteModule.html":{},"coverage.html":{}}}],["src/modules",{"_index":880,"title":{},"body":{"index.html":{}}}],["src/modules/menu",{"_index":163,"title":{},"body":{"classes/BaseMenu.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["src/modules/property",{"_index":425,"title":{},"body":{"classes/PropertyPanel.html":{},"coverage.html":{}}}],["src/modules/resource",{"_index":443,"title":{},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["src/modules/shape",{"_index":446,"title":{},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["src/modules/workbench/index.ts",{"_index":657,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["src/modules/workbench/index.ts:19",{"_index":662,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:20",{"_index":663,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:21",{"_index":660,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:31",{"_index":667,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:72",{"_index":664,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:81",{"_index":666,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:95",{"_index":668,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/module",{"_index":354,"title":{},"body":{"classes/ModuleItem.html":{},"coverage.html":{}}}],["src/workbench",{"_index":882,"title":{},"body":{"index.html":{}}}],["src/workbench/desktop/app.ts",{"_index":6,"title":{},"body":{"classes/App.html":{},"coverage.html":{}}}],["src/workbench/desktop/app.ts:103",{"_index":54,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:16",{"_index":37,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:17",{"_index":30,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:24",{"_index":42,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:30",{"_index":47,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:42",{"_index":49,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:47",{"_index":55,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:52",{"_index":58,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:60",{"_index":44,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:64",{"_index":48,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:74",{"_index":46,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:83",{"_index":53,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:91",{"_index":51,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:99",{"_index":59,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/main.ts",{"_index":782,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/services/appearance",{"_index":138,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["standard",{"_index":845,"title":{},"body":{"index.html":{}}}],["start",{"_index":261,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["started",{"_index":823,"title":{"index.html":{},"license.html":{}},"body":{}}],["startx",{"_index":457,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["starty",{"_index":458,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["stateconfig",{"_index":631,"title":{"interfaces/stateConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["statements",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["statically",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statusbar",{"_index":79,"title":{},"body":{"classes/App.html":{}}}],["step",{"_index":889,"title":{},"body":{"index.html":{}}}],["sth",{"_index":120,"title":{},"body":{"classes/App.html":{}}}],["store",{"_index":228,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{}}}],["storybook",{"_index":885,"title":{},"body":{"index.html":{}}}],["string",{"_index":283,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":858,"title":{},"body":{"index.html":{}}}],["subject",{"_index":955,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":948,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":962,"title":{},"body":{"license.html":{}}}],["such",{"_index":873,"title":{},"body":{"index.html":{}}}],["super",{"_index":571,"title":{},"body":{"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["support",{"_index":898,"title":{},"body":{"index.html":{}}}],["svelte/internal",{"_index":606,"title":{},"body":{"classes/SvelteModule.html":{}}}],["sveltecomponentdev",{"_index":431,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["sveltemodule",{"_index":427,"title":{"classes/SvelteModule.html":{}},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"coverage.html":{}}}],["sveltemodule:10",{"_index":433,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:16",{"_index":437,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:28",{"_index":436,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:5",{"_index":435,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:8",{"_index":432,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:9",{"_index":430,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["switch",{"_index":196,"title":{},"body":{"classes/ColorRef.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["symbol.for('flowtableroot",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["systembluecolor",{"_index":763,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemgraycolor",{"_index":764,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemorangecolor",{"_index":765,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systempinkcolor",{"_index":766,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemredcolor",{"_index":767,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemyellowcolor",{"_index":768,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":253,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["table",{"_index":784,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":122,"title":{},"body":{"classes/App.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"miscellaneous/variables.html":{}}}],["target.classlist.contains('split",{"_index":507,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["target.parentelement",{"_index":506,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["template",{"_index":849,"title":{},"body":{"index.html":{}}}],["tertiarybgcolor",{"_index":769,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tertiarylabelcolor",{"_index":770,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["textfieldbackground",{"_index":771,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["this._growclassname",{"_index":581,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._shrinkclassname",{"_index":580,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._type",{"_index":158,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this._view",{"_index":293,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/SvelteModule.html":{}}}],["this._view.parentnode",{"_index":611,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this._view.parentnode.removechild(this._view",{"_index":612,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this._view.removechild(menu.container",{"_index":301,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.activeexpand",{"_index":515,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.activeid",{"_index":516,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.add(moduleid",{"_index":337,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.addexpandbutton",{"_index":572,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.anycolor",{"_index":193,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.cancelwaitformerge",{"_index":592,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.checkexpandstate(event.clientx",{"_index":497,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.comp",{"_index":608,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this.comp.$destroy",{"_index":610,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this.container",{"_index":89,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind('modulefactory').todynamicvalue",{"_index":101,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(appearanceservice).to(appearanceservice",{"_index":109,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(menugroupservice).to(menugroupservice",{"_index":110,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(moduleid).to(module",{"_index":326,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.container.get(appearanceservice",{"_index":112,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(menugroupservice",{"_index":130,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(moduleid",{"_index":340,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.contentview",{"_index":574,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.context",{"_index":125,"title":{},"body":{"classes/App.html":{}}}],["this.context.set('container",{"_index":92,"title":{},"body":{"classes/App.html":{}}}],["this.darkcolor",{"_index":195,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.evt.emit('onmodechanged",{"_index":159,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.evt.on('onmodechanged",{"_index":160,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.exist(moduleid",{"_index":323,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.expand",{"_index":590,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.expandhidden",{"_index":591,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.mergedirection",{"_index":594,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expandactive",{"_index":520,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandleavehandler",{"_index":498,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmouseuphandler",{"_index":500,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmovehandler",{"_index":494,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandtype",{"_index":522,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.groupmenuservice.getmenuinsatance",{"_index":176,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.initmenus",{"_index":126,"title":{},"body":{"classes/App.html":{}}}],["this.initmodules",{"_index":98,"title":{},"body":{"classes/App.html":{}}}],["this.initnavigationbar",{"_index":95,"title":{},"body":{"classes/App.html":{}}}],["this.initpreferences",{"_index":93,"title":{},"body":{"classes/App.html":{}}}],["this.initstatusbar",{"_index":96,"title":{},"body":{"classes/App.html":{}}}],["this.initstyle",{"_index":94,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(appearancetype.dark",{"_index":115,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(type",{"_index":114,"title":{},"body":{"classes/App.html":{}}}],["this.initwithcomponent(this._view",{"_index":609,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this.insertconfig(config",{"_index":647,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.lightcolor",{"_index":194,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.liveresize(event.clientx",{"_index":495,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.menuinstance",{"_index":175,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.menuinstance.init",{"_index":177,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.meuns",{"_index":302,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.meuns.filter((item",{"_index":303,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.meuns.length",{"_index":297,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.meuns.push(menu",{"_index":299,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.modulefactory",{"_index":680,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.modulefactory.load(item.moduleid",{"_index":706,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.modulefactory.load(p.id",{"_index":687,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.moduleid",{"_index":424,"title":{},"body":{"classes/ModuleItem.html":{}}}],["this.modules.get(moduleid",{"_index":332,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.modules.has(moduleid",{"_index":334,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.modules.set(moduleid",{"_index":324,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.normalizeweight(config",{"_index":653,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.onmousedown(event",{"_index":502,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.orderedconfigs",{"_index":649,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor",{"_index":655,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor].weight",{"_index":656,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.prepend(contentview",{"_index":577,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.props",{"_index":607,"title":{},"body":{"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.props.minwidth",{"_index":711,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.props.scale",{"_index":712,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.props.type",{"_index":710,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.root",{"_index":123,"title":{},"body":{"classes/App.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["this.root.appendchild(child",{"_index":623,"title":{},"body":{"classes/View.html":{}}}],["this.root.appendchild(workbench.view",{"_index":107,"title":{},"body":{"classes/App.html":{}}}],["this.root.classlist.add('flex",{"_index":585,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('relative",{"_index":588,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('split",{"_index":575,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('wait",{"_index":593,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(...this._bgcolorclassname",{"_index":589,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(`flex",{"_index":622,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.add(this._growclassname",{"_index":582,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(this._shrinkclassname",{"_index":584,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove('flex",{"_index":621,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.remove('wait",{"_index":596,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._growclassname",{"_index":583,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._shrinkclassname",{"_index":579,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.prepend(...childs",{"_index":624,"title":{},"body":{"classes/View.html":{}}}],["this.root.replacechild(contentview",{"_index":578,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.setactivestate(index",{"_index":508,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.setdefaultclass",{"_index":573,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.splitboard",{"_index":677,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.additem(item",{"_index":689,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.applysplit",{"_index":690,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.direction",{"_index":682,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.itemgeneratedelegate",{"_index":679,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.items.foreach((item",{"_index":692,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.items[index",{"_index":693,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.root",{"_index":681,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.startx",{"_index":513,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.starty",{"_index":514,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.unactiveexpand",{"_index":499,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view",{"_index":700,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.view.cancelformerge",{"_index":527,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.direction",{"_index":530,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items.foreach((item",{"_index":504,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items[this.activeid",{"_index":529,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.resizeat(this.activeid",{"_index":534,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousedown",{"_index":501,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseleave",{"_index":518,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousemove",{"_index":517,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseup",{"_index":519,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseleave",{"_index":525,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mousemove",{"_index":524,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseup",{"_index":526,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor",{"_index":528,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('col",{"_index":545,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('crosshair",{"_index":523,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('n",{"_index":549,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('row",{"_index":546,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('w",{"_index":547,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitcolumnat(this.activeid",{"_index":551,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitrowat(this.activeid",{"_index":552,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.waitformergeatitem(this.activeid",{"_index":548,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.viewdiddisappear",{"_index":704,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.viewwilldisappear",{"_index":701,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["three",{"_index":865,"title":{},"body":{"index.html":{}}}],["title",{"_index":282,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["together",{"_index":832,"title":{},"body":{"index.html":{}}}],["token",{"_index":817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tools",{"_index":881,"title":{},"body":{"index.html":{}}}],["tort",{"_index":984,"title":{},"body":{"license.html":{}}}],["transient",{"_index":321,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["tree",{"_index":217,"title":{},"body":{"classes/Controller.html":{}}}],["true",{"_index":521,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":34,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":992,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/color",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["ui/components/navigation/navigation",{"_index":77,"title":{},"body":{"classes/App.html":{}}}],["ui/components/property/proterty.svelte",{"_index":84,"title":{},"body":{"classes/App.html":{}}}],["ui/components/resource/resource.svelte",{"_index":82,"title":{},"body":{"classes/App.html":{}}}],["ui/components/status/status",{"_index":80,"title":{},"body":{"classes/App.html":{}}}],["unactiveexpand",{"_index":464,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["undefined",{"_index":634,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":844,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":278,"title":{},"body":{"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{}}}],["update",{"_index":897,"title":{},"body":{"index.html":{}}}],["updatemode",{"_index":144,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updatemode(type",{"_index":153,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updater",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["url",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":946,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":853,"title":{},"body":{"index.html":{}}}],["user",{"_index":925,"title":{},"body":{"index.html":{}}}],["using",{"_index":901,"title":{},"body":{"index.html":{}}}],["utils",{"_index":875,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":773,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":39,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/classBuilder.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":995,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":490,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["version",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":538,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["very",{"_index":859,"title":{},"body":{"index.html":{}}}],["view",{"_index":202,"title":{"classes/View.html":{}},"body":{"classes/Controller.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["view.clone",{"_index":705,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.module",{"_index":696,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.module.serialize",{"_index":707,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.parentnode",{"_index":702,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.parentnode.removechild(view",{"_index":703,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.setcontent(module.view",{"_index":695,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view:13",{"_index":414,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["view:17",{"_index":417,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["view:4",{"_index":390,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["view:8",{"_index":421,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["viewdidappear",{"_index":203,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewdiddisappear",{"_index":204,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewwillappear",{"_index":205,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewwilldisappear",{"_index":206,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["vite",{"_index":852,"title":{},"body":{"index.html":{}}}],["void",{"_index":45,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/Controller.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["w",{"_index":258,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["waitformerge",{"_index":372,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["waitformerge(direction",{"_index":411,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["waitformergeatitem",{"_index":242,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["warranties",{"_index":970,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":965,"title":{},"body":{"license.html":{}}}],["web",{"_index":883,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["webpreferences",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":632,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["weightmap",{"_index":625,"title":{"interfaces/WeightMap.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["whether",{"_index":982,"title":{},"body":{"license.html":{}}}],["width",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wiki",{"_index":922,"title":{},"body":{"index.html":{}}}],["windows",{"_index":895,"title":{},"body":{"index.html":{}}}],["without",{"_index":941,"title":{},"body":{"license.html":{}}}],["work",{"_index":834,"title":{},"body":{"index.html":{}}}],["workbench",{"_index":102,"title":{"classes/Workbench.html":{}},"body":{"classes/App.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["workbench.viewdidappear",{"_index":108,"title":{},"body":{"classes/App.html":{}}}],["workbench.viewwillappear",{"_index":106,"title":{},"body":{"classes/App.html":{}}}],["workbench/desktop/app.config.json",{"_index":86,"title":{},"body":{"classes/App.html":{}}}],["workbenchprops",{"_index":661,"title":{"interfaces/WorkbenchProps.html":{}},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["works",{"_index":848,"title":{},"body":{"index.html":{}}}],["xl",{"_index":587,"title":{},"body":{"classes/SplitItemView.html":{}}}],["yes",{"_index":187,"title":{},"body":{"classes/ColorRef.html":{},"classes/View.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/App.html":{"url":"classes/App.html","title":"class - App","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/app.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                context\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bootstrap\n                            \n                            \n                                initFrame\n                            \n                            \n                                initMenus\n                            \n                            \n                                    Async\n                                initModules\n                            \n                            \n                                initNavigationBar\n                            \n                            \n                                initPreferences\n                            \n                            \n                                initPropertyPanel\n                            \n                            \n                                initResourcePanel\n                            \n                            \n                                initStatusBar\n                            \n                            \n                                initStyle\n                            \n                            \n                                initStyleMode\n                            \n                            \n                                initWorkArea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/app.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Container\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        bootstrap\n                        \n                    \n                \n            \n            \n                \n                    \n                    bootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFrame\n                        \n                    \n                \n            \n            \n                \ninitFrame()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initMenus\n                        \n                    \n                \n            \n            \n                \ninitMenus()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initModules\n                        \n                    \n                \n            \n            \n                \n                    \n                    initModules()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNavigationBar\n                        \n                    \n                \n            \n            \n                \ninitNavigationBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPreferences\n                        \n                    \n                \n            \n            \n                \ninitPreferences()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPropertyPanel\n                        \n                    \n                \n            \n            \n                \ninitPropertyPanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initResourcePanel\n                        \n                    \n                \n            \n            \n                \ninitResourcePanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStatusBar\n                        \n                    \n                \n            \n            \n                \ninitStatusBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyle\n                        \n                    \n                \n            \n            \n                \ninitStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyleMode\n                        \n                    \n                \n            \n            \n                \ninitStyleMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initWorkArea\n                        \n                    \n                \n            \n            \n                \ninitWorkArea()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Container } from 'inversify';\nimport { AppearanceType } from '@cosmic/core/common';\nimport { ModuleFactory } from '@cosmic/core/parts';\nimport { Controller } from '@cosmic/core/browser';\nimport { AppearanceService } from '@cosmic/workbench/services/appearance-service';\n// import { MenuGroupService } from '@cosmic/workbench/services/menu-group-service';\n// import { applicationMenus } from './base-menu/config';\nimport Navigation from '../ui/components/navigation/navigation-bar.svelte';\nimport StatusBar from '../ui/components/status/status-bar.svelte';\nimport ResourcePage from '../ui/components/resource/resource.svelte';\nimport PropertyPanel from '../ui/components/property/proterty.svelte';\n\nimport config from 'workbench/desktop/app.config.json';\n\nexport default class App {\n  private container: Container;\n  private context = new Map();\n  constructor(private root: HTMLElement) {\n    this.container = new Container({ defaultScope: 'Singleton' });\n    this.context.set('container', this.container);\n    this.initPreferences();\n    this.initStyle();\n  }\n  async bootstrap() {\n    this.initNavigationBar();\n    this.initStatusBar();\n    await this.initModules();\n  }\n\n  async initModules() {\n    const moduleFactory = new ModuleFactory(this.container);\n    this.container.bind('ModuleFactory').toDynamicValue(() => moduleFactory);\n\n    const workbench = await moduleFactory.load(config.workbench.id, config.workbench);\n    if (workbench instanceof Controller) {\n      workbench.viewWillAppear();\n      this.root.appendChild(workbench.view());\n      workbench.viewDidAppear();\n    }\n  }\n\n  initPreferences() {\n    this.container.bind(AppearanceService).to(AppearanceService);\n    // this.container.bind(MenuGroupService).to(MenuGroupService);\n  }\n\n  initStyle() {\n    const aps = this.container.get(AppearanceService);\n    aps.onModeChanged((type: AppearanceType) => this.initStyleMode(type));\n    this.initStyleMode(AppearanceType.dark);\n  }\n  initStyleMode(type: AppearanceType): void {\n    if (type === AppearanceType.dark) {\n      document.body.classList.add('mode-dark');\n    } else {\n      document.body.classList.remove('mode-dark');\n    }\n  }\n\n  initFrame(): void {\n    // to do sth.\n  }\n\n  initNavigationBar(): void {\n    // to do sth.\n    const navigationBar = new Navigation({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    this.initMenus();\n  }\n\n  initMenus(): void {\n    // const header = document.querySelector('#main-header');\n    // const groupMenu = this.container.get(MenuGroupService);\n    // groupMenu.initContainer(header as HTMLElement);\n    // for (const menu of applicationMenus) {\n    //   groupMenu.getMenuInsatance().init(menu.title, menu.items);\n    // }\n  }\n\n  initResourcePanel(container: HTMLElement): void {\n    new ResourcePage({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initPropertyPanel(container: HTMLElement): void {\n    new PropertyPanel({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initWorkArea(): void {\n    // to do sth.\n  }\n\n  initStatusBar(): void {\n    new StatusBar({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    // to do sth.\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppearanceService.html":{"url":"classes/AppearanceService.html","title":"class - AppearanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppearanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/appearance-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Private\n                                evt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onModeChanged\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                updateMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppearanceType\n\n                    \n                \n                \n                    \n                        Default value : AppearanceType.dark\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        evt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter2()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onModeChanged\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModeChanged(fn: (type: AppearanceType) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        type\n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject, ContainerModule } from 'inversify';\nimport { EventEmitter2 } from 'eventemitter2';\n\nimport { AppearanceType } from '@cosmic/core/common';\n\n@injectable()\n/** 外观设置服务 */\nexport class AppearanceService {\n  private _type: AppearanceType = AppearanceType.dark;\n  private evt = new EventEmitter2();\n\n  public updateMode(type: AppearanceType) {\n    if (this._type !== type) {\n      this._type = type;\n      this.evt.emit('onModeChanged', type);\n    }\n  }\n  public onModeChanged(fn: (type: AppearanceType) => void) {\n    this.evt.on('onModeChanged', fn);\n  }\n  public type() {\n    return this._type;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseMenu.html":{"url":"classes/BaseMenu.html","title":"class - BaseMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-group/base-menu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                menuInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(groupMenuService: MenuGroupService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/menu-group/base-menu.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupMenuService\n                                                  \n                                                        \n                                                                    MenuGroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Menu\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-group/base-menu.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    initMenu(menuItems: MenuItemConfig[])\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-group/base-menu.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuItems\n                                    \n                                            MenuItemConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { MenuGroupService } from './menu-group-service';\nimport type { Menu, MenuItemConfig } from './menu';\n\nexport class BaseMenu {\n  private menuInstance!: Menu;\n  constructor(private groupMenuService: MenuGroupService) {}\n\n  public initMenu(menuItems: MenuItemConfig[]): void {\n    this.menuInstance = this.groupMenuService.getMenuInsatance();\n    this.menuInstance.init('文件', menuItems);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColorRef.html":{"url":"classes/ColorRef.html","title":"class - ColorRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColorRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/common/color-ref.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                anyColor\n                            \n                            \n                                    Private\n                                darkColor\n                            \n                            \n                                    Private\n                                lightColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                color\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(anyColor: Color, lightColor?: Color, darkColor?: Color)\n                    \n                \n                        \n                            \n                                Defined in src/core/common/color-ref.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        anyColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lightColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        darkColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        anyColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        darkColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lightColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        color\n                        \n                    \n                \n            \n            \n                \n                    \n                    color(appearanceType: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/common/color-ref.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appearanceType\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type * as Color from 'color';\nimport { AppearanceType } from './appearance';\n\nexport default class ColorRef {\n  private anyColor: Color;\n  private lightColor: Color;\n  private darkColor: Color;\n\n  constructor(anyColor: Color, lightColor?: Color, darkColor?: Color) {\n    this.anyColor = anyColor;\n    this.lightColor = lightColor || anyColor;\n    this.darkColor = darkColor || anyColor;\n  }\n\n  public color(appearanceType: AppearanceType) {\n    switch (appearanceType) {\n      case AppearanceType.any:\n        return this.anyColor;\n      case AppearanceType.light:\n        return this.lightColor;\n      case AppearanceType.dark:\n        return this.darkColor;\n      default:\n        return this.anyColor;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Controller.html":{"url":"classes/Controller.html","title":"class - Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Controller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                view\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\n\n@injectable()\nexport abstract class Controller {\n  abstract view(): HTMLElement;\n\n  viewWillAppear() {\n    /** going to render, appending element to dom tree  */\n  }\n  viewDidAppear() {\n    /** after appeared */\n  }\n\n  viewWillDisappear() {\n    /** going to disappear */\n  }\n  viewDidDisappear() {\n    /** going to disappear */\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISettings.html":{"url":"interfaces/ISettings.html","title":"interface - ISettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/settings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            check\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import ElectronStore from 'electron-store';\n\ninterface ISettings {\n  check: boolean;\n}\n\nconst settings = new ElectronStore({\n  defaults: {\n    check: false,\n  },\n});\n\nexport default settings;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISplitBoardView.html":{"url":"interfaces/ISplitBoardView.html","title":"interface - ISplitBoardView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISplitBoardView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/type.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cancelForMerge\n                                        \n                                \n                                \n                                        \n                                            direction\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            resizeAt\n                                        \n                                \n                                \n                                        \n                                            setCursor\n                                        \n                                \n                                \n                                        \n                                            splitColumnAt\n                                        \n                                \n                                \n                                        \n                                            splitRowAt\n                                        \n                                \n                                \n                                        \n                                            waitForMergeAtItem\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancelForMerge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelForMerge:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:         directionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         directionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     SplitItemView[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SplitItemView[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizeAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resizeAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setCursor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setCursor:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitColumnAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitColumnAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitRowAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitRowAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        waitForMergeAtItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        waitForMergeAtItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type View from '../view';\nimport type SplitItemView from './split-item.view';\n\nexport enum directionType {\n  'col',\n  'row',\n}\n\nexport interface ItemGenerateDelegate {\n  expandNewItem: (oldItem: T, index: number) => T;\n}\n\nexport interface ISplitBoardView extends View {\n  items: SplitItemView[];\n  direction: directionType;\n  setCursor: (\n    type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize'\n  ) => void;\n  cancelForMerge: () => void;\n  resizeAt: (index: number, start: number, length: number, position: number) => void;\n  waitForMergeAtItem: (index: number, direction: 'w' | 'e' | 'n' | 's') => void;\n  splitColumnAt: (index: number, clientX: number, clientY: number) => void;\n  splitRowAt: (index: number, clientX: number, clientY: number) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemGenerateDelegate.html":{"url":"interfaces/ItemGenerateDelegate.html","title":"interface - ItemGenerateDelegate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ItemGenerateDelegate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/type.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expandNewItem\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expandNewItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expandNewItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type View from '../view';\nimport type SplitItemView from './split-item.view';\n\nexport enum directionType {\n  'col',\n  'row',\n}\n\nexport interface ItemGenerateDelegate {\n  expandNewItem: (oldItem: T, index: number) => T;\n}\n\nexport interface ISplitBoardView extends View {\n  items: SplitItemView[];\n  direction: directionType;\n  setCursor: (\n    type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize'\n  ) => void;\n  cancelForMerge: () => void;\n  resizeAt: (index: number, start: number, length: number, position: number) => void;\n  waitForMergeAtItem: (index: number, direction: 'w' | 'e' | 'n' | 's') => void;\n  splitColumnAt: (index: number, clientX: number, clientY: number) => void;\n  splitRowAt: (index: number, clientX: number, clientY: number) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuBar.html":{"url":"classes/MenuBar.html","title":"class - MenuBar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuBar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-group/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Controller\n            \n\n            \n                Implements\n            \n            \n                            Module\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                serialize\n                            \n                            \n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-group/index.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuProps\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-group/index.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-group/index.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: MenuProps)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-group/index.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                MenuProps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-group/index.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { title: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n            \n                \nview()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\n// import { Menu } from './menu';\n\ninterface MenuProps {\n  title: string;\n}\n\n@injectable()\nexport default class MenuBar extends Controller implements Module {\n  props: MenuProps;\n  // private meuns!: Menu[];\n  private _view: HTMLElement;\n  view() {\n    return this._view;\n  }\n  public async init(props: MenuProps) {\n    this._view = document.createElement('div');\n    return this;\n  }\n  viewWillAppear() {\n    // const id = Date.now() + '' + this.meuns.length;\n    // const menu = new Menu(this._view, id);\n    // this.meuns.push(menu);\n  }\n  serialize() {\n    return { title: '' };\n  }\n  async destroy() {\n    return this;\n  }\n  // remove(menu: Menu) {\n  //   this._view.removeChild(menu.container);\n  //   this.meuns = this.meuns.filter((item) => item.id === menu.id);\n  // }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuProps.html":{"url":"interfaces/MenuProps.html","title":"interface - MenuProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-group/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\n// import { Menu } from './menu';\n\ninterface MenuProps {\n  title: string;\n}\n\n@injectable()\nexport default class MenuBar extends Controller implements Module {\n  props: MenuProps;\n  // private meuns!: Menu[];\n  private _view: HTMLElement;\n  view() {\n    return this._view;\n  }\n  public async init(props: MenuProps) {\n    this._view = document.createElement('div');\n    return this;\n  }\n  viewWillAppear() {\n    // const id = Date.now() + '' + this.meuns.length;\n    // const menu = new Menu(this._view, id);\n    // this.meuns.push(menu);\n  }\n  serialize() {\n    return { title: '' };\n  }\n  async destroy() {\n    return this;\n  }\n  // remove(menu: Menu) {\n  //   this._view.removeChild(menu.container);\n  //   this.meuns = this.meuns.filter((item) => item.id === menu.id);\n  // }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Module.html":{"url":"interfaces/Module.html","title":"interface - Module","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Module\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destroy\n                                        \n                                \n                                \n                                        \n                                            init\n                                        \n                                \n                                \n                                        \n                                            props\n                                        \n                                \n                                \n                                        \n                                            serialize\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destroy:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        init\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        init:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    loading resoures\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        props\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        props:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serialize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serialize:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    to Options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Module {\n  props: T;\n  /** loading resoures */\n  init: (props: T) => Promise>;\n\n  /** to Options */\n  serialize: () => T;\n\n  destroy: () => Promise>;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModuleConfig.html":{"url":"interfaces/ModuleConfig.html","title":"interface - ModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module-factory.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Module } from './module';\nimport { injectable } from 'inversify';\nimport type { Container } from 'inversify';\n\nexport interface ModuleConfig {\n  id: string;\n}\n\n@injectable()\n/** Provides the ability to cache and run ES Modules */\nexport class ModuleFactory {\n  constructor(private container: Container) {}\n  private modules: Map Module> = new Map();\n  add(moduleId: string, module: new () => Module, scope: 'Singleton' | 'Transient' | 'Request' = 'Transient') {\n    if (this.exist(moduleId)) return;\n    this.modules.set(moduleId, module);\n    const m = this.container.bind(moduleId).to(module);\n    switch (scope) {\n      case 'Singleton':\n        m.inSingletonScope();\n        break;\n      case 'Transient':\n        m.inTransientScope();\n        break;\n      case 'Request':\n        m.inRequestScope();\n        break;\n    }\n  }\n  get(moduleId: string) {\n    return this.modules.get(moduleId);\n  }\n  exist(moduleId: string) {\n    return this.modules.has(moduleId);\n  }\n  async load(moduleId: string, props: any) {\n    if (!this.exist(moduleId)) {\n      await import(moduleId).then((ModuleSource) => {\n        this.add(moduleId, ModuleSource.default, props.scope || 'Transient');\n      });\n    }\n    const module = this.container.get(moduleId) as Module;\n    await module.init(props);\n    return module;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModuleFactory.html":{"url":"classes/ModuleFactory.html","title":"class - ModuleFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModuleFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                modules\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                exist\n                            \n                            \n                                get\n                            \n                            \n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: Container)\n                    \n                \n                        \n                            \n                                Defined in src/core/parts/modules/module-factory.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    Container\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/module-factory.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(moduleId: string, module, scope: \"Singleton\" | \"Transient\" | \"Request\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    module\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    scope\n                                    \n                                            \"Singleton\" | \"Transient\" | \"Request\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Transient'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exist\n                        \n                    \n                \n            \n            \n                \nexist(moduleId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(moduleId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load(moduleId: string, props: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Module } from './module';\nimport { injectable } from 'inversify';\nimport type { Container } from 'inversify';\n\nexport interface ModuleConfig {\n  id: string;\n}\n\n@injectable()\n/** Provides the ability to cache and run ES Modules */\nexport class ModuleFactory {\n  constructor(private container: Container) {}\n  private modules: Map Module> = new Map();\n  add(moduleId: string, module: new () => Module, scope: 'Singleton' | 'Transient' | 'Request' = 'Transient') {\n    if (this.exist(moduleId)) return;\n    this.modules.set(moduleId, module);\n    const m = this.container.bind(moduleId).to(module);\n    switch (scope) {\n      case 'Singleton':\n        m.inSingletonScope();\n        break;\n      case 'Transient':\n        m.inTransientScope();\n        break;\n      case 'Request':\n        m.inRequestScope();\n        break;\n    }\n  }\n  get(moduleId: string) {\n    return this.modules.get(moduleId);\n  }\n  exist(moduleId: string) {\n    return this.modules.has(moduleId);\n  }\n  async load(moduleId: string, props: any) {\n    if (!this.exist(moduleId)) {\n      await import(moduleId).then((ModuleSource) => {\n        this.add(moduleId, ModuleSource.default, props.scope || 'Transient');\n      });\n    }\n    const module = this.container.get(moduleId) as Module;\n    await module.init(props);\n    return module;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModuleItem.html":{"url":"classes/ModuleItem.html","title":"class - ModuleItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModuleItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/module-item.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SplitItemView\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loader\n                            \n                            \n                                    Public\n                                module\n                            \n                            \n                                    Public\n                                moduleId\n                            \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clone\n                            \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Promise>\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/module-item.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Module\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/module-item.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        moduleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/module-item.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitExpand\n\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/module-item.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleItem\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:67\n\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:71\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SplitItemView } from '@cosmic/core/browser';\nimport type { Module } from '@cosmic/core/parts';\n\nexport class ModuleItem extends SplitItemView {\n  public loader: Promise>;\n  public moduleId: string;\n  public module: Module;\n  public clone() {\n    const item = new ModuleItem();\n    item.moduleId = this.moduleId;\n    return item;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyPanel.html":{"url":"classes/PropertyPanel.html","title":"class - PropertyPanel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyPanel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/property-panel/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvelteModule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                serialize\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SvelteModule } from '@cosmic/core/parts';\n\nexport default class PropertyPanel extends SvelteModule {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n  serialize() {\n    return {};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceExplorer.html":{"url":"classes/ResourceExplorer.html","title":"class - ResourceExplorer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceExplorer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/resource-explorer/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvelteModule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                serialize\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SvelteModule } from '@cosmic/core/parts';\n\nexport default class ResourceExplorer extends SvelteModule {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n  serialize() {\n    return {};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShapeCanvas.html":{"url":"classes/ShapeCanvas.html","title":"class - ShapeCanvas","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShapeCanvas\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shape-canvas/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvelteModule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                serialize\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SvelteModule } from '@cosmic/core/parts';\n\nexport default class ShapeCanvas extends SvelteModule {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n  serialize() {\n    return {};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardController.html":{"url":"classes/SplitBoardController.html","title":"class - SplitBoardController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeId\n                            \n                            \n                                    Private\n                                expandActive\n                            \n                            \n                                    Private\n                                expandLeaveHandler\n                            \n                            \n                                    Private\n                                expandMouseUpHandler\n                            \n                            \n                                    Private\n                                expandMoveHandler\n                            \n                            \n                                    Private\n                                expandType\n                            \n                            \n                                    Private\n                                startX\n                            \n                            \n                                    Private\n                                startY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeExpand\n                            \n                            \n                                    Public\n                                checkExpandState\n                            \n                            \n                                    Private\n                                liveResize\n                            \n                            \n                                    Public\n                                onMouseDown\n                            \n                            \n                                    Public\n                                setActiveState\n                            \n                            \n                                    Private\n                                unactiveExpand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(view: ISplitBoardView)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        view\n                                                  \n                                                        \n                                                                        ISplitBoardView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandLeaveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMouseUpHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMoveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        activeExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    activeExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkExpandState\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkExpandState(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        liveResize\n                        \n                    \n                \n            \n            \n                \n                    \n                    liveResize(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onMouseDown\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseDown(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setActiveState\n                        \n                    \n                \n            \n            \n                \n                    \n                    setActiveState(index: number, startX: number, startY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        unactiveExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    unactiveExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { directionType } from './type';\nimport type { ISplitBoardView } from './type';\n\nexport default class SplitBoardController {\n  private expandMoveHandler!: (event: MouseEvent) => void;\n  private expandLeaveHandler!: (event: MouseEvent) => void;\n  private expandMouseUpHandler!: (event: MouseEvent) => void;\n\n  private startX = 0;\n  private startY = 0;\n  private activeId = -1;\n\n  private expandActive = false;\n  private expandType = 0; // 是否超过偏移值 0 / 1 expand hor | 2 expand ver | 3 merge hor | 4 merge ver\n\n  constructor(private view: ISplitBoardView) {\n    this.expandMoveHandler = (event: MouseEvent) => {\n      this.liveResize(event.clientX, event.clientY);\n      this.checkExpandState(event.clientX, event.clientY);\n    };\n    this.expandLeaveHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.expandMouseUpHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.view.root.addEventListener('mousedown', (event: MouseEvent) => {\n      this.onMouseDown(event);\n    });\n  }\n  public onMouseDown(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    let index = -1;\n    this.view.items.forEach((item, i) => {\n      if (target && item.root === target.parentElement && target.classList.contains('split-expand')) index = i;\n    });\n    if (index === -1) {\n      return;\n    }\n    if (index > -1) {\n      this.setActiveState(index, event.clientX, event.clientY);\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  public setActiveState(index: number, startX: number, startY: number) {\n    // 锚点mousedown\n    this.startX = startX;\n    this.startY = startY;\n    this.activeExpand();\n    this.activeId = index;\n  }\n  private activeExpand() {\n    this.view.root.addEventListener('mousemove', this.expandMoveHandler);\n    this.view.root.addEventListener('mouseleave', this.expandLeaveHandler);\n    this.view.root.addEventListener('mouseup', this.expandMouseUpHandler);\n    this.expandActive = true;\n    this.expandType = 0;\n    this.view.setCursor('crosshair');\n  }\n  private unactiveExpand() {\n    if (this.expandActive) {\n      this.view.root.removeEventListener('mousemove', this.expandMoveHandler);\n      this.view.root.removeEventListener('mouseleave', this.expandLeaveHandler);\n      this.view.root.removeEventListener('mouseup', this.expandMouseUpHandler);\n      this.view.cancelForMerge();\n      this.expandActive = false;\n      this.expandType = 0;\n      this.view.setCursor('');\n    }\n  }\n  private liveResize(clientX: number, clientY: number) {\n    const item = this.view.items[this.activeId];\n    if (this.expandType === 1 && this.view.direction === directionType.col) {\n      // horizontal expand column\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n    } else if (this.expandType === 2 && this.view.direction === directionType.row) {\n      // vertical expand row\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n    }\n  }\n  public checkExpandState(clientX: number, clientY: number) {\n    const offsetX = this.startX - clientX;\n    const offsetY = this.startY - clientY;\n    /** expand mode */\n    if (this.expandType === 0 && offsetX > 0 && offsetY > 0 && (offsetX > 5 || offsetY > 5)) {\n      if (offsetX > offsetY) {\n        this.view.setCursor('col-resize');\n      } else {\n        this.view.setCursor('row-resize');\n      }\n    }\n    /** merge mode */\n    if (offsetX  5) {\n      this.view.setCursor('w-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'w');\n      return;\n    }\n\n    if (offsetY  5) {\n      this.view.setCursor('n-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'n');\n      return;\n    }\n\n    if (this.expandType) return;\n    /** do expand */\n    if (offsetX > 30) {\n      this.expandType = 1;\n      this.view.setCursor('col-resize');\n      this.view.splitColumnAt(this.activeId, clientX, clientY);\n      return;\n    }\n    if (offsetY > 30) {\n      this.expandType = 2;\n      this.view.setCursor('row-resize');\n      this.view.splitRowAt(this.activeId, clientX, clientY);\n    }\n    if (\n      (this.expandType === 1 && this.view.direction === directionType.row) ||\n      (this.expandType === 2 && this.view.direction === directionType.col)\n    ) {\n      this.unactiveExpand();\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitItemView.html":{"url":"classes/SplitItemView.html","title":"class - SplitItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-item.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitExpand\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:67\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view';\nimport SplitExpand from './split-expand.svelte';\n\nenum directionStyles {\n  'w' = 'merge-w',\n  'e' = 'merge-e',\n  's' = 'merge-s',\n  'n' = 'merge-n',\n}\n\nexport default class SplitItemView extends View {\n  private _growClassName = '';\n  private _shrinkClassName = '';\n  private _bgColorClassName: string[] = ['bg-cgray-100', 'dark:bg-cgray-800'];\n\n  public contentView!: HTMLElement;\n  private expand!: SplitExpand;\n\n  constructor() {\n    super();\n    this.addExpandButton();\n    this.setDefaultClass();\n  }\n\n  public setContent(contentView: HTMLElement): SplitItemView {\n    this.contentView = contentView;\n    this.root.classList.add('split-item', 'flex');\n    contentView.classList.add('flex', 'flex-1');\n    return this.prepend(contentView);\n  }\n\n  public replaceContent(contentView: HTMLElement): SplitItemView {\n    this.root.replaceChild(contentView, this.contentView);\n    this.contentView = contentView;\n    contentView.classList.add('flex', 'flex-1');\n    return this;\n  }\n\n  public setGrow(className = 'flex-grow'): void {\n    this.root.classList.remove(this._shrinkClassName);\n    this._shrinkClassName = '';\n    this._growClassName = className;\n    this.root.classList.add(this._growClassName);\n  }\n\n  public setShrink(className = 'flex-shrink'): void {\n    this.root.classList.remove(this._growClassName);\n    this._growClassName = '';\n    this._shrinkClassName = className;\n    this.root.classList.add(this._shrinkClassName);\n  }\n\n  public isShrink(): boolean {\n    return !!this._growClassName;\n  }\n\n  private setDefaultClass() {\n    this.root.classList.add('flex-grow', 'rounded-xl');\n    this.root.classList.add('relative');\n    this.root.classList.add(...this._bgColorClassName);\n  }\n\n  private addExpandButton() {\n    this.expand = new SplitExpand({ target: this.root });\n  }\n  /** To hide expand button */\n  public hideExpandButton(): void {\n    this.expand.expandHidden = true;\n  }\n\n  public waitForMerge(direction: 'w' | 'e' | 's' | 'n'): void {\n    this.cancelWaitForMerge();\n    this.root.classList.add('wait-for-merge');\n    this.expand.mergeDirection = directionStyles[direction];\n  }\n\n  public cancelWaitForMerge(): void {\n    this.root.classList.remove('wait-for-merge');\n    this.expand.mergeDirection = '';\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SvelteModule.html":{"url":"classes/SvelteModule.html","title":"class - SvelteModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SvelteModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/svelte-module.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Controller\n            \n\n            \n                Implements\n            \n            \n                            Module\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Abstract\n                                initWithComponent\n                            \n                            \n                                    Abstract\n                                serialize\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-module.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-module.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-module.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    initWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SvelteComponentDev\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        serialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    serialize()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\nimport type { SvelteComponentDev } from 'svelte/internal';\nimport { Controller } from '@cosmic/core/browser';\nimport type { Module } from './module';\n\n@injectable()\nexport abstract class SvelteModule extends Controller implements Module {\n  private comp: SvelteComponentDev;\n  private _view: HTMLElement;\n  public props: T;\n\n  public view() {\n    return this._view;\n  }\n\n  public async init(props: T) {\n    this.props = props;\n    this._view = this._view || document.createElement('div');\n    return this;\n  }\n\n  abstract initWithComponent(target: Element): SvelteComponentDev;\n\n  viewWillAppear() {\n    this.comp = this.initWithComponent(this._view);\n  }\n\n  public async destroy() {\n    this.comp.$destroy();\n    if (this._view.parentNode) {\n      this._view.parentNode.removeChild(this._view);\n    }\n    return this;\n  }\n\n  abstract serialize(): T;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/View.html":{"url":"classes/View.html","title":"class - View","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  View\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/view.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root?: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/view.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/view.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        type FlowValue = '1' | 'auto' | 'initial' | 'none';\n\nexport default class View {\n  public root: HTMLElement;\n  constructor(root?: HTMLElement) {\n    this.root = root || document.createElement('div');\n  }\n  setFlow(type: FlowValue) {\n    this.root.classList.remove('flex-1', 'flex-auto', 'flex-initial', 'flex-none');\n    this.root.classList.add(`flex-${type}`);\n    return this;\n  }\n  append(child: HTMLElement) {\n    this.root.appendChild(child);\n    return this;\n  }\n  prepend(...childs: HTMLElement[]) {\n    this.root.prepend(...childs);\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeightMap.html":{"url":"interfaces/WeightMap.html","title":"interface - WeightMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WeightMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [index: string]:        number\n\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:11\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Workbench.html":{"url":"classes/Workbench.html","title":"class - Workbench","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Workbench\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Controller\n            \n\n            \n                Implements\n            \n            \n                            Module\n                            ItemGenerateDelegate\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                moduleFactory\n                            \n                            \n                                    Public\n                                props\n                            \n                            \n                                    Private\n                                splitBoard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                expandNewItem\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                serialize\n                            \n                            \n                                view\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleFactory: ModuleFactory)\n                    \n                \n                        \n                            \n                                Defined in src/modules/workbench/index.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleFactory\n                                                  \n                                                        \n                                                                        ModuleFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        moduleFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModuleFactory\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkbenchProps\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        splitBoard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SplitBoardView>\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:20\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expandNewItem\n                        \n                    \n                \n            \n            \n                \nexpandNewItem(view: ModuleItem, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    view\n                                    \n                                                ModuleItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: WorkbenchProps)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                WorkbenchProps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { type: \"col\" | \"row\"; minWidth: number; scale: {}; modules: {}; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n            \n                \nview()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\nimport { ModuleItem } from './module-item';\n\ninterface WorkbenchProps {\n  type: 'col' | 'row';\n  minWidth: number;\n  scale: number[];\n  modules?: ModuleConfig[];\n}\n\n@injectable()\nexport default class Workbench\n  extends Controller\n  implements Module, ItemGenerateDelegate>\n{\n  public props: WorkbenchProps;\n  private splitBoard: SplitBoardView>;\n  private moduleFactory: ModuleFactory;\n  constructor(@inject('ModuleFactory') moduleFactory: ModuleFactory) {\n    super();\n    this.splitBoard = new SplitBoardView>().setFlow('1');\n    this.splitBoard.itemGenerateDelegate = this;\n    this.moduleFactory = moduleFactory;\n  }\n  view() {\n    return this.splitBoard.root;\n  }\n  async init(props: WorkbenchProps) {\n    this.props = props;\n    this.splitBoard.direction = directionType[props.type];\n    for (const p of props.modules || []) {\n      const item = new ModuleItem();\n      item.loader = this.moduleFactory.load(p.id, p);\n      item.moduleId = p.id;\n      this.splitBoard.addItem(item);\n    }\n    this.splitBoard.applySplit(\n      this.splitBoard.direction === directionType.col ? 'horizontal' : 'vertical',\n      props.scale || []\n    );\n    return this;\n  }\n\n  viewWillAppear(): void {\n    this.splitBoard.items.forEach((item, index) => {\n      const view = this.splitBoard.items[index];\n      item.loader.then((module) => {\n        if (module instanceof Controller) {\n          view.setContent(module.view());\n          view.module = module;\n          module.viewWillAppear();\n          module.viewDidDisappear();\n        }\n      });\n    });\n    /** to be completed */\n  }\n  viewDidAppear(): void {\n    /** to be completed */\n  }\n\n  viewWillDisappear(): void {\n    /** to be completed */\n  }\n  viewDidDisappear(): void {\n    /** to be completed */\n  }\n\n  public async destroy() {\n    const view = this.view();\n    this.viewWillDisappear();\n    if (view.parentNode) {\n      view.parentNode.removeChild(view);\n    }\n    this.viewDidDisappear();\n    return this;\n  }\n  expandNewItem(view: ModuleItem, index: number) {\n    const item = view.clone();\n    item.loader = this.moduleFactory.load(item.moduleId, view.module.serialize());\n    item.loader.then((module) => {\n      if (module instanceof Controller) {\n        item.module = module;\n        item.setContent(module.view());\n        module.viewWillAppear();\n        module.viewDidDisappear();\n      }\n    });\n    return item;\n  }\n\n  serialize() {\n    return {\n      type: this.props.type,\n      minWidth: this.props.minWidth,\n      scale: this.props.scale,\n      modules: [],\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkbenchProps.html":{"url":"interfaces/WorkbenchProps.html","title":"interface - WorkbenchProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkbenchProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            minWidth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            modules\n                                        \n                                \n                                \n                                        \n                                            scale\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        minWidth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minWidth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modules\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modules:     ModuleConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scale:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"col\" | \"row\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"col\" | \"row\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\nimport { ModuleItem } from './module-item';\n\ninterface WorkbenchProps {\n  type: 'col' | 'row';\n  minWidth: number;\n  scale: number[];\n  modules?: ModuleConfig[];\n}\n\n@injectable()\nexport default class Workbench\n  extends Controller\n  implements Module, ItemGenerateDelegate>\n{\n  public props: WorkbenchProps;\n  private splitBoard: SplitBoardView>;\n  private moduleFactory: ModuleFactory;\n  constructor(@inject('ModuleFactory') moduleFactory: ModuleFactory) {\n    super();\n    this.splitBoard = new SplitBoardView>().setFlow('1');\n    this.splitBoard.itemGenerateDelegate = this;\n    this.moduleFactory = moduleFactory;\n  }\n  view() {\n    return this.splitBoard.root;\n  }\n  async init(props: WorkbenchProps) {\n    this.props = props;\n    this.splitBoard.direction = directionType[props.type];\n    for (const p of props.modules || []) {\n      const item = new ModuleItem();\n      item.loader = this.moduleFactory.load(p.id, p);\n      item.moduleId = p.id;\n      this.splitBoard.addItem(item);\n    }\n    this.splitBoard.applySplit(\n      this.splitBoard.direction === directionType.col ? 'horizontal' : 'vertical',\n      props.scale || []\n    );\n    return this;\n  }\n\n  viewWillAppear(): void {\n    this.splitBoard.items.forEach((item, index) => {\n      const view = this.splitBoard.items[index];\n      item.loader.then((module) => {\n        if (module instanceof Controller) {\n          view.setContent(module.view());\n          view.module = module;\n          module.viewWillAppear();\n          module.viewDidDisappear();\n        }\n      });\n    });\n    /** to be completed */\n  }\n  viewDidAppear(): void {\n    /** to be completed */\n  }\n\n  viewWillDisappear(): void {\n    /** to be completed */\n  }\n  viewDidDisappear(): void {\n    /** to be completed */\n  }\n\n  public async destroy() {\n    const view = this.view();\n    this.viewWillDisappear();\n    if (view.parentNode) {\n      view.parentNode.removeChild(view);\n    }\n    this.viewDidDisappear();\n    return this;\n  }\n  expandNewItem(view: ModuleItem, index: number) {\n    const item = view.clone();\n    item.loader = this.moduleFactory.load(item.moduleId, view.module.serialize());\n    item.loader.then((module) => {\n      if (module instanceof Controller) {\n        item.module = module;\n        item.setContent(module.view());\n        module.viewWillAppear();\n        module.viewDidDisappear();\n      }\n    });\n    return item;\n  }\n\n  serialize() {\n    return {\n      type: this.props.type,\n      minWidth: this.props.minWidth,\n      scale: this.props.scale,\n      modules: [],\n    };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/classBuilder.html":{"url":"classes/classBuilder.html","title":"class - classBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  classBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                orderedConfigs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addConfig\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Private\n                                insertConfig\n                            \n                            \n                                    Private\n                                normalizeWeight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configs: stateConfig[], weightMap: WeightMap)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                        stateConfig[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weightMap\n                                                  \n                                                        \n                                                                        WeightMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orderedConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         stateConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/class-builder.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    addConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        normalizeWeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    normalizeWeight(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         stateConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/classConfig.html":{"url":"interfaces/classConfig.html","title":"interface - classConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  classConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            createWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            mainWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            notification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            interface\n            ISettings\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            variable\n            settings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            class\n            classBuilder\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            classConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            stateConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            WeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            variable\n            defaultWeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/controller.ts\n            \n            class\n            Controller\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.controller.ts\n            \n            class\n            SplitBoardController\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            class\n            SplitBoardView\n            \n                3 %\n                (1/28)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            variable\n            lowBoardRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-item.view.ts\n            \n            class\n            SplitItemView\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/core/browser/layout/type.ts\n            \n            interface\n            ISplitBoardView\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/core/browser/layout/type.ts\n            \n            interface\n            ItemGenerateDelegate\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            function\n            makeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BgColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BorderColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlAccentColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlBackgroundColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlDisabledColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlForbiddenColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlHighlightColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            FourthBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            GridBackgroundColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            LabelColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemBlueColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemGrayColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemOrangeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemPinkColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemRedColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemYellowColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TextFieldBackground\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/view.ts\n            \n            class\n            View\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/color-ref.ts\n            \n            class\n            ColorRef\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/uuid.ts\n            \n            variable\n            uuid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/ioc/inject.ts\n            \n            function\n            inject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module-factory.ts\n            \n            class\n            ModuleFactory\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module-factory.ts\n            \n            interface\n            ModuleConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module.ts\n            \n            interface\n            Module\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/core/parts/modules/svelte-module.ts\n            \n            class\n            SvelteModule\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/menu-group/base-menu.ts\n            \n            class\n            BaseMenu\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/menu-group/index.ts\n            \n            class\n            MenuBar\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/menu-group/index.ts\n            \n            interface\n            MenuProps\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/property-panel/index.ts\n            \n            class\n            PropertyPanel\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/index.ts\n            \n            class\n            ResourceExplorer\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/shape-canvas/index.ts\n            \n            class\n            ShapeCanvas\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/workbench/index.ts\n            \n            class\n            Workbench\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/workbench/index.ts\n            \n            interface\n            WorkbenchProps\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/workbench/module-item.ts\n            \n            class\n            ModuleItem\n            \n                4 %\n                (1/24)\n            \n        \n        \n            \n                \n                src/workbench/desktop/app.ts\n            \n            class\n            App\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/workbench/desktop/main.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/services/appearance-service.ts\n            \n            class\n            AppearanceService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @types/color : ^3.0.1\n        \n            color : ^3.1.3\n        \n            electron-log : ^4.3.1\n        \n            electron-store : ^7.0.2\n        \n            electron-updater : ^4.3.5\n        \n            eventemitter2 : ^6.4.4\n        \n            inversify : ^5.1.1\n        \n            keycode : ^2.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            smelte : ^1.1.5\n        \n            split.js : ^1.6.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppearanceType   (src/.../appearance.ts)\n                        \n                        \n                            directionStyles   (src/.../split-item.view.ts)\n                        \n                        \n                            directionType   (src/.../type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/common/appearance.ts\n    \n        \n            \n                \n                    \n                        \n                        AppearanceType\n                    \n                \n                    \n                        \n                            模式类型\n\n                        \n                    \n                        \n                            \n                                 any\n                            \n                        \n                        \n                            \n                                 light\n                            \n                        \n                        \n                            \n                                 dark\n                            \n                        \n            \n        \n\n    src/core/browser/layout/split-item.view.ts\n    \n        \n            \n                \n                    \n                        \n                        directionStyles\n                    \n                \n                        \n                            \n                                 w\n                            \n                        \n                        \n                            \n                                Value : merge-w\n                            \n                        \n                        \n                            \n                                 e\n                            \n                        \n                        \n                            \n                                Value : merge-e\n                            \n                        \n                        \n                            \n                                 s\n                            \n                        \n                        \n                            \n                                Value : merge-s\n                            \n                        \n                        \n                            \n                                 n\n                            \n                        \n                        \n                            \n                                Value : merge-n\n                            \n                        \n            \n        \n\n    src/core/browser/layout/type.ts\n    \n        \n            \n                \n                    \n                        \n                        directionType\n                    \n                \n                        \n                            \n                                 col\n                            \n                        \n                        \n                            \n                                 row\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            inject   (src/.../inject.ts)\n                        \n                        \n                            makeColor   (src/.../ui-color.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/parts/ioc/inject.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inject\n                        \n                    \n                \n            \n            \n                \ninject(token)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        makeColor\n                        \n                    \n                \n            \n            \n                \nmakeColor(anyColorHex, lightColorHex?, darkColorHex?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anyColorHex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    darkColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCosmic Design\n\n\n\n\n\n\n🚧 ing...\n\nThe Repository\nCosmic design is a concrete practice of D2R.\nThis repository is where we develop it together with the community. Not only do we work on code and issues here, we also publish our roadmap , development guide. This source code is available to everyone under the standard MIT license.\nAbout Cosmic Design\n\n🚧 ing...\n\nHow it works\nThe template required a minimum dependencies. Only Vite is used for building, nothing more.\nProject Structure\nThe structure of this template is very similar to the structure of a monorepo.\nThe entire source code of the program is divided into three modules (packages) that are bundled each independently:\n\nsrc/core\nInclude common dependencies, such as components, utils, ipc.\nsrc/app\nElectron main script.\nsrc/modules\nModules of tools\nsrc/workbench\nElectron web page.\n\nCosmic Components\n\nComponents StoryBook\nsrc/core/components\n\nCompile App\nNext step is run packaging and compilation a ready for distribution Electron app for macOS, Windows and Linux with \"auto update\" support out of the box.\nTo do this, using the electron-builder:\n\nIn npm script compile: This script is configured to compile the application as quickly as possible. It is not ready for distribution, is compiled only for the current platform and is used for debugging.\nIn GitHub Action: The application is compiled for any platform and ready-to-distribute files are automatically added to the draft GitHub release.\n\nContribution\nSee Wiki Contributing\n\nSource Code Organization\nUser Interface\nColor Set\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 qiansc\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/stateConfig.html":{"url":"interfaces/stateConfig.html","title":"interface - stateConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  stateConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:         classConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         classConfig[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FlowValue   (src/.../view.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/browser/view.ts\n    \n    \n        \n            \n                \n                    \n                    FlowValue\n                \n            \n            \n                \n                        \"1\" | \"auto\" | \"initial\" | \"none\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (src/.../main.ts)\n                        \n                        \n                            BgColor   (src/.../ui-color.ts)\n                        \n                        \n                            BorderColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlAccentColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlDisabledColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlForbiddenColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlHighlightColor   (src/.../ui-color.ts)\n                        \n                        \n                            createWindow   (src/.../index.ts)\n                        \n                        \n                            defaultWeightMap   (src/.../class-builder.ts)\n                        \n                        \n                            FourthBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            GridBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            isProd   (src/.../index.ts)\n                        \n                        \n                            isProd   (src/.../logger.ts)\n                        \n                        \n                            LabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            logger   (src/.../logger.ts)\n                        \n                        \n                            lowBoardRoot   (src/.../split-board.view.ts)\n                        \n                        \n                            mainWindow   (src/.../index.ts)\n                        \n                        \n                            notification   (src/.../index.ts)\n                        \n                        \n                            SecondaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            SecondaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            settings   (src/.../settings.ts)\n                        \n                        \n                            SystemBlueColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemGrayColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemOrangeColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemPinkColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemRedColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemYellowColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            TextFieldBackground   (src/.../ui-color.ts)\n                        \n                        \n                            uuid   (src/.../uuid.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new App(document.body)\n                    \n                \n\n\n        \n    \n\n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#E0E0E0', '#E0E0E0', '#1F1F1F')\n                    \n                \n\n            \n                \n                    三级背景色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BorderColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D9D9D9', '#D9D9D9', '#D9D9D9')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlAccentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#5580c0', '#5580c0', '#5580c0')\n                    \n                \n\n            \n                \n                    高亮色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#FFFFFF', '#5D5F61')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlDisabledColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F9F9F9', '#F9F9F9', '#464749')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlForbiddenColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlHighlightColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#ffae2b', '#ffae2b', '#ffae2b')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FourthBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#BABABA', '#BABABA', '#454545')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GridBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F2F2F2', '#F2F2F2', '#2E2F30')\n                    \n                \n\n            \n                \n                    组件色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#E0E0E0')\n                    \n                \n\n            \n                \n                    三级标签色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D7D7D7', '#D7D7D7', '#272728')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#808080')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemBlueColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#729cd4', '#729cd4', '#729cd4')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemGrayColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c0c0c1', '#c0c0c1', '#c0c0c1')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemOrangeColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemPinkColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c4666f', '#c4666f', '#c4666f')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemRedColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemYellowColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n            \n                \n                    辅助色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#C6C6C6', '#C6C6C6', '#393939')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#3F3F3F', '#3F3F3F', '#3F3F3F')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TextFieldBackground\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#F2F2F2', '#454545')\n                    \n                \n\n\n        \n    \n\n    src/app/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createWindow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  mainWindow = new BrowserWindow({\n    width: 900,\n    height: 680,\n    webPreferences: {\n      devTools: isProd ? false : true,\n      contextIsolation: true,\n      enableRemoteModule: false,\n      // preload: join(__dirname, 'preload.js'),\n    },\n  });\n\n  const url =\n    // process.env.NODE_ENV === \"production\"\n    isProd\n      ? // in production, use the statically build version of our application\n        `file://${join(__dirname, 'dist/workbench/desktop/', 'index.html')}`\n      : // in dev, target the host and port of the local rollup web server\n        'http://localhost:5000/workbench/desktop/';\n\n  mainWindow.loadURL(url).catch((err: any) => {\n    logger.error(JSON.stringify(err));\n    app.quit();\n  });\n\n  if (!isProd) mainWindow.webContents.openDevTools();\n\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BrowserWindow | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Notification | null\n\n                    \n                \n\n\n        \n    \n\n    src/core/browser/class-builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultWeightMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WeightMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/utils/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log\n                    \n                \n\n\n        \n    \n\n    src/core/browser/layout/split-board.view.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lowBoardRoot\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('FlowTableRoot')\n                    \n                \n\n\n        \n    \n\n    src/app/utils/settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ElectronStore({\n  defaults: {\n    check: false,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/core/common/uuid.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): string => {\n  const s: string[] | number[] = [];\n  const hexDigits = '0123456789abcdef';\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
