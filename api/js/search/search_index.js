var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AddParams.html",[0,0.344,1,2.288]],["body/interfaces/AddParams.html",[0,0.505,1,3.362,2,1.047,3,0.214,4,0.191,5,0.191,6,1.466,7,1.911,8,0.148,9,0.437,10,5.241,11,5.4,12,3.845,13,0.021,14,4.466,15,0.386,16,0.826,17,2.485,18,3.168,19,3.168,20,3.496,21,3.496,22,3.11,23,2.252,24,4.389,25,0.892,26,3.362,27,0.378,28,2.44,29,2.252,30,1.589,31,2.688,32,4.625,33,2.485,34,4.045,35,1.302,36,3.168,37,3.496,38,3.375,39,3.168,40,2.386,41,3.168,42,2.252,43,2.485,44,2.252,45,2.485,46,2.485,47,2.485,48,1.167,49,2.252,50,2.485,51,2.066,52,2.252,53,2.252,54,2.252,55,1.911,56,1.778,57,1.662,58,2.066,59,2.485,60,1.911,61,0.009,62,0.013,63,0.009]],["title/classes/App.html",[64,0.11,65,2.288]],["body/classes/App.html",[3,0.156,4,0.139,5,0.139,8,0.107,9,0.346,13,0.021,15,0.425,16,1.014,27,0.156,30,1.437,40,2.629,48,2.011,61,0.007,62,0.01,63,0.007,64,0.072,65,2.302,66,0.37,67,2.037,68,1.239,69,4.891,70,1.048,71,4.96,72,4.96,73,4.96,74,4.96,75,4.96,76,4.96,77,3.645,78,3.645,79,4.96,80,4.96,81,3.645,82,4.96,83,1.068,84,2.037,85,2.524,86,1.402,87,3.645,88,1.352,89,1.282,90,1.09,91,2.509,92,2.382,93,0.716,94,1.006,95,1.65,96,2.769,97,2.382,98,1.688,99,2.382,100,1.355,101,2.382,102,2.382,103,2.382,104,2.382,105,3.645,106,2.382,107,3.645,108,2.382,109,2.382,110,2.382,111,3.645,112,3.68,113,2.382,114,2.382,115,1.006,116,2.037,117,2.11,118,1.135,119,1.453,120,1.295,121,1.64,122,2.382,123,3.645,124,2.037,125,2.382,126,2.382,127,3.645,128,1.504,129,2.382,130,3.645,131,2.382,132,3.645,133,3.645,134,2.382,135,3.645,136,2.382,137,2.509,138,2.382,139,2.037,140,2.382,141,1.504,142,3.645,143,2.382,144,1.81,145,2.382,146,2.382,147,2.382,148,2.382,149,2.382,150,2.769,151,2.382,152,2.382,153,2.382,154,2.302,155,2.382,156,2.382,157,1.81,158,2.382,159,2.382,160,2.382,161,2.382,162,2.382,163,2.382,164,2.382,165,2.382,166,2.382,167,2.382,168,1.81,169,2.382,170,2.769,171,2.382,172,4.96,173,2.382,174,2.52,175,2.769,176,1.978,177,3.768,178,2.382,179,3.645,180,2.382,181,2.382,182,2.382,183,2.382,184,1.64,185,2.382,186,2.382]],["title/classes/AppearanceService.html",[64,0.11,121,2.495]],["body/classes/AppearanceService.html",[3,0.249,4,0.223,5,0.223,8,0.172,9,0.485,13,0.021,15,0.521,16,0.895,27,0.249,28,1.61,35,0.749,61,0.011,62,0.014,63,0.011,64,0.116,66,0.592,68,1.454,70,1.47,86,1.336,88,1.394,89,1.321,90,1.123,93,1.005,94,2.159,95,1.394,98,1.491,100,1.211,112,4.729,115,1.61,116,3.259,121,3.519,168,3.883,187,5.658,188,3.259,189,5.767,190,5.767,191,1.798,192,5.111,193,5.111,194,3.811,195,5.27,196,3.811,197,5.111,198,3.811,199,5.111,200,3.811,201,5.111,202,3.811,203,2.436,204,2.072,205,3.811,206,5.767,207,3.811,208,3.811]],["title/classes/Base.html",[64,0.11,128,2.288]],["body/classes/Base.html",[3,0.339,4,0.303,5,0.303,8,0.234,9,0.59,13,0.02,15,0.451,16,0.805,27,0.339,40,3.247,61,0.014,62,0.017,63,0.014,64,0.158,66,0.805,86,1.079,128,3.927,209,2.787,210,2.787,211,4.437,212,5.694,213,5.188,214,3.942]],["title/classes/BaseMenu.html",[64,0.11,215,2.753]],["body/classes/BaseMenu.html",[3,0.339,4,0.303,5,0.303,13,0.021,27,0.339,61,0.014,62,0.017,63,0.014,64,0.158,66,0.805,68,1.14,100,1.02,124,4.437,141,3.277,184,3.572,191,1.341,215,4.724,216,3.572,217,4.437,218,4.437,219,5.188,220,5.188,221,5.188,222,5.188,223,5.188,224,5.188,225,5.188,226,5.188]],["title/classes/ColorRef.html",[64,0.11,227,2.753]],["body/classes/ColorRef.html",[3,0.251,4,0.224,5,0.224,8,0.173,9,0.487,13,0.021,15,0.48,16,0.797,27,0.251,35,1.215,61,0.011,62,0.014,63,0.011,64,0.117,66,0.596,68,1.531,70,1.476,83,1.72,86,1.339,88,1.4,89,1.327,90,1.128,93,1.009,98,0.992,112,4.564,168,2.915,191,1.496,227,3.901,228,5.669,229,3.281,230,6.77,231,6.77,232,6.77,233,4.649,234,5.134,235,5.134,236,3.901,237,3.837,238,3.837,239,5.134,240,3.837,241,3.837,242,5.787,243,5.134,244,5.134,245,2.915,246,4.396,247,3.837,248,3.837]],["title/classes/Context.html",[40,1.624,64,0.11]],["body/classes/Context.html",[3,0.263,4,0.235,5,0.235,8,0.181,9,0.502,13,0.021,15,0.474,16,0.624,27,0.263,35,0.79,40,2.372,61,0.011,62,0.015,63,0.011,64,0.122,66,0.624,68,1.476,70,1.522,83,1.801,86,1.396,88,1.095,89,1.038,90,0.883,98,1.368,100,1.041,191,1.53,209,3.069,210,3.069,249,3.435,250,6.949,251,5.593,252,7.239,253,5.381,254,6.293,255,5.294,256,4.714,257,5.294,258,4.017,259,4.017,260,4.017,261,4.017,262,2.766,263,4.017,264,4.017,265,5.294,266,4.017,267,4.017]],["title/classes/Controller.html",[64,0.11,119,1.445]],["body/classes/Controller.html",[3,0.287,4,0.257,5,0.257,8,0.198,13,0.021,16,0.681,27,0.287,61,0.012,62,0.016,63,0.012,64,0.133,66,0.681,70,1.612,85,2.235,86,1.398,98,1.738,100,1.279,115,1.854,119,2.235,203,2.672,214,4.945,268,3.753,269,1.974,270,3.307,271,3.307,272,3.102,273,3.307,274,4.389,275,4.389,276,4.389,277,4.389,278,4.389,279,6.177,280,4.389,281,4.389,282,2.772,283,4.389,284,4.389,285,4.389,286,5.606]],["title/classes/CornerMixin.html",[64,0.11,287,2.288]],["body/classes/CornerMixin.html",[3,0.336,4,0.301,5,0.301,8,0.232,9,0.587,13,0.02,15,0.373,27,0.404,61,0.014,62,0.017,63,0.014,64,0.188,66,0.798,86,1.069,209,2.772,210,2.772,287,3.906,288,3.906,289,5.672,290,2.415,291,5.142,292,3.247,293,4.397,294,4.397,295,4.397,296,4.397]],["title/classes/DefaultShapeMixin.html",[64,0.11,297,2.495]],["body/classes/DefaultShapeMixin.html",[3,0.337,4,0.301,5,0.301,13,0.021,16,1.07,27,0.337,61,0.014,62,0.017,63,0.014,64,0.157,66,0.801,209,2.311,210,2.311,287,3.257,292,3.913,297,4.265,298,4.41,299,4.41,300,3.918,301,3.918,302,5.157,303,4.265,304,5.157,305,4.265,306,5.157,307,1.742,308,5.157]],["title/classes/GeometryMixin.html",[64,0.11,305,2.495]],["body/classes/GeometryMixin.html",[3,0.205,4,0.183,5,0.183,8,0.141,9,0.423,13,0.021,15,0.483,16,0.693,25,1.843,27,0.205,30,1.388,35,0.877,40,2.33,42,2.157,57,2.642,61,0.009,62,0.012,63,0.009,64,0.095,66,0.486,86,1.405,88,1.217,89,1.154,90,0.981,93,0.877,94,1.885,95,1.217,98,1.154,100,0.877,128,3.783,177,2.38,209,3.03,210,3.03,212,3.817,233,1.979,251,2.679,256,2.157,262,2.157,290,1.914,305,3.073,307,1.508,309,2.679,310,4.846,311,5.2,312,5.2,313,5.2,314,5.2,315,3.817,316,5.99,317,5.667,318,5.479,319,3.133,320,4.464,321,4.464,322,4.464,323,3.133,324,3.133,325,3.133,326,3.133,327,1.493,328,3.133,329,3.133,330,3.133,331,3.133,332,3.133,333,3.133,334,3.133,335,3.133,336,3.133,337,2.679,338,3.817,339,3.133,340,4.464,341,5.2,342,4.464,343,3.133,344,3.133,345,3.133,346,3.133,347,3.133,348,2.679,349,3.391,350,3.133,351,3.133,352,3.133,353,3.133,354,3.133,355,4.464,356,3.133,357,3.133,358,3.133,359,3.133,360,3.133,361,3.133,362,3.133,363,3.133]],["title/interfaces/GetParams.html",[0,0.344,26,2.288]],["body/interfaces/GetParams.html",[0,0.502,1,2.883,2,1.035,3,0.211,4,0.189,5,0.189,6,1.449,7,1.889,8,0.146,9,0.433,10,5.229,11,5.391,12,3.829,13,0.021,14,4.623,15,0.383,16,0.821,17,2.457,18,3.143,19,3.143,20,3.468,21,3.468,22,3.091,23,2.227,24,4.367,25,0.882,26,3.63,27,0.376,28,2.428,29,2.227,30,1.584,31,2.667,32,4.606,33,2.457,34,4.02,35,1.298,36,3.143,37,3.468,38,3.358,39,3.143,40,2.371,41,3.143,42,2.227,43,2.457,44,2.227,45,2.457,46,2.457,47,2.457,48,1.153,49,2.227,50,2.457,51,2.043,52,2.227,53,2.227,54,2.227,55,1.889,56,1.758,57,1.643,58,2.043,59,2.457,60,1.889,61,0.009,62,0.013,63,0.009,90,1.003]],["title/interfaces/IAuthState.html",[0,0.344,12,2.288]],["body/interfaces/IAuthState.html",[0,0.51,1,2.942,2,1.065,3,0.218,4,0.195,5,0.195,6,1.492,7,1.945,8,0.15,9,0.442,10,5.053,11,5.202,12,3.677,13,0.021,14,4.218,15,0.338,16,0.834,17,2.529,18,3.207,19,3.207,20,3.539,21,3.539,22,3.14,23,2.292,24,4.952,25,1.465,26,3.394,27,0.381,28,2.459,29,2.292,30,1.597,31,2.721,32,4.655,33,2.529,34,4.083,35,1.307,36,3.207,37,3.539,38,3.401,39,3.207,40,2.409,41,3.207,42,2.292,43,2.529,44,2.292,45,2.529,46,2.529,47,2.529,48,1.187,49,2.292,50,2.529,51,2.102,52,2.292,53,2.292,54,2.292,55,1.945,56,1.809,57,1.691,58,2.102,59,2.529,60,1.945,61,0.009,62,0.013,63,0.009,90,1.024]],["title/interfaces/ILoginData.html",[0,0.344,364,2.753]],["body/interfaces/ILoginData.html",[0,0.397,2,1.339,3,0.274,4,0.245,5,0.245,6,1.875,8,0.189,9,0.516,13,0.021,15,0.438,16,0.938,22,2.445,25,1.852,27,0.355,28,2.296,31,2.445,35,1.069,36,2.881,38,2.445,44,2.881,57,2.762,61,0.012,62,0.015,63,0.012,95,1.141,364,4.588,365,3.179,366,7.01,367,6.914,368,3.179,369,4.13,370,4.185,371,3.578,372,3.578,373,3.578,374,4.649,375,2.445,376,4.185,377,4.185,378,4.185,379,4.185,380,4.185,381,4.185,382,4.185,383,4.185,384,4.185,385,4.185,386,4.185,387,5.437,388,4.185,389,2.881,390,3.578,391,4.185,392,3.578,393,4.185,394,4.185]],["title/interfaces/ISettings.html",[0,0.344,395,2.753]],["body/interfaces/ISettings.html",[0,0.472,2,1.593,3,0.325,4,0.291,5,0.291,8,0.224,9,0.575,13,0.021,15,0.361,16,0.773,27,0.325,30,1.219,38,2.907,58,4.407,60,2.907,61,0.014,62,0.017,63,0.014,93,0.978,95,1.357,395,4.607,396,3.781,397,4.968,398,5.185,399,3.781,400,4.256,401,4.977,402,4.256,403,4.256,404,4.256,405,1.876,406,4.256,407,4.607,408,4.256]],["title/interfaces/ISplitBoardView.html",[0,0.344,409,2.288]],["body/interfaces/ISplitBoardView.html",[0,0.469,2,1.16,3,0.237,4,0.212,5,0.212,8,0.294,9,0.469,13,0.021,15,0.509,16,0.767,27,0.368,28,2.993,61,0.01,62,0.014,63,0.01,100,1.281,269,1.831,290,2.393,307,1.669,409,3.121,410,2.496,411,5.163,412,4.349,413,5.163,414,5.163,415,5.163,416,5.163,417,5.163,418,5.163,419,3.068,420,3.527,421,2.754,422,3.1,423,2.496,424,3.121,425,2.887,426,1.842,427,2.754,428,3.1,429,2.686,430,4.953,431,3.1,432,3.121,433,2.887,434,2.887,435,2.887,436,3.1,437,3.1,438,3.1,439,3.754,440,3.754]],["title/interfaces/ItemGenerateDelegate.html",[0,0.344,426,1.841]],["body/interfaces/ItemGenerateDelegate.html",[0,0.506,2,1.301,3,0.266,4,0.238,5,0.238,8,0.304,9,0.506,13,0.021,15,0.458,16,0.828,27,0.389,28,2.253,61,0.011,62,0.015,63,0.011,100,1.324,269,1.806,290,2.436,307,1.373,409,2.567,410,2.799,411,3.476,412,3.673,413,3.476,414,3.476,415,3.476,416,3.476,417,3.476,418,3.476,419,2.711,420,3.117,421,3.088,422,3.476,423,2.799,424,3.369,425,3.117,426,2.711,427,4.803,428,3.476,429,2.9,430,5.119,431,3.476,432,3.369,433,3.117,434,3.117,435,3.117,436,3.476,437,3.476,438,3.476,439,4.053,440,4.053]],["title/classes/LayoutMixin.html",[64,0.11,303,2.495]],["body/classes/LayoutMixin.html",[3,0.328,4,0.293,5,0.293,8,0.226,9,0.578,13,0.021,15,0.442,27,0.328,57,2.551,61,0.014,62,0.017,63,0.014,64,0.152,66,0.779,86,1.267,209,2.942,210,2.942,290,2.402,303,4.197,441,4.293,442,6.565,443,6.565,444,5.021,445,5.021,446,4.293,447,3.814,448,3.814]],["title/classes/MenuBar.html",[64,0.11,449,2.495]],["body/classes/MenuBar.html",[0,0.298,3,0.206,4,0.184,5,0.184,8,0.142,9,0.425,13,0.021,15,0.435,16,0.931,25,1.22,27,0.206,30,1.096,35,1.116,48,2.223,61,0.009,62,0.013,63,0.009,64,0.096,66,0.488,68,1.247,70,1.287,85,1.785,86,1.407,88,0.857,89,0.813,90,0.691,93,0.618,95,0.857,98,1.694,100,1.116,115,1.328,117,1.499,118,1.499,119,2.614,120,2.433,176,2.263,184,4.13,191,1.347,203,2.133,204,1.71,216,4.292,269,1.722,270,2.647,271,2.647,272,2.705,273,2.647,307,1.512,327,2.859,405,1.964,419,1.598,426,1.598,449,3.081,450,2.389,451,2.614,452,3.044,453,2.705,454,2.433,455,2.705,456,3.145,457,4.292,458,3.145,459,3.145,460,2.433,461,2.274,462,3.145,463,3.145,464,4.456,465,3.145,466,3.145,467,1.986,468,1.986,469,1.986,470,1.598,471,1.986,472,2.689,473,3.4,474,2.165,475,2.133,476,2.689,477,2.689,478,2.689,479,2.689,480,2.689,481,2.689,482,2.689,483,2.689,484,2.689,485,2.689]],["title/interfaces/MenuProps.html",[0,0.344,457,2.495]],["body/interfaces/MenuProps.html",[0,0.374,2,1.262,3,0.258,4,0.23,5,0.23,8,0.178,9,0.496,13,0.021,15,0.425,16,1.009,25,1.599,27,0.258,30,1.281,35,1.228,48,1.865,61,0.011,62,0.015,63,0.011,64,0.12,68,1.149,85,1.572,93,0.775,95,1.075,115,1.666,117,1.879,118,1.879,119,2.085,120,2.842,176,1.572,184,4.475,191,1.019,203,2.492,204,2.144,216,2.715,269,1.196,272,1.879,307,1.332,405,1.971,419,2.004,426,2.004,449,2.715,450,2.996,451,2.304,452,2.304,453,1.879,455,1.879,457,4.301,461,2.004,464,5.559,470,2.004,471,2.49,472,3.372,473,3.972,474,2.715,475,2.492,476,3.372,477,3.372,478,3.372,479,3.372,480,3.372,481,3.372,482,3.372,483,3.372,484,3.372,485,3.372]],["title/interfaces/Module.html",[0,0.344,405,1.366]],["body/interfaces/Module.html",[0,0.451,2,1.522,3,0.311,4,0.278,5,0.278,8,0.214,9,0.559,13,0.021,15,0.486,27,0.311,28,2.965,41,4.059,61,0.013,62,0.016,63,0.013,176,2.747,405,2.222,429,3.744,453,3.193,454,3.642,455,3.193,486,4.066,487,5.896,488,5.896,489,4.48]],["title/interfaces/ModuleConfig.html",[0,0.344,470,1.841]],["body/interfaces/ModuleConfig.html",[0,0.369,2,1.245,3,0.254,4,0.227,5,0.227,8,0.175,9,0.491,13,0.021,15,0.422,16,0.904,25,1.852,27,0.339,30,1.269,35,1.221,48,1.387,61,0.011,62,0.014,63,0.011,64,0.118,68,0.855,69,4.426,95,1.413,96,3.936,115,2.188,117,1.854,141,2.456,144,3.936,150,3.936,176,1.551,203,2.469,245,2.955,246,4.426,405,2.633,470,2.633,475,2.961,490,2.955,491,2.955,492,3.326,493,3.326,494,2.955,495,2.955,496,3.326,497,2.816,498,3.326,499,4.431,500,5.313,501,4.431,502,4.431,503,3.326,504,3.326,505,3.326,506,3.326,507,4.982,508,3.326,509,3.326,510,3.326,511,3.326,512,3.326,513,3.326,514,3.326,515,3.326,516,3.326,517,3.326,518,3.326,519,3.326,520,3.326]],["title/classes/ModuleFactory.html",[64,0.11,117,1.727]],["body/classes/ModuleFactory.html",[0,0.296,3,0.204,4,0.182,5,0.182,8,0.141,9,0.422,13,0.021,15,0.474,16,0.806,25,1.898,27,0.291,30,1.091,35,1.112,48,1.851,61,0.009,62,0.012,63,0.009,64,0.095,66,0.485,68,1.14,69,4.725,70,1.28,83,1.399,86,1.293,88,1.631,89,1.546,90,1.314,93,0.875,94,1.881,95,1.415,96,4.298,98,1.462,100,0.614,115,1.881,117,2.122,141,1.972,144,4.298,150,3.382,176,2.069,203,2.122,245,2.372,246,3.942,405,2.576,460,1.697,470,1.586,475,1.488,490,4.862,491,2.372,492,2.67,493,2.67,494,2.372,495,2.372,496,2.67,497,3.075,498,3.807,499,4.838,500,5.473,501,4.838,502,3.807,503,2.67,504,2.67,505,2.67,506,2.67,507,4.438,508,2.67,509,2.67,510,3.807,511,2.67,512,3.807,513,2.67,514,3.807,515,2.67,516,2.67,517,2.67,518,2.67,519,2.67,520,2.67,521,4.452,522,4.452,523,4.452,524,3.122,525,3.122,526,3.122,527,3.122,528,4.838,529,3.122,530,3.122,531,3.122]],["title/classes/ModuleItem.html",[64,0.11,532,2.288]],["body/classes/ModuleItem.html",[3,0.158,4,0.142,5,0.142,8,0.109,9,0.35,13,0.021,15,0.504,16,0.573,25,1.699,27,0.158,30,0.593,35,0.476,61,0.007,62,0.01,63,0.007,64,0.074,66,0.376,68,1.44,70,1.062,85,2.535,86,1.472,88,1.659,89,1.572,90,1.337,91,2.542,93,1.059,94,2.275,95,0.66,98,1.733,100,1.16,118,1.154,120,1.317,191,1.876,269,1.518,307,1.247,327,3.313,397,1.84,405,2.139,412,1.668,420,4.082,432,2.332,433,2.157,434,2.157,435,2.157,489,2.805,528,3.826,532,3.16,533,4.606,534,2.072,535,4.474,536,3.157,537,3.157,538,3.157,539,4.278,540,3.399,541,5.003,542,3.826,543,3.826,544,3.826,545,3.826,546,3.157,547,3.157,548,3.826,549,3.157,550,3.157,551,3.157,552,2.805,553,2.805,554,2.805,555,2.423,556,2.423,557,2.423,558,2.072,559,3.157,560,1.231,561,2.072,562,1.317,563,2.423,564,2.423,565,2.423,566,2.423,567,2.072,568,2.423,569,2.072,570,2.423,571,2.423,572,2.423,573,2.423,574,2.072,575,2.072,576,2.423,577,2.072,578,2.423,579,2.072,580,2.423,581,2.423,582,2.072,583,2.423,584,3.157,585,2.805,586,2.072,587,2.072,588,2.423,589,2.072,590,2.072,591,2.423,592,1.84,593,2.072,594,1.84,595,1.84,596,2.072,597,1.84,598,1.84,599,2.542,600,2.072,601,2.332,602,1.84,603,2.423]],["title/classes/PropertyPanel.html",[64,0.11,137,2.495]],["body/classes/PropertyPanel.html",[3,0.231,4,0.207,5,0.207,8,0.159,9,0.461,13,0.021,15,0.454,16,0.754,27,0.231,35,0.955,48,2.131,61,0.01,62,0.014,63,0.01,64,0.107,66,0.549,68,1.313,70,1.397,85,1.41,86,1.467,88,1.324,89,1.255,90,1.067,93,0.695,95,0.964,98,1.77,100,1.174,118,1.685,119,2.497,137,3.344,174,2.468,176,2.212,191,1.745,269,1.683,270,2.819,271,2.819,272,2.644,273,2.819,282,3.504,307,1.64,327,3.362,429,3.016,452,2.837,453,2.644,454,2.64,455,2.847,460,2.64,461,1.796,467,2.233,468,2.233,469,2.233,604,3.023,605,3.023,606,4.048,607,3.344,608,3.344,609,2.686,610,2.434,611,2.686,612,3.69,613,3.344,614,3.023,615,2.686,616,2.686,617,2.434,618,2.434,619,3.69,620,2.686]],["title/classes/Rectangle.html",[64,0.11,621,2.753]],["body/classes/Rectangle.html",[3,0.178,4,0.159,5,0.159,8,0.123,9,0.383,13,0.021,15,0.497,16,0.88,25,0.744,27,0.178,30,1.388,35,0.944,40,2.752,56,1.483,57,2.051,61,0.008,62,0.011,63,0.008,64,0.083,66,0.424,68,1.478,70,1.161,83,1.223,86,1.413,88,1.448,89,1.372,90,1.167,93,0.793,94,1.152,95,0.744,98,1.465,100,1.166,177,2.073,209,3.072,210,3.072,253,4.541,256,1.878,262,1.878,290,2.349,297,1.878,299,3.452,300,2.073,301,2.073,307,0.921,310,2.333,315,3.452,318,2.333,337,2.333,349,4.034,389,1.878,446,4.109,447,4.306,448,4.306,451,2.358,621,4.034,622,2.333,623,4.805,624,4.805,625,4.805,626,4.805,627,5.31,628,5.668,629,4.037,630,4.037,631,2.728,632,3.65,633,2.728,634,2.728,635,2.728,636,2.728,637,2.728,638,2.728,639,2.728,640,2.728,641,2.728,642,2.728,643,2.728,644,2.728,645,2.728,646,2.728,647,2.728,648,2.728,649,2.728,650,2.728,651,2.728,652,1.878,653,4.805,654,2.728,655,4.805,656,4.805,657,2.728,658,5.31,659,2.728,660,2.728,661,4.037,662,4.037,663,4.037,664,4.037,665,4.037,666,2.728,667,2.728,668,2.728,669,2.728,670,2.728,671,4.037,672,2.728,673,2.728,674,2.728]],["title/classes/RectangleCornerMixin.html",[64,0.11,292,2.288]],["body/classes/RectangleCornerMixin.html",[3,0.311,4,0.278,5,0.278,8,0.214,9,0.559,13,0.02,15,0.486,27,0.385,61,0.013,62,0.016,63,0.013,64,0.179,66,0.738,86,1.393,209,3.087,210,3.087,287,3.003,288,3.613,289,4.066,290,2.448,292,3.724,293,5.481,294,5.481,295,5.481,296,5.481,675,4.755,676,4.755,677,4.755,678,4.755]],["title/classes/ResourceExplorer.html",[64,0.11,679,2.753]],["body/classes/ResourceExplorer.html",[3,0.231,4,0.207,5,0.207,6,1.584,8,0.159,9,0.461,13,0.021,15,0.454,16,0.754,27,0.231,35,0.955,48,2.131,61,0.01,62,0.014,63,0.01,64,0.107,66,0.549,68,1.313,70,1.397,85,1.41,86,1.467,88,1.324,89,1.255,90,1.067,93,0.695,95,0.964,98,1.77,100,1.174,118,1.685,119,2.497,174,2.468,176,2.212,191,1.745,269,1.683,270,2.819,271,2.819,272,2.644,273,2.819,282,3.504,307,1.64,327,3.362,429,3.016,452,2.837,453,2.644,454,2.64,455,2.847,460,2.64,461,1.796,467,2.233,468,2.233,469,2.233,606,4.048,607,3.344,608,3.344,609,2.686,610,2.434,611,2.686,612,3.69,613,3.344,615,2.686,616,2.686,617,2.434,618,2.434,619,3.69,620,2.686,679,3.69,680,3.023,681,3.535]],["title/interfaces/RoutesValue.html",[0,0.344,682,2.495]],["body/interfaces/RoutesValue.html",[0,0.353,2,1.19,3,0.243,4,0.217,5,0.217,6,1.667,8,0.227,9,0.477,13,0.021,15,0.364,25,1.908,27,0.372,28,2.124,30,1.561,31,3.565,35,1.199,57,1.89,61,0.014,62,0.014,63,0.01,93,0.731,369,4.636,375,2.938,423,2.561,632,5.44,682,3.922,683,2.349,684,6.084,685,3.181,686,3.181,687,3.181,688,2.826,689,3.72,690,3.181,691,4.3,692,3.181,693,3.181,694,4.3,695,3.181,696,2.826,697,3.181,698,3.181,699,3.181,700,3.181,701,3.181,702,5.029,703,3.72,704,3.72,705,3.72,706,3.72,707,3.72,708,3.72,709,3.181,710,3.72,711,3.181,712,3.72,713,1.89,714,3.72,715,3.72,716,3.72,717,3.72]],["title/classes/ShapeCanvas.html",[64,0.11,718,2.753]],["body/classes/ShapeCanvas.html",[3,0.231,4,0.207,5,0.207,8,0.159,9,0.461,13,0.021,15,0.454,16,0.754,27,0.231,35,0.955,48,2.131,61,0.01,62,0.014,63,0.01,64,0.107,66,0.549,68,1.313,70,1.397,85,1.41,86,1.467,88,1.324,89,1.255,90,1.067,93,0.695,95,0.964,98,1.77,100,1.174,118,1.685,119,2.497,174,2.468,176,2.212,191,1.745,269,1.683,270,2.819,271,2.819,272,2.644,273,2.819,282,3.504,307,1.64,327,3.362,429,3.016,452,2.837,453,2.644,454,2.64,455,2.847,460,2.64,461,1.796,467,2.233,468,2.233,469,2.233,606,4.048,607,3.344,608,3.344,609,2.686,610,2.434,611,2.686,612,3.69,613,3.344,614,3.023,615,2.686,616,2.686,617,2.434,618,2.434,619,3.69,620,2.686,718,3.69,719,3.023,720,3.023]],["title/classes/SplitBoardController.html",[64,0.11,721,2.753]],["body/classes/SplitBoardController.html",[3,0.122,4,0.109,5,0.109,8,0.241,9,0.286,13,0.021,15,0.459,16,0.468,27,0.122,28,1.599,30,1.064,35,0.936,56,1.017,60,2.212,61,0.005,62,0.008,63,0.005,64,0.057,66,0.29,68,1.556,70,0.867,83,0.838,85,0.746,86,1.333,88,1.298,89,1.231,90,1.046,93,1,94,2.011,98,1.315,100,1.16,141,1.182,174,1.532,191,1.486,269,0.914,290,2.316,409,2.742,419,0.951,425,1.093,430,3.866,433,1.093,435,1.093,439,3.866,440,4.483,540,4.066,601,1.182,713,3.123,721,2.29,722,4.094,723,1.6,724,3.786,725,3.786,726,3.786,727,3.786,728,3.786,729,3.786,730,5.352,731,5.352,732,4.342,733,3.015,734,3.015,735,3.015,736,3.015,737,4.342,738,1.871,739,3.015,740,3.957,741,1.871,742,1.871,743,1.871,744,1.871,745,1.871,746,1.871,747,1.871,748,1.871,749,3.015,750,1.871,751,3.015,752,1.871,753,3.015,754,5.901,755,1.871,756,4.761,757,3.015,758,1.871,759,1.871,760,3.015,761,4.342,762,3.015,763,1.6,764,2.607,765,1.6,766,3.786,767,1.871,768,3.786,769,1.871,770,3.786,771,3.786,772,3.786,773,1.871,774,1.871,775,1.871,776,1.871,777,1.871,778,1.871,779,1.871,780,1.871,781,1.871,782,1.871,783,1.871,784,1.871,785,3.015,786,3.015,787,1.871,788,1.871,789,1.871,790,1.871,791,1.871,792,3.786,793,5.901,794,1.871,795,1.871,796,1.871,797,1.871,798,1.871,799,1.871,800,1.871,801,4.342,802,2.29,803,1.421,804,1.871,805,3.015,806,1.871,807,1.871,808,3.015,809,1.421,810,1.871,811,1.871,812,5.089,813,5.089,814,3.015,815,4.342,816,3.015,817,3.015,818,1.871,819,3.015,820,1.871,821,3.015,822,1.871,823,1.871]],["title/classes/SplitItemView.html",[64,0.11,420,2.117]],["body/classes/SplitItemView.html",[3,0.137,4,0.123,5,0.123,8,0.095,9,0.314,13,0.021,15,0.477,16,0.513,25,1.582,27,0.137,35,0.804,56,1.142,61,0.006,62,0.009,63,0.006,64,0.064,66,0.326,68,1.483,70,0.951,83,1.832,85,2.563,86,1.422,88,1.582,89,1.5,90,1.275,91,2.276,93,1.053,94,2.13,95,0.573,98,1.661,100,1.245,174,1.067,175,1.596,191,1.835,269,1.761,307,1.117,327,2.21,397,2.512,412,1.446,420,3.128,421,1.596,423,1.446,432,3.185,433,3.128,434,2.946,435,2.946,536,3.496,537,3.496,538,3.496,539,4.791,540,3.831,542,3.965,543,3.965,544,3.965,545,3.965,546,2.827,547,2.827,548,3.965,549,2.827,550,2.827,551,2.827,552,2.512,553,2.512,554,2.512,558,2.827,559,3.965,560,1.68,561,2.827,562,1.797,567,3.965,569,1.797,574,2.827,575,2.827,577,2.827,579,2.827,582,2.827,584,3.965,585,4.257,586,3.496,587,2.827,589,2.827,590,2.827,592,1.596,593,1.797,594,1.596,595,1.596,596,1.797,597,1.596,598,1.596,599,2.276,600,1.797,601,1.327,652,1.446,722,4.23,740,2.276,764,3.687,824,1.596,825,3.306,826,2.101,827,2.101,828,2.101,829,2.101,830,2.101,831,2.101,832,2.101,833,2.101,834,2.101,835,2.101,836,2.101,837,2.101,838,2.101,839,2.101,840,2.101,841,1.797,842,2.101,843,2.101,844,4.088,845,2.101,846,3.306,847,2.101,848,2.101,849,2.101,850,2.101,851,3.306,852,4.088,853,2.101,854,2.101,855,2.101,856,2.101,857,2.101,858,2.101,859,2.101,860,2.101,861,2.101,862,2.101,863,2.101,864,2.101,865,3.306,866,2.101,867,2.101]],["title/classes/SvelteModule.html",[64,0.11,606,2.117]],["body/classes/SvelteModule.html",[3,0.207,4,0.185,5,0.185,8,0.143,9,0.426,13,0.021,15,0.466,16,0.883,27,0.207,35,1.027,48,2.227,61,0.009,62,0.013,63,0.009,64,0.096,66,0.491,68,1.372,70,1.292,85,1.792,86,1.439,88,1.225,89,1.161,90,0.987,98,1.726,100,1.119,115,1.336,119,2.618,120,1.719,174,1.607,176,2.397,191,1.788,203,2.141,214,4.881,269,1.726,270,2.655,271,2.655,272,2.712,273,2.655,282,3.301,307,1.518,327,2.865,405,2.145,429,3.492,451,2.625,452,3.053,453,2.712,454,2.442,455,2.712,460,2.442,461,2.283,467,1.997,468,1.997,469,1.997,473,3.971,474,2.177,606,2.625,607,3.598,608,3.093,610,4.138,613,3.093,617,2.177,618,2.177,868,5.614,869,2.704,870,3.162,871,3.162,872,3.162,873,3.162,874,3.162,875,3.162,876,3.162,877,3.162,878,2.402,879,3.162,880,3.162,881,3.162,882,3.162,883,3.162]],["title/classes/View.html",[64,0.11,269,1.099]],["body/classes/View.html",[3,0.263,4,0.235,5,0.235,8,0.181,9,0.502,13,0.021,15,0.504,27,0.263,35,1.164,61,0.011,62,0.015,63,0.011,64,0.122,66,0.624,70,1.522,83,1.801,84,4.527,85,2.852,86,1.36,88,1.716,89,1.626,90,1.383,91,4.503,93,0.79,98,1.53,175,3.052,191,1.53,236,3.052,269,1.606,474,2.766,552,4.022,553,4.022,554,4.022,585,4.498,592,4.022,594,3.052,595,4.022,597,3.052,598,4.022,599,4.333,740,3.644,884,3.052,885,5.294,886,4.017,887,4.017,888,4.017,889,4.022,890,4.527,891,4.527,892,4.017,893,4.017,894,4.017,895,4.017]],["title/interfaces/WeightMap.html",[0,0.344,896,1.97]],["body/interfaces/WeightMap.html",[0,0.577,2,1.359,3,0.278,4,0.248,5,0.248,8,0.248,13,0.021,25,1.815,27,0.278,30,1.345,61,0.012,62,0.015,63,0.012,64,0.167,66,0.659,68,1.336,86,0.883,93,0.835,100,1.079,191,1.419,290,2.054,475,2.616,560,2.158,562,2.309,713,2.158,896,3.619,897,3.207,898,2.481,899,4.247,900,4.247,901,3.207,902,3.983,903,2.924,904,3.207,905,2.682,906,2.682,907,2.682,908,2.682,909,2.682,910,2.682,911,2.682,912,2.682,913,2.682,914,2.481,915,2.924,916,2.924,917,2.924,918,3.779,919,2.924,920,2.924,921,2.924,922,2.924,923,2.682,924,2.924,925,2.924,926,2.924,927,2.924]],["title/classes/Workbench.html",[64,0.11,154,2.288]],["body/classes/Workbench.html",[0,0.229,3,0.157,4,0.141,5,0.141,8,0.242,9,0.349,13,0.021,15,0.468,16,0.834,27,0.157,30,1.316,35,1.056,48,2.019,61,0.007,62,0.01,63,0.007,64,0.073,66,0.374,68,1.244,70,1.057,83,1.08,86,1.378,88,1.215,89,1.152,90,0.98,93,0.473,95,1.002,98,1.608,100,1.194,115,1.017,117,3.12,118,1.148,119,2.531,120,1.998,154,2.322,157,2.793,176,2.142,191,1.463,203,1.752,204,1.309,269,1.786,270,2.535,271,2.535,272,2.377,273,2.535,290,1.912,307,1.242,327,2.56,405,2.289,419,1.224,424,2.322,425,2.148,426,2.265,427,2.793,451,2.148,453,2.377,454,1.998,455,2.377,460,1.998,461,1.868,470,1.868,471,2.816,497,2.423,532,3.393,601,3.151,602,1.83,652,1.658,802,1.83,803,1.83,809,1.83,878,1.83,928,1.83,929,3.812,930,2.409,931,3.676,932,3.898,933,2.409,934,2.409,935,2.409,936,3.144,937,2.409,938,2.409,939,2.409,940,3.387,941,3.812,942,2.409,943,2.409,944,2.409,945,2.409,946,2.409,947,2.06,948,2.06,949,2.06,950,2.06,951,2.06,952,2.06,953,3.144,954,2.06,955,3.144,956,2.06,957,3.144,958,2.06,959,2.06,960,2.06,961,2.06,962,2.06,963,2.06,964,2.06,965,3.144,966,2.06,967,2.06,968,3.144,969,3.144,970,4.266,971,2.06,972,2.06,973,2.06,974,2.06,975,2.06,976,2.06,977,2.06,978,2.06,979,2.06,980,2.06,981,2.06,982,2.06,983,2.06]],["title/interfaces/WorkbenchProps.html",[0,0.344,932,2.495]],["body/interfaces/WorkbenchProps.html",[0,0.279,2,0.942,3,0.192,4,0.172,5,0.172,8,0.227,9,0.405,13,0.021,15,0.489,16,0.908,27,0.192,30,1.432,35,1.149,48,1.522,61,0.008,62,0.012,63,0.008,64,0.089,68,0.938,90,0.938,93,0.579,95,1.164,100,1.082,115,1.244,117,2.905,118,1.403,119,2.196,120,2.32,154,1.86,157,3.243,176,1.702,191,1.103,203,2.034,204,1.601,269,1.523,270,1.496,271,1.496,272,1.403,273,1.496,290,2.124,307,0.994,405,2.37,419,1.496,424,3.171,425,2.933,426,2.169,451,1.72,453,1.403,455,1.403,461,1.496,470,2.798,471,2.696,497,3.178,532,3.171,601,3.478,602,2.237,652,2.027,802,2.237,803,2.237,809,2.237,878,2.237,928,2.237,929,2.518,932,3.791,936,2.518,940,4.442,941,4.999,947,2.518,948,2.518,949,2.518,950,2.518,951,2.518,952,2.518,953,3.65,954,2.518,955,3.65,956,2.518,957,3.65,958,2.518,959,2.518,960,2.518,961,2.518,962,2.518,963,2.518,964,2.518,965,3.65,966,2.518,967,2.518,968,3.65,969,3.65,970,4.709,971,2.518,972,2.518,973,2.518,974,2.518,975,2.518,976,2.518,977,2.518,978,2.518,979,2.518,980,2.518,981,2.518,982,2.518,983,2.518]],["title/classes/classBuilder.html",[64,0.11,914,2.117]],["body/classes/classBuilder.html",[0,0.517,3,0.224,4,0.2,5,0.2,8,0.214,9,0.451,13,0.021,15,0.448,25,1.606,27,0.224,30,1.163,61,0.01,62,0.013,63,0.01,64,0.144,66,0.737,68,1.494,70,1.366,83,1.534,86,1.332,88,1.606,89,1.523,90,1.295,93,0.934,94,1.445,98,1.523,100,1.217,139,4.664,191,1.655,290,1.604,475,2.263,560,1.739,562,1.86,713,1.739,896,3.641,897,3.837,898,1.999,901,2.774,902,4.199,903,2.356,904,2.774,905,2.161,906,2.161,907,2.161,908,2.161,909,2.161,910,2.161,911,2.161,912,2.161,913,2.161,914,2.774,915,3.755,916,3.27,917,2.356,918,3.27,919,4.056,920,2.356,921,3.27,922,3.27,923,2.161,924,2.356,925,2.356,926,2.356,927,2.356,984,4.749,985,4.749,986,4.749,987,4.749,988,3.422,989,3.422,990,3.422,991,3.422,992,3.422,993,3.422]],["title/interfaces/classConfig.html",[0,0.344,901,2.117]],["body/interfaces/classConfig.html",[0,0.57,2,1.326,3,0.271,4,0.242,5,0.242,8,0.244,9,0.512,13,0.021,15,0.391,25,1.907,27,0.271,30,1.323,61,0.012,62,0.015,63,0.012,64,0.201,66,0.643,68,1.321,93,0.815,100,1.062,191,1.396,290,1.825,475,3.148,560,2.106,562,2.253,713,2.106,896,3.462,897,2.421,898,2.421,901,3.511,902,3.957,903,2.853,904,3.156,905,2.617,906,2.617,907,2.617,908,2.617,909,2.617,910,2.617,911,2.617,912,2.617,913,2.617,914,2.421,915,2.853,916,2.853,917,2.853,918,3.719,919,2.853,920,2.853,921,2.853,922,2.853,923,2.617,924,2.853,925,2.853,926,2.853,927,2.853]],["title/coverage.html",[994,4.224]],["body/coverage.html",[0,0.606,1,1.16,5,0.107,6,3.014,7,3.103,12,1.16,13,0.021,15,0.133,22,1.073,26,1.16,28,2.478,40,0.823,51,1.16,55,1.073,61,0.005,62,0.008,63,0.005,64,0.21,65,1.876,67,1.571,95,0.501,117,0.875,119,0.732,121,1.264,128,1.16,137,1.264,154,1.16,187,1.571,188,1.571,204,0.998,209,2.56,210,2.56,211,1.571,215,1.395,216,2.574,217,1.571,218,1.571,227,1.395,228,1.571,229,1.571,249,1.571,268,1.571,269,0.557,287,1.16,288,2.256,292,1.16,297,1.264,298,1.571,303,1.264,305,1.264,309,1.571,364,1.395,365,2.841,368,1.395,375,1.073,395,1.395,396,2.256,405,0.692,407,1.395,409,1.16,410,2.045,420,1.073,426,0.933,441,1.571,449,1.264,450,2.256,457,1.264,470,0.933,471,1.16,486,1.571,490,2.256,491,2.256,532,1.16,533,1.571,534,1.571,560,2.397,604,1.571,605,1.571,606,1.073,621,1.395,622,1.571,679,1.395,680,1.571,682,1.264,683,2.713,688,1.395,713,3.793,718,1.395,719,1.571,720,1.571,721,1.395,722,2.713,723,1.571,763,1.571,765,2.54,824,1.395,868,1.571,869,1.571,884,1.395,896,0.998,897,2.755,898,2.755,901,1.073,902,1.073,904,1.073,914,1.073,928,2.256,932,1.264,994,1.571,995,1.571,996,1.837,997,1.837,998,3.673,999,7.179,1000,1.571,1001,7.27,1002,2.54,1003,1.571,1004,1.571,1005,2.54,1006,1.571,1007,5.312,1008,4.296,1009,5.046,1010,1.837,1011,4.296,1012,2.97,1013,2.54,1014,1.837,1015,1.571,1016,1.837,1017,1.837,1018,5.141,1019,5.141,1020,1.571,1021,1.571,1022,4.717,1023,1.571,1024,1.571,1025,1.571,1026,1.571,1027,1.571,1028,1.571,1029,1.571,1030,1.571,1031,1.571,1032,1.571,1033,1.571,1034,1.571,1035,1.571,1036,1.571,1037,1.571,1038,1.571,1039,1.571,1040,1.571,1041,1.571,1042,1.571,1043,1.571,1044,1.571,1045,1.571,1046,1.837,1047,1.837,1048,4.296,1049,1.571,1050,1.571,1051,1.571,1052,2.97,1053,1.837,1054,1.837,1055,1.395,1056,1.395,1057,1.571,1058,1.571,1059,2.54,1060,1.571,1061,1.571,1062,2.54,1063,1.571,1064,1.571,1065,1.571,1066,1.571,1067,1.571,1068,1.837,1069,1.837,1070,1.571,1071,1.837,1072,1.837]],["title/dependencies.html",[1073,3.028,1074,3.31]],["body/dependencies.html",[13,0.021,18,3.274,61,0.013,62,0.016,63,0.013,115,2.009,195,4.066,233,3.003,256,3.274,262,3.274,300,3.613,301,3.613,371,4.066,372,4.066,373,4.066,374,4.066,399,4.48,400,4.066,1074,3.613,1075,4.755,1076,4.755,1077,4.755,1078,4.755,1079,4.755,1080,4.755,1081,4.755,1082,4.755,1083,4.755,1084,4.066,1085,4.755,1086,4.755,1087,4.755,1088,4.755,1089,4.755,1090,4.755,1091,4.755,1092,4.755,1093,4.755,1094,4.755,1095,4.755,1096,4.755,1097,4.755,1098,4.755,1099,4.755,1100,4.755,1101,4.755,1102,4.755,1103,4.755,1104,4.755,1105,4.755,1106,4.755]],["title/miscellaneous/enumerations.html",[1107,1.539,1108,3.725]],["body/miscellaneous/enumerations.html",[6,2.218,8,0.273,13,0.02,61,0.014,62,0.017,63,0.014,93,0.973,94,2.869,112,4.16,170,3.759,369,4.591,375,2.891,410,3.407,419,3.07,424,3.125,425,2.891,432,3.816,433,3.53,434,3.53,435,3.53,683,3.125,685,4.231,686,4.231,687,4.231,722,3.125,764,4.677,824,4.591,841,5.167,1107,2.514,1108,4.231,1109,4.948,1110,4.231,1111,4.948,1112,3.759,1113,4.948,1114,4.231]],["title/miscellaneous/functions.html",[1107,1.539,1115,3.725]],["body/miscellaneous/functions.html",[6,2.707,7,2.445,8,0.189,13,0.02,22,3.528,25,1.482,29,2.881,31,3.735,49,2.881,55,3.176,61,0.012,62,0.015,63,0.012,88,1.911,89,1.812,90,1.54,98,1.561,100,0.823,204,2.955,209,1.875,210,1.875,236,4.588,365,3.179,368,4.13,375,3.176,392,3.578,489,3.179,683,2.643,701,3.578,709,3.578,711,4.649,1018,3.179,1019,4.13,1020,4.649,1045,3.578,1049,3.578,1050,4.649,1051,5.164,1055,4.13,1056,4.13,1065,4.649,1107,2.126,1112,4.13,1115,3.578,1116,5.164,1117,4.185,1118,4.185,1119,5.437,1120,3.578,1121,4.185,1122,4.185,1123,4.185,1124,4.185,1125,5.437,1126,5.437,1127,4.185]],["title/index.html",[8,0.137,1128,2.59,1129,2.59]],["body/index.html",[0,0.366,4,0.339,13,0.018,23,2.659,61,0.011,62,0.014,63,0.011,65,3.257,233,2.44,338,3.303,348,3.303,349,2.935,390,5.299,399,4.707,495,2.935,497,2.804,696,2.935,889,2.935,1074,3.918,1130,6.196,1131,5.806,1132,5.158,1133,5.158,1134,3.863,1135,3.863,1136,3.863,1137,3.863,1138,3.863,1139,3.863,1140,3.863,1141,3.863,1142,3.863,1143,3.303,1144,3.863,1145,3.863,1146,3.863,1147,3.863,1148,3.863,1149,3.863,1150,3.863,1151,3.303,1152,2.935,1153,3.863,1154,5.158,1155,3.863,1156,3.863,1157,3.863,1158,5.158,1159,3.863,1160,3.863,1161,5.806,1162,3.863,1163,3.863,1164,3.863,1165,3.863,1166,3.863,1167,3.863,1168,3.863,1169,3.863,1170,3.863,1171,3.863,1172,3.863,1173,3.863,1174,3.863,1175,3.863,1176,3.863,1177,5.806,1178,3.863,1179,3.863,1180,3.863,1181,3.863,1182,5.806,1183,3.863,1184,3.863,1185,3.863,1186,3.303,1187,3.863,1188,3.863,1189,3.863,1190,5.806,1191,3.863,1192,3.863,1193,3.863,1194,3.863,1195,5.806,1196,5.158,1197,3.863,1198,3.863,1199,3.863,1200,3.863,1201,3.303,1202,3.863,1203,3.863,1204,3.863,1205,3.863,1206,3.863,1207,4.411,1208,3.863,1209,3.863,1210,5.158,1211,3.863,1212,5.158,1213,3.863,1214,5.158,1215,3.303,1216,3.303,1217,3.303,1218,3.863,1219,3.863,1220,3.863,1221,3.863,1222,3.863,1223,3.863,1224,3.863,1225,3.863,1226,3.863]],["title/license.html",[1128,2.59,1129,2.59,1152,2.301]],["body/license.html",[13,0.016,39,3.061,61,0.012,62,0.016,63,0.012,389,3.892,756,3.802,764,3.061,923,2.808,995,3.802,1143,3.802,1151,3.802,1152,3.378,1201,3.802,1215,3.802,1216,3.802,1217,3.802,1227,6.215,1228,4.446,1229,4.446,1230,5.653,1231,4.446,1232,4.446,1233,4.446,1234,4.446,1235,4.446,1236,4.446,1237,5.653,1238,7.165,1239,4.446,1240,4.446,1241,6.215,1242,4.446,1243,5.653,1244,4.446,1245,4.446,1246,4.446,1247,4.446,1248,4.446,1249,4.446,1250,5.653,1251,4.446,1252,4.446,1253,4.446,1254,4.446,1255,4.446,1256,4.446,1257,4.446,1258,5.653,1259,5.653,1260,4.446,1261,4.446,1262,4.446,1263,4.446,1264,4.446,1265,4.446,1266,4.446,1267,4.446,1268,4.446,1269,4.446,1270,4.446,1271,4.446,1272,4.446,1273,4.446,1274,4.446,1275,4.446,1276,4.446,1277,4.446,1278,4.446,1279,4.446,1280,4.446,1281,4.446,1282,4.446,1283,4.446,1284,4.446,1285,4.446,1286,4.446]],["title/modules.html",[497,2.685]],["body/modules.html",[13,0.019,61,0.016,62,0.019,63,0.016,497,3.167]],["title/overview.html",[1287,4.224]],["body/overview.html",[2,1.839,13,0.018,61,0.016,62,0.018,63,0.016,66,0.892,1287,4.914,1288,5.747,1289,5.747]],["title/interfaces/stateConfig.html",[0,0.344,902,2.117]],["body/interfaces/stateConfig.html",[0,0.564,2,1.298,3,0.265,4,0.237,5,0.237,8,0.24,9,0.505,13,0.021,15,0.431,25,1.836,27,0.265,30,1.305,61,0.011,62,0.015,63,0.011,64,0.162,66,0.981,68,1.307,90,1.17,93,0.797,100,1.047,191,1.377,290,2.133,475,3.126,560,2.061,562,2.205,713,2.061,896,3.434,897,2.369,898,2.369,901,3.69,902,4.009,903,4.349,904,3.112,905,2.561,906,2.561,907,2.561,908,2.561,909,2.561,910,2.561,911,2.561,912,2.561,913,2.561,914,2.369,915,2.792,916,2.792,917,2.792,918,3.667,919,2.792,920,2.792,921,2.792,922,2.792,923,2.561,924,2.792,925,2.792,926,2.792,927,2.792]],["title/miscellaneous/typealiases.html",[1107,1.539,1290,4.356]],["body/miscellaneous/typealiases.html",[8,0.251,13,0.02,15,0.403,61,0.016,62,0.018,63,0.016,599,4.46,740,3.828,884,4.224,889,4.224,890,4.754,891,4.754,1107,2.825,1291,5.56,1292,5.56]],["title/miscellaneous/variables.html",[1107,1.539,1293,3.725]],["body/miscellaneous/variables.html",[6,2.209,7,1.02,8,0.079,13,0.021,14,2.487,15,0.302,19,1.202,25,0.777,30,0.885,35,0.903,38,2.111,51,2.282,52,1.202,53,1.202,54,1.202,55,1.02,56,1.55,58,1.103,60,1.02,61,0.005,62,0.008,63,0.005,65,1.801,89,0.737,93,1.401,94,3.005,95,0.985,170,1.327,174,0.887,233,3.285,290,0.59,375,1.02,389,1.202,396,1.327,398,1.494,402,1.494,403,1.494,404,1.494,405,0.658,406,1.494,407,2.166,408,1.494,434,1.02,447,1.327,448,1.327,475,2.19,494,2.166,560,0.887,562,0.949,632,3.745,682,1.202,683,1.103,684,4.216,688,2.166,690,1.494,691,1.494,692,1.494,693,3.09,694,2.438,695,1.494,696,3.951,697,1.494,698,1.494,699,1.494,700,1.494,713,0.887,722,1.103,896,0.949,897,1.02,898,1.666,904,1.666,905,1.103,906,1.103,907,1.103,908,1.103,909,1.103,910,1.103,911,1.103,912,1.801,913,1.103,940,1.327,998,1.494,1000,2.438,1002,4.216,1003,3.566,1004,3.09,1005,1.494,1006,2.438,1013,2.438,1015,2.438,1018,1.327,1019,5.097,1021,2.438,1023,2.438,1024,2.438,1025,2.438,1026,2.438,1027,2.438,1028,2.438,1029,2.438,1030,2.438,1031,2.438,1032,2.438,1033,2.438,1034,2.438,1035,2.438,1036,2.438,1037,2.438,1038,2.438,1039,2.438,1040,2.438,1041,2.438,1042,2.438,1043,1.494,1044,2.438,1055,1.327,1056,1.327,1057,1.494,1058,2.438,1059,1.494,1060,2.438,1061,2.438,1062,1.494,1063,2.438,1064,2.438,1066,1.494,1067,2.438,1070,1.494,1084,1.494,1107,0.887,1110,1.494,1112,1.327,1114,1.494,1116,1.494,1120,5.7,1186,1.494,1207,1.494,1293,1.494,1294,1.747,1295,2.851,1296,3.613,1297,4.595,1298,1.747,1299,2.851,1300,1.747,1301,1.747,1302,1.747,1303,1.747,1304,2.851,1305,1.747,1306,1.747,1307,2.851,1308,1.747,1309,2.851,1310,2.851,1311,1.747,1312,1.747,1313,1.747,1314,1.747,1315,1.747,1316,2.851,1317,4.17,1318,1.747,1319,2.851,1320,1.747,1321,1.747,1322,2.851,1323,1.747,1324,2.851,1325,1.747,1326,2.851,1327,2.851,1328,1.747,1329,1.747,1330,1.747,1331,1.747,1332,1.747,1333,2.851,1334,1.747,1335,2.851,1336,2.851,1337,4.17,1338,1.747,1339,2.851,1340,1.747,1341,1.747,1342,1.747,1343,1.747,1344,2.851,1345,4.17,1346,4.595,1347,1.747,1348,1.747,1349,2.851,1350,3.613,1351,1.747,1352,1.747,1353,2.851,1354,2.851,1355,1.747,1356,1.747,1357,2.851,1358,1.747,1359,1.747,1360,2.851,1361,1.747,1362,1.747,1363,1.747,1364,1.747,1365,1.747,1366,1.747,1367,1.747,1368,1.747,1369,1.747,1370,1.747,1371,1.747,1372,3.613,1373,4.17,1374,1.747,1375,1.747,1376,1.747,1377,1.747,1378,1.747,1379,1.747,1380,1.747,1381,1.747,1382,1.747,1383,1.747,1384,1.747,1385,1.747,1386,1.747,1387,1.747,1388,1.747,1389,1.747,1390,1.747,1391,2.851,1392,1.747,1393,1.747,1394,1.747,1395,1.747,1396,1.747,1397,1.747]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/AddParams.html":{},"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":713,"title":{},"body":{"interfaces/RoutesValue.html":{},"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":1097,"title":{},"body":{"dependencies.html":{}}}],["0.1.6",{"_index":1079,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["0.24.0",{"_index":1081,"title":{},"body":{"dependencies.html":{}}}],["0.28.1",{"_index":1082,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1001,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1068,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1012,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1007,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1009,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1010,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1011,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1008,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1017,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0123456789abcdef",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":740,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["1.1.5",{"_index":1099,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":1080,"title":{},"body":{"dependencies.html":{}}}],["1.6.4",{"_index":1101,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1022,"title":{},"body":{"coverage.html":{}}}],["1/21",{"_index":1016,"title":{},"body":{"coverage.html":{}}}],["1/24",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["1/28",{"_index":1014,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":560,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["1280",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":1289,"title":{},"body":{"overview.html":{}}}],["15.6.0",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["1f1f1f",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":761,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["2.2.0",{"_index":1094,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":906,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["2020",{"_index":1228,"title":{},"body":{"license.html":{}}}],["26",{"_index":1288,"title":{},"body":{"overview.html":{}}}],["272728",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e2f30",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":763,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["3.0.1",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["3.1.3",{"_index":1083,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":821,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["300",{"_index":908,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["393939",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3f3f3f",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":765,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["4.4.1",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":910,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["454545",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["464749",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":815,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["5.1.1",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["5580c0",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5d5f61",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["6.4.4",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":912,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["729cd4",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["768",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.0.1",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["800",{"_index":562,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["808080",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["960",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_bgcolorclassname",{"_index":536,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["_growclassname",{"_index":537,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["_height",{"_index":624,"title":{},"body":{"classes/Rectangle.html":{}}}],["_shrinkclassname",{"_index":538,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["_type",{"_index":189,"title":{},"body":{"classes/AppearanceService.html":{}}}],["_view",{"_index":452,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["_width",{"_index":625,"title":{},"body":{"classes/Rectangle.html":{}}}],["ability",{"_index":493,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["above",{"_index":1257,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":214,"title":{},"body":{"classes/Base.html":{},"classes/Controller.html":{},"classes/SvelteModule.html":{}}}],["accessors",{"_index":315,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{}}}],["accesstoken",{"_index":24,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{}}}],["action",{"_index":1215,"title":{},"body":{"index.html":{},"license.html":{}}}],["active",{"_index":911,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["activeexpand",{"_index":732,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["activeid",{"_index":724,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["add",{"_index":521,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["add(moduleid",{"_index":498,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["addauthtooperation",{"_index":1055,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["addauthtooperation(params",{"_index":29,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"miscellaneous/functions.html":{}}}],["addconfig",{"_index":984,"title":{},"body":{"classes/classBuilder.html":{}}}],["addconfig(config",{"_index":921,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["added",{"_index":1219,"title":{},"body":{"index.html":{}}}],["addexpandbutton",{"_index":542,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["addparams",{"_index":1,"title":{"interfaces/AddParams.html":{}},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"coverage.html":{}}}],["ajv/dist/compile/codegen",{"_index":406,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["aliases",{"_index":1291,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":1248,"title":{},"body":{"license.html":{}}}],["anycolor",{"_index":230,"title":{},"body":{"classes/ColorRef.html":{}}}],["anycolorhex",{"_index":1127,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":65,"title":{"classes/App.html":{}},"body":{"classes/App.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app(document.body",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.quit",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appearance",{"_index":241,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearanceservice",{"_index":121,"title":{"classes/AppearanceService.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"coverage.html":{}}}],["appearancetype",{"_index":112,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"miscellaneous/enumerations.html":{}}}],["appearancetype.any",{"_index":247,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearancetype.dark",{"_index":168,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{}}}],["appearancetype.light",{"_index":248,"title":{},"body":{"classes/ColorRef.html":{}}}],["appeared",{"_index":285,"title":{},"body":{"classes/Controller.html":{}}}],["append",{"_index":552,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["append(child",{"_index":592,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["appending",{"_index":281,"title":{},"body":{"classes/Controller.html":{}}}],["application",{"_index":1207,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":383,"title":{},"body":{"interfaces/ILoginData.html":{}}}],["applicationmenus",{"_index":127,"title":{},"body":{"classes/App.html":{}}}],["aps",{"_index":163,"title":{},"body":{"classes/App.html":{}}}],["aps.onmodechanged((type",{"_index":165,"title":{},"body":{"classes/App.html":{}}}],["arising",{"_index":1284,"title":{},"body":{"license.html":{}}}],["array",{"_index":339,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["associated",{"_index":1239,"title":{},"body":{"license.html":{}}}],["async",{"_index":48,"title":{},"body":{"interfaces/AddParams.html":{},"classes/App.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["auth",{"_index":1078,"title":{},"body":{"dependencies.html":{}}}],["authexchange",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authorization",{"_index":46,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{}}}],["authors",{"_index":1274,"title":{},"body":{"license.html":{}}}],["authstate",{"_index":10,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{}}}],["authstate.accesstoken",{"_index":34,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{}}}],["auto",{"_index":889,"title":{},"body":{"classes/View.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["automatically",{"_index":1218,"title":{},"body":{"index.html":{}}}],["available",{"_index":1147,"title":{},"body":{"index.html":{}}}],["await",{"_index":150,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["axios",{"_index":374,"title":{},"body":{"interfaces/ILoginData.html":{},"dependencies.html":{}}}],["axios.post('http://sefe",{"_index":377,"title":{},"body":{"interfaces/ILoginData.html":{}}}],["bababa",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["background",{"_index":316,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["background(background",{"_index":350,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["bar.svelte",{"_index":132,"title":{},"body":{"classes/App.html":{}}}],["base",{"_index":128,"title":{"classes/Base.html":{}},"body":{"classes/App.html":{},"classes/Base.html":{},"classes/GeometryMixin.html":{},"coverage.html":{}}}],["base:4",{"_index":328,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["basemenu",{"_index":215,"title":{"classes/BaseMenu.html":{}},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["bdbl.baidu.com:8280/auth/login",{"_index":379,"title":{},"body":{"interfaces/ILoginData.html":{}}}],["bearer",{"_index":47,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{}}}],["bg",{"_index":558,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["bgcolor",{"_index":1021,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["board.controller.ts",{"_index":723,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["board.controller.ts:10",{"_index":747,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:11",{"_index":741,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:13",{"_index":742,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:14",{"_index":739,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:31",{"_index":755,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:46",{"_index":758,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:5",{"_index":745,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:53",{"_index":748,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:6",{"_index":743,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:61",{"_index":759,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:7",{"_index":744,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:72",{"_index":752,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:82",{"_index":750,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:9",{"_index":746,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.view.ts",{"_index":1013,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":397,"title":{},"body":{"interfaces/ISettings.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["bootstrap",{"_index":71,"title":{},"body":{"classes/App.html":{}}}],["border",{"_index":317,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["border(border",{"_index":358,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["bordercolor",{"_index":1023,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["borderraidus",{"_index":628,"title":{},"body":{"classes/Rectangle.html":{}}}],["borderraidus(borderraidus",{"_index":659,"title":{},"body":{"classes/Rectangle.html":{}}}],["bottom",{"_index":665,"title":{},"body":{"classes/Rectangle.html":{}}}],["bottomleftradius",{"_index":295,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["bottomrightradius",{"_index":296,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["box",{"_index":1202,"title":{},"body":{"index.html":{}}}],["break",{"_index":507,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["browserwindow",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder",{"_index":1204,"title":{},"body":{"index.html":{}}}],["builder.ts",{"_index":898,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["builder.ts:11",{"_index":900,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["builder.ts:24",{"_index":987,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:30",{"_index":990,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:33",{"_index":989,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:36",{"_index":991,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:44",{"_index":993,"title":{},"body":{"classes/classBuilder.html":{}}}],["building",{"_index":1159,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":403,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["bundled",{"_index":1170,"title":{},"body":{"index.html":{}}}],["button",{"_index":575,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["c",{"_index":923,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"license.html":{},"interfaces/stateConfig.html":{}}}],["c0c0c1",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c4666f",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c6c6c6",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":494,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"miscellaneous/variables.html":{}}}],["cancelformerge",{"_index":411,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["cancelwaitformerge",{"_index":543,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["canvas",{"_index":250,"title":{},"body":{"classes/Context.html":{}}}],["canvas/index.ts",{"_index":720,"title":{},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["canvas/skia",{"_index":210,"title":{},"body":{"classes/Base.html":{},"classes/Context.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["canvaskit",{"_index":256,"title":{},"body":{"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/Rectangle.html":{},"dependencies.html":{}}}],["case",{"_index":246,"title":{},"body":{"classes/ColorRef.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["cause",{"_index":402,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["center",{"_index":320,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["cgray",{"_index":559,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["charge",{"_index":1234,"title":{},"body":{"license.html":{}}}],["check",{"_index":58,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["checkexpandstate",{"_index":733,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["checkexpandstate(clientx",{"_index":749,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["child",{"_index":594,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["childs",{"_index":597,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["ck",{"_index":251,"title":{},"body":{"classes/Context.html":{},"classes/GeometryMixin.html":{}}}],["ck.paint",{"_index":359,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["claim",{"_index":1277,"title":{},"body":{"license.html":{}}}],["class",{"_index":64,"title":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classbuilder",{"_index":914,"title":{"classes/classBuilder.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classconfig",{"_index":901,"title":{"interfaces/classConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classes",{"_index":66,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["classname",{"_index":584,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["clear",{"_index":919,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["clientx",{"_index":439,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{}}}],["clienty",{"_index":440,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{}}}],["clone",{"_index":541,"title":{},"body":{"classes/ModuleItem.html":{}}}],["code",{"_index":390,"title":{},"body":{"interfaces/ILoginData.html":{},"index.html":{}}}],["col",{"_index":424,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":233,"title":{},"body":{"classes/ColorRef.html":{},"classes/GeometryMixin.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["color(appearancetype",{"_index":239,"title":{},"body":{"classes/ColorRef.html":{}}}],["color.ts",{"_index":1019,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["colorref",{"_index":227,"title":{"classes/ColorRef.html":{}},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["colors(color",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":804,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["combinederror",{"_index":19,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"miscellaneous/variables.html":{}}}],["common",{"_index":1175,"title":{},"body":{"index.html":{}}}],["community",{"_index":1139,"title":{},"body":{"index.html":{}}}],["comp",{"_index":607,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["compilation",{"_index":1194,"title":{},"body":{"index.html":{}}}],["compile",{"_index":1190,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":1210,"title":{},"body":{"index.html":{}}}],["completed",{"_index":970,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["component",{"_index":619,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["components",{"_index":1177,"title":{},"body":{"index.html":{}}}],["concrete",{"_index":1134,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1256,"title":{},"body":{"license.html":{}}}],["config",{"_index":139,"title":{},"body":{"classes/App.html":{},"classes/classBuilder.html":{}}}],["config.workbench",{"_index":156,"title":{},"body":{"classes/App.html":{}}}],["configs",{"_index":988,"title":{},"body":{"classes/classBuilder.html":{}}}],["configs.foreach((config",{"_index":917,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["configured",{"_index":1206,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1285,"title":{},"body":{"license.html":{}}}],["const",{"_index":30,"title":{},"body":{"interfaces/AddParams.html":{},"classes/App.html":{},"classes/GeometryMixin.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ISettings.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/Rectangle.html":{},"interfaces/RoutesValue.html":{},"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":83,"title":{},"body":{"classes/App.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/ModuleFactory.html":{},"classes/Rectangle.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["constructor(@inject('modulefactory",{"_index":947,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["constructor(anycolor",{"_index":234,"title":{},"body":{"classes/ColorRef.html":{}}}],["constructor(ck",{"_index":255,"title":{},"body":{"classes/Context.html":{}}}],["constructor(configs",{"_index":916,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["constructor(container",{"_index":524,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["constructor(context",{"_index":629,"title":{},"body":{"classes/Rectangle.html":{}}}],["constructor(modulefactory",{"_index":930,"title":{},"body":{"classes/Workbench.html":{}}}],["constructor(private",{"_index":141,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SplitBoardController.html":{}}}],["constructor(root",{"_index":84,"title":{},"body":{"classes/App.html":{},"classes/View.html":{}}}],["constructor(view",{"_index":738,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["container",{"_index":69,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["containermodule",{"_index":205,"title":{},"body":{"classes/AppearanceService.html":{}}}],["content",{"_index":382,"title":{},"body":{"interfaces/ILoginData.html":{}}}],["contentview",{"_index":539,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["contentview.classlist.add('flex",{"_index":846,"title":{},"body":{"classes/SplitItemView.html":{}}}],["context",{"_index":40,"title":{"classes/Context.html":{}},"body":{"interfaces/AddParams.html":{},"classes/App.html":{},"classes/Base.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"classes/Rectangle.html":{},"coverage.html":{}}}],["contextisolation",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":1281,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1225,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":1222,"title":{},"body":{"index.html":{}}}],["controlaccentcolor",{"_index":1024,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlbackgroundcolor",{"_index":1025,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controldisabledcolor",{"_index":1026,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlforbiddencolor",{"_index":1027,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlhighlightcolor",{"_index":1028,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":119,"title":{"classes/Controller.html":{}},"body":{"classes/App.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["controller:10",{"_index":467,"title":{},"body":{"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:12",{"_index":617,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:14",{"_index":469,"title":{},"body":{"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:16",{"_index":465,"title":{},"body":{"classes/MenuBar.html":{}}}],["controller:17",{"_index":468,"title":{},"body":{"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:23",{"_index":466,"title":{},"body":{"classes/MenuBar.html":{}}}],["controller:24",{"_index":618,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:28",{"_index":942,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:47",{"_index":945,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:61",{"_index":943,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:65",{"_index":946,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:68",{"_index":944,"title":{},"body":{"classes/Workbench.html":{}}}],["copies",{"_index":1250,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1237,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1227,"title":{},"body":{"license.html":{}}}],["corner",{"_index":302,"title":{},"body":{"classes/DefaultShapeMixin.html":{}}}],["cornermixin",{"_index":287,"title":{"classes/CornerMixin.html":{}},"body":{"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{}}}],["cornerradius",{"_index":289,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["cosmic",{"_index":1130,"title":{},"body":{"index.html":{}}}],["cosmic/core/browser",{"_index":120,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["cosmic/core/common",{"_index":116,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{}}}],["cosmic/core/parts",{"_index":118,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["cosmic/workbench/services/appearance",{"_index":122,"title":{},"body":{"classes/App.html":{}}}],["cosmic/workbench/services/menu",{"_index":125,"title":{},"body":{"classes/App.html":{}}}],["coverage",{"_index":994,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcolor",{"_index":1060,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["createcolor(color",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcolordto",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproject",{"_index":1063,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["createproject(project",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createprojectdto",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createwindow",{"_index":1000,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["crosshair",{"_index":431,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["current",{"_index":1211,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":925,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["d00000",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d1905d",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d2r",{"_index":1136,"title":{},"body":{"index.html":{}}}],["d2r.bcc",{"_index":378,"title":{},"body":{"interfaces/ILoginData.html":{}}}],["d7d7d7",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d9d9d9",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":1278,"title":{},"body":{"license.html":{}}}],["dark",{"_index":170,"title":{},"body":{"classes/App.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["dark:bg",{"_index":561,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["darkcolor",{"_index":231,"title":{},"body":{"classes/ColorRef.html":{}}}],["darkcolorhex",{"_index":1126,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dashpattern",{"_index":343,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["date.now",{"_index":476,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["deal",{"_index":1240,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1286,"title":{},"body":{"license.html":{}}}],["debugging",{"_index":1213,"title":{},"body":{"index.html":{}}}],["default",{"_index":93,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"miscellaneous/enumerations.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":408,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["defaultscope",{"_index":143,"title":{},"body":{"classes/App.html":{}}}],["defaultshapemixin",{"_index":297,"title":{"classes/DefaultShapeMixin.html":{}},"body":{"classes/DefaultShapeMixin.html":{},"classes/Rectangle.html":{},"coverage.html":{}}}],["defaultweightmap",{"_index":904,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":86,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["demo",{"_index":381,"title":{},"body":{"interfaces/ILoginData.html":{}}}],["dependencies",{"_index":1074,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["deprecated",{"_index":401,"title":{},"body":{"interfaces/ISettings.html":{}}}],["design",{"_index":1131,"title":{},"body":{"index.html":{}}}],["design/atom",{"_index":699,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["design_atom",{"_index":687,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/enumerations.html":{}}}],["destroy",{"_index":453,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["dev",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["develop",{"_index":1137,"title":{},"body":{"index.html":{}}}],["development",{"_index":1145,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["didautherror",{"_index":51,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["direction",{"_index":412,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["directionstyles",{"_index":841,"title":{},"body":{"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["directionstyles[direction",{"_index":866,"title":{},"body":{"classes/SplitItemView.html":{}}}],["directiontype",{"_index":419,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["directiontype.col",{"_index":802,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["directiontype.row",{"_index":808,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["directiontype[props.type",{"_index":954,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["disabled",{"_index":913,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["disappear",{"_index":286,"title":{},"body":{"classes/Controller.html":{}}}],["distribute",{"_index":1216,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribution",{"_index":1196,"title":{},"body":{"index.html":{}}}],["divided",{"_index":1167,"title":{},"body":{"index.html":{}}}],["document.body.classlist.add('mode",{"_index":169,"title":{},"body":{"classes/App.html":{}}}],["document.body.classlist.remove('mode",{"_index":171,"title":{},"body":{"classes/App.html":{}}}],["document.createelement('div",{"_index":474,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/SvelteModule.html":{},"classes/View.html":{}}}],["document.queryselector('#main",{"_index":180,"title":{},"body":{"classes/App.html":{}}}],["documentation",{"_index":995,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":283,"title":{},"body":{"classes/Controller.html":{}}}],["draft",{"_index":1220,"title":{},"body":{"index.html":{}}}],["draw",{"_index":253,"title":{},"body":{"classes/Context.html":{},"classes/Rectangle.html":{}}}],["e",{"_index":432,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["e.extensions?.code",{"_index":53,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"miscellaneous/variables.html":{}}}],["e0e0e0",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":1171,"title":{},"body":{"index.html":{}}}],["electron",{"_index":399,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{},"index.html":{}}}],["electron/.exec(process.execpath",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["electronstore",{"_index":398,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":282,"title":{},"body":{"classes/Controller.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["entire",{"_index":1165,"title":{},"body":{"index.html":{}}}],["enum",{"_index":423,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/RoutesValue.html":{},"classes/SplitItemView.html":{}}}],["enumerations",{"_index":1108,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":38,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["error('no",{"_index":391,"title":{},"body":{"interfaces/ILoginData.html":{}}}],["error('runtime",{"_index":37,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{}}}],["error.graphqlerrors.some(e",{"_index":52,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"miscellaneous/variables.html":{}}}],["es",{"_index":496,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["event",{"_index":756,"title":{},"body":{"classes/SplitBoardController.html":{},"license.html":{}}}],["event.clientx",{"_index":781,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.clienty",{"_index":768,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.preventdefault",{"_index":782,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.stoppropagation",{"_index":783,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.target",{"_index":775,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["eventemitter2",{"_index":195,"title":{},"body":{"classes/AppearanceService.html":{},"dependencies.html":{}}}],["everyone",{"_index":1148,"title":{},"body":{"index.html":{}}}],["evt",{"_index":190,"title":{},"body":{"classes/AppearanceService.html":{}}}],["exchanges",{"_index":1058,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":522,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["exist(moduleid",{"_index":512,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["expand",{"_index":540,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{}}}],["expand.svelte",{"_index":840,"title":{},"body":{"classes/SplitItemView.html":{}}}],["expandactive",{"_index":725,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandleavehandler",{"_index":726,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmouseuphandler",{"_index":727,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmovehandler",{"_index":728,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandnewitem",{"_index":427,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Workbench.html":{}}}],["expandnewitem(view",{"_index":936,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["expandtype",{"_index":729,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expires",{"_index":59,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{}}}],["explorer/auth/exchange/auth.ts",{"_index":7,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["explorer/auth/exchange/index.ts",{"_index":1057,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["explorer/auth/user.ts",{"_index":365,"title":{},"body":{"interfaces/ILoginData.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["explorer/design/api/color.ts",{"_index":1059,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["explorer/index.ts",{"_index":680,"title":{},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["explorer/project/api.ts",{"_index":1062,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["explorer/routes.ts",{"_index":683,"title":{},"body":{"interfaces/RoutesValue.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["explorer/team/api.ts",{"_index":1066,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/AddParams.html":{},"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["express",{"_index":1265,"title":{},"body":{"license.html":{}}}],["extends",{"_index":307,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["f2f2f2",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f9f9f9",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factory.ts",{"_index":491,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"coverage.html":{}}}],["factory.ts:11",{"_index":525,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:13",{"_index":526,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:14",{"_index":527,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:30",{"_index":530,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:33",{"_index":529,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:36",{"_index":531,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["false",{"_index":60,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ISettings.html":{},"classes/SplitBoardController.html":{},"miscellaneous/variables.html":{}}}],["fetchoptions",{"_index":32,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{}}}],["ffae2b",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddParams.html":{},"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["file://${join(__dirname",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":1217,"title":{},"body":{"index.html":{},"license.html":{}}}],["fills",{"_index":310,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{}}}],["fillstyleid",{"_index":345,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["find",{"_index":404,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fitness",{"_index":1270,"title":{},"body":{"license.html":{}}}],["flex",{"_index":585,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["flowvalue",{"_index":599,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["fn",{"_index":199,"title":{},"body":{"classes/AppearanceService.html":{}}}],["focus",{"_index":907,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":1255,"title":{},"body":{"license.html":{}}}],["fourthbgcolor",{"_index":1029,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":1233,"title":{},"body":{"license.html":{}}}],["full",{"_index":847,"title":{},"body":{"classes/SplitItemView.html":{}}}],["function",{"_index":28,"title":{},"body":{"interfaces/AddParams.html":{},"classes/AppearanceService.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/Module.html":{},"interfaces/RoutesValue.html":{},"classes/SplitBoardController.html":{},"coverage.html":{}}}],["functions",{"_index":1115,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1253,"title":{},"body":{"license.html":{}}}],["geometry",{"_index":306,"title":{},"body":{"classes/DefaultShapeMixin.html":{}}}],["geometrymixin",{"_index":305,"title":{"classes/GeometryMixin.html":{}},"body":{"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"coverage.html":{}}}],["get(moduleid",{"_index":510,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["getallteams",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getauth",{"_index":1056,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getauth(params",{"_index":49,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"miscellaneous/functions.html":{}}}],["getbackground",{"_index":329,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["getborder",{"_index":333,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["getborderraidus",{"_index":645,"title":{},"body":{"classes/Rectangle.html":{}}}],["getcanvas",{"_index":254,"title":{},"body":{"classes/Context.html":{}}}],["getcanvaskit",{"_index":1051,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getheight",{"_index":641,"title":{},"body":{"classes/Rectangle.html":{}}}],["getparams",{"_index":26,"title":{"interfaces/GetParams.html":{}},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"coverage.html":{}}}],["getting",{"_index":1128,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwidth",{"_index":637,"title":{},"body":{"classes/Rectangle.html":{}}}],["github",{"_index":1214,"title":{},"body":{"index.html":{}}}],["going",{"_index":279,"title":{},"body":{"classes/Controller.html":{}}}],["granted",{"_index":1232,"title":{},"body":{"license.html":{}}}],["graphql",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["gridbackgroundcolor",{"_index":1030,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":126,"title":{},"body":{"classes/App.html":{}}}],["group/base",{"_index":217,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["group/index.ts",{"_index":450,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["group/index.ts:13",{"_index":458,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:15",{"_index":456,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:19",{"_index":462,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:28",{"_index":463,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:31",{"_index":459,"title":{},"body":{"classes/MenuBar.html":{}}}],["groupmenu",{"_index":181,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.getmenuinsatance().init(menu.title",{"_index":185,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.initcontainer(header",{"_index":183,"title":{},"body":{"classes/App.html":{}}}],["groupmenuservice",{"_index":220,"title":{},"body":{"classes/BaseMenu.html":{}}}],["grow",{"_index":586,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["guide",{"_index":1146,"title":{},"body":{"index.html":{}}}],["handle",{"_index":670,"title":{},"body":{"classes/Rectangle.html":{}}}],["header",{"_index":179,"title":{},"body":{"classes/App.html":{}}}],["headers",{"_index":44,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{}}}],["height",{"_index":448,"title":{},"body":{"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"miscellaneous/variables.html":{}}}],["height(height",{"_index":657,"title":{},"body":{"classes/Rectangle.html":{}}}],["here",{"_index":1142,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1231,"title":{},"body":{"license.html":{}}}],["hexdigits",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hide",{"_index":574,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["hideexpandbutton",{"_index":544,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["holders",{"_index":1275,"title":{},"body":{"license.html":{}}}],["hor",{"_index":760,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["horizontal",{"_index":803,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["host",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hover",{"_index":909,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["htmlelement",{"_index":85,"title":{},"body":{"classes/App.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{}}}],["http://localhost:5000/workbench/desktop",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iauthstate",{"_index":12,"title":{"interfaces/IAuthState.html":{}},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"coverage.html":{}}}],["id",{"_index":475,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["ilogindata",{"_index":364,"title":{"interfaces/ILoginData.html":{}},"body":{"interfaces/ILoginData.html":{},"coverage.html":{}}}],["implements",{"_index":451,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Rectangle.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["implied",{"_index":1266,"title":{},"body":{"license.html":{}}}],["import",{"_index":16,"title":{},"body":{"interfaces/AddParams.html":{},"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["import(moduleid).then((modulesource",{"_index":515,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["include",{"_index":1174,"title":{},"body":{"index.html":{}}}],["included",{"_index":1260,"title":{},"body":{"license.html":{}}}],["including",{"_index":1243,"title":{},"body":{"license.html":{}}}],["independently",{"_index":1172,"title":{},"body":{"index.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/AddParams.html":{},"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.svelte",{"_index":620,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["indexable",{"_index":899,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddParams.html":{},"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["ing",{"_index":1132,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":327,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{}}}],["init",{"_index":454,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{}}}],["init(props",{"_index":461,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["initframe",{"_index":72,"title":{},"body":{"classes/App.html":{}}}],["initial",{"_index":890,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["initmenu(menuitems",{"_index":221,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenus",{"_index":73,"title":{},"body":{"classes/App.html":{}}}],["initmodules",{"_index":74,"title":{},"body":{"classes/App.html":{}}}],["initnavigationbar",{"_index":75,"title":{},"body":{"classes/App.html":{}}}],["initpreferences",{"_index":76,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel",{"_index":77,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel(container",{"_index":105,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel",{"_index":78,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel(container",{"_index":107,"title":{},"body":{"classes/App.html":{}}}],["initstatusbar",{"_index":79,"title":{},"body":{"classes/App.html":{}}}],["initstyle",{"_index":80,"title":{},"body":{"classes/App.html":{}}}],["initstylemode",{"_index":81,"title":{},"body":{"classes/App.html":{}}}],["initstylemode(type",{"_index":111,"title":{},"body":{"classes/App.html":{}}}],["initwithcomponent",{"_index":608,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["initwithcomponent(target",{"_index":613,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["initworkarea",{"_index":82,"title":{},"body":{"classes/App.html":{}}}],["inject",{"_index":204,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject(token",{"_index":1122,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":203,"title":{},"body":{"classes/AppearanceService.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["insertconfig",{"_index":985,"title":{},"body":{"classes/classBuilder.html":{}}}],["insertconfig(config",{"_index":922,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["inside",{"_index":321,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["install",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["instanceof",{"_index":157,"title":{},"body":{"classes/App.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"interfaces/RoutesValue.html":{},"interfaces/WeightMap.html":{},"interfaces/WorkbenchProps.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"interfaces/RoutesValue.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"interfaces/RoutesValue.html":{},"interfaces/WeightMap.html":{},"interfaces/WorkbenchProps.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["inversify",{"_index":115,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"dependencies.html":{}}}],["ipc",{"_index":1179,"title":{},"body":{"index.html":{}}}],["isettings",{"_index":395,"title":{"interfaces/ISettings.html":{}},"body":{"interfaces/ISettings.html":{},"coverage.html":{}}}],["isplitboardview",{"_index":409,"title":{"interfaces/ISplitBoardView.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{},"coverage.html":{}}}],["isprod",{"_index":1002,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isshrink",{"_index":545,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["issues",{"_index":1141,"title":{},"body":{"index.html":{}}}],["item",{"_index":601,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.id",{"_index":484,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["item.loader",{"_index":957,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.loader.then((module",{"_index":965,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.module",{"_index":979,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.moduleid",{"_index":602,"title":{},"body":{"classes/ModuleItem.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.root",{"_index":777,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientheight",{"_index":811,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientwidth",{"_index":807,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.getboundingclientrect().left",{"_index":806,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.getboundingclientrect().top",{"_index":810,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.setcontent(module.view",{"_index":980,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.ts",{"_index":534,"title":{},"body":{"classes/ModuleItem.html":{},"coverage.html":{}}}],["item.ts:5",{"_index":555,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.ts:6",{"_index":557,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.ts:7",{"_index":556,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.ts:8",{"_index":570,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.view",{"_index":422,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["item.view.ts",{"_index":824,"title":{},"body":{"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["item.view.ts:12",{"_index":827,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:13",{"_index":828,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:14",{"_index":826,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:16",{"_index":829,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:17",{"_index":825,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:25",{"_index":835,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:32",{"_index":834,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:39",{"_index":837,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:46",{"_index":838,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:53",{"_index":833,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:57",{"_index":836,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:63",{"_index":830,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:67",{"_index":832,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:71",{"_index":839,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:77",{"_index":831,"title":{},"body":{"classes/SplitItemView.html":{}}}],["itemgeneratedelegate",{"_index":426,"title":{"interfaces/ItemGenerateDelegate.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["items",{"_index":413,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["join(__dirname",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":689,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["keycode",{"_index":1093,"title":{},"body":{"dependencies.html":{}}}],["kind",{"_index":39,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"license.html":{}}}],["kit.ts",{"_index":1050,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["labelcolor",{"_index":1031,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["layout",{"_index":304,"title":{},"body":{"classes/DefaultShapeMixin.html":{}}}],["layoutmixin",{"_index":303,"title":{"classes/LayoutMixin.html":{}},"body":{"classes/DefaultShapeMixin.html":{},"classes/LayoutMixin.html":{},"coverage.html":{}}}],["left",{"_index":660,"title":{},"body":{"classes/Rectangle.html":{}}}],["length",{"_index":437,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["liability",{"_index":1279,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1276,"title":{},"body":{"license.html":{}}}],["license",{"_index":1152,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["light",{"_index":1114,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lightcolor",{"_index":232,"title":{},"body":{"classes/ColorRef.html":{}}}],["lightcolorhex",{"_index":1125,"title":{},"body":{"miscellaneous/functions.html":{}}}],["limitation",{"_index":1244,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1267,"title":{},"body":{"license.html":{}}}],["linux",{"_index":1199,"title":{},"body":{"index.html":{}}}],["liveresize",{"_index":734,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["liveresize(clientx",{"_index":751,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["load",{"_index":523,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["load(moduleid",{"_index":514,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["loader",{"_index":535,"title":{},"body":{"classes/ModuleItem.html":{}}}],["loading",{"_index":487,"title":{},"body":{"interfaces/Module.html":{}}}],["local",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage.clear",{"_index":393,"title":{},"body":{"interfaces/ILoginData.html":{}}}],["localstorage.getitem('accesstoken",{"_index":50,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{}}}],["localstorage.setitem('accesstoken",{"_index":388,"title":{},"body":{"interfaces/ILoginData.html":{}}}],["log",{"_index":1084,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":1006,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error(json.stringify(err",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":375,"title":{},"body":{"interfaces/ILoginData.html":{},"interfaces/RoutesValue.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["login(undefined",{"_index":1123,"title":{},"body":{"miscellaneous/functions.html":{}}}],["logout",{"_index":22,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["lowboardroot",{"_index":1015,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":504,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.inrequestscope",{"_index":509,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.insingletonscope",{"_index":506,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.intransientscope",{"_index":508,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["macos",{"_index":1197,"title":{},"body":{"index.html":{}}}],["main",{"_index":1181,"title":{},"body":{"index.html":{}}}],["mainwindow",{"_index":1003,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mainwindow.loadurl(url).catch((err",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.on('closed",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.webcontents.opendevtools",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor",{"_index":1020,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makecolor('#000000",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#3f3f3f",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#5580c0",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#729cd4",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#bababa",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c0c0c1",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c4666f",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c6c6c6",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d00000",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d1905d",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d7d7d7",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d9d9d9",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#e0e0e0",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f2f2f2",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f9f9f9",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffae2b",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffffff",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor(anycolorhex",{"_index":1124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makeoperation",{"_index":17,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{}}}],["makeoperation(kind",{"_index":43,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{}}}],["map",{"_index":96,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["matching",{"_index":62,"title":{},"body":{"interfaces/AddParams.html":{},"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":184,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["menu(this._view",{"_index":478,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["menu.id",{"_index":485,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["menu.items",{"_index":186,"title":{},"body":{"classes/App.html":{}}}],["menu.ts",{"_index":218,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["menu/config",{"_index":129,"title":{},"body":{"classes/App.html":{}}}],["menubar",{"_index":449,"title":{"classes/MenuBar.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["menugroupservice",{"_index":124,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["menuinstance",{"_index":219,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuitemconfig",{"_index":222,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuitems",{"_index":226,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuprops",{"_index":457,"title":{"interfaces/MenuProps.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["merchantability",{"_index":1269,"title":{},"body":{"license.html":{}}}],["merge",{"_index":764,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["metadata",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":70,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["meuns",{"_index":472,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["minheight",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minimum",{"_index":1156,"title":{},"body":{"index.html":{}}}],["minwidth",{"_index":940,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1107,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1151,"title":{},"body":{"index.html":{},"license.html":{}}}],["mixer",{"_index":301,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"classes/Rectangle.html":{},"dependencies.html":{}}}],["mixin",{"_index":299,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"classes/Rectangle.html":{}}}],["mixin(cornermixin",{"_index":308,"title":{},"body":{"classes/DefaultShapeMixin.html":{}}}],["mixin(defaultshapemixin",{"_index":651,"title":{},"body":{"classes/Rectangle.html":{}}}],["mixin/shape",{"_index":650,"title":{},"body":{"classes/Rectangle.html":{}}}],["mode",{"_index":814,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["modify",{"_index":1246,"title":{},"body":{"license.html":{}}}],["module",{"_index":405,"title":{"interfaces/Module.html":{}},"body":{"interfaces/ISettings.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["module.init(props",{"_index":520,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["module.ts",{"_index":869,"title":{},"body":{"classes/SvelteModule.html":{},"coverage.html":{}}}],["module.ts:10",{"_index":872,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:16",{"_index":874,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:22",{"_index":875,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:28",{"_index":873,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:36",{"_index":876,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:8",{"_index":871,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:9",{"_index":870,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.viewdiddisappear",{"_index":969,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["module.viewwillappear",{"_index":968,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["moduleconfig",{"_index":470,"title":{"interfaces/ModuleConfig.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modulefactory",{"_index":117,"title":{"classes/ModuleFactory.html":{}},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modulefactory(this.container",{"_index":152,"title":{},"body":{"classes/App.html":{}}}],["modulefactory.load(config.workbench.id",{"_index":155,"title":{},"body":{"classes/App.html":{}}}],["moduleid",{"_index":528,"title":{},"body":{"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{}}}],["moduleitem",{"_index":532,"title":{"classes/ModuleItem.html":{}},"body":{"classes/ModuleItem.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modules",{"_index":497,"title":{"modules.html":{}},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"index.html":{},"modules.html":{}}}],["modulesource.default",{"_index":517,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["monorepo",{"_index":1164,"title":{},"body":{"index.html":{}}}],["more",{"_index":348,"title":{},"body":{"classes/GeometryMixin.html":{},"index.html":{}}}],["mousedown",{"_index":784,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["mouseevent",{"_index":754,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["mutation",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n",{"_index":435,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":89,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["navigation",{"_index":130,"title":{},"body":{"classes/App.html":{}}}],["navigationbar",{"_index":173,"title":{},"body":{"classes/App.html":{}}}],["new",{"_index":95,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/GeometryMixin.html":{},"interfaces/ILoginData.html":{},"interfaces/ISettings.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1191,"title":{},"body":{"index.html":{}}}],["none",{"_index":891,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["noninfringement",{"_index":1273,"title":{},"body":{"license.html":{}}}],["normalizeweight",{"_index":986,"title":{},"body":{"classes/classBuilder.html":{}}}],["normalizeweight(config",{"_index":992,"title":{},"body":{"classes/classBuilder.html":{}}}],["nothing",{"_index":1160,"title":{},"body":{"index.html":{}}}],["notice",{"_index":1258,"title":{},"body":{"license.html":{}}}],["notification",{"_index":1004,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":1205,"title":{},"body":{"index.html":{}}}],["null",{"_index":14,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":290,"title":{},"body":{"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":1236,"title":{},"body":{"license.html":{}}}],["offsetx",{"_index":812,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["offsety",{"_index":813,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["olditem",{"_index":428,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["onmodechanged",{"_index":192,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmodechanged(fn",{"_index":197,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmousedown",{"_index":735,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["onmousedown(event",{"_index":753,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["operation",{"_index":11,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{}}}],["operation?.context?.fetchoptions",{"_index":33,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{}}}],["operationcontext",{"_index":21,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{}}}],["operationstore",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operationtype",{"_index":20,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{}}}],["optional",{"_index":90,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{}}}],["options",{"_index":41,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/Module.html":{}}}],["options.headers",{"_index":45,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{}}}],["orderedconfigs",{"_index":915,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["organization",{"_index":1226,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1283,"title":{},"body":{"license.html":{}}}],["out",{"_index":1201,"title":{},"body":{"index.html":{},"license.html":{}}}],["outside",{"_index":322,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["overview",{"_index":1287,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":955,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["p.id",{"_index":959,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["package",{"_index":1073,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":1169,"title":{},"body":{"index.html":{}}}],["packaging",{"_index":1193,"title":{},"body":{"index.html":{}}}],["page",{"_index":1187,"title":{},"body":{"index.html":{}}}],["paint",{"_index":318,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{}}}],["paint.setantialias(true",{"_index":355,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["paint.setcolor(ck.parsecolorstring('#ee0033",{"_index":362,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["paint.setcolor(color",{"_index":353,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["paint.setstrokewidth(20",{"_index":361,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["paint.setstyle(ck.paintstyle.stroke",{"_index":360,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["paint.setstyle(this.context.ck.paintstyle.fill",{"_index":354,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["panel/index.ts",{"_index":605,"title":{},"body":{"classes/PropertyPanel.html":{},"coverage.html":{}}}],["parameters",{"_index":88,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["paramname",{"_index":716,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["paramnames",{"_index":684,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["paramnames.length",{"_index":712,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["paramnames.map((param",{"_index":704,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["paramnames.map((paramname",{"_index":714,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["parampath",{"_index":703,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["params",{"_index":31,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"interfaces/RoutesValue.html":{},"miscellaneous/functions.html":{}}}],["params[paramname",{"_index":715,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["param}`).join",{"_index":705,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["parent",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["particular",{"_index":1271,"title":{},"body":{"license.html":{}}}],["password",{"_index":366,"title":{},"body":{"interfaces/ILoginData.html":{}}}],["path",{"_index":632,"title":{},"body":{"classes/Rectangle.html":{},"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["path}/${parampath",{"_index":706,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["path}/${result.join",{"_index":717,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["permission",{"_index":1230,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1251,"title":{},"body":{"license.html":{}}}],["person",{"_index":1235,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1252,"title":{},"body":{"license.html":{}}}],["platform",{"_index":1212,"title":{},"body":{"index.html":{}}}],["pluginapi['mixed",{"_index":341,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["port",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":1262,"title":{},"body":{"license.html":{}}}],["position",{"_index":438,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["possible",{"_index":1209,"title":{},"body":{"index.html":{}}}],["practice",{"_index":1135,"title":{},"body":{"index.html":{}}}],["preload",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preload.js",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepend",{"_index":553,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["prepend(...childs",{"_index":595,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["private",{"_index":68,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["process.env.node_env",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":1166,"title":{},"body":{"index.html":{}}}],["project",{"_index":696,"title":{},"body":{"interfaces/RoutesValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project_detail",{"_index":686,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/enumerations.html":{}}}],["projectid",{"_index":697,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["projects(project",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":489,"title":{},"body":{"interfaces/Module.html":{},"classes/ModuleItem.html":{},"miscellaneous/functions.html":{}}}],["promise.reject('invalid",{"_index":376,"title":{},"body":{"interfaces/ILoginData.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/AddParams.html":{},"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["propertypanel",{"_index":137,"title":{"classes/PropertyPanel.html":{}},"body":{"classes/App.html":{},"classes/PropertyPanel.html":{},"coverage.html":{}}}],["props",{"_index":176,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.modules",{"_index":956,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.scale",{"_index":962,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.scope",{"_index":518,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["protected",{"_index":212,"title":{},"body":{"classes/Base.html":{},"classes/GeometryMixin.html":{}}}],["provided",{"_index":1263,"title":{},"body":{"license.html":{}}}],["provides",{"_index":492,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["public",{"_index":191,"title":{},"body":{"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["publish",{"_index":1143,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":1272,"title":{},"body":{"license.html":{}}}],["push",{"_index":370,"title":{},"body":{"interfaces/ILoginData.html":{}}}],["push(urlfor(routes.login",{"_index":394,"title":{},"body":{"interfaces/ILoginData.html":{}}}],["qiansc",{"_index":1229,"title":{},"body":{"license.html":{}}}],["query",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["querycolordto",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["querycolors",{"_index":1061,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["queryprojectdto",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryprojects",{"_index":1064,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["quickly",{"_index":1208,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":446,"title":{},"body":{"classes/LayoutMixin.html":{},"classes/Rectangle.html":{}}}],["readonlyarray",{"_index":344,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["ready",{"_index":1195,"title":{},"body":{"index.html":{}}}],["recognize",{"_index":708,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["record",{"_index":710,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["rect",{"_index":626,"title":{},"body":{"classes/Rectangle.html":{}}}],["rectangle",{"_index":621,"title":{"classes/Rectangle.html":{}},"body":{"classes/Rectangle.html":{},"coverage.html":{}}}],["rectanglecornermixin",{"_index":292,"title":{"classes/RectangleCornerMixin.html":{}},"body":{"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{}}}],["rectanglenode",{"_index":623,"title":{},"body":{"classes/Rectangle.html":{}}}],["ref.ts",{"_index":229,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["ref.ts:15",{"_index":240,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:5",{"_index":237,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:6",{"_index":238,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:7",{"_index":235,"title":{},"body":{"classes/ColorRef.html":{}}}],["reflect",{"_index":1095,"title":{},"body":{"dependencies.html":{}}}],["release",{"_index":1221,"title":{},"body":{"index.html":{}}}],["remove(menu",{"_index":480,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["render",{"_index":280,"title":{},"body":{"classes/Controller.html":{}}}],["replacecontent",{"_index":546,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["replacecontent(contentview",{"_index":577,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["repository",{"_index":1133,"title":{},"body":{"index.html":{}}}],["request",{"_index":501,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["requestpolicy",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1155,"title":{},"body":{"index.html":{}}}],["res",{"_index":385,"title":{},"body":{"interfaces/ILoginData.html":{}}}],["res.data",{"_index":386,"title":{},"body":{"interfaces/ILoginData.html":{}}}],["res.data.accesstoken",{"_index":387,"title":{},"body":{"interfaces/ILoginData.html":{}}}],["resize",{"_index":430,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{}}}],["resizeat",{"_index":414,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["resourceexplorer",{"_index":679,"title":{"classes/ResourceExplorer.html":{}},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["resourcepage",{"_index":135,"title":{},"body":{"classes/App.html":{}}}],["resoures",{"_index":488,"title":{},"body":{"interfaces/Module.html":{}}}],["restriction",{"_index":1242,"title":{},"body":{"license.html":{}}}],["result",{"_index":61,"title":{},"body":{"interfaces/AddParams.html":{},"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":63,"title":{},"body":{"interfaces/AddParams.html":{},"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":35,"title":{},"body":{"interfaces/AddParams.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":98,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":664,"title":{},"body":{"classes/Rectangle.html":{}}}],["rights",{"_index":1245,"title":{},"body":{"license.html":{}}}],["roadmap",{"_index":1144,"title":{},"body":{"index.html":{}}}],["rollup",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":91,"title":{},"body":{"classes/App.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["rounded",{"_index":857,"title":{},"body":{"classes/SplitItemView.html":{}}}],["route",{"_index":711,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/functions.html":{}}}],["routefor",{"_index":1065,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["routefor(route",{"_index":701,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/functions.html":{}}}],["router",{"_index":373,"title":{},"body":{"interfaces/ILoginData.html":{},"dependencies.html":{}}}],["routes",{"_index":369,"title":{},"body":{"interfaces/ILoginData.html":{},"interfaces/RoutesValue.html":{},"miscellaneous/enumerations.html":{}}}],["routes.default",{"_index":690,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["routes.design_atom",{"_index":698,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["routes.index",{"_index":691,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["routes.login",{"_index":700,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["routes.project_detail",{"_index":695,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["routes.team_detail",{"_index":692,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["routes_config",{"_index":688,"title":{},"body":{"interfaces/RoutesValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routes_config[route",{"_index":702,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["routesvalue",{"_index":682,"title":{"interfaces/RoutesValue.html":{}},"body":{"interfaces/RoutesValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":425,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["rrect",{"_index":666,"title":{},"body":{"classes/Rectangle.html":{}}}],["run",{"_index":495,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"index.html":{}}}],["s",{"_index":434,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["scale",{"_index":941,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["scope",{"_index":499,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["script",{"_index":1182,"title":{},"body":{"index.html":{}}}],["secondarybgcolor",{"_index":1032,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["secondarylabelcolor",{"_index":1033,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["security",{"_index":380,"title":{},"body":{"interfaces/ILoginData.html":{}}}],["see",{"_index":1223,"title":{},"body":{"index.html":{}}}],["sell",{"_index":1249,"title":{},"body":{"license.html":{}}}],["serialize",{"_index":455,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["server",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":123,"title":{},"body":{"classes/App.html":{}}}],["service.ts",{"_index":188,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":196,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:12",{"_index":202,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:18",{"_index":198,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:21",{"_index":200,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:9",{"_index":194,"title":{},"body":{"classes/AppearanceService.html":{}}}],["set",{"_index":349,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{},"index.html":{}}}],["setactivestate",{"_index":736,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setactivestate(index",{"_index":757,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setbackground(background",{"_index":331,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["setborder(border",{"_index":335,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["setborderraidus(borderraidus",{"_index":647,"title":{},"body":{"classes/Rectangle.html":{}}}],["setcontent",{"_index":547,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setcontent(contentview",{"_index":579,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setcursor",{"_index":415,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["setdefaultclass",{"_index":548,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setflow",{"_index":554,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setflow(type",{"_index":598,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setgrow",{"_index":549,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setgrow(classname",{"_index":582,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setheight(height",{"_index":643,"title":{},"body":{"classes/Rectangle.html":{}}}],["setshrink",{"_index":550,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setshrink(classname",{"_index":587,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["settings",{"_index":407,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setwidth(width",{"_index":639,"title":{},"body":{"classes/Rectangle.html":{}}}],["shall",{"_index":1259,"title":{},"body":{"license.html":{}}}],["shapecanvas",{"_index":718,"title":{"classes/ShapeCanvas.html":{}},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["shrink",{"_index":589,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["similar",{"_index":1163,"title":{},"body":{"index.html":{}}}],["singleton",{"_index":144,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["smelte",{"_index":1098,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":1238,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddParams.html":{},"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["spa",{"_index":372,"title":{},"body":{"interfaces/ILoginData.html":{},"dependencies.html":{}}}],["split",{"_index":421,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitItemView.html":{}}}],["split.js",{"_index":1100,"title":{},"body":{"dependencies.html":{}}}],["splitboard",{"_index":929,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["splitboardcontroller",{"_index":721,"title":{"classes/SplitBoardController.html":{}},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["splitboardview",{"_index":471,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["splitboardview>().setflow('1",{"_index":949,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["splitcolumnat",{"_index":416,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["splitexpand",{"_index":567,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["splititemview",{"_index":420,"title":{"classes/SplitItemView.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"coverage.html":{}}}],["splititemview:12",{"_index":564,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:13",{"_index":565,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:14",{"_index":563,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:16",{"_index":566,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:17",{"_index":568,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:25",{"_index":580,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:32",{"_index":578,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:39",{"_index":583,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:46",{"_index":588,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:53",{"_index":576,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:57",{"_index":581,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:63",{"_index":571,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:67",{"_index":573,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:71",{"_index":591,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:77",{"_index":572,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splitrowat",{"_index":417,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["src/.../api.ts",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../appearance.ts",{"_index":1109,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.ts",{"_index":1116,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../canvas",{"_index":1117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../class",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../color.ts",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inject.ts",{"_index":1118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.ts",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../routes.ts",{"_index":1112,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../settings.ts",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../split",{"_index":1110,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../type.ts",{"_index":1111,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../ui",{"_index":1120,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.ts",{"_index":1119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../uuid.ts",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../view.ts",{"_index":1292,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app",{"_index":1180,"title":{},"body":{"index.html":{}}}],["src/app/index.ts",{"_index":998,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/logger.ts",{"_index":1005,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/settings.ts",{"_index":396,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core",{"_index":1173,"title":{},"body":{"index.html":{}}}],["src/core/browser/class",{"_index":897,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/controller.ts",{"_index":268,"title":{},"body":{"classes/Controller.html":{},"coverage.html":{}}}],["src/core/browser/controller.ts:10",{"_index":275,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:14",{"_index":278,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:17",{"_index":276,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:5",{"_index":274,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:7",{"_index":277,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/layout/split",{"_index":722,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/layout/type.ts",{"_index":410,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/browser/style/ui",{"_index":1018,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/view.ts",{"_index":884,"title":{},"body":{"classes/View.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/browser/view.ts:13",{"_index":886,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:17",{"_index":887,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:4",{"_index":885,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:8",{"_index":888,"title":{},"body":{"classes/View.html":{}}}],["src/core/common/appearance.ts",{"_index":1113,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/common/color",{"_index":228,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["src/core/common/uuid.ts",{"_index":1043,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/components",{"_index":1189,"title":{},"body":{"index.html":{}}}],["src/core/parts/ioc/inject.ts",{"_index":1045,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/core/parts/modules/module",{"_index":490,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"coverage.html":{}}}],["src/core/parts/modules/module.ts",{"_index":486,"title":{},"body":{"interfaces/Module.html":{},"coverage.html":{}}}],["src/core/parts/modules/svelte",{"_index":868,"title":{},"body":{"classes/SvelteModule.html":{},"coverage.html":{}}}],["src/modules",{"_index":1183,"title":{},"body":{"index.html":{}}}],["src/modules/draw",{"_index":209,"title":{},"body":{"classes/Base.html":{},"classes/Context.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/menu",{"_index":216,"title":{},"body":{"classes/BaseMenu.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["src/modules/property",{"_index":604,"title":{},"body":{"classes/PropertyPanel.html":{},"coverage.html":{}}}],["src/modules/resource",{"_index":6,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/modules/shape",{"_index":719,"title":{},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["src/modules/workbench/index.ts",{"_index":928,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["src/modules/workbench/index.ts:19",{"_index":933,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:20",{"_index":934,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:21",{"_index":931,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:31",{"_index":938,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:72",{"_index":935,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:81",{"_index":937,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:95",{"_index":939,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/module",{"_index":533,"title":{},"body":{"classes/ModuleItem.html":{},"coverage.html":{}}}],["src/workbench",{"_index":1185,"title":{},"body":{"index.html":{}}}],["src/workbench/desktop/app.ts",{"_index":67,"title":{},"body":{"classes/App.html":{},"coverage.html":{}}}],["src/workbench/desktop/app.ts:103",{"_index":109,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:16",{"_index":92,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:17",{"_index":87,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:24",{"_index":97,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:30",{"_index":102,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:42",{"_index":104,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:47",{"_index":110,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:52",{"_index":113,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:60",{"_index":99,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:64",{"_index":103,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:74",{"_index":101,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:83",{"_index":108,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:91",{"_index":106,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:99",{"_index":114,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/main.ts",{"_index":1070,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/services/appearance",{"_index":187,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["standard",{"_index":1150,"title":{},"body":{"index.html":{}}}],["start",{"_index":436,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["started",{"_index":1129,"title":{"index.html":{},"license.html":{}},"body":{}}],["startx",{"_index":730,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["starty",{"_index":731,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["stateconfig",{"_index":902,"title":{"interfaces/stateConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["statements",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["statically",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statusbar",{"_index":133,"title":{},"body":{"classes/App.html":{}}}],["step",{"_index":1192,"title":{},"body":{"index.html":{}}}],["sth",{"_index":172,"title":{},"body":{"classes/App.html":{}}}],["store",{"_index":400,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{}}}],["storybook",{"_index":1188,"title":{},"body":{"index.html":{}}}],["string",{"_index":25,"title":{},"body":{"interfaces/AddParams.html":{},"classes/GeometryMixin.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/Rectangle.html":{},"interfaces/RoutesValue.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":337,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{}}}],["strokealign",{"_index":311,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokecap",{"_index":340,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokejoin",{"_index":342,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokemiterlimit",{"_index":312,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokes",{"_index":313,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokestyleid",{"_index":346,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokeweight",{"_index":314,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["structure",{"_index":1161,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1254,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1247,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1261,"title":{},"body":{"license.html":{}}}],["such",{"_index":1176,"title":{},"body":{"index.html":{}}}],["super",{"_index":652,"title":{},"body":{"classes/Rectangle.html":{},"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["support",{"_index":338,"title":{},"body":{"classes/GeometryMixin.html":{},"index.html":{}}}],["surface",{"_index":252,"title":{},"body":{"classes/Context.html":{}}}],["svelte",{"_index":371,"title":{},"body":{"interfaces/ILoginData.html":{},"dependencies.html":{}}}],["svelte/internal",{"_index":877,"title":{},"body":{"classes/SvelteModule.html":{}}}],["sveltecomponentdev",{"_index":610,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["sveltemodule",{"_index":606,"title":{"classes/SvelteModule.html":{}},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"coverage.html":{}}}],["sveltemodule:10",{"_index":612,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:15",{"_index":681,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["sveltemodule:16",{"_index":616,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:28",{"_index":615,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:5",{"_index":614,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:8",{"_index":611,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:9",{"_index":609,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["switch",{"_index":245,"title":{},"body":{"classes/ColorRef.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["symbol.for('flowtableroot",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["systembluecolor",{"_index":1034,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemgraycolor",{"_index":1035,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemorangecolor",{"_index":1036,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systempinkcolor",{"_index":1037,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemredcolor",{"_index":1038,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemyellowcolor",{"_index":1039,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":429,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["table",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["tailwindcss",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["target",{"_index":174,"title":{},"body":{"classes/App.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"miscellaneous/variables.html":{}}}],["target.classlist.contains('split",{"_index":779,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["target.parentelement",{"_index":778,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["team",{"_index":693,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["team_detail",{"_index":685,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/enumerations.html":{}}}],["teamid",{"_index":694,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["teams",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teamsquery",{"_index":1067,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":1154,"title":{},"body":{"index.html":{}}}],["tertiarybgcolor",{"_index":1040,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tertiarylabelcolor",{"_index":1041,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["textfieldbackground",{"_index":1042,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["then(res",{"_index":384,"title":{},"body":{"interfaces/ILoginData.html":{}}}],["this._growclassname",{"_index":852,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._height",{"_index":656,"title":{},"body":{"classes/Rectangle.html":{}}}],["this._shrinkclassname",{"_index":851,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._type",{"_index":206,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this._view",{"_index":473,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/SvelteModule.html":{}}}],["this._view.parentnode",{"_index":882,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this._view.parentnode.removechild(this._view",{"_index":883,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this._view.removechild(menu.container",{"_index":481,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this._width",{"_index":653,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.activeexpand",{"_index":787,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.activeid",{"_index":788,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.add(moduleid",{"_index":516,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.addexpandbutton",{"_index":842,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.anycolor",{"_index":242,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.cancelwaitformerge",{"_index":863,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.canvas",{"_index":265,"title":{},"body":{"classes/Context.html":{}}}],["this.checkexpandstate(event.clientx",{"_index":769,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.ck",{"_index":263,"title":{},"body":{"classes/Context.html":{}}}],["this.comp",{"_index":879,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this.comp.$destroy",{"_index":881,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this.container",{"_index":142,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind('modulefactory').todynamicvalue",{"_index":153,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(appearanceservice).to(appearanceservice",{"_index":161,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(menugroupservice).to(menugroupservice",{"_index":162,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(moduleid).to(module",{"_index":505,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.container.get(appearanceservice",{"_index":164,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(menugroupservice",{"_index":182,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(moduleid",{"_index":519,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.contentview",{"_index":844,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.context",{"_index":177,"title":{},"body":{"classes/App.html":{},"classes/GeometryMixin.html":{},"classes/Rectangle.html":{}}}],["this.context.ck.paint",{"_index":351,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.context.ck.parsecolorstring(background",{"_index":352,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.context.ck.path().addrrect(rrect",{"_index":669,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.context.ck.rrectxy([left",{"_index":667,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.context.draw",{"_index":674,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.context.getcanvas().drawpath(this.rect",{"_index":671,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.context.set('container",{"_index":145,"title":{},"body":{"classes/App.html":{}}}],["this.cornerradius",{"_index":658,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.darkcolor",{"_index":244,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.evt.emit('onmodechanged",{"_index":207,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.evt.on('onmodechanged",{"_index":208,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.exist(moduleid",{"_index":502,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.expand",{"_index":861,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.expandhidden",{"_index":862,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.mergedirection",{"_index":865,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expandactive",{"_index":792,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandleavehandler",{"_index":770,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmouseuphandler",{"_index":772,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmovehandler",{"_index":766,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandtype",{"_index":793,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.fills.push(paint",{"_index":356,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.fills.tostring",{"_index":347,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.fills[0",{"_index":672,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.groupmenuservice.getmenuinsatance",{"_index":224,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.initmenus",{"_index":178,"title":{},"body":{"classes/App.html":{}}}],["this.initmodules",{"_index":151,"title":{},"body":{"classes/App.html":{}}}],["this.initnavigationbar",{"_index":148,"title":{},"body":{"classes/App.html":{}}}],["this.initpreferences",{"_index":146,"title":{},"body":{"classes/App.html":{}}}],["this.initstatusbar",{"_index":149,"title":{},"body":{"classes/App.html":{}}}],["this.initstyle",{"_index":147,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(appearancetype.dark",{"_index":167,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(type",{"_index":166,"title":{},"body":{"classes/App.html":{}}}],["this.initwithcomponent(this._view",{"_index":880,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this.insertconfig(config",{"_index":918,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.lightcolor",{"_index":243,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.liveresize(event.clientx",{"_index":767,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.menuinstance",{"_index":223,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.menuinstance.init",{"_index":225,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.meuns",{"_index":482,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.meuns.filter((item",{"_index":483,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.meuns.length",{"_index":477,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.meuns.push(menu",{"_index":479,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.modulefactory",{"_index":951,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.modulefactory.load(item.moduleid",{"_index":977,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.modulefactory.load(p.id",{"_index":958,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.moduleid",{"_index":603,"title":{},"body":{"classes/ModuleItem.html":{}}}],["this.modules.get(moduleid",{"_index":511,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.modules.has(moduleid",{"_index":513,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.modules.set(moduleid",{"_index":503,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.normalizeweight(config",{"_index":924,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.onmousedown(event",{"_index":774,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.orderedconfigs",{"_index":920,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor",{"_index":926,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor].weight",{"_index":927,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.prepend(contentview",{"_index":848,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.props",{"_index":878,"title":{},"body":{"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.props.minwidth",{"_index":982,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.props.scale",{"_index":983,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.props.type",{"_index":981,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.rect",{"_index":668,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.root",{"_index":175,"title":{},"body":{"classes/App.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["this.root.appendchild(child",{"_index":894,"title":{},"body":{"classes/View.html":{}}}],["this.root.appendchild(workbench.view",{"_index":159,"title":{},"body":{"classes/App.html":{}}}],["this.root.classlist.add('flex",{"_index":856,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('relative",{"_index":859,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('split",{"_index":845,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('wait",{"_index":864,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(...this._bgcolorclassname",{"_index":860,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(`flex",{"_index":893,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.add(this._growclassname",{"_index":853,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(this._shrinkclassname",{"_index":855,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove('flex",{"_index":892,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.remove('wait",{"_index":867,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._growclassname",{"_index":854,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._shrinkclassname",{"_index":850,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.prepend(...childs",{"_index":895,"title":{},"body":{"classes/View.html":{}}}],["this.root.replacechild(contentview",{"_index":849,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.setactivestate(index",{"_index":780,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.setdefaultclass",{"_index":843,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.splitboard",{"_index":948,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.additem(item",{"_index":960,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.applysplit",{"_index":961,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.direction",{"_index":953,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.itemgeneratedelegate",{"_index":950,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.items.foreach((item",{"_index":963,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.items[index",{"_index":964,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.root",{"_index":952,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.startx",{"_index":785,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.starty",{"_index":786,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.strokes.push(paint",{"_index":363,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.strokes.tostring",{"_index":357,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.strokes[0",{"_index":673,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.surface",{"_index":264,"title":{},"body":{"classes/Context.html":{}}}],["this.surface.flush",{"_index":267,"title":{},"body":{"classes/Context.html":{}}}],["this.surface.getcanvas",{"_index":266,"title":{},"body":{"classes/Context.html":{}}}],["this.unactiveexpand",{"_index":771,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.updaterect",{"_index":655,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.view",{"_index":971,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.view.cancelformerge",{"_index":798,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.direction",{"_index":801,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items.foreach((item",{"_index":776,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items[this.activeid",{"_index":800,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.resizeat(this.activeid",{"_index":805,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousedown",{"_index":773,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseleave",{"_index":790,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousemove",{"_index":789,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseup",{"_index":791,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseleave",{"_index":796,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mousemove",{"_index":795,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseup",{"_index":797,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor",{"_index":799,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('col",{"_index":816,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('crosshair",{"_index":794,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('n",{"_index":820,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('row",{"_index":817,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('w",{"_index":818,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitcolumnat(this.activeid",{"_index":822,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitrowat(this.activeid",{"_index":823,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.waitformergeatitem(this.activeid",{"_index":819,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.viewdiddisappear",{"_index":975,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.viewwilldisappear",{"_index":972,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.x",{"_index":661,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.y",{"_index":663,"title":{},"body":{"classes/Rectangle.html":{}}}],["three",{"_index":1168,"title":{},"body":{"index.html":{}}}],["throw",{"_index":36,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{}}}],["title",{"_index":464,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["todo",{"_index":57,"title":{},"body":{"interfaces/AddParams.html":{},"classes/GeometryMixin.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"interfaces/RoutesValue.html":{}}}],["together",{"_index":1138,"title":{},"body":{"index.html":{}}}],["token",{"_index":392,"title":{},"body":{"interfaces/ILoginData.html":{},"miscellaneous/functions.html":{}}}],["tools",{"_index":1184,"title":{},"body":{"index.html":{}}}],["top",{"_index":662,"title":{},"body":{"classes/Rectangle.html":{}}}],["topleftradius",{"_index":293,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["toprightradius",{"_index":294,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["tort",{"_index":1282,"title":{},"body":{"license.html":{}}}],["transient",{"_index":500,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["tree",{"_index":284,"title":{},"body":{"classes/Controller.html":{}}}],["true",{"_index":56,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"classes/Rectangle.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":300,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"classes/Rectangle.html":{},"dependencies.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/AddParams.html":{},"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"interfaces/ILoginData.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1290,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":42,"title":{},"body":{"interfaces/AddParams.html":{},"classes/GeometryMixin.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{}}}],["types/color",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["types/shape",{"_index":649,"title":{},"body":{"classes/Rectangle.html":{}}}],["typography",{"_index":1104,"title":{},"body":{"dependencies.html":{}}}],["ui/components/navigation/navigation",{"_index":131,"title":{},"body":{"classes/App.html":{}}}],["ui/components/property/proterty.svelte",{"_index":138,"title":{},"body":{"classes/App.html":{}}}],["ui/components/resource/resource.svelte",{"_index":136,"title":{},"body":{"classes/App.html":{}}}],["ui/components/status/status",{"_index":134,"title":{},"body":{"classes/App.html":{}}}],["unactiveexpand",{"_index":737,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["unauthenticated",{"_index":54,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":905,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1149,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":460,"title":{},"body":{"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{}}}],["update",{"_index":1200,"title":{},"body":{"index.html":{}}}],["updatemode",{"_index":193,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updatemode(type",{"_index":201,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updaterect",{"_index":627,"title":{},"body":{"classes/Rectangle.html":{}}}],["url",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlfor",{"_index":368,"title":{},"body":{"interfaces/ILoginData.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["urlfor(route",{"_index":709,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/functions.html":{}}}],["urql/exchange",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["urql/svelte",{"_index":18,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"dependencies.html":{}}}],["use",{"_index":389,"title":{},"body":{"interfaces/ILoginData.html":{},"classes/Rectangle.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":1158,"title":{},"body":{"index.html":{}}}],["user",{"_index":23,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"index.html":{}}}],["username",{"_index":367,"title":{},"body":{"interfaces/ILoginData.html":{}}}],["using",{"_index":1203,"title":{},"body":{"index.html":{}}}],["utils",{"_index":1178,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":1044,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":707,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["value",{"_index":94,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/GeometryMixin.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/Rectangle.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/classBuilder.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":999,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1293,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":762,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["version",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":809,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["very",{"_index":1162,"title":{},"body":{"index.html":{}}}],["view",{"_index":269,"title":{"classes/View.html":{}},"body":{"classes/Controller.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["view.clone",{"_index":976,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.module",{"_index":967,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.module.serialize",{"_index":978,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.parentnode",{"_index":973,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.parentnode.removechild(view",{"_index":974,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.setcontent(module.view",{"_index":966,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view:13",{"_index":593,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["view:17",{"_index":596,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["view:4",{"_index":569,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["view:8",{"_index":600,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["viewdidappear",{"_index":270,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewdiddisappear",{"_index":271,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewwillappear",{"_index":272,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewwilldisappear",{"_index":273,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["vite",{"_index":1157,"title":{},"body":{"index.html":{}}}],["void",{"_index":100,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/GeometryMixin.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{}}}],["w",{"_index":433,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["waitformerge",{"_index":551,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["waitformerge(direction",{"_index":590,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["waitformergeatitem",{"_index":418,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["warranties",{"_index":1268,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1264,"title":{},"body":{"license.html":{}}}],["wasm",{"_index":262,"title":{},"body":{"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/Rectangle.html":{},"dependencies.html":{}}}],["wasm/canvas",{"_index":1049,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["wasm/context.ts",{"_index":249,"title":{},"body":{"classes/Context.html":{},"coverage.html":{}}}],["wasm/context.ts:13",{"_index":261,"title":{},"body":{"classes/Context.html":{}}}],["wasm/context.ts:17",{"_index":260,"title":{},"body":{"classes/Context.html":{}}}],["wasm/context.ts:4",{"_index":258,"title":{},"body":{"classes/Context.html":{}}}],["wasm/context.ts:5",{"_index":259,"title":{},"body":{"classes/Context.html":{}}}],["wasm/context.ts:6",{"_index":257,"title":{},"body":{"classes/Context.html":{}}}],["wasm/mixin/base.ts",{"_index":211,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["wasm/mixin/base.ts:4",{"_index":213,"title":{},"body":{"classes/Base.html":{}}}],["wasm/mixin/corner.ts",{"_index":288,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{}}}],["wasm/mixin/corner.ts:10",{"_index":676,"title":{},"body":{"classes/RectangleCornerMixin.html":{}}}],["wasm/mixin/corner.ts:3",{"_index":291,"title":{},"body":{"classes/CornerMixin.html":{}}}],["wasm/mixin/corner.ts:7",{"_index":677,"title":{},"body":{"classes/RectangleCornerMixin.html":{}}}],["wasm/mixin/corner.ts:8",{"_index":678,"title":{},"body":{"classes/RectangleCornerMixin.html":{}}}],["wasm/mixin/corner.ts:9",{"_index":675,"title":{},"body":{"classes/RectangleCornerMixin.html":{}}}],["wasm/mixin/geometry.ts",{"_index":309,"title":{},"body":{"classes/GeometryMixin.html":{},"coverage.html":{}}}],["wasm/mixin/geometry.ts:10",{"_index":324,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:11",{"_index":323,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:18",{"_index":330,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:23",{"_index":332,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:32",{"_index":334,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:36",{"_index":336,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:7",{"_index":319,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:8",{"_index":325,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:9",{"_index":326,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/layout.ts",{"_index":441,"title":{},"body":{"classes/LayoutMixin.html":{},"coverage.html":{}}}],["wasm/mixin/layout.ts:2",{"_index":444,"title":{},"body":{"classes/LayoutMixin.html":{}}}],["wasm/mixin/layout.ts:3",{"_index":445,"title":{},"body":{"classes/LayoutMixin.html":{}}}],["wasm/mixin/shape.ts",{"_index":298,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"coverage.html":{}}}],["wasm/rectangle.ts",{"_index":622,"title":{},"body":{"classes/Rectangle.html":{},"coverage.html":{}}}],["wasm/rectangle.ts:10",{"_index":631,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:11",{"_index":630,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:18",{"_index":638,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:22",{"_index":640,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:27",{"_index":642,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:31",{"_index":644,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:36",{"_index":646,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:40",{"_index":648,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:45",{"_index":636,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:54",{"_index":635,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:8",{"_index":634,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:9",{"_index":633,"title":{},"body":{"classes/Rectangle.html":{}}}],["web",{"_index":1186,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["webpreferences",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":903,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["weightmap",{"_index":896,"title":{"interfaces/WeightMap.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["whether",{"_index":1280,"title":{},"body":{"license.html":{}}}],["width",{"_index":447,"title":{},"body":{"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"miscellaneous/variables.html":{}}}],["width(width",{"_index":654,"title":{},"body":{"classes/Rectangle.html":{}}}],["wiki",{"_index":1224,"title":{},"body":{"index.html":{}}}],["willautherror",{"_index":55,"title":{},"body":{"interfaces/AddParams.html":{},"interfaces/GetParams.html":{},"interfaces/IAuthState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["willautherror(undefined",{"_index":1121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["windows",{"_index":1198,"title":{},"body":{"index.html":{}}}],["without",{"_index":1241,"title":{},"body":{"license.html":{}}}],["work",{"_index":1140,"title":{},"body":{"index.html":{}}}],["workbench",{"_index":154,"title":{"classes/Workbench.html":{}},"body":{"classes/App.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["workbench.viewdidappear",{"_index":160,"title":{},"body":{"classes/App.html":{}}}],["workbench.viewwillappear",{"_index":158,"title":{},"body":{"classes/App.html":{}}}],["workbench/desktop/app.config.json",{"_index":140,"title":{},"body":{"classes/App.html":{}}}],["workbench/desktop/index.html",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workbenchprops",{"_index":932,"title":{"interfaces/WorkbenchProps.html":{}},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["works",{"_index":1153,"title":{},"body":{"index.html":{}}}],["x",{"_index":442,"title":{},"body":{"classes/LayoutMixin.html":{}}}],["xl",{"_index":858,"title":{},"body":{"classes/SplitItemView.html":{}}}],["y",{"_index":443,"title":{},"body":{"classes/LayoutMixin.html":{}}}],["yes",{"_index":236,"title":{},"body":{"classes/ColorRef.html":{},"classes/View.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddParams.html":{"url":"interfaces/AddParams.html","title":"interface - AddParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/resource-explorer/auth/exchange/auth.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            authState\n                                        \n                                \n                                \n                                        \n                                            operation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authState:         IAuthState | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAuthState | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operation:     Operation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Operation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { makeOperation } from '@urql/svelte';\nimport type { Operation, CombinedError, OperationType, OperationContext } from '@urql/svelte';\nimport { logout } from '../user';\n\ninterface IAuthState {\n  accessToken?: string;\n}\n\ninterface AddParams {\n  authState: IAuthState | null;\n  operation: Operation;\n}\n\ninterface GetParams {\n  authState: IAuthState | null;\n  operation?: Operation | null;\n}\n\nexport function addAuthToOperation(params: AddParams) {\n  const { authState, operation } = params || {};\n  const fetchOptions = operation?.context?.fetchOptions;\n  if (!authState || !authState.accessToken) {\n    return operation;\n  }\n  if (!operation) {\n\n    throw Error('runtime error');\n  }\n  const { kind, context } = operation;\n  if (!kind || !context) {\n\n    throw Error('runtime error');\n  }\n\n  const options = typeof fetchOptions === 'function' ? fetchOptions() : fetchOptions || {};\n\n  return makeOperation(kind as OperationType, operation, {\n    ...context,\n    fetchOptions: {\n      ...options,\n      headers: {\n        ...options.headers,\n        Authorization: `Bearer ${authState.accessToken}`,\n      },\n    },\n  } as OperationContext);\n}\n\nexport async function getAuth(params: GetParams) {\n  const { authState } = params;\n  if (!authState) {\n    const accessToken = localStorage.getItem('accessToken');\n    if (accessToken) {\n      return { accessToken };\n    }\n    // logout();\n    // return null;\n  }\n  logout();\n  return null;\n}\n\nexport const didAuthError = ({ error }: { error: CombinedError }) => {\n  return error.graphQLErrors.some(e => e.extensions?.code === 'UNAUTHENTICATED');\n};\n\nexport function willAuthError({ authState }: GetParams) {\n  if (!authState || !authState.accessToken) {\n    return true;\n  }\n  // TODO: check expires\n  return false;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/App.html":{"url":"classes/App.html","title":"class - App","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/app.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                context\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bootstrap\n                            \n                            \n                                initFrame\n                            \n                            \n                                initMenus\n                            \n                            \n                                    Async\n                                initModules\n                            \n                            \n                                initNavigationBar\n                            \n                            \n                                initPreferences\n                            \n                            \n                                initPropertyPanel\n                            \n                            \n                                initResourcePanel\n                            \n                            \n                                initStatusBar\n                            \n                            \n                                initStyle\n                            \n                            \n                                initStyleMode\n                            \n                            \n                                initWorkArea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/app.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Container\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        bootstrap\n                        \n                    \n                \n            \n            \n                \n                    \n                    bootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFrame\n                        \n                    \n                \n            \n            \n                \ninitFrame()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initMenus\n                        \n                    \n                \n            \n            \n                \ninitMenus()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initModules\n                        \n                    \n                \n            \n            \n                \n                    \n                    initModules()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNavigationBar\n                        \n                    \n                \n            \n            \n                \ninitNavigationBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPreferences\n                        \n                    \n                \n            \n            \n                \ninitPreferences()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPropertyPanel\n                        \n                    \n                \n            \n            \n                \ninitPropertyPanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initResourcePanel\n                        \n                    \n                \n            \n            \n                \ninitResourcePanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStatusBar\n                        \n                    \n                \n            \n            \n                \ninitStatusBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyle\n                        \n                    \n                \n            \n            \n                \ninitStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyleMode\n                        \n                    \n                \n            \n            \n                \ninitStyleMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initWorkArea\n                        \n                    \n                \n            \n            \n                \ninitWorkArea()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Container } from 'inversify';\nimport { AppearanceType } from '@cosmic/core/common';\nimport { ModuleFactory } from '@cosmic/core/parts';\nimport { Controller } from '@cosmic/core/browser';\nimport { AppearanceService } from '@cosmic/workbench/services/appearance-service';\n// import { MenuGroupService } from '@cosmic/workbench/services/menu-group-service';\n// import { applicationMenus } from './base-menu/config';\nimport Navigation from '../ui/components/navigation/navigation-bar.svelte';\nimport StatusBar from '../ui/components/status/status-bar.svelte';\nimport ResourcePage from '../ui/components/resource/resource.svelte';\nimport PropertyPanel from '../ui/components/property/proterty.svelte';\n\nimport config from 'workbench/desktop/app.config.json';\n\nexport default class App {\n  private container: Container;\n  private context = new Map();\n  constructor(private root: HTMLElement) {\n    this.container = new Container({ defaultScope: 'Singleton' });\n    this.context.set('container', this.container);\n    this.initPreferences();\n    this.initStyle();\n  }\n  async bootstrap() {\n    // this.initNavigationBar();\n    // this.initStatusBar();\n    await this.initModules();\n  }\n\n  async initModules() {\n    const moduleFactory = new ModuleFactory(this.container);\n    this.container.bind('ModuleFactory').toDynamicValue(() => moduleFactory);\n\n    const workbench = await moduleFactory.load(config.workbench.id, config.workbench);\n    if (workbench instanceof Controller) {\n      workbench.viewWillAppear();\n      this.root.appendChild(workbench.view());\n      workbench.viewDidAppear();\n    }\n  }\n\n  initPreferences() {\n    this.container.bind(AppearanceService).to(AppearanceService);\n    // this.container.bind(MenuGroupService).to(MenuGroupService);\n  }\n\n  initStyle() {\n    const aps = this.container.get(AppearanceService);\n    aps.onModeChanged((type: AppearanceType) => this.initStyleMode(type));\n    this.initStyleMode(AppearanceType.dark);\n  }\n  initStyleMode(type: AppearanceType): void {\n    if (type === AppearanceType.dark) {\n      document.body.classList.add('mode-dark');\n    } else {\n      document.body.classList.remove('mode-dark');\n    }\n  }\n\n  initFrame(): void {\n    // to do sth.\n  }\n\n  initNavigationBar(): void {\n    // to do sth.\n    const navigationBar = new Navigation({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    this.initMenus();\n  }\n\n  initMenus(): void {\n    // const header = document.querySelector('#main-header');\n    // const groupMenu = this.container.get(MenuGroupService);\n    // groupMenu.initContainer(header as HTMLElement);\n    // for (const menu of applicationMenus) {\n    //   groupMenu.getMenuInsatance().init(menu.title, menu.items);\n    // }\n  }\n\n  initResourcePanel(container: HTMLElement): void {\n    new ResourcePage({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initPropertyPanel(container: HTMLElement): void {\n    new PropertyPanel({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initWorkArea(): void {\n    // to do sth.\n  }\n\n  initStatusBar(): void {\n    new StatusBar({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    // to do sth.\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppearanceService.html":{"url":"classes/AppearanceService.html","title":"class - AppearanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppearanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/appearance-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Private\n                                evt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onModeChanged\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                updateMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppearanceType\n\n                    \n                \n                \n                    \n                        Default value : AppearanceType.dark\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        evt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter2()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onModeChanged\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModeChanged(fn: (type: AppearanceType) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        type\n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject, ContainerModule } from 'inversify';\nimport { EventEmitter2 } from 'eventemitter2';\n\nimport { AppearanceType } from '@cosmic/core/common';\n\n@injectable()\n/** 外观设置服务 */\nexport class AppearanceService {\n  private _type: AppearanceType = AppearanceType.dark;\n  private evt = new EventEmitter2();\n\n  public updateMode(type: AppearanceType) {\n    if (this._type !== type) {\n      this._type = type;\n      this.evt.emit('onModeChanged', type);\n    }\n  }\n  public onModeChanged(fn: (type: AppearanceType) => void) {\n    this.evt.on('onModeChanged', fn);\n  }\n  public type() {\n    return this._type;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/base.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                context\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Context\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/base.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { Context } from '../context';\n\nexport abstract class Base {\n  protected context: Context;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseMenu.html":{"url":"classes/BaseMenu.html","title":"class - BaseMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-group/base-menu.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class BaseMenu {\n  // private menuInstance!: Menu;\n  // constructor(private groupMenuService: MenuGroupService) {}\n  // public initMenu(menuItems: MenuItemConfig[]): void {\n  //   this.menuInstance = this.groupMenuService.getMenuInsatance();\n  //   this.menuInstance.init('文件', menuItems);\n  // }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColorRef.html":{"url":"classes/ColorRef.html","title":"class - ColorRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColorRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/common/color-ref.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                anyColor\n                            \n                            \n                                    Private\n                                darkColor\n                            \n                            \n                                    Private\n                                lightColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                color\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(anyColor: Color, lightColor?: Color, darkColor?: Color)\n                    \n                \n                        \n                            \n                                Defined in src/core/common/color-ref.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        anyColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lightColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        darkColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        anyColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        darkColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lightColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        color\n                        \n                    \n                \n            \n            \n                \n                    \n                    color(appearanceType: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/common/color-ref.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appearanceType\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type * as Color from 'color';\nimport { AppearanceType } from './appearance';\n\nexport default class ColorRef {\n  private anyColor: Color;\n  private lightColor: Color;\n  private darkColor: Color;\n\n  constructor(anyColor: Color, lightColor?: Color, darkColor?: Color) {\n    this.anyColor = anyColor;\n    this.lightColor = lightColor || anyColor;\n    this.darkColor = darkColor || anyColor;\n  }\n\n  public color(appearanceType: AppearanceType) {\n    switch (appearanceType) {\n      case AppearanceType.any:\n        return this.anyColor;\n      case AppearanceType.light:\n        return this.lightColor;\n      case AppearanceType.dark:\n        return this.darkColor;\n      default:\n        return this.anyColor;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Context.html":{"url":"classes/Context.html","title":"class - Context","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Context\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/context.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canvas\n                            \n                            \n                                    Public\n                                ck\n                            \n                            \n                                    Private\n                                surface\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                draw\n                            \n                            \n                                getCanvas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ck: CanvasKit, surface: Surface)\n                    \n                \n                        \n                            \n                                Defined in src/modules/draw-canvas/skia-wasm/context.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ck\n                                                  \n                                                        \n                                                                    CanvasKit\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        surface\n                                                  \n                                                        \n                                                                    Surface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Canvas\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/context.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ck\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanvasKit\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/context.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        surface\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Surface\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/context.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        draw\n                        \n                    \n                \n            \n            \n                \ndraw()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/draw-canvas/skia-wasm/context.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCanvas\n                        \n                    \n                \n            \n            \n                \ngetCanvas()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/draw-canvas/skia-wasm/context.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Canvas\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Canvas, Surface, CanvasKit } from 'canvaskit-wasm';\n\nexport class Context {\n  private canvas: Canvas;\n  private surface: Surface;\n  public ck: CanvasKit;\n  constructor(ck: CanvasKit, surface: Surface) {\n    this.ck = ck;\n    this.surface = surface;\n    this.canvas = this.surface.getCanvas();\n  }\n\n  getCanvas(): Canvas {\n    return this.canvas;\n  }\n\n  draw(): void {\n    this.surface.flush();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Controller.html":{"url":"classes/Controller.html","title":"class - Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Controller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                view\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\n\n@injectable()\nexport abstract class Controller {\n  abstract view(): HTMLElement;\n\n  viewWillAppear() {\n    /** going to render, appending element to dom tree  */\n  }\n  viewDidAppear() {\n    /** after appeared */\n  }\n\n  viewWillDisappear() {\n    /** going to disappear */\n  }\n  viewDidDisappear() {\n    /** going to disappear */\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CornerMixin.html":{"url":"classes/CornerMixin.html","title":"class - CornerMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CornerMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/corner.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cornerRadius\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cornerRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CornerMixin {\n  cornerRadius: number;\n}\n\nexport class RectangleCornerMixin {\n  topLeftRadius: number;\n  topRightRadius: number;\n  bottomLeftRadius: number;\n  bottomRightRadius: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultShapeMixin.html":{"url":"classes/DefaultShapeMixin.html","title":"class - DefaultShapeMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultShapeMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/shape.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Mixin } from 'ts-mixer';\nimport { CornerMixin, RectangleCornerMixin } from './corner';\nimport { LayoutMixin } from './layout';\nimport { GeometryMixin } from './geometry';\n\nexport class DefaultShapeMixin extends Mixin(CornerMixin, RectangleCornerMixin, LayoutMixin, GeometryMixin) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeometryMixin.html":{"url":"classes/GeometryMixin.html","title":"class - GeometryMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeometryMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/geometry.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fills\n                            \n                            \n                                strokeAlign\n                            \n                            \n                                strokeMiterLimit\n                            \n                            \n                                strokes\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                    Protected\n                                context\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    background\n                                \n                                \n                                    border\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Paint[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strokeAlign\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"CENTER\" | \"INSIDE\" | \"OUTSIDE\"\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strokeMiterLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strokes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Paint[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strokeWeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Context\n\n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n\n                \n                    \n                        getbackground()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:18\n                                \n                            \n\n                \n                    \n                        setbackground(background: string)\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            background\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        border\n                    \n                \n\n                \n                    \n                        getborder()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:32\n                                \n                            \n\n                \n                    \n                        setborder(border: string)\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            border\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import type { Paint } from 'canvaskit-wasm';\nimport { Base } from './base';\n\n// TODO: fills and stroke support array\nexport class GeometryMixin extends Base {\n  // TODO 确认完更新策略好设置正确的类型\n  fills: Paint[] = [];\n  strokes: Paint[] = [];\n  strokeWeight: number;\n  strokeMiterLimit: number;\n  strokeAlign: 'CENTER' | 'INSIDE' | 'OUTSIDE';\n  // strokeCap: StrokeCap | PluginAPI['mixed']\n  // strokeJoin: StrokeJoin | PluginAPI['mixed']\n  // dashPattern: ReadonlyArray\n  // fillStyleId: string | PluginAPI['mixed']\n  // strokeStyleId: string\n\n  get background(): string {\n    return this.fills.toString();\n  }\n\n  // TODO: support more typeof background\n  set background(background: string) {\n    const paint = new this.context.ck.Paint();\n    const color = this.context.ck.parseColorString(background);\n    paint.setColor(color);\n    paint.setStyle(this.context.ck.PaintStyle.Fill);\n    paint.setAntiAlias(true);\n    this.fills.push(paint);\n  }\n\n  get border(): string {\n    return this.strokes.toString();\n  }\n\n  set border(border: string) {\n    const { ck } = this.context;\n    const paint = new ck.Paint();\n    paint.setStyle(ck.PaintStyle.Stroke);\n    paint.setStrokeWidth(20);\n    paint.setColor(ck.parseColorString('#ee0033'));\n    paint.setAntiAlias(true);\n    this.strokes.push(paint);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetParams.html":{"url":"interfaces/GetParams.html","title":"interface - GetParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/resource-explorer/auth/exchange/auth.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            authState\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            operation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authState:         IAuthState | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAuthState | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operation:     Operation | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Operation | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { makeOperation } from '@urql/svelte';\nimport type { Operation, CombinedError, OperationType, OperationContext } from '@urql/svelte';\nimport { logout } from '../user';\n\ninterface IAuthState {\n  accessToken?: string;\n}\n\ninterface AddParams {\n  authState: IAuthState | null;\n  operation: Operation;\n}\n\ninterface GetParams {\n  authState: IAuthState | null;\n  operation?: Operation | null;\n}\n\nexport function addAuthToOperation(params: AddParams) {\n  const { authState, operation } = params || {};\n  const fetchOptions = operation?.context?.fetchOptions;\n  if (!authState || !authState.accessToken) {\n    return operation;\n  }\n  if (!operation) {\n\n    throw Error('runtime error');\n  }\n  const { kind, context } = operation;\n  if (!kind || !context) {\n\n    throw Error('runtime error');\n  }\n\n  const options = typeof fetchOptions === 'function' ? fetchOptions() : fetchOptions || {};\n\n  return makeOperation(kind as OperationType, operation, {\n    ...context,\n    fetchOptions: {\n      ...options,\n      headers: {\n        ...options.headers,\n        Authorization: `Bearer ${authState.accessToken}`,\n      },\n    },\n  } as OperationContext);\n}\n\nexport async function getAuth(params: GetParams) {\n  const { authState } = params;\n  if (!authState) {\n    const accessToken = localStorage.getItem('accessToken');\n    if (accessToken) {\n      return { accessToken };\n    }\n    // logout();\n    // return null;\n  }\n  logout();\n  return null;\n}\n\nexport const didAuthError = ({ error }: { error: CombinedError }) => {\n  return error.graphQLErrors.some(e => e.extensions?.code === 'UNAUTHENTICATED');\n};\n\nexport function willAuthError({ authState }: GetParams) {\n  if (!authState || !authState.accessToken) {\n    return true;\n  }\n  // TODO: check expires\n  return false;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthState.html":{"url":"interfaces/IAuthState.html","title":"interface - IAuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/resource-explorer/auth/exchange/auth.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            accessToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { makeOperation } from '@urql/svelte';\nimport type { Operation, CombinedError, OperationType, OperationContext } from '@urql/svelte';\nimport { logout } from '../user';\n\ninterface IAuthState {\n  accessToken?: string;\n}\n\ninterface AddParams {\n  authState: IAuthState | null;\n  operation: Operation;\n}\n\ninterface GetParams {\n  authState: IAuthState | null;\n  operation?: Operation | null;\n}\n\nexport function addAuthToOperation(params: AddParams) {\n  const { authState, operation } = params || {};\n  const fetchOptions = operation?.context?.fetchOptions;\n  if (!authState || !authState.accessToken) {\n    return operation;\n  }\n  if (!operation) {\n\n    throw Error('runtime error');\n  }\n  const { kind, context } = operation;\n  if (!kind || !context) {\n\n    throw Error('runtime error');\n  }\n\n  const options = typeof fetchOptions === 'function' ? fetchOptions() : fetchOptions || {};\n\n  return makeOperation(kind as OperationType, operation, {\n    ...context,\n    fetchOptions: {\n      ...options,\n      headers: {\n        ...options.headers,\n        Authorization: `Bearer ${authState.accessToken}`,\n      },\n    },\n  } as OperationContext);\n}\n\nexport async function getAuth(params: GetParams) {\n  const { authState } = params;\n  if (!authState) {\n    const accessToken = localStorage.getItem('accessToken');\n    if (accessToken) {\n      return { accessToken };\n    }\n    // logout();\n    // return null;\n  }\n  logout();\n  return null;\n}\n\nexport const didAuthError = ({ error }: { error: CombinedError }) => {\n  return error.graphQLErrors.some(e => e.extensions?.code === 'UNAUTHENTICATED');\n};\n\nexport function willAuthError({ authState }: GetParams) {\n  if (!authState || !authState.accessToken) {\n    return true;\n  }\n  // TODO: check expires\n  return false;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILoginData.html":{"url":"interfaces/ILoginData.html","title":"interface - ILoginData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILoginData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/resource-explorer/auth/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { urlFor, ROUTES } from '../routes';\nimport { push } from 'svelte-spa-router';\nimport axios from 'axios';\n\ninterface ILoginData {\n  username: string;\n  password: string;\n}\n\nexport function login({ username, password }: ILoginData) {\n  if (!username || !password) {\n    return Promise.reject('invalid params');\n  }\n  return axios.post('http://sefe-d2r.bcc-bdbl.baidu.com:8280/auth/login', {\n      // TODO: password security, this is only a demo\n      username, password,\n    }, {\n      headers: {\n        'Content-Type': 'application/json',\n    }})\n    .then(res => {\n      if (res && res.data && res.data.accessToken) {\n        localStorage.setItem('accessToken', res.data.accessToken);\n      }\n      else {\n        // TODO: use error code\n        throw new Error('no token');\n      }\n    });\n}\n\nexport function logout() {\n  localStorage.clear();\n  push(urlFor(ROUTES.LOGIN));\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISettings.html":{"url":"interfaces/ISettings.html","title":"interface - ISettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/settings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            check\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import ElectronStore from 'electron-store';\n\ninterface ISettings {\n  check: boolean;\n}\n\n/**\n * @deprecated — Cause bundle error: Cannot find module 'ajv/dist/compile/codegen'\n */\nconst settings = new ElectronStore({\n  defaults: {\n    check: false,\n  },\n});\n\nexport default settings;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISplitBoardView.html":{"url":"interfaces/ISplitBoardView.html","title":"interface - ISplitBoardView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISplitBoardView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/type.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cancelForMerge\n                                        \n                                \n                                \n                                        \n                                            direction\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            resizeAt\n                                        \n                                \n                                \n                                        \n                                            setCursor\n                                        \n                                \n                                \n                                        \n                                            splitColumnAt\n                                        \n                                \n                                \n                                        \n                                            splitRowAt\n                                        \n                                \n                                \n                                        \n                                            waitForMergeAtItem\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancelForMerge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelForMerge:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:         directionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         directionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     SplitItemView[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SplitItemView[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizeAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resizeAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setCursor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setCursor:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitColumnAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitColumnAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitRowAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitRowAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        waitForMergeAtItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        waitForMergeAtItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type View from '../view';\nimport type SplitItemView from './split-item.view';\n\nexport enum directionType {\n  'col',\n  'row',\n}\n\nexport interface ItemGenerateDelegate {\n  expandNewItem: (oldItem: T, index: number) => T;\n}\n\nexport interface ISplitBoardView extends View {\n  items: SplitItemView[];\n  direction: directionType;\n  setCursor: (\n    type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize'\n  ) => void;\n  cancelForMerge: () => void;\n  resizeAt: (index: number, start: number, length: number, position: number) => void;\n  waitForMergeAtItem: (index: number, direction: 'w' | 'e' | 'n' | 's') => void;\n  splitColumnAt: (index: number, clientX: number, clientY: number) => void;\n  splitRowAt: (index: number, clientX: number, clientY: number) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemGenerateDelegate.html":{"url":"interfaces/ItemGenerateDelegate.html","title":"interface - ItemGenerateDelegate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ItemGenerateDelegate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/type.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expandNewItem\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expandNewItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expandNewItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type View from '../view';\nimport type SplitItemView from './split-item.view';\n\nexport enum directionType {\n  'col',\n  'row',\n}\n\nexport interface ItemGenerateDelegate {\n  expandNewItem: (oldItem: T, index: number) => T;\n}\n\nexport interface ISplitBoardView extends View {\n  items: SplitItemView[];\n  direction: directionType;\n  setCursor: (\n    type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize'\n  ) => void;\n  cancelForMerge: () => void;\n  resizeAt: (index: number, start: number, length: number, position: number) => void;\n  waitForMergeAtItem: (index: number, direction: 'w' | 'e' | 'n' | 's') => void;\n  splitColumnAt: (index: number, clientX: number, clientY: number) => void;\n  splitRowAt: (index: number, clientX: number, clientY: number) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LayoutMixin.html":{"url":"classes/LayoutMixin.html","title":"class - LayoutMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LayoutMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/layout.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/layout.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/layout.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LayoutMixin {\n  x: number;\n  y: number;\n  /** TODO: should it be readonly? */\n  // width: number\n  // height: number\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuBar.html":{"url":"classes/MenuBar.html","title":"class - MenuBar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuBar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-group/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Controller\n            \n\n            \n                Implements\n            \n            \n                            Module\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                serialize\n                            \n                            \n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-group/index.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuProps\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-group/index.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-group/index.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: MenuProps)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-group/index.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                MenuProps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-group/index.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { title: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n            \n                \nview()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\n// import { Menu } from './menu';\n\ninterface MenuProps {\n  title: string;\n}\n\n@injectable()\nexport default class MenuBar extends Controller implements Module {\n  props: MenuProps;\n  // private meuns!: Menu[];\n  private _view: HTMLElement;\n  view() {\n    return this._view;\n  }\n  public async init(props: MenuProps) {\n    this._view = document.createElement('div');\n    return this;\n  }\n  viewWillAppear() {\n    // const id = Date.now() + '' + this.meuns.length;\n    // const menu = new Menu(this._view, id);\n    // this.meuns.push(menu);\n  }\n  serialize() {\n    return { title: '' };\n  }\n  async destroy() {\n    return this;\n  }\n  // remove(menu: Menu) {\n  //   this._view.removeChild(menu.container);\n  //   this.meuns = this.meuns.filter((item) => item.id === menu.id);\n  // }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuProps.html":{"url":"interfaces/MenuProps.html","title":"interface - MenuProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-group/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\n// import { Menu } from './menu';\n\ninterface MenuProps {\n  title: string;\n}\n\n@injectable()\nexport default class MenuBar extends Controller implements Module {\n  props: MenuProps;\n  // private meuns!: Menu[];\n  private _view: HTMLElement;\n  view() {\n    return this._view;\n  }\n  public async init(props: MenuProps) {\n    this._view = document.createElement('div');\n    return this;\n  }\n  viewWillAppear() {\n    // const id = Date.now() + '' + this.meuns.length;\n    // const menu = new Menu(this._view, id);\n    // this.meuns.push(menu);\n  }\n  serialize() {\n    return { title: '' };\n  }\n  async destroy() {\n    return this;\n  }\n  // remove(menu: Menu) {\n  //   this._view.removeChild(menu.container);\n  //   this.meuns = this.meuns.filter((item) => item.id === menu.id);\n  // }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Module.html":{"url":"interfaces/Module.html","title":"interface - Module","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Module\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destroy\n                                        \n                                \n                                \n                                        \n                                            init\n                                        \n                                \n                                \n                                        \n                                            props\n                                        \n                                \n                                \n                                        \n                                            serialize\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destroy:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        init\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        init:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    loading resoures\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        props\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        props:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serialize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serialize:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    to Options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Module {\n  props: T;\n  /** loading resoures */\n  init: (props: T) => Promise>;\n\n  /** to Options */\n  serialize: () => T;\n\n  destroy: () => Promise>;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModuleConfig.html":{"url":"interfaces/ModuleConfig.html","title":"interface - ModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module-factory.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Module } from './module';\nimport { injectable } from 'inversify';\nimport type { Container } from 'inversify';\n\nexport interface ModuleConfig {\n  id: string;\n}\n\n@injectable()\n/** Provides the ability to cache and run ES Modules */\nexport class ModuleFactory {\n  constructor(private container: Container) {}\n  private modules: Map Module> = new Map();\n  add(moduleId: string, module: new () => Module, scope: 'Singleton' | 'Transient' | 'Request' = 'Transient') {\n    if (this.exist(moduleId)) return;\n    this.modules.set(moduleId, module);\n    const m = this.container.bind(moduleId).to(module);\n    switch (scope) {\n      case 'Singleton':\n        m.inSingletonScope();\n        break;\n      case 'Transient':\n        m.inTransientScope();\n        break;\n      case 'Request':\n        m.inRequestScope();\n        break;\n    }\n  }\n  get(moduleId: string) {\n    return this.modules.get(moduleId);\n  }\n  exist(moduleId: string) {\n    return this.modules.has(moduleId);\n  }\n  async load(moduleId: string, props: any) {\n    if (!this.exist(moduleId)) {\n      await import(moduleId).then((ModuleSource) => {\n        this.add(moduleId, ModuleSource.default, props.scope || 'Transient');\n      });\n    }\n    const module = this.container.get(moduleId) as Module;\n    await module.init(props);\n    return module;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModuleFactory.html":{"url":"classes/ModuleFactory.html","title":"class - ModuleFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModuleFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                modules\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                exist\n                            \n                            \n                                get\n                            \n                            \n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: Container)\n                    \n                \n                        \n                            \n                                Defined in src/core/parts/modules/module-factory.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    Container\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/module-factory.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(moduleId: string, module, scope: \"Singleton\" | \"Transient\" | \"Request\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    module\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    scope\n                                    \n                                            \"Singleton\" | \"Transient\" | \"Request\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Transient'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exist\n                        \n                    \n                \n            \n            \n                \nexist(moduleId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(moduleId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load(moduleId: string, props: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Module } from './module';\nimport { injectable } from 'inversify';\nimport type { Container } from 'inversify';\n\nexport interface ModuleConfig {\n  id: string;\n}\n\n@injectable()\n/** Provides the ability to cache and run ES Modules */\nexport class ModuleFactory {\n  constructor(private container: Container) {}\n  private modules: Map Module> = new Map();\n  add(moduleId: string, module: new () => Module, scope: 'Singleton' | 'Transient' | 'Request' = 'Transient') {\n    if (this.exist(moduleId)) return;\n    this.modules.set(moduleId, module);\n    const m = this.container.bind(moduleId).to(module);\n    switch (scope) {\n      case 'Singleton':\n        m.inSingletonScope();\n        break;\n      case 'Transient':\n        m.inTransientScope();\n        break;\n      case 'Request':\n        m.inRequestScope();\n        break;\n    }\n  }\n  get(moduleId: string) {\n    return this.modules.get(moduleId);\n  }\n  exist(moduleId: string) {\n    return this.modules.has(moduleId);\n  }\n  async load(moduleId: string, props: any) {\n    if (!this.exist(moduleId)) {\n      await import(moduleId).then((ModuleSource) => {\n        this.add(moduleId, ModuleSource.default, props.scope || 'Transient');\n      });\n    }\n    const module = this.container.get(moduleId) as Module;\n    await module.init(props);\n    return module;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModuleItem.html":{"url":"classes/ModuleItem.html","title":"class - ModuleItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModuleItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/module-item.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SplitItemView\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loader\n                            \n                            \n                                    Public\n                                module\n                            \n                            \n                                    Public\n                                moduleId\n                            \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clone\n                            \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Promise>\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/module-item.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Module\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/module-item.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        moduleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/module-item.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitExpand\n\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/module-item.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleItem\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:67\n\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:71\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SplitItemView } from '@cosmic/core/browser';\nimport type { Module } from '@cosmic/core/parts';\n\nexport class ModuleItem extends SplitItemView {\n  public loader: Promise>;\n  public moduleId: string;\n  public module: Module;\n  public clone() {\n    const item = new ModuleItem();\n    item.moduleId = this.moduleId;\n    return item;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyPanel.html":{"url":"classes/PropertyPanel.html","title":"class - PropertyPanel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyPanel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/property-panel/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvelteModule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                serialize\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SvelteModule } from '@cosmic/core/parts';\n\nexport default class PropertyPanel extends SvelteModule {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n  serialize() {\n    return {};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rectangle.html":{"url":"classes/Rectangle.html","title":"class - Rectangle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rectangle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/rectangle.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RectangleNode\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _height\n                            \n                            \n                                    Private\n                                _width\n                            \n                            \n                                    Private\n                                rect\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                draw\n                            \n                            \n                                    Private\n                                updateRect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                                \n                                    borderRaidus\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(context: Context)\n                    \n                \n                        \n                            \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        Context\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        rect\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Path\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RECTANGLE'\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        draw\n                        \n                    \n                \n            \n            \n                \ndraw()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateRect\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRect()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:18\n                                \n                            \n\n                \n                    \n                        setwidth(width: number)\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            width\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:27\n                                \n                            \n\n                \n                    \n                        setheight(height: number)\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            height\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        borderRaidus\n                    \n                \n\n                \n                    \n                        getborderRaidus()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:36\n                                \n                            \n\n                \n                    \n                        setborderRaidus(borderRaidus: number)\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            borderRaidus\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import type { RectangleNode } from '../types/shape';\nimport type { Path } from 'canvaskit-wasm';\nimport { Mixin } from 'ts-mixer';\nimport { DefaultShapeMixin } from './mixin/shape';\nimport type { Context } from './context';\n\nexport class Rectangle extends Mixin(DefaultShapeMixin) implements RectangleNode {\n  readonly type = 'RECTANGLE';\n  private rect: Path;\n  private _width: number;\n  private _height: number;\n\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  get width(): number {\n    return this._width;\n  }\n\n  set width(width: number) {\n    this._width = width;\n    this.updateRect();\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  set height(height: number) {\n    this._height = height;\n    this.updateRect();\n  }\n\n  get borderRaidus(): number {\n    return this.cornerRadius;\n  }\n\n  set borderRaidus(borderRaidus: number) {\n    this.cornerRadius = borderRaidus;\n    this.updateRect();\n  }\n\n  private updateRect() {\n    const left = this.x;\n    const top = this.y;\n    const right = this._width + this.x;\n    const bottom = this._height + this.y;\n    const rrect = this.context.ck.RRectXY([left, top, right, bottom], this.cornerRadius, this.cornerRadius);\n    this.rect = new this.context.ck.Path().addRRect(rrect, true);\n  }\n\n  draw(): void {\n    // TODO: use mixin to handle paint and stroke\n    // TODO: set default fills\n    this.context.getCanvas().drawPath(this.rect, this.fills[0]);\n    this.context.getCanvas().drawPath(this.rect, this.strokes[0]);\n    this.context.draw();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RectangleCornerMixin.html":{"url":"classes/RectangleCornerMixin.html","title":"class - RectangleCornerMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RectangleCornerMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/corner.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bottomLeftRadius\n                            \n                            \n                                bottomRightRadius\n                            \n                            \n                                topLeftRadius\n                            \n                            \n                                topRightRadius\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bottomLeftRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bottomRightRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topLeftRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topRightRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CornerMixin {\n  cornerRadius: number;\n}\n\nexport class RectangleCornerMixin {\n  topLeftRadius: number;\n  topRightRadius: number;\n  bottomLeftRadius: number;\n  bottomRightRadius: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceExplorer.html":{"url":"classes/ResourceExplorer.html","title":"class - ResourceExplorer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceExplorer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/resource-explorer/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvelteModule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                serialize\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SvelteModule } from '@cosmic/core/parts';\n\nexport default class ResourceExplorer extends SvelteModule {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n  serialize() {\n    return {};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoutesValue.html":{"url":"interfaces/RoutesValue.html","title":"interface - RoutesValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RoutesValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/resource-explorer/routes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            paramNames\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        paramNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paramNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum ROUTES {\n  INDEX,\n  TEAM_DETAIL,\n  PROJECT_DETAIL,\n  DESIGN_ATOM,\n  LOGIN,\n  DEFAULT\n}\n\ninterface RoutesValue {\n  path: string;\n  paramNames: string[];\n}\n\nconst ROUTES_CONFIG: { [key in ROUTES]: RoutesValue } = {\n  [ROUTES.DEFAULT]: {\n    path: '*',\n    paramNames: [],\n  },\n  [ROUTES.INDEX]: {\n    path: '',\n    paramNames: [],\n  },\n  [ROUTES.TEAM_DETAIL]: {\n    path: '/team',\n    paramNames: ['teamId'],\n  },\n  [ROUTES.PROJECT_DETAIL]: {\n    path: '/project',\n    paramNames: ['projectId'],\n  },\n  [ROUTES.DESIGN_ATOM]: {\n    path: '/design/atom',\n    paramNames: ['teamId'],\n  },\n  [ROUTES.LOGIN]: {\n    path: '/login',\n    paramNames: [],\n  },\n};\n\nexport function routeFor(route: ROUTES): string {\n  const { path, paramNames } = ROUTES_CONFIG[route];\n  const paramPath = paramNames.map((param: string) => `:${param}`).join('/');\n  return `${path}/${paramPath}`;\n}\n\n// TODO: validate params, recognize params\nexport function urlFor(route: ROUTES, params?: Record): string {\n  if (route === ROUTES.INDEX) {\n    return '/';\n  }\n  const { path, paramNames } = ROUTES_CONFIG[route];\n  if (paramNames.length === 0 || !params) {\n    return path;\n  }\n  const result = paramNames.map((paramName: string) => params[paramName] || paramName);\n  return `${path}/${result.join('/')}`;\n}\n\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShapeCanvas.html":{"url":"classes/ShapeCanvas.html","title":"class - ShapeCanvas","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShapeCanvas\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shape-canvas/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvelteModule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                serialize\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SvelteModule } from '@cosmic/core/parts';\n\nexport default class ShapeCanvas extends SvelteModule {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n  serialize() {\n    return {};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardController.html":{"url":"classes/SplitBoardController.html","title":"class - SplitBoardController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeId\n                            \n                            \n                                    Private\n                                expandActive\n                            \n                            \n                                    Private\n                                expandLeaveHandler\n                            \n                            \n                                    Private\n                                expandMouseUpHandler\n                            \n                            \n                                    Private\n                                expandMoveHandler\n                            \n                            \n                                    Private\n                                expandType\n                            \n                            \n                                    Private\n                                startX\n                            \n                            \n                                    Private\n                                startY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeExpand\n                            \n                            \n                                    Public\n                                checkExpandState\n                            \n                            \n                                    Private\n                                liveResize\n                            \n                            \n                                    Public\n                                onMouseDown\n                            \n                            \n                                    Public\n                                setActiveState\n                            \n                            \n                                    Private\n                                unactiveExpand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(view: ISplitBoardView)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        view\n                                                  \n                                                        \n                                                                        ISplitBoardView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandLeaveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMouseUpHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMoveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        activeExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    activeExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkExpandState\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkExpandState(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        liveResize\n                        \n                    \n                \n            \n            \n                \n                    \n                    liveResize(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onMouseDown\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseDown(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setActiveState\n                        \n                    \n                \n            \n            \n                \n                    \n                    setActiveState(index: number, startX: number, startY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        unactiveExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    unactiveExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { directionType } from './type';\nimport type { ISplitBoardView } from './type';\n\nexport default class SplitBoardController {\n  private expandMoveHandler!: (event: MouseEvent) => void;\n  private expandLeaveHandler!: (event: MouseEvent) => void;\n  private expandMouseUpHandler!: (event: MouseEvent) => void;\n\n  private startX = 0;\n  private startY = 0;\n  private activeId = -1;\n\n  private expandActive = false;\n  private expandType = 0; // 是否超过偏移值 0 / 1 expand hor | 2 expand ver | 3 merge hor | 4 merge ver\n\n  constructor(private view: ISplitBoardView) {\n    this.expandMoveHandler = (event: MouseEvent) => {\n      this.liveResize(event.clientX, event.clientY);\n      this.checkExpandState(event.clientX, event.clientY);\n    };\n    this.expandLeaveHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.expandMouseUpHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.view.root.addEventListener('mousedown', (event: MouseEvent) => {\n      this.onMouseDown(event);\n    });\n  }\n  public onMouseDown(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    let index = -1;\n    this.view.items.forEach((item, i) => {\n      if (target && item.root === target.parentElement && target.classList.contains('split-expand')) index = i;\n    });\n    if (index === -1) {\n      return;\n    }\n    if (index > -1) {\n      this.setActiveState(index, event.clientX, event.clientY);\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  public setActiveState(index: number, startX: number, startY: number) {\n    // 锚点mousedown\n    this.startX = startX;\n    this.startY = startY;\n    this.activeExpand();\n    this.activeId = index;\n  }\n  private activeExpand() {\n    this.view.root.addEventListener('mousemove', this.expandMoveHandler);\n    this.view.root.addEventListener('mouseleave', this.expandLeaveHandler);\n    this.view.root.addEventListener('mouseup', this.expandMouseUpHandler);\n    this.expandActive = true;\n    this.expandType = 0;\n    this.view.setCursor('crosshair');\n  }\n  private unactiveExpand() {\n    if (this.expandActive) {\n      this.view.root.removeEventListener('mousemove', this.expandMoveHandler);\n      this.view.root.removeEventListener('mouseleave', this.expandLeaveHandler);\n      this.view.root.removeEventListener('mouseup', this.expandMouseUpHandler);\n      this.view.cancelForMerge();\n      this.expandActive = false;\n      this.expandType = 0;\n      this.view.setCursor('');\n    }\n  }\n  private liveResize(clientX: number, clientY: number) {\n    const item = this.view.items[this.activeId];\n    if (this.expandType === 1 && this.view.direction === directionType.col) {\n      // horizontal expand column\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n    } else if (this.expandType === 2 && this.view.direction === directionType.row) {\n      // vertical expand row\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n    }\n  }\n  public checkExpandState(clientX: number, clientY: number) {\n    const offsetX = this.startX - clientX;\n    const offsetY = this.startY - clientY;\n    /** expand mode */\n    if (this.expandType === 0 && offsetX > 0 && offsetY > 0 && (offsetX > 5 || offsetY > 5)) {\n      if (offsetX > offsetY) {\n        this.view.setCursor('col-resize');\n      } else {\n        this.view.setCursor('row-resize');\n      }\n    }\n    /** merge mode */\n    if (offsetX  5) {\n      this.view.setCursor('w-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'w');\n      return;\n    }\n\n    if (offsetY  5) {\n      this.view.setCursor('n-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'n');\n      return;\n    }\n\n    if (this.expandType) return;\n    /** do expand */\n    if (offsetX > 30) {\n      this.expandType = 1;\n      this.view.setCursor('col-resize');\n      this.view.splitColumnAt(this.activeId, clientX, clientY);\n      return;\n    }\n    if (offsetY > 30) {\n      this.expandType = 2;\n      this.view.setCursor('row-resize');\n      this.view.splitRowAt(this.activeId, clientX, clientY);\n    }\n    if (\n      (this.expandType === 1 && this.view.direction === directionType.row) ||\n      (this.expandType === 2 && this.view.direction === directionType.col)\n    ) {\n      this.unactiveExpand();\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitItemView.html":{"url":"classes/SplitItemView.html","title":"class - SplitItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-item.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitExpand\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:67\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view';\nimport SplitExpand from './split-expand.svelte';\n\nenum directionStyles {\n  'w' = 'merge-w',\n  'e' = 'merge-e',\n  's' = 'merge-s',\n  'n' = 'merge-n',\n}\n\nexport default class SplitItemView extends View {\n  private _growClassName = '';\n  private _shrinkClassName = '';\n  private _bgColorClassName: string[] = ['bg-cgray-100', 'dark:bg-cgray-800'];\n\n  public contentView!: HTMLElement;\n  private expand!: SplitExpand;\n\n  constructor() {\n    super();\n    this.addExpandButton();\n    this.setDefaultClass();\n  }\n\n  public setContent(contentView: HTMLElement): SplitItemView {\n    this.contentView = contentView;\n    this.root.classList.add('split-item', 'flex');\n    contentView.classList.add('flex', 'flex-1', 'w-full');\n    return this.prepend(contentView);\n  }\n\n  public replaceContent(contentView: HTMLElement): SplitItemView {\n    this.root.replaceChild(contentView, this.contentView);\n    this.contentView = contentView;\n    contentView.classList.add('flex', 'flex-1');\n    return this;\n  }\n\n  public setGrow(className = 'flex-grow'): void {\n    this.root.classList.remove(this._shrinkClassName);\n    this._shrinkClassName = '';\n    this._growClassName = className;\n    this.root.classList.add(this._growClassName);\n  }\n\n  public setShrink(className = 'flex-shrink'): void {\n    this.root.classList.remove(this._growClassName);\n    this._growClassName = '';\n    this._shrinkClassName = className;\n    this.root.classList.add(this._shrinkClassName);\n  }\n\n  public isShrink(): boolean {\n    return !!this._growClassName;\n  }\n\n  private setDefaultClass() {\n    this.root.classList.add('flex-grow', 'rounded-xl');\n    this.root.classList.add('relative');\n    this.root.classList.add(...this._bgColorClassName);\n  }\n\n  private addExpandButton() {\n    this.expand = new SplitExpand({ target: this.root });\n  }\n  /** To hide expand button */\n  public hideExpandButton(): void {\n    this.expand.expandHidden = true;\n  }\n\n  public waitForMerge(direction: 'w' | 'e' | 's' | 'n'): void {\n    this.cancelWaitForMerge();\n    this.root.classList.add('wait-for-merge');\n    this.expand.mergeDirection = directionStyles[direction];\n  }\n\n  public cancelWaitForMerge(): void {\n    this.root.classList.remove('wait-for-merge');\n    this.expand.mergeDirection = '';\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SvelteModule.html":{"url":"classes/SvelteModule.html","title":"class - SvelteModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SvelteModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/svelte-module.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Controller\n            \n\n            \n                Implements\n            \n            \n                            Module\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Abstract\n                                initWithComponent\n                            \n                            \n                                    Abstract\n                                serialize\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-module.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-module.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-module.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    initWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SvelteComponentDev\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        serialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    serialize()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\nimport type { SvelteComponentDev } from 'svelte/internal';\nimport { Controller } from '@cosmic/core/browser';\nimport type { Module } from './module';\n\n@injectable()\nexport abstract class SvelteModule extends Controller implements Module {\n  private comp: SvelteComponentDev;\n  private _view: HTMLElement;\n  public props: T;\n\n  public view() {\n    return this._view;\n  }\n\n  public async init(props: T) {\n    this.props = props;\n    this._view = this._view || document.createElement('div');\n    return this;\n  }\n\n  abstract initWithComponent(target: Element): SvelteComponentDev;\n\n  viewWillAppear() {\n    this.comp = this.initWithComponent(this._view);\n  }\n\n  public async destroy() {\n    this.comp.$destroy();\n    if (this._view.parentNode) {\n      this._view.parentNode.removeChild(this._view);\n    }\n    return this;\n  }\n\n  abstract serialize(): T;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/View.html":{"url":"classes/View.html","title":"class - View","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  View\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/view.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root?: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/view.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/view.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        type FlowValue = '1' | 'auto' | 'initial' | 'none';\n\nexport default class View {\n  public root: HTMLElement;\n  constructor(root?: HTMLElement) {\n    this.root = root || document.createElement('div');\n  }\n  setFlow(type: FlowValue) {\n    this.root.classList.remove('flex-1', 'flex-auto', 'flex-initial', 'flex-none');\n    this.root.classList.add(`flex-${type}`);\n    return this;\n  }\n  append(child: HTMLElement) {\n    this.root.appendChild(child);\n    return this;\n  }\n  prepend(...childs: HTMLElement[]) {\n    this.root.prepend(...childs);\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeightMap.html":{"url":"interfaces/WeightMap.html","title":"interface - WeightMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WeightMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [index: string]:        number\n\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:11\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Workbench.html":{"url":"classes/Workbench.html","title":"class - Workbench","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Workbench\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Controller\n            \n\n            \n                Implements\n            \n            \n                            Module\n                            ItemGenerateDelegate\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                moduleFactory\n                            \n                            \n                                    Public\n                                props\n                            \n                            \n                                    Private\n                                splitBoard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                expandNewItem\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                serialize\n                            \n                            \n                                view\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleFactory: ModuleFactory)\n                    \n                \n                        \n                            \n                                Defined in src/modules/workbench/index.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleFactory\n                                                  \n                                                        \n                                                                        ModuleFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        moduleFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModuleFactory\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkbenchProps\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        splitBoard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SplitBoardView>\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:20\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expandNewItem\n                        \n                    \n                \n            \n            \n                \nexpandNewItem(view: ModuleItem, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    view\n                                    \n                                                ModuleItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: WorkbenchProps)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                WorkbenchProps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { type: \"col\" | \"row\"; minWidth: number; scale: {}; modules: {}; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n            \n                \nview()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\nimport { ModuleItem } from './module-item';\n\ninterface WorkbenchProps {\n  type: 'col' | 'row';\n  minWidth: number;\n  scale: number[];\n  modules?: ModuleConfig[];\n}\n\n@injectable()\nexport default class Workbench\n  extends Controller\n  implements Module, ItemGenerateDelegate>\n{\n  public props: WorkbenchProps;\n  private splitBoard: SplitBoardView>;\n  private moduleFactory: ModuleFactory;\n  constructor(@inject('ModuleFactory') moduleFactory: ModuleFactory) {\n    super();\n    this.splitBoard = new SplitBoardView>().setFlow('1');\n    this.splitBoard.itemGenerateDelegate = this;\n    this.moduleFactory = moduleFactory;\n  }\n  view() {\n    return this.splitBoard.root;\n  }\n  async init(props: WorkbenchProps) {\n    this.props = props;\n    this.splitBoard.direction = directionType[props.type];\n    for (const p of props.modules || []) {\n      const item = new ModuleItem();\n      item.loader = this.moduleFactory.load(p.id, p);\n      item.moduleId = p.id;\n      this.splitBoard.addItem(item);\n    }\n    this.splitBoard.applySplit(\n      this.splitBoard.direction === directionType.col ? 'horizontal' : 'vertical',\n      props.scale || []\n    );\n    return this;\n  }\n\n  viewWillAppear(): void {\n    this.splitBoard.items.forEach((item, index) => {\n      const view = this.splitBoard.items[index];\n      item.loader.then((module) => {\n        if (module instanceof Controller) {\n          view.setContent(module.view());\n          view.module = module;\n          module.viewWillAppear();\n          module.viewDidDisappear();\n        }\n      });\n    });\n    /** to be completed */\n  }\n  viewDidAppear(): void {\n    /** to be completed */\n  }\n\n  viewWillDisappear(): void {\n    /** to be completed */\n  }\n  viewDidDisappear(): void {\n    /** to be completed */\n  }\n\n  public async destroy() {\n    const view = this.view();\n    this.viewWillDisappear();\n    if (view.parentNode) {\n      view.parentNode.removeChild(view);\n    }\n    this.viewDidDisappear();\n    return this;\n  }\n  expandNewItem(view: ModuleItem, index: number) {\n    const item = view.clone();\n    item.loader = this.moduleFactory.load(item.moduleId, view.module.serialize());\n    item.loader.then((module) => {\n      if (module instanceof Controller) {\n        item.module = module;\n        item.setContent(module.view());\n        module.viewWillAppear();\n        module.viewDidDisappear();\n      }\n    });\n    return item;\n  }\n\n  serialize() {\n    return {\n      type: this.props.type,\n      minWidth: this.props.minWidth,\n      scale: this.props.scale,\n      modules: [],\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkbenchProps.html":{"url":"interfaces/WorkbenchProps.html","title":"interface - WorkbenchProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkbenchProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            minWidth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            modules\n                                        \n                                \n                                \n                                        \n                                            scale\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        minWidth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minWidth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modules\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modules:     ModuleConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scale:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"col\" | \"row\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"col\" | \"row\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\nimport { ModuleItem } from './module-item';\n\ninterface WorkbenchProps {\n  type: 'col' | 'row';\n  minWidth: number;\n  scale: number[];\n  modules?: ModuleConfig[];\n}\n\n@injectable()\nexport default class Workbench\n  extends Controller\n  implements Module, ItemGenerateDelegate>\n{\n  public props: WorkbenchProps;\n  private splitBoard: SplitBoardView>;\n  private moduleFactory: ModuleFactory;\n  constructor(@inject('ModuleFactory') moduleFactory: ModuleFactory) {\n    super();\n    this.splitBoard = new SplitBoardView>().setFlow('1');\n    this.splitBoard.itemGenerateDelegate = this;\n    this.moduleFactory = moduleFactory;\n  }\n  view() {\n    return this.splitBoard.root;\n  }\n  async init(props: WorkbenchProps) {\n    this.props = props;\n    this.splitBoard.direction = directionType[props.type];\n    for (const p of props.modules || []) {\n      const item = new ModuleItem();\n      item.loader = this.moduleFactory.load(p.id, p);\n      item.moduleId = p.id;\n      this.splitBoard.addItem(item);\n    }\n    this.splitBoard.applySplit(\n      this.splitBoard.direction === directionType.col ? 'horizontal' : 'vertical',\n      props.scale || []\n    );\n    return this;\n  }\n\n  viewWillAppear(): void {\n    this.splitBoard.items.forEach((item, index) => {\n      const view = this.splitBoard.items[index];\n      item.loader.then((module) => {\n        if (module instanceof Controller) {\n          view.setContent(module.view());\n          view.module = module;\n          module.viewWillAppear();\n          module.viewDidDisappear();\n        }\n      });\n    });\n    /** to be completed */\n  }\n  viewDidAppear(): void {\n    /** to be completed */\n  }\n\n  viewWillDisappear(): void {\n    /** to be completed */\n  }\n  viewDidDisappear(): void {\n    /** to be completed */\n  }\n\n  public async destroy() {\n    const view = this.view();\n    this.viewWillDisappear();\n    if (view.parentNode) {\n      view.parentNode.removeChild(view);\n    }\n    this.viewDidDisappear();\n    return this;\n  }\n  expandNewItem(view: ModuleItem, index: number) {\n    const item = view.clone();\n    item.loader = this.moduleFactory.load(item.moduleId, view.module.serialize());\n    item.loader.then((module) => {\n      if (module instanceof Controller) {\n        item.module = module;\n        item.setContent(module.view());\n        module.viewWillAppear();\n        module.viewDidDisappear();\n      }\n    });\n    return item;\n  }\n\n  serialize() {\n    return {\n      type: this.props.type,\n      minWidth: this.props.minWidth,\n      scale: this.props.scale,\n      modules: [],\n    };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/classBuilder.html":{"url":"classes/classBuilder.html","title":"class - classBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  classBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                orderedConfigs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addConfig\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Private\n                                insertConfig\n                            \n                            \n                                    Private\n                                normalizeWeight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configs: stateConfig[], weightMap: WeightMap)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                        stateConfig[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weightMap\n                                                  \n                                                        \n                                                                        WeightMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orderedConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         stateConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/class-builder.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    addConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        normalizeWeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    normalizeWeight(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         stateConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/classConfig.html":{"url":"interfaces/classConfig.html","title":"interface - classConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  classConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            createWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            mainWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            notification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            interface\n            ISettings\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            variable\n            settings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            class\n            classBuilder\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            classConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            stateConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            WeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            variable\n            defaultWeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/controller.ts\n            \n            class\n            Controller\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.controller.ts\n            \n            class\n            SplitBoardController\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            class\n            SplitBoardView\n            \n                3 %\n                (1/28)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            variable\n            lowBoardRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-item.view.ts\n            \n            class\n            SplitItemView\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/core/browser/layout/type.ts\n            \n            interface\n            ISplitBoardView\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/core/browser/layout/type.ts\n            \n            interface\n            ItemGenerateDelegate\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            function\n            makeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BgColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BorderColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlAccentColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlBackgroundColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlDisabledColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlForbiddenColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlHighlightColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            FourthBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            GridBackgroundColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            LabelColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemBlueColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemGrayColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemOrangeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemPinkColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemRedColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemYellowColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TextFieldBackground\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/view.ts\n            \n            class\n            View\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/color-ref.ts\n            \n            class\n            ColorRef\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/uuid.ts\n            \n            variable\n            uuid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/ioc/inject.ts\n            \n            function\n            inject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module-factory.ts\n            \n            class\n            ModuleFactory\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module-factory.ts\n            \n            interface\n            ModuleConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module.ts\n            \n            interface\n            Module\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/core/parts/modules/svelte-module.ts\n            \n            class\n            SvelteModule\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/canvas-kit.ts\n            \n            function\n            getCanvasKit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/context.ts\n            \n            class\n            Context\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/base.ts\n            \n            class\n            Base\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/corner.ts\n            \n            class\n            CornerMixin\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/corner.ts\n            \n            class\n            RectangleCornerMixin\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/geometry.ts\n            \n            class\n            GeometryMixin\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/layout.ts\n            \n            class\n            LayoutMixin\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/shape.ts\n            \n            class\n            DefaultShapeMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/rectangle.ts\n            \n            class\n            Rectangle\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/menu-group/base-menu.ts\n            \n            class\n            BaseMenu\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/menu-group/index.ts\n            \n            class\n            MenuBar\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/menu-group/index.ts\n            \n            interface\n            MenuProps\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/property-panel/index.ts\n            \n            class\n            PropertyPanel\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/auth/exchange/auth.ts\n            \n            interface\n            AddParams\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/auth/exchange/auth.ts\n            \n            interface\n            GetParams\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/auth/exchange/auth.ts\n            \n            interface\n            IAuthState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/auth/exchange/auth.ts\n            \n            function\n            addAuthToOperation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/auth/exchange/auth.ts\n            \n            function\n            getAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/auth/exchange/auth.ts\n            \n            function\n            willAuthError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/auth/exchange/auth.ts\n            \n            variable\n            didAuthError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/auth/exchange/index.ts\n            \n            variable\n            exchanges\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/auth/user.ts\n            \n            interface\n            ILoginData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/auth/user.ts\n            \n            function\n            login\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/auth/user.ts\n            \n            function\n            logout\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/design/api/color.ts\n            \n            variable\n            createColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/design/api/color.ts\n            \n            variable\n            queryColors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/index.ts\n            \n            class\n            ResourceExplorer\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/project/api.ts\n            \n            variable\n            createProject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/project/api.ts\n            \n            variable\n            queryProjects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/routes.ts\n            \n            interface\n            RoutesValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/routes.ts\n            \n            function\n            routeFor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/routes.ts\n            \n            function\n            urlFor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/routes.ts\n            \n            variable\n            ROUTES_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/team/api.ts\n            \n            variable\n            teamsQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/shape-canvas/index.ts\n            \n            class\n            ShapeCanvas\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/workbench/index.ts\n            \n            class\n            Workbench\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/workbench/index.ts\n            \n            interface\n            WorkbenchProps\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/workbench/module-item.ts\n            \n            class\n            ModuleItem\n            \n                4 %\n                (1/24)\n            \n        \n        \n            \n                \n                src/workbench/desktop/app.ts\n            \n            class\n            App\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/workbench/desktop/main.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/services/appearance-service.ts\n            \n            class\n            AppearanceService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @types/color : ^3.0.1\n        \n            @urql/exchange-auth : ~0.1.6\n        \n            @urql/svelte : ~1.3.0\n        \n            axios : ~0.24.0\n        \n            canvaskit-wasm : ~0.28.1\n        \n            color : ^3.1.3\n        \n            electron-log : ^4.4.1\n        \n            electron-store : ^8.0.1\n        \n            eventemitter2 : ^6.4.4\n        \n            graphql : ~15.6.0\n        \n            install : ~0.13.0\n        \n            inversify : ^5.1.1\n        \n            keycode : ^2.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            smelte : ^1.1.5\n        \n            split.js : ^1.6.4\n        \n            svelte-spa-router : ~3.2.0\n        \n            tailwindcss-typography : ~3.1.0\n        \n            ts-mixer : ~6.0.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppearanceType   (src/.../appearance.ts)\n                        \n                        \n                            directionStyles   (src/.../split-item.view.ts)\n                        \n                        \n                            directionType   (src/.../type.ts)\n                        \n                        \n                            ROUTES   (src/.../routes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/common/appearance.ts\n    \n        \n            \n                \n                    \n                        \n                        AppearanceType\n                    \n                \n                    \n                        \n                            模式类型\n\n                        \n                    \n                        \n                            \n                                 any\n                            \n                        \n                        \n                            \n                                 light\n                            \n                        \n                        \n                            \n                                 dark\n                            \n                        \n            \n        \n\n    src/core/browser/layout/split-item.view.ts\n    \n        \n            \n                \n                    \n                        \n                        directionStyles\n                    \n                \n                        \n                            \n                                 w\n                            \n                        \n                        \n                            \n                                Value : merge-w\n                            \n                        \n                        \n                            \n                                 e\n                            \n                        \n                        \n                            \n                                Value : merge-e\n                            \n                        \n                        \n                            \n                                 s\n                            \n                        \n                        \n                            \n                                Value : merge-s\n                            \n                        \n                        \n                            \n                                 n\n                            \n                        \n                        \n                            \n                                Value : merge-n\n                            \n                        \n            \n        \n\n    src/core/browser/layout/type.ts\n    \n        \n            \n                \n                    \n                        \n                        directionType\n                    \n                \n                        \n                            \n                                 col\n                            \n                        \n                        \n                            \n                                 row\n                            \n                        \n            \n        \n\n    src/modules/resource-explorer/routes.ts\n    \n        \n            \n                \n                    \n                        \n                        ROUTES\n                    \n                \n                        \n                            \n                                 INDEX\n                            \n                        \n                        \n                            \n                                 TEAM_DETAIL\n                            \n                        \n                        \n                            \n                                 PROJECT_DETAIL\n                            \n                        \n                        \n                            \n                                 DESIGN_ATOM\n                            \n                        \n                        \n                            \n                                 LOGIN\n                            \n                        \n                        \n                            \n                                 DEFAULT\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addAuthToOperation   (src/.../auth.ts)\n                        \n                        \n                            getAuth   (src/.../auth.ts)\n                        \n                        \n                            getCanvasKit   (src/.../canvas-kit.ts)\n                        \n                        \n                            inject   (src/.../inject.ts)\n                        \n                        \n                            login   (src/.../user.ts)\n                        \n                        \n                            logout   (src/.../user.ts)\n                        \n                        \n                            makeColor   (src/.../ui-color.ts)\n                        \n                        \n                            routeFor   (src/.../routes.ts)\n                        \n                        \n                            urlFor   (src/.../routes.ts)\n                        \n                        \n                            willAuthError   (src/.../auth.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/resource-explorer/auth/exchange/auth.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addAuthToOperation\n                        \n                    \n                \n            \n            \n                \naddAuthToOperation(params)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuth\n                        \n                    \n                \n            \n            \n                \ngetAuth(params)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        willAuthError\n                        \n                    \n                \n            \n            \n                \nwillAuthError(undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/modules/draw-canvas/skia-wasm/canvas-kit.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCanvasKit\n                        \n                    \n                \n            \n            \n                \ngetCanvasKit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise | void\n\n                    \n                \n            \n        \n    \n    src/core/parts/ioc/inject.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inject\n                        \n                    \n                \n            \n            \n                \ninject(token)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/modules/resource-explorer/auth/user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n\n\n        \n    \n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        makeColor\n                        \n                    \n                \n            \n            \n                \nmakeColor(anyColorHex, lightColorHex?, darkColorHex?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anyColorHex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    darkColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/modules/resource-explorer/routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routeFor\n                        \n                    \n                \n            \n            \n                \nrouteFor(route)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        urlFor\n                        \n                    \n                \n            \n            \n                \nurlFor(route, params?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCosmic Design\n\n\n\n\n\n\n🚧 ing...\n\nThe Repository\nCosmic design is a concrete practice of D2R.\nThis repository is where we develop it together with the community. Not only do we work on code and issues here, we also publish our roadmap , development guide. This source code is available to everyone under the standard MIT license.\nAbout Cosmic Design\n\n🚧 ing...\n\nHow it works\nThe template required a minimum dependencies. Only Vite is used for building, nothing more.\nProject Structure\nThe structure of this template is very similar to the structure of a monorepo.\nThe entire source code of the program is divided into three modules (packages) that are bundled each independently:\n\nsrc/core\nInclude common dependencies, such as components, utils, ipc.\nsrc/app\nElectron main script.\nsrc/modules\nModules of tools\nsrc/workbench\nElectron web page.\n\nCosmic Components\n\nComponents StoryBook\nsrc/core/components\n\nCompile App\nNext step is run packaging and compilation a ready for distribution Electron app for macOS, Windows and Linux with \"auto update\" support out of the box.\nTo do this, using the electron-builder:\n\nIn npm script compile: This script is configured to compile the application as quickly as possible. It is not ready for distribution, is compiled only for the current platform and is used for debugging.\nIn GitHub Action: The application is compiled for any platform and ready-to-distribute files are automatically added to the draft GitHub release.\n\nContribution\nSee Wiki Contributing\n\nSource Code Organization\nUser Interface\nColor Set\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 qiansc\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    26 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/stateConfig.html":{"url":"interfaces/stateConfig.html","title":"interface - stateConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  stateConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:         classConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         classConfig[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FlowValue   (src/.../view.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/browser/view.ts\n    \n    \n        \n            \n                \n                    \n                    FlowValue\n                \n            \n            \n                \n                        \"1\" | \"auto\" | \"initial\" | \"none\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (src/.../main.ts)\n                        \n                        \n                            BgColor   (src/.../ui-color.ts)\n                        \n                        \n                            BorderColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlAccentColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlDisabledColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlForbiddenColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlHighlightColor   (src/.../ui-color.ts)\n                        \n                        \n                            createColor   (src/.../color.ts)\n                        \n                        \n                            createProject   (src/.../api.ts)\n                        \n                        \n                            createWindow   (src/.../index.ts)\n                        \n                        \n                            defaultWeightMap   (src/.../class-builder.ts)\n                        \n                        \n                            didAuthError   (src/.../auth.ts)\n                        \n                        \n                            exchanges   (src/.../index.ts)\n                        \n                        \n                            FourthBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            GridBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            isProd   (src/.../index.ts)\n                        \n                        \n                            isProd   (src/.../logger.ts)\n                        \n                        \n                            LabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            logger   (src/.../logger.ts)\n                        \n                        \n                            lowBoardRoot   (src/.../split-board.view.ts)\n                        \n                        \n                            mainWindow   (src/.../index.ts)\n                        \n                        \n                            notification   (src/.../index.ts)\n                        \n                        \n                            queryColors   (src/.../color.ts)\n                        \n                        \n                            queryProjects   (src/.../api.ts)\n                        \n                        \n                            ROUTES_CONFIG   (src/.../routes.ts)\n                        \n                        \n                            SecondaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            SecondaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            settings   (src/.../settings.ts)\n                        \n                        \n                            SystemBlueColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemGrayColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemOrangeColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemPinkColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemRedColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemYellowColor   (src/.../ui-color.ts)\n                        \n                        \n                            teamsQuery   (src/.../api.ts)\n                        \n                        \n                            TertiaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            TextFieldBackground   (src/.../ui-color.ts)\n                        \n                        \n                            uuid   (src/.../uuid.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new App(document.body)\n                    \n                \n\n\n        \n    \n\n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#E0E0E0', '#E0E0E0', '#1F1F1F')\n                    \n                \n\n            \n                \n                    三级背景色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BorderColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D9D9D9', '#D9D9D9', '#D9D9D9')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlAccentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#5580c0', '#5580c0', '#5580c0')\n                    \n                \n\n            \n                \n                    高亮色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#FFFFFF', '#5D5F61')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlDisabledColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F9F9F9', '#F9F9F9', '#464749')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlForbiddenColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlHighlightColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#ffae2b', '#ffae2b', '#ffae2b')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FourthBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#BABABA', '#BABABA', '#454545')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GridBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F2F2F2', '#F2F2F2', '#2E2F30')\n                    \n                \n\n            \n                \n                    组件色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#E0E0E0')\n                    \n                \n\n            \n                \n                    三级标签色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D7D7D7', '#D7D7D7', '#272728')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#808080')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemBlueColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#729cd4', '#729cd4', '#729cd4')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemGrayColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c0c0c1', '#c0c0c1', '#c0c0c1')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemOrangeColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemPinkColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c4666f', '#c4666f', '#c4666f')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemRedColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemYellowColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n            \n                \n                    辅助色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#C6C6C6', '#C6C6C6', '#393939')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#3F3F3F', '#3F3F3F', '#3F3F3F')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TextFieldBackground\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#F2F2F2', '#454545')\n                    \n                \n\n\n        \n    \n\n    src/modules/resource-explorer/design/api/color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return mutation({\n    query: `\n      mutation ($color: CreateColorDTO!) {\n        createColor(color: $color) {\n          id,\n        }\n      }\n    `,\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryColors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (color: QueryColorDTO) => {\n  return operationStore(\n    `\n    query ($color: QueryColorDTO) {\n      colors(color: $color) {\n        id,\n        color,\n        team,\n        variant {\n          light,\n          dark\n        }\n      }\n    }\n  `,\n    { color },\n    { requestPolicy: 'cache-first' }\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/resource-explorer/project/api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createProject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return mutation({\n    query: `\n      mutation ($project: CreateProjectDTO!) {\n        createProject(project: $project) {\n          id,\n        }\n      }\n    `,\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (project: QueryProjectDTO = {}) => {\n  return operationStore(\n    `\n    query ($project: QueryProjectDTO) {\n      projects(project: $project) {\n        id,\n        name,\n        team,\n        parent\n      }\n    }\n  `,\n    { project },\n    { requestPolicy: 'cache-first' }\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/app/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createWindow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  mainWindow = new BrowserWindow({\n    width: 1280,\n    height: 768,\n    minHeight: 600,\n    minWidth: 960,\n    webPreferences: {\n      devTools: true,\n      contextIsolation: true,\n      // preload: join(__dirname, 'preload.js'),\n    },\n  });\n\n  const url =\n    // process.env.NODE_ENV === \"production\"\n    isProd\n      ? // in production, use the statically build version of our application\n        `file://${join(__dirname, '../workbench/desktop/index.html')}`\n      : // in dev, target the host and port of the local rollup web server\n        'http://localhost:5000/workbench/desktop/';\n\n  mainWindow.loadURL(url).catch((err: any) => {\n    // logger.error(JSON.stringify(err));\n    app.quit();\n  });\n\n  if (!isProd) mainWindow.webContents.openDevTools();\n\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BrowserWindow | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Notification | null\n\n                    \n                \n\n\n        \n    \n\n    src/core/browser/class-builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultWeightMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WeightMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/resource-explorer/auth/exchange/auth.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        didAuthError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ({ error }: { error: CombinedError }) => {\n  return error.graphQLErrors.some(e => e.extensions?.code === 'UNAUTHENTICATED');\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/resource-explorer/auth/exchange/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        exchanges\n                        \n                    \n                \n            \n                \n                    \n                        Default value : authExchange({\n  getAuth, addAuthToOperation, willAuthError, didAuthError,\n})\n                    \n                \n\n\n        \n    \n\n    src/app/utils/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log\n                    \n                \n\n\n        \n    \n\n    src/core/browser/layout/split-board.view.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lowBoardRoot\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('FlowTableRoot')\n                    \n                \n\n\n        \n    \n\n    src/modules/resource-explorer/routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROUTES_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoutesValue\n\n                    \n                \n                \n                    \n                        Default value : {\n  [ROUTES.DEFAULT]: {\n    path: '*',\n    paramNames: [],\n  },\n  [ROUTES.INDEX]: {\n    path: '',\n    paramNames: [],\n  },\n  [ROUTES.TEAM_DETAIL]: {\n    path: '/team',\n    paramNames: ['teamId'],\n  },\n  [ROUTES.PROJECT_DETAIL]: {\n    path: '/project',\n    paramNames: ['projectId'],\n  },\n  [ROUTES.DESIGN_ATOM]: {\n    path: '/design/atom',\n    paramNames: ['teamId'],\n  },\n  [ROUTES.LOGIN]: {\n    path: '/login',\n    paramNames: [],\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/utils/settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        settings\n                        \n                    \n                \n            \n            \n                \n                    — Cause bundle error: Cannot find module 'ajv/dist/compile/codegen'\n                \n            \n                \n                    \n                        Default value : new ElectronStore({\n  defaults: {\n    check: false,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/modules/resource-explorer/team/api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        teamsQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : operationStore(`\n  query getAllTeams {\n    teams {\n      name,\n      id\n    }\n  }\n`)\n                    \n                \n\n\n        \n    \n\n    src/core/common/uuid.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): string => {\n  const s: string[] | number[] = [];\n  const hexDigits = '0123456789abcdef';\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
