var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/App.html",[0,0.173,1,2.209]],["body/classes/App.html",[0,0.111,1,2.18,2,0.308,3,0.167,4,0.149,5,0.149,6,1.938,7,0.115,8,0.375,9,1.098,10,4.716,11,3.029,12,0.948,13,2.231,14,4.789,15,4.789,16,4.789,17,4.789,18,4.789,19,4.789,20,3.501,21,3.501,22,4.789,23,4.789,24,3.501,25,4.789,26,0.99,27,1.938,28,2.363,29,1.241,30,3.501,31,1.223,32,0.023,33,1.154,34,0.463,35,1.087,36,2.384,37,2.276,38,0.704,39,0.93,40,1.589,41,2.64,42,2.276,43,1.529,44,2.276,45,1.191,46,2.276,47,2.276,48,2.276,49,2.276,50,3.501,51,2.276,52,3.501,53,2.276,54,2.276,55,2.276,56,3.501,57,3.521,58,2.276,59,2.276,60,1.127,61,0.93,62,1.938,63,1.98,64,1.056,65,1.346,66,1.213,67,1.55,68,2.276,69,3.501,70,1.938,71,2.276,72,2.276,73,3.501,74,1.417,75,2.276,76,3.501,77,2.276,78,3.501,79,3.501,80,2.276,81,3.501,82,2.276,83,2.384,84,2.276,85,1.938,86,2.276,87,0.167,88,1.417,89,3.501,90,2.276,91,1.716,92,2.276,93,2.276,94,2.276,95,2.276,96,2.276,97,2.64,98,2.276,99,1.539,100,2.276,101,2.276,102,2.18,103,2.276,104,2.276,105,1.716,106,2.276,107,2.276,108,2.276,109,2.276,110,2.276,111,2.276,112,2.276,113,2.276,114,2.276,115,2.276,116,1.716,117,2.276,118,2.981,119,2.276,120,4.789,121,2.276,122,2.377,123,2.64,124,1.841,125,3.611,126,2.276,127,3.501,128,2.276,129,2.276,130,2.276,131,2.276,132,1.55,133,2.276,134,2.276,135,0.007,136,0.011,137,0.007]],["title/classes/AppearanceService.html",[0,0.173,67,2.416]],["body/classes/AppearanceService.html",[0,0.179,2,0.497,3,0.27,4,0.241,5,0.241,7,0.185,8,0.53,9,1.295,12,1.339,29,1.182,31,1.264,32,0.023,33,1.192,34,0.571,35,1.124,38,0.996,39,2.022,40,1.339,43,1.348,45,1.063,57,4.556,60,0.993,61,1.501,62,3.129,67,3.37,87,0.27,116,3.731,135,0.011,136,0.015,137,0.011,138,5.483,139,3.129,140,5.596,141,5.596,142,1.633,143,4.948,144,4.948,145,3.674,146,5.099,147,3.674,148,4.948,149,3.674,150,4.948,151,1.957,152,3.674,153,4.948,154,3.674,155,2.297,156,1.957,157,3.674,158,5.596,159,3.674,160,3.674,161,0.834]],["title/classes/Base.html",[0,0.173,74,2.209]],["body/classes/Base.html",[0,0.246,2,0.682,3,0.37,4,0.331,5,0.331,7,0.255,8,0.649,11,3.767,29,0.954,32,0.022,34,0.493,60,0.895,74,3.772,87,0.37,135,0.016,136,0.019,137,0.016,162,2.635,163,2.635,164,4.296,165,5.528,166,5.044,167,3.803]],["title/classes/BaseMenu.html",[0,0.173,168,2.675]],["body/classes/BaseMenu.html",[0,0.246,2,0.682,3,0.37,4,0.331,5,0.331,9,1.015,32,0.023,45,0.895,70,4.296,87,0.37,88,3.141,132,3.435,135,0.016,136,0.019,137,0.016,142,1.215,168,4.567,169,3.435,170,4.296,171,4.296,172,5.044,173,5.044,174,5.044,175,5.044,176,5.044,177,5.044,178,5.044,179,5.044]],["title/classes/ColorRef.html",[0,0.173,180,2.675]],["body/classes/ColorRef.html",[0,0.18,2,0.5,3,0.271,4,0.242,5,0.242,7,0.187,8,0.532,9,1.366,12,1.346,26,1.609,29,1.185,31,1.27,32,0.023,33,1.197,34,0.525,35,1.129,38,1,43,0.891,57,4.393,60,0.882,87,0.271,116,2.789,135,0.011,136,0.015,137,0.011,142,1.353,161,1.363,180,3.749,181,5.494,182,3.15,183,6.591,184,6.591,185,6.591,186,4.891,187,4.971,188,4.971,189,3.749,190,3.699,191,3.699,192,4.971,193,3.699,194,3.699,195,5.615,196,4.971,197,4.971,198,2.789,199,4.234,200,3.699,201,3.699]],["title/classes/Context.html",[0,0.173,11,1.89]],["body/classes/Context.html",[0,0.189,2,0.524,3,0.285,4,0.254,5,0.254,7,0.196,8,0.549,9,1.316,11,2.733,12,1.388,26,1.687,29,1.237,31,0.99,32,0.023,33,0.934,34,0.518,35,0.88,43,1.236,45,0.911,60,0.688,87,0.285,135,0.012,136,0.016,137,0.012,142,1.385,161,0.88,162,2.902,163,2.902,202,3.302,203,6.77,204,5.42,205,7.06,206,5.211,207,6.118,208,5.13,209,4.542,210,5.13,211,3.877,212,3.877,213,3.877,214,3.877,215,2.641,216,3.877,217,3.877,218,5.13,219,3.877,220,3.877]],["title/classes/Controller.html",[0,0.173,65,1.364]],["body/classes/Controller.html",[0,0.207,2,0.574,3,0.312,4,0.278,5,0.278,7,0.214,12,1.473,28,2.092,29,1.239,32,0.023,43,1.578,45,1.125,60,0.754,61,1.735,65,2.092,87,0.312,135,0.013,136,0.017,137,0.013,155,2.526,167,4.777,221,3.616,222,1.817,223,3.145,224,3.145,225,2.94,226,3.145,227,4.245,228,4.245,229,4.245,230,4.245,231,4.245,232,6.006,233,4.245,234,4.245,235,2.644,236,4.245,237,4.245,238,4.245,239,5.442]],["title/classes/CornerMixin.html",[0,0.173,240,2.209]],["body/classes/CornerMixin.html",[0,0.293,2,0.676,3,0.367,4,0.328,5,0.328,7,0.252,8,0.645,29,0.945,32,0.022,34,0.407,87,0.442,135,0.016,136,0.019,137,0.016,162,2.62,163,2.62,240,3.751,241,3.768,242,5.506,243,2.247,244,4.997,245,3.112,246,4.256,247,4.256,248,4.256,249,4.256]],["title/classes/DefaultShapeMixin.html",[0,0.173,250,2.416]],["body/classes/DefaultShapeMixin.html",[0,0.244,2,0.678,3,0.368,4,0.329,5,0.329,32,0.022,60,1.193,87,0.368,135,0.016,136,0.019,137,0.016,162,2.181,163,2.181,240,3.122,245,3.758,250,4.109,251,4.269,252,4.269,253,3.779,254,3.779,255,5.012,256,4.109,257,5.012,258,4.109,259,5.012,260,1.614,261,5.012]],["title/classes/GeometryMixin.html",[0,0.173,258,2.416]],["body/classes/GeometryMixin.html",[0,0.146,2,0.407,3,0.221,4,0.197,5,0.197,7,0.152,8,0.461,11,2.68,29,1.244,31,1.1,32,0.023,33,1.037,34,0.528,35,0.978,38,0.867,39,1.76,40,1.166,43,1.037,45,0.764,60,0.764,74,3.62,87,0.221,99,1.486,125,2.268,135,0.009,136,0.013,137,0.009,161,0.978,162,2.862,163,2.862,165,3.668,186,2.048,204,2.562,209,2.048,215,2.048,243,1.769,258,2.933,260,1.387,262,2.562,263,4.677,264,5.03,265,5.03,266,5.03,267,5.03,268,3.668,269,5.812,270,5.492,271,5.303,272,3.008,273,4.306,274,4.306,275,4.306,276,3.008,277,3.008,278,3.008,279,3.008,280,1.396,281,3.008,282,3.008,283,3.008,284,3.008,285,2.119,286,3.008,287,3.008,288,3.008,289,3.008,290,3.008,291,3.426,292,2.562,293,3.668,294,3.008,295,4.306,296,5.03,297,4.306,298,3.008,299,3.008,300,3.008,301,3.008,302,3.008,303,2.562,304,3.008,305,3.247,306,3.008,307,3.008,308,3.008,309,3.008,310,3.008,311,4.306,312,3.008,313,3.008,314,3.008,315,3.008,316,3.008,317,3.008,318,3.008,319,3.008]],["title/interfaces/ISettings.html",[320,0.515,321,2.675]],["body/interfaces/ISettings.html",[3,0.367,4,0.328,5,0.328,7,0.252,8,0.645,32,0.022,34,0.407,38,1.005,40,1.352,60,0.887,87,0.367,99,1.352,135,0.016,136,0.019,137,0.016,320,0.726,321,4.541,322,1.921,323,3.768,324,5.85,325,4.875,326,5.129,327,3.768,328,4.256,329,4.541,330,4.256,331,3.768]],["title/interfaces/ISplitBoardView.html",[320,0.515,332,2.209]],["body/interfaces/ISplitBoardView.html",[3,0.256,4,0.229,5,0.229,7,0.32,8,0.512,32,0.023,34,0.558,45,1.126,60,0.848,87,0.4,135,0.011,136,0.015,137,0.011,151,3.679,222,1.681,243,2.223,260,1.539,320,0.694,322,1.342,332,2.977,333,2.377,334,4.993,335,4.182,336,4.993,337,4.993,338,4.993,339,4.993,340,4.993,341,4.993,342,2.91,343,3.367,344,2.632,345,2.973,346,2.377,347,2.977,348,2.745,349,1.733,350,2.632,351,2.973,352,2.546,353,4.781,354,2.973,355,2.977,356,2.745,357,2.745,358,2.745,359,2.973,360,2.973,361,2.973,362,3.604,363,3.604]],["title/interfaces/ItemGenerateDelegate.html",[320,0.515,349,1.761]],["body/interfaces/ItemGenerateDelegate.html",[3,0.288,4,0.257,5,0.257,7,0.331,8,0.554,32,0.023,34,0.501,45,1.165,60,0.918,87,0.424,135,0.012,136,0.016,137,0.012,151,2.755,222,1.659,243,2.265,260,1.264,320,0.751,322,1.509,332,2.444,333,2.673,334,3.342,335,3.522,336,3.342,337,3.342,338,3.342,339,3.342,340,3.342,341,3.342,342,2.567,343,2.97,344,2.959,345,3.342,346,2.673,347,3.221,348,2.97,349,2.567,350,4.635,351,3.342,352,2.755,353,4.947,354,3.342,355,3.221,356,2.97,357,2.97,358,2.97,359,3.342,360,3.342,361,3.342,362,3.899,363,3.899]],["title/classes/LayoutMixin.html",[0,0.173,256,2.416]],["body/classes/LayoutMixin.html",[0,0.237,2,0.659,3,0.358,4,0.32,5,0.32,7,0.246,8,0.635,29,1.122,32,0.022,34,0.483,87,0.358,135,0.015,136,0.018,137,0.015,162,2.783,163,2.783,243,2.234,256,4.041,291,3.321,364,4.153,365,6.396,366,6.396,367,4.876,368,4.876,369,4.153,370,3.676,371,3.676]],["title/classes/MenuBar.html",[0,0.173,372,2.416]],["body/classes/MenuBar.html",[0,0.147,2,0.408,3,0.222,4,0.198,5,0.198,7,0.152,8,0.462,9,1.107,12,1.169,13,2.474,28,1.66,29,1.245,31,0.771,32,0.023,33,0.727,34,0.474,35,0.685,38,0.607,40,0.817,43,1.536,45,0.977,60,1.033,61,1.234,63,1.401,64,1.401,65,2.451,66,2.3,87,0.222,99,1.169,124,2.115,132,3.964,135,0.009,136,0.013,137,0.009,142,1.214,155,2.004,156,1.608,161,1.249,169,4.123,222,1.578,223,2.502,224,2.502,225,2.553,226,2.502,260,1.39,280,2.701,285,1.39,320,0.438,342,1.499,349,1.499,372,2.941,373,2.276,374,2.48,375,2.06,376,2.895,377,2.553,378,2.3,379,2.553,380,3.019,381,4.123,382,3.019,383,3.019,384,2.3,385,2.144,386,3.019,387,3.019,388,4.293,389,3.019,390,3.019,391,1.88,392,1.88,393,1.88,394,1.499,395,1.88,396,2.571,397,3.256,398,2.056,399,2.004,400,2.571,401,2.571,402,2.571,403,2.571,404,2.571,405,2.571,406,2.571,407,2.571,408,2.571,409,2.571]],["title/interfaces/MenuProps.html",[320,0.515,381,2.416]],["body/interfaces/MenuProps.html",[0,0.185,3,0.279,4,0.249,5,0.249,7,0.192,8,0.542,9,1.019,13,2.07,28,1.463,32,0.023,34,0.464,38,0.765,40,1.03,60,1.122,61,1.555,63,1.766,64,1.766,65,1.947,66,2.699,87,0.279,99,1.371,124,1.463,132,4.307,135,0.012,136,0.016,137,0.012,142,0.916,155,2.351,156,2.027,161,1.379,169,2.591,222,1.091,225,1.766,260,1.225,285,1.834,320,0.552,322,1.463,342,1.888,349,1.888,372,2.591,373,2.868,374,2.185,375,2.07,376,2.185,377,1.766,379,1.766,381,4.135,385,1.888,388,5.386,394,1.888,395,2.369,396,3.24,397,3.819,398,2.591,399,2.351,400,3.24,401,3.24,402,3.24,403,3.24,404,3.24,405,3.24,406,3.24,407,3.24,408,3.24,409,3.24]],["title/interfaces/Module.html",[320,0.515,375,1.45]],["body/interfaces/Module.html",[3,0.338,4,0.302,5,0.302,7,0.233,8,0.614,32,0.023,34,0.532,87,0.338,124,2.581,135,0.014,136,0.018,137,0.014,151,3.646,320,0.67,322,1.773,352,3.577,375,2.343,377,3.03,378,3.478,379,3.03,410,3.927,411,5.733,412,5.733,413,5.733,414,4.323]],["title/interfaces/ModuleConfig.html",[320,0.515,394,1.761]],["body/interfaces/ModuleConfig.html",[0,0.183,3,0.275,4,0.246,5,0.246,7,0.189,8,0.537,9,0.755,10,4.264,13,1.533,32,0.023,34,0.461,40,1.358,41,3.784,60,1.004,61,2.051,63,1.741,87,0.368,88,2.336,91,3.784,97,3.784,99,1.358,124,1.442,135,0.012,136,0.016,137,0.012,155,2.329,161,1.371,198,2.828,199,4.264,285,2.13,320,0.545,322,1.442,375,2.782,394,2.491,399,2.802,415,2.828,416,2.828,417,3.194,418,3.194,419,2.828,420,2.828,421,3.194,422,2.673,423,3.194,424,4.274,425,5.142,426,4.274,427,4.274,428,3.194,429,3.194,430,3.194,431,3.194,432,4.816,433,3.194,434,3.194,435,3.194,436,3.194,437,3.194,438,3.194,439,3.194,440,3.194,441,3.194,442,3.194,443,3.194,444,3.194,445,3.194]],["title/classes/ModuleFactory.html",[0,0.173,63,1.646]],["body/classes/ModuleFactory.html",[0,0.146,2,0.405,3,0.22,4,0.196,5,0.196,7,0.151,8,0.46,9,1.01,10,4.554,12,1.162,13,2.051,26,1.304,29,1.142,31,1.482,32,0.023,33,1.398,34,0.518,35,1.318,38,0.864,39,1.755,40,1.359,41,4.134,43,1.321,45,0.532,60,0.891,61,1.755,63,1.993,87,0.315,88,1.866,91,4.134,97,3.238,99,1.162,124,1.93,135,0.009,136,0.013,137,0.009,155,1.993,161,1.245,198,2.259,199,3.785,285,2.184,320,0.435,375,2.719,384,1.596,394,1.488,399,1.391,415,4.69,416,2.259,417,2.552,418,2.552,419,2.259,420,2.259,421,2.552,422,2.921,423,3.658,424,4.669,425,5.297,426,4.669,427,3.658,428,2.552,429,2.552,430,2.552,431,2.552,432,4.275,433,2.552,434,2.552,435,3.658,436,2.552,437,3.658,438,2.552,439,3.658,440,2.552,441,2.552,442,2.552,443,2.552,444,2.552,445,2.552,446,4.295,447,4.295,448,4.295,449,2.996,450,2.996,451,2.996,452,2.996,453,4.669,454,2.996,455,2.996,456,2.996]],["title/classes/ModuleItem.html",[0,0.173,457,2.209]],["body/classes/ModuleItem.html",[0,0.113,2,0.313,3,0.17,4,0.152,5,0.152,7,0.117,8,0.38,9,1.282,12,0.96,28,2.374,29,1.304,31,1.507,32,0.023,33,1.421,34,0.551,35,1.34,36,2.416,38,1.048,39,2.129,40,0.627,43,1.57,45,1.015,60,0.63,64,1.075,66,1.234,87,0.17,99,0.627,135,0.007,136,0.011,137,0.007,142,1.704,161,0.526,222,1.386,260,1.142,280,3.142,285,1.948,325,1.746,335,1.577,343,3.908,355,2.209,356,2.037,357,2.037,358,2.037,375,2.246,414,2.674,453,3.672,457,3.01,458,4.437,459,1.972,460,4.311,461,3.021,462,3.021,463,3.021,464,4.116,465,3.251,466,4.832,467,3.672,468,3.672,469,3.672,470,3.672,471,3.021,472,3.021,473,3.672,474,3.021,475,3.021,476,3.021,477,2.674,478,2.674,479,2.674,480,2.315,481,2.315,482,2.315,483,1.972,484,3.021,485,1.149,486,1.972,487,1.234,488,2.315,489,2.315,490,2.315,491,2.315,492,1.972,493,2.315,494,1.972,495,2.315,496,2.315,497,2.315,498,2.315,499,1.972,500,1.972,501,2.315,502,1.972,503,2.315,504,1.972,505,2.315,506,2.315,507,1.972,508,2.315,509,3.021,510,2.674,511,1.972,512,1.972,513,2.315,514,1.972,515,1.972,516,2.315,517,1.746,518,1.972,519,1.746,520,1.746,521,1.972,522,1.746,523,1.746,524,2.416,525,1.972,526,2.209,527,1.746,528,2.315]],["title/classes/PropertyPanel.html",[0,0.173,83,2.416]],["body/classes/PropertyPanel.html",[0,0.166,2,0.46,3,0.25,4,0.223,5,0.223,7,0.172,8,0.503,9,1.167,12,1.271,13,2.37,28,1.308,29,1.3,31,1.199,32,0.023,33,1.131,34,0.496,35,1.066,38,0.685,40,0.921,43,1.606,45,1.029,60,0.834,64,1.579,65,2.339,83,3.198,87,0.25,122,2.331,124,2.068,135,0.011,136,0.015,137,0.011,142,1.583,161,1.066,222,1.542,223,2.67,224,2.67,225,2.496,226,2.67,235,3.349,260,1.512,280,3.191,352,2.865,376,2.697,377,2.496,378,2.502,379,2.691,384,2.502,385,1.689,391,2.119,392,2.119,393,2.119,529,2.897,530,2.897,531,3.876,532,3.198,533,3.198,534,2.565,535,2.317,536,2.565,537,3.541,538,3.198,539,2.565,540,2.565,541,2.565,542,2.317,543,2.317,544,3.541,545,2.565]],["title/classes/Rectangle.html",[0,0.173,546,2.675]],["body/classes/Rectangle.html",[0,0.127,2,0.353,3,0.192,4,0.171,5,0.171,7,0.132,8,0.416,9,1.316,11,3.175,12,1.052,26,1.137,29,1.25,31,1.312,32,0.023,33,1.237,34,0.544,35,1.166,38,0.782,39,1.068,40,0.707,43,1.323,45,1.022,60,0.975,87,0.192,99,1.486,125,1.97,135,0.008,136,0.012,137,0.008,161,1.053,162,2.903,163,2.903,206,4.375,209,1.779,215,1.779,243,2.181,250,1.779,252,3.309,253,1.97,254,1.97,260,0.841,263,2.225,268,3.309,271,2.225,285,0.841,291,2.646,292,2.225,305,3.873,369,3.951,370,4.14,371,4.14,374,2.231,546,3.873,547,2.225,548,4.639,549,4.639,550,4.639,551,4.639,552,5.137,553,5.491,554,3.885,555,3.885,556,2.612,557,3.498,558,2.612,559,2.612,560,2.612,561,2.612,562,2.612,563,2.612,564,2.612,565,2.612,566,2.612,567,2.612,568,2.612,569,2.612,570,2.612,571,2.612,572,2.612,573,2.612,574,2.612,575,2.612,576,2.612,577,1.779,578,4.639,579,2.612,580,4.639,581,4.639,582,2.612,583,5.137,584,2.612,585,2.612,586,3.885,587,3.885,588,3.885,589,3.885,590,3.885,591,2.612,592,2.612,593,2.612,594,2.612,595,1.779,596,1.97,597,2.612,598,3.885,599,2.612,600,2.612,601,2.612]],["title/classes/RectangleCornerMixin.html",[0,0.173,245,2.209]],["body/classes/RectangleCornerMixin.html",[0,0.279,2,0.623,3,0.338,4,0.302,5,0.302,7,0.233,8,0.614,29,1.235,32,0.022,34,0.532,87,0.421,135,0.014,136,0.018,137,0.014,162,2.921,163,2.921,240,2.871,241,3.476,242,3.927,243,2.278,245,3.571,246,5.314,247,5.314,248,5.314,249,5.314,602,4.61,603,4.61,604,4.61,605,4.61]],["title/classes/ResourceExplorer.html",[0,0.173,606,2.675]],["body/classes/ResourceExplorer.html",[0,0.166,2,0.46,3,0.25,4,0.223,5,0.223,7,0.172,8,0.503,9,1.167,12,1.271,13,2.37,28,1.308,29,1.3,31,1.199,32,0.023,33,1.131,34,0.496,35,1.066,38,0.685,40,0.921,43,1.606,45,1.029,60,0.834,64,1.579,65,2.339,87,0.25,122,2.331,124,2.068,135,0.011,136,0.015,137,0.011,142,1.583,161,1.066,222,1.542,223,2.67,224,2.67,225,2.496,226,2.67,235,3.349,260,1.512,280,3.191,352,2.865,376,2.697,377,2.496,378,2.502,379,2.691,384,2.502,385,1.689,391,2.119,392,2.119,393,2.119,531,3.876,532,3.198,533,3.198,534,2.565,535,2.317,536,2.565,537,3.541,538,3.198,539,2.565,540,2.565,541,2.565,542,2.317,543,2.317,544,3.541,545,2.565,606,3.541,607,1.954,608,2.897]],["title/interfaces/RoutesValue.html",[320,0.515,609,2.416]],["body/interfaces/RoutesValue.html",[3,0.277,4,0.247,5,0.247,7,0.254,8,0.539,32,0.023,34,0.41,87,0.444,99,1.706,135,0.016,136,0.016,137,0.012,151,2.682,161,1.287,285,2.216,291,2.566,320,0.547,322,1.449,346,2.566,557,5.233,607,2.164,609,3.86,610,2.347,611,5.862,612,5.152,613,3.209,614,3.209,615,3.209,616,2.841,617,3.768,618,3.209,619,3.209,620,3.209,621,4.287,622,3.209,623,2.841,624,3.209,625,3.209,626,3.209,627,3.209,628,5.034,629,3.768,630,3.768,631,3.768,632,3.768,633,3.768,634,5.152,635,3.768,636,3.209,637,3.768,638,3.768,639,1.871,640,3.768,641,3.768,642,3.768,643,3.768]],["title/classes/ShapeCanvas.html",[0,0.173,644,2.675]],["body/classes/ShapeCanvas.html",[0,0.166,2,0.46,3,0.25,4,0.223,5,0.223,7,0.172,8,0.503,9,1.167,12,1.271,13,2.37,28,1.308,29,1.3,31,1.199,32,0.023,33,1.131,34,0.496,35,1.066,38,0.685,40,0.921,43,1.606,45,1.029,60,0.834,64,1.579,65,2.339,87,0.25,122,2.331,124,2.068,135,0.011,136,0.015,137,0.011,142,1.583,161,1.066,222,1.542,223,2.67,224,2.67,225,2.496,226,2.67,235,3.349,260,1.512,280,3.191,352,2.865,376,2.697,377,2.496,378,2.502,379,2.691,384,2.502,385,1.689,391,2.119,392,2.119,393,2.119,531,3.876,532,3.198,533,3.198,534,2.565,535,2.317,536,2.565,537,3.541,538,3.198,539,2.565,540,2.565,541,2.565,542,2.317,543,2.317,544,3.541,545,2.565,644,3.541,645,2.897,646,2.897]],["title/classes/SplitBoardController.html",[0,0.173,647,2.675]],["body/classes/SplitBoardController.html",[0,0.087,2,0.241,3,0.131,4,0.117,5,0.117,7,0.261,8,0.309,9,1.388,12,0.781,26,0.775,28,0.685,29,1.178,31,1.173,32,0.023,33,1.106,34,0.501,35,1.042,38,0.989,39,1.876,43,1.184,45,1.015,60,0.512,87,0.131,88,1.11,99,1.131,122,1.432,135,0.006,136,0.009,137,0.006,142,1.341,151,1.937,161,1.042,222,0.828,243,2.149,331,2.742,332,2.603,342,0.885,348,1.023,353,3.705,356,1.023,358,1.023,362,3.705,363,4.312,465,3.901,526,1.11,595,1.214,639,2.96,647,2.176,648,3.922,649,1.518,650,3.636,651,3.636,652,3.636,653,3.636,654,3.636,655,3.636,656,5.174,657,5.174,658,4.18,659,2.885,660,2.885,661,2.885,662,2.885,663,4.18,664,1.782,665,2.885,666,3.791,667,1.782,668,1.782,669,1.782,670,1.782,671,1.782,672,1.782,673,1.782,674,1.782,675,2.885,676,1.782,677,2.885,678,1.782,679,2.885,680,5.718,681,1.782,682,4.589,683,2.885,684,1.782,685,1.782,686,2.885,687,4.18,688,2.885,689,1.518,690,2.476,691,1.518,692,3.636,693,1.782,694,3.636,695,1.782,696,3.636,697,3.636,698,3.636,699,1.782,700,1.782,701,1.782,702,1.782,703,1.782,704,1.782,705,1.782,706,1.782,707,1.782,708,1.782,709,1.782,710,1.782,711,2.885,712,2.885,713,1.782,714,1.782,715,1.782,716,1.782,717,1.782,718,3.636,719,5.718,720,1.782,721,1.782,722,1.782,723,1.782,724,1.782,725,1.782,726,1.782,727,4.18,728,2.176,729,1.344,730,1.782,731,2.885,732,1.782,733,1.782,734,2.885,735,1.344,736,1.782,737,1.782,738,4.914,739,4.914,740,2.885,741,4.18,742,2.885,743,2.885,744,1.782,745,2.885,746,1.782,747,2.885,748,1.782,749,1.782]],["title/classes/SplitItemView.html",[0,0.173,343,2.037]],["body/classes/SplitItemView.html",[0,0.098,2,0.271,3,0.147,4,0.131,5,0.131,7,0.101,8,0.339,9,1.321,12,0.858,26,1.711,28,2.4,29,1.258,31,1.436,32,0.023,33,1.354,34,0.521,35,1.277,36,2.159,38,1.042,39,1.99,40,0.542,43,1.504,45,1.092,60,0.563,87,0.147,122,0.995,123,1.511,135,0.006,136,0.01,137,0.006,142,1.666,161,0.893,222,1.613,260,1.021,280,2.075,285,1.811,325,2.39,335,1.365,343,2.974,344,1.511,346,1.365,355,3.033,356,2.974,357,2.796,358,2.796,461,3.349,462,3.349,463,3.349,464,4.619,465,3.672,467,3.807,468,3.807,469,3.807,470,3.807,471,2.7,472,2.7,473,3.807,474,2.7,475,2.7,476,2.7,477,2.39,478,2.39,479,2.39,483,2.7,484,3.807,485,1.574,486,2.7,487,1.689,492,3.807,494,1.707,499,2.7,500,2.7,502,2.7,504,2.7,507,2.7,509,3.807,510,4.089,511,3.349,512,2.7,514,2.7,515,2.7,517,1.511,518,1.707,519,1.511,520,1.511,521,1.707,522,1.511,523,1.511,524,2.159,525,1.707,526,1.248,577,1.365,595,1.365,648,4.056,666,2.159,690,3.526,750,1.511,751,3.17,752,2.004,753,2.004,754,2.004,755,2.004,756,2.004,757,2.004,758,2.004,759,2.004,760,2.004,761,2.004,762,2.004,763,2.004,764,2.004,765,2.004,766,2.004,767,1.707,768,2.004,769,2.004,770,3.932,771,2.004,772,3.17,773,2.004,774,2.004,775,2.004,776,2.004,777,3.17,778,3.932,779,2.004,780,2.004,781,2.004,782,2.004,783,2.004,784,2.004,785,2.004,786,2.004,787,2.004,788,2.004,789,2.004,790,2.004,791,3.17,792,2.004,793,2.004]],["title/classes/SvelteModule.html",[0,0.173,531,2.037]],["body/classes/SvelteModule.html",[0,0.148,2,0.41,3,0.223,4,0.199,5,0.199,7,0.153,8,0.464,9,1.221,12,1.173,13,2.479,28,1.667,29,1.274,31,1.107,32,0.023,33,1.044,34,0.509,35,0.984,43,1.565,45,0.979,60,0.979,61,1.241,65,2.455,66,1.617,87,0.223,122,1.507,124,2.243,135,0.009,136,0.013,137,0.009,142,1.623,155,2.012,161,1.148,167,4.708,222,1.582,223,2.51,224,2.51,225,2.56,226,2.51,235,3.149,260,1.396,280,2.707,352,3.327,374,2.49,375,2.254,376,2.904,377,2.56,378,2.31,379,2.56,384,2.31,385,2.152,391,1.891,392,1.891,393,1.891,397,3.813,398,2.068,531,2.49,532,3.444,533,2.953,535,3.973,538,2.953,542,2.068,543,2.068,794,5.438,795,2.586,796,3.036,797,3.036,798,3.036,799,3.036,800,3.036,801,3.036,802,3.036,803,3.036,804,2.289,805,3.036,806,3.036,807,3.036,808,3.036,809,3.036]],["title/classes/View.html",[0,0.173,222,1.017]],["body/classes/View.html",[0,0.189,2,0.524,3,0.285,4,0.254,5,0.254,7,0.196,8,0.549,12,1.388,26,1.687,27,4.369,28,2.681,29,1.203,31,1.563,32,0.023,33,1.474,34,0.552,35,1.389,36,4.334,38,0.78,43,1.385,87,0.285,123,2.923,135,0.012,136,0.016,137,0.012,142,1.385,161,1.305,189,2.923,222,1.471,398,2.641,477,3.868,478,3.868,479,3.868,510,4.335,517,3.868,519,2.923,520,3.868,522,2.923,523,3.868,524,4.167,666,3.494,810,2.923,811,5.13,812,3.877,813,3.877,814,3.877,815,3.868,816,4.369,817,4.369,818,3.877,819,3.877,820,3.877,821,3.877]],["title/interfaces/WeightMap.html",[320,0.515,822,1.89]],["body/interfaces/WeightMap.html",[0,0.259,2,0.555,3,0.301,4,0.269,5,0.269,7,0.269,9,1.189,29,0.776,32,0.023,38,0.826,45,0.945,87,0.301,99,1.441,135,0.013,136,0.017,137,0.013,142,1.283,243,1.904,285,2.087,320,0.858,322,1.578,399,2.472,485,2.038,487,2.187,639,2.038,822,3.453,823,3.058,824,2.357,825,4.105,826,4.105,827,3.058,828,3.814,829,2.796,830,3.058,831,2.556,832,2.556,833,2.556,834,2.556,835,2.556,836,2.556,837,2.556,838,2.556,839,2.556,840,2.357,841,2.796,842,2.796,843,2.796,844,3.627,845,2.796,846,2.796,847,2.796,848,2.796,849,2.556,850,2.796,851,2.796,852,2.796,853,2.796]],["title/classes/Workbench.html",[0,0.173,102,2.209]],["body/classes/Workbench.html",[0,0.112,2,0.311,3,0.169,4,0.151,5,0.151,7,0.262,8,0.378,9,1.103,12,0.956,13,2.241,26,1.002,29,1.218,31,1.097,32,0.023,33,1.035,34,0.511,35,0.975,38,0.463,40,0.956,43,1.455,45,1.046,60,0.922,61,0.941,63,2.953,64,1.068,65,2.37,66,1.881,87,0.169,99,1.406,102,2.199,105,2.663,124,1.998,135,0.007,136,0.011,137,0.007,142,1.321,155,1.639,156,1.226,161,1.18,222,1.637,223,2.392,224,2.392,225,2.236,226,2.392,243,1.766,260,1.137,280,2.412,320,0.334,342,1.143,347,2.199,348,2.028,349,2.133,350,2.663,374,2.028,375,2.407,377,2.236,378,1.881,379,2.236,384,1.881,385,1.753,394,1.753,395,2.676,422,2.289,457,3.236,526,3.001,527,1.736,577,1.568,728,1.736,729,1.736,735,1.736,804,1.736,854,1.736,855,3.659,856,2.302,857,3.531,858,3.735,859,2.302,860,2.302,861,2.302,862,3.008,863,2.302,864,2.302,865,2.302,866,3.239,867,3.659,868,2.302,869,2.302,870,2.302,871,2.302,872,2.302,873,1.961,874,1.961,875,1.961,876,1.961,877,1.961,878,1.961,879,3.008,880,1.961,881,3.008,882,1.961,883,3.008,884,1.961,885,1.961,886,1.961,887,1.961,888,1.961,889,1.961,890,1.961,891,3.008,892,1.961,893,1.961,894,3.008,895,3.008,896,4.103,897,1.961,898,1.961,899,1.961,900,1.961,901,1.961,902,1.961,903,1.961,904,1.961,905,1.961,906,1.961,907,1.961,908,1.961,909,1.961]],["title/interfaces/WorkbenchProps.html",[320,0.515,858,2.416]],["body/interfaces/WorkbenchProps.html",[0,0.137,3,0.207,4,0.185,5,0.185,7,0.245,8,0.441,9,0.828,13,1.681,32,0.023,34,0.535,35,0.934,38,0.568,40,1.113,45,0.947,60,1.006,61,1.154,63,2.746,64,1.31,65,2.05,66,2.192,87,0.207,99,1.534,102,1.758,105,3.102,124,1.582,135,0.009,136,0.013,137,0.009,142,0.991,155,1.909,156,1.504,161,1.287,222,1.392,223,1.401,224,1.401,225,1.31,226,1.401,243,1.967,260,0.909,320,0.41,322,1.085,342,1.401,347,3.023,348,2.787,349,2.042,374,1.621,375,2.496,377,1.31,379,1.31,385,1.401,394,2.647,395,2.562,422,3.02,457,3.023,526,3.321,527,2.129,577,1.923,728,2.129,729,2.129,735,2.129,804,2.129,854,2.129,855,2.404,858,3.632,862,2.404,866,4.274,867,4.828,873,2.404,874,2.404,875,2.404,876,2.404,877,2.404,878,2.404,879,3.504,880,2.404,881,3.504,882,2.404,883,3.504,884,2.404,885,2.404,886,2.404,887,2.404,888,2.404,889,2.404,890,2.404,891,3.504,892,2.404,893,2.404,894,3.504,895,3.504,896,4.542,897,2.404,898,2.404,899,2.404,900,2.404,901,2.404,902,2.404,903,2.404,904,2.404,905,2.404,906,2.404,907,2.404,908,2.404,909,2.404]],["title/classes/classBuilder.html",[0,0.173,840,2.037]],["body/classes/classBuilder.html",[0,0.223,2,0.62,3,0.242,4,0.216,5,0.216,7,0.232,8,0.491,9,1.332,12,1.242,26,1.432,29,1.178,31,1.46,32,0.023,33,1.377,34,0.49,35,1.298,38,0.923,39,1.345,43,1.377,45,1.067,85,4.5,87,0.242,99,1.242,135,0.01,136,0.014,137,0.01,142,1.5,243,1.478,285,1.841,320,0.767,399,2.13,485,1.634,487,1.753,639,1.634,822,3.472,823,3.669,824,1.89,827,2.635,828,4.025,829,2.241,830,2.635,831,2.049,832,2.049,833,2.049,834,2.049,835,2.049,836,2.049,837,2.049,838,2.049,839,2.049,840,2.635,841,3.598,842,3.125,843,2.241,844,3.125,845,3.893,846,2.241,847,3.125,848,3.125,849,2.049,850,2.241,851,2.241,852,2.241,853,2.241,910,4.589,911,4.589,912,4.589,913,4.589,914,3.29,915,3.29,916,3.29,917,3.29,918,3.29,919,3.29]],["title/interfaces/classConfig.html",[320,0.515,827,2.037]],["body/interfaces/classConfig.html",[0,0.313,2,0.541,3,0.294,4,0.262,5,0.262,7,0.264,8,0.561,9,1.175,32,0.023,34,0.427,38,0.805,45,0.93,87,0.294,99,1.418,135,0.012,136,0.016,137,0.012,142,1.262,243,1.687,285,2.195,320,0.848,322,1.539,399,2.984,485,1.987,487,2.132,639,1.987,822,3.3,823,2.299,824,2.299,827,3.354,828,3.788,829,2.726,830,3.008,831,2.493,832,2.493,833,2.493,834,2.493,835,2.493,836,2.493,837,2.493,838,2.493,839,2.493,840,2.299,841,2.726,842,2.726,843,2.726,844,3.568,845,2.726,846,2.726,847,2.726,848,2.726,849,2.493,850,2.726,851,2.726,852,2.726,853,2.726]],["title/coverage.html",[920,4.116]],["body/coverage.html",[0,0.332,1,1.925,5,0.127,6,1.653,11,1.034,32,0.023,34,0.158,40,0.525,63,0.901,65,0.746,67,1.322,74,1.209,83,1.322,102,1.209,135,0.006,136,0.01,137,0.006,138,1.653,139,1.653,151,2.554,156,1.034,162,2.493,163,2.493,164,1.653,168,1.464,169,2.623,170,1.653,171,1.653,180,1.464,181,1.653,182,1.653,202,1.653,221,1.653,222,0.557,240,1.209,241,2.33,245,1.209,250,1.322,251,1.653,256,1.322,258,1.322,262,1.653,320,0.871,321,1.464,323,2.33,329,1.464,332,1.209,333,2.105,343,1.115,349,0.964,364,1.653,372,1.322,373,2.33,375,0.793,381,1.322,394,0.964,395,1.209,410,1.653,415,2.33,416,2.33,457,1.209,458,1.653,459,1.653,485,2.38,529,1.653,530,1.653,531,1.115,546,1.464,547,1.653,606,1.464,607,3.193,608,1.653,609,1.322,610,2.734,616,1.464,639,3.61,644,1.464,645,1.653,646,1.653,647,1.464,648,2.734,649,1.653,689,1.653,691,2.632,750,1.464,794,1.653,795,1.653,810,1.464,822,1.034,823,2.753,824,2.753,827,1.115,828,1.115,830,1.115,840,1.115,854,2.33,858,1.322,920,1.653,921,1.653,922,1.941,923,1.941,924,3.739,925,7.013,926,1.653,927,7.053,928,2.632,929,1.653,930,1.653,931,2.632,932,1.653,933,5.107,934,4.39,935,3.851,936,1.941,937,4.39,938,3.09,939,2.632,940,1.941,941,1.653,942,1.941,943,1.941,944,5.048,945,5.048,946,1.653,947,1.653,948,4.794,949,1.653,950,1.653,951,1.653,952,1.653,953,1.653,954,1.653,955,1.653,956,1.653,957,1.653,958,1.653,959,1.653,960,1.653,961,1.653,962,1.653,963,1.653,964,1.653,965,1.653,966,1.653,967,1.653,968,1.653,969,1.653,970,1.653,971,1.653,972,1.941,973,1.941,974,4.39,975,1.653,976,1.653,977,1.653,978,3.09,979,1.941,980,1.941,981,2.632,982,1.653,983,1.653,984,1.653,985,1.653,986,1.653,987,1.653,988,1.941,989,1.941,990,1.653,991,1.941,992,1.941]],["title/dependencies.html",[993,2.967,994,3.215]],["body/dependencies.html",[32,0.023,61,1.901,135,0.014,136,0.018,137,0.014,146,3.961,186,3.167,209,3.167,215,3.167,253,3.506,254,3.506,327,4.723,328,3.961,994,3.506,995,4.65,996,4.65,997,4.65,998,4.65,999,4.65,1000,4.65,1001,3.961,1002,4.65,1003,4.65,1004,4.65,1005,4.65,1006,4.65,1007,4.65,1008,4.65,1009,4.65,1010,4.65,1011,4.65,1012,4.65,1013,4.65,1014,4.65,1015,4.65,1016,4.65,1017,4.65,1018,4.65,1019,4.65,1020,4.65,1021,4.65,1022,4.65,1023,4.65,1024,4.65,1025,4.65,1026,4.65,1027,4.65,1028,4.65]],["title/miscellaneous/enumerations.html",[1029,1.473,1030,3.632]],["body/miscellaneous/enumerations.html",[7,0.298,32,0.022,39,2.712,57,4.019,118,4.115,135,0.015,136,0.018,137,0.015,333,3.291,342,2.93,347,3.009,348,2.775,355,3.675,356,3.389,357,3.389,358,3.389,607,2.775,610,3.009,612,5.026,613,4.115,614,4.115,615,4.115,648,3.009,690,4.519,750,4.45,767,5.026,1029,2.399,1030,4.115,1031,4.832,1032,4.115,1033,4.832,1034,3.643,1035,4.832,1036,4.832]],["title/miscellaneous/functions.html",[1029,1.473,1037,3.632]],["body/miscellaneous/functions.html",[7,0.228,31,1.655,32,0.022,33,1.561,35,1.472,43,1.489,45,0.802,135,0.014,136,0.018,137,0.014,156,3.017,162,1.966,163,1.966,189,4.662,285,1.823,414,3.408,607,2.596,610,2.815,627,3.849,634,4.823,636,3.849,944,3.408,945,4.27,946,4.823,971,3.849,975,3.849,976,4.823,977,5.266,984,4.823,985,4.823,1029,2.244,1034,4.27,1037,3.849,1038,4.52,1039,4.52,1040,3.849,1041,5.662,1042,4.52,1043,4.52,1044,4.52,1045,5.662,1046,5.662,1047,4.52]],["title/index.html",[7,0.15,1048,2.527,1049,2.527]],["body/index.html",[1,3.111,4,0.369,32,0.019,135,0.012,136,0.016,137,0.012,186,2.537,293,3.172,303,3.172,305,2.808,320,0.541,327,4.54,420,2.808,422,2.661,623,2.808,815,2.808,994,3.766,1050,6.021,1051,5.635,1052,4.994,1053,4.994,1054,3.725,1055,3.725,1056,3.725,1057,3.725,1058,3.725,1059,3.725,1060,3.725,1061,6.021,1062,3.725,1063,3.725,1064,3.172,1065,3.725,1066,3.725,1067,3.725,1068,3.725,1069,3.725,1070,3.725,1071,3.725,1072,3.172,1073,2.808,1074,3.725,1075,4.994,1076,3.725,1077,3.725,1078,3.725,1079,4.994,1080,3.725,1081,3.725,1082,5.635,1083,3.725,1084,3.725,1085,3.725,1086,3.725,1087,3.725,1088,3.725,1089,3.725,1090,3.725,1091,3.725,1092,3.725,1093,3.725,1094,3.725,1095,3.725,1096,3.725,1097,3.725,1098,5.635,1099,3.725,1100,3.725,1101,3.725,1102,3.725,1103,5.635,1104,3.725,1105,3.725,1106,3.725,1107,3.172,1108,3.725,1109,3.725,1110,3.725,1111,5.635,1112,3.725,1113,3.725,1114,3.725,1115,3.725,1116,5.635,1117,4.994,1118,3.725,1119,3.725,1120,3.725,1121,3.725,1122,3.172,1123,3.725,1124,3.725,1125,3.725,1126,3.725,1127,3.725,1128,4.254,1129,3.725,1130,3.725,1131,4.994,1132,3.725,1133,4.994,1134,3.725,1135,4.994,1136,3.172,1137,3.172,1138,3.172,1139,3.725,1140,3.725,1141,3.725,1142,3.725,1143,3.725,1144,3.725,1145,3.725,1146,3.725,1147,3.725,1148,3.725]],["title/license.html",[1048,2.527,1049,2.527,1073,2.237]],["body/license.html",[32,0.017,135,0.013,136,0.017,137,0.013,596,4.138,682,3.664,690,2.93,849,2.679,921,3.664,1064,3.664,1072,3.664,1073,3.244,1122,3.664,1136,3.664,1137,3.664,1138,3.664,1149,6.044,1150,4.302,1151,4.302,1152,5.489,1153,4.302,1154,4.302,1155,4.302,1156,4.302,1157,4.302,1158,4.302,1159,5.489,1160,6.987,1161,4.302,1162,4.302,1163,6.044,1164,4.302,1165,5.489,1166,4.302,1167,4.302,1168,4.302,1169,4.302,1170,4.302,1171,4.302,1172,5.489,1173,4.302,1174,4.302,1175,4.302,1176,4.302,1177,4.302,1178,4.302,1179,4.302,1180,5.489,1181,5.489,1182,4.302,1183,4.302,1184,4.302,1185,4.302,1186,4.302,1187,4.302,1188,4.302,1189,4.302,1190,4.302,1191,4.302,1192,4.302,1193,4.302,1194,4.302,1195,4.302,1196,4.302,1197,4.302,1198,4.302,1199,4.302,1200,4.302,1201,4.302,1202,4.302,1203,4.302,1204,4.302,1205,4.302,1206,4.302,1207,4.302,1208,4.302,1209,4.302]],["title/modules.html",[422,2.575]],["body/modules.html",[32,0.02,135,0.018,136,0.02,137,0.018,422,3.029]],["title/overview.html",[1210,4.116]],["body/overview.html",[2,0.758,32,0.02,135,0.017,136,0.02,137,0.017,322,2.155,1210,4.775,1211,5.606,1212,5.606]],["title/interfaces/stateConfig.html",[320,0.515,828,2.037]],["body/interfaces/stateConfig.html",[0,0.251,2,0.83,3,0.287,4,0.257,5,0.257,7,0.261,8,0.553,9,1.162,32,0.023,34,0.471,35,1.172,38,0.788,45,0.916,87,0.287,99,1.397,135,0.012,136,0.016,137,0.012,142,1.244,243,1.978,285,2.111,320,0.839,322,1.505,399,2.963,485,1.944,487,2.086,639,1.944,822,3.272,823,2.248,824,2.248,827,3.527,828,3.839,829,4.183,830,2.965,831,2.438,832,2.438,833,2.438,834,2.438,835,2.438,836,2.438,837,2.438,838,2.438,839,2.438,840,2.248,841,2.666,842,2.666,843,2.666,844,3.516,845,2.666,846,2.666,847,2.666,848,2.666,849,2.438,850,2.666,851,2.666,852,2.666,853,2.666]],["title/miscellaneous/typealiases.html",[1029,1.473,1213,4.264]],["body/miscellaneous/typealiases.html",[7,0.273,32,0.022,34,0.441,135,0.017,136,0.02,137,0.017,524,4.303,666,3.69,810,4.085,815,4.085,816,4.614,817,4.614,1029,2.689,1214,5.417,1215,5.417]],["title/miscellaneous/variables.html",[1029,1.473,1216,3.632]],["body/miscellaneous/variables.html",[1,1.894,7,0.096,32,0.023,33,0.732,34,0.354,38,1.405,39,2.847,40,1.028,99,1.028,122,0.944,135,0.006,136,0.009,137,0.006,161,0.69,243,0.613,285,0.979,323,1.434,324,1.62,326,1.62,329,2.293,330,1.62,331,2.865,357,1.092,370,1.434,371,1.434,399,1.763,419,1.434,485,0.944,487,1.013,557,3.273,595,2.071,596,1.434,607,2.182,609,1.295,610,1.185,611,3.697,616,2.293,618,1.62,619,1.62,620,2.59,621,2.59,622,1.62,623,4.006,624,1.62,625,1.62,626,1.62,639,0.944,648,1.185,822,1.013,823,1.092,824,1.746,830,1.746,831,1.185,832,1.185,833,1.185,834,1.185,835,1.185,836,1.185,837,1.185,838,1.894,839,1.185,866,1.434,924,1.62,926,2.59,928,4.525,929,3.697,930,3.236,931,1.62,932,2.59,939,2.59,941,2.59,944,1.434,945,5.032,947,2.59,949,2.59,950,2.59,951,2.59,952,2.59,953,2.59,954,2.59,955,2.59,956,2.59,957,2.59,958,2.59,959,2.59,960,2.59,961,2.59,962,2.59,963,2.59,964,2.59,965,2.59,966,2.59,967,2.59,968,2.59,969,1.62,970,2.59,981,1.62,982,2.59,983,2.59,986,1.62,987,2.59,990,1.62,1001,1.62,1029,0.944,1032,1.62,1034,1.434,1040,5.651,1107,1.62,1128,1.62,1216,1.62,1217,1.902,1218,3.799,1219,4.34,1220,1.902,1221,3.041,1222,1.902,1223,1.902,1224,1.902,1225,1.902,1226,3.041,1227,1.902,1228,1.902,1229,3.041,1230,1.902,1231,3.041,1232,3.041,1233,1.902,1234,1.902,1235,1.902,1236,1.902,1237,1.902,1238,3.041,1239,4.34,1240,1.902,1241,3.041,1242,1.902,1243,1.902,1244,3.041,1245,1.902,1246,3.041,1247,1.902,1248,3.041,1249,3.041,1250,1.902,1251,1.902,1252,1.902,1253,1.902,1254,1.902,1255,3.041,1256,1.902,1257,3.041,1258,3.041,1259,4.34,1260,1.902,1261,3.041,1262,1.902,1263,1.902,1264,1.902,1265,1.902,1266,3.041,1267,3.041,1268,3.799,1269,1.902,1270,1.902,1271,3.041,1272,3.041,1273,1.902,1274,1.902,1275,1.902,1276,1.902,1277,3.041,1278,1.902,1279,1.902,1280,1.902,1281,1.902,1282,1.902,1283,1.902,1284,1.902,1285,1.902,1286,1.902,1287,1.902,1288,1.902,1289,1.902,1290,3.799,1291,4.34,1292,1.902,1293,1.902,1294,1.902,1295,1.902,1296,1.902,1297,1.902,1298,1.902,1299,1.902,1300,1.902,1301,1.902,1302,1.902,1303,1.902,1304,1.902,1305,1.902,1306,1.902,1307,1.902,1308,1.902,1309,1.902,1310,3.799,1311,3.041,1312,1.902,1313,1.902,1314,1.902,1315,1.902,1316,1.902]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":639,"title":{},"body":{"interfaces/RoutesValue.html":{},"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["0.28.1",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":933,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":934,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0123456789abcdef",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":666,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["1.1.5",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["1.6.4",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["1/21",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["1/24",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["1/28",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":485,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["11",{"_index":1212,"title":{},"body":{"overview.html":{}}}],["1280",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.6.0",{"_index":1008,"title":{},"body":{"dependencies.html":{}}}],["1f1f1f",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":687,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["2.2.0",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":832,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["2020",{"_index":1150,"title":{},"body":{"license.html":{}}}],["26",{"_index":1211,"title":{},"body":{"overview.html":{}}}],["272728",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e2f30",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":689,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["3.0.1",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["3.1.3",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1024,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":747,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["300",{"_index":834,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["393939",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3f3f3f",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":691,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["4.3.1",{"_index":1002,"title":{},"body":{"dependencies.html":{}}}],["4.3.5",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":836,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["454545",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["464749",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":741,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["5.1.1",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["5580c0",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5d5f61",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["6.4.4",{"_index":1006,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":838,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["7.0.2",{"_index":1003,"title":{},"body":{"dependencies.html":{}}}],["729cd4",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["768",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["800",{"_index":487,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["808080",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["960",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_bgcolorclassname",{"_index":461,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["_growclassname",{"_index":462,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["_height",{"_index":549,"title":{},"body":{"classes/Rectangle.html":{}}}],["_shrinkclassname",{"_index":463,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["_type",{"_index":140,"title":{},"body":{"classes/AppearanceService.html":{}}}],["_view",{"_index":376,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["_width",{"_index":550,"title":{},"body":{"classes/Rectangle.html":{}}}],["ability",{"_index":418,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["above",{"_index":1179,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":167,"title":{},"body":{"classes/Base.html":{},"classes/Controller.html":{},"classes/SvelteModule.html":{}}}],["accessors",{"_index":268,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{}}}],["action",{"_index":1136,"title":{},"body":{"index.html":{},"license.html":{}}}],["active",{"_index":837,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["activeexpand",{"_index":658,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["activeid",{"_index":650,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["add",{"_index":446,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["add(moduleid",{"_index":423,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["addconfig",{"_index":910,"title":{},"body":{"classes/classBuilder.html":{}}}],["addconfig(config",{"_index":847,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["added",{"_index":1140,"title":{},"body":{"index.html":{}}}],["addexpandbutton",{"_index":467,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["aliases",{"_index":1214,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":1170,"title":{},"body":{"license.html":{}}}],["anycolor",{"_index":183,"title":{},"body":{"classes/ColorRef.html":{}}}],["anycolorhex",{"_index":1047,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":1,"title":{"classes/App.html":{}},"body":{"classes/App.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app(document.body",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.quit",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appearance",{"_index":194,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearanceservice",{"_index":67,"title":{"classes/AppearanceService.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"coverage.html":{}}}],["appearancetype",{"_index":57,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"miscellaneous/enumerations.html":{}}}],["appearancetype.any",{"_index":200,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearancetype.dark",{"_index":116,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{}}}],["appearancetype.light",{"_index":201,"title":{},"body":{"classes/ColorRef.html":{}}}],["appeared",{"_index":238,"title":{},"body":{"classes/Controller.html":{}}}],["append",{"_index":477,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["append(child",{"_index":517,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["appending",{"_index":234,"title":{},"body":{"classes/Controller.html":{}}}],["application",{"_index":1128,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["applicationmenus",{"_index":73,"title":{},"body":{"classes/App.html":{}}}],["aps",{"_index":111,"title":{},"body":{"classes/App.html":{}}}],["aps.onmodechanged((type",{"_index":113,"title":{},"body":{"classes/App.html":{}}}],["arising",{"_index":1207,"title":{},"body":{"license.html":{}}}],["array",{"_index":294,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["associated",{"_index":1161,"title":{},"body":{"license.html":{}}}],["async",{"_index":13,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["authors",{"_index":1197,"title":{},"body":{"license.html":{}}}],["auto",{"_index":815,"title":{},"body":{"classes/View.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["automatically",{"_index":1139,"title":{},"body":{"index.html":{}}}],["available",{"_index":1068,"title":{},"body":{"index.html":{}}}],["await",{"_index":97,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["bababa",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["background",{"_index":269,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["background(background",{"_index":306,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["bar.svelte",{"_index":78,"title":{},"body":{"classes/App.html":{}}}],["base",{"_index":74,"title":{"classes/Base.html":{}},"body":{"classes/App.html":{},"classes/Base.html":{},"classes/GeometryMixin.html":{},"coverage.html":{}}}],["base:4",{"_index":281,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["basemenu",{"_index":168,"title":{"classes/BaseMenu.html":{}},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["bg",{"_index":483,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["bgcolor",{"_index":947,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["board.controller.ts",{"_index":649,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["board.controller.ts:10",{"_index":673,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:11",{"_index":667,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:13",{"_index":668,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:14",{"_index":665,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:31",{"_index":681,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:46",{"_index":684,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:5",{"_index":671,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:53",{"_index":674,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:6",{"_index":669,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:61",{"_index":685,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:7",{"_index":670,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:72",{"_index":678,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:82",{"_index":676,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:9",{"_index":672,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.view.ts",{"_index":939,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":325,"title":{},"body":{"interfaces/ISettings.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["bootstrap",{"_index":14,"title":{},"body":{"classes/App.html":{}}}],["border",{"_index":270,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["border(border",{"_index":314,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["bordercolor",{"_index":949,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["borderraidus",{"_index":553,"title":{},"body":{"classes/Rectangle.html":{}}}],["borderraidus(borderraidus",{"_index":584,"title":{},"body":{"classes/Rectangle.html":{}}}],["bottom",{"_index":590,"title":{},"body":{"classes/Rectangle.html":{}}}],["bottomleftradius",{"_index":248,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["bottomrightradius",{"_index":249,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["box",{"_index":1123,"title":{},"body":{"index.html":{}}}],["break",{"_index":432,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["browserwindow",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder",{"_index":1125,"title":{},"body":{"index.html":{}}}],["builder.ts",{"_index":824,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["builder.ts:11",{"_index":826,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["builder.ts:24",{"_index":913,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:30",{"_index":916,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:33",{"_index":915,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:36",{"_index":917,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:44",{"_index":919,"title":{},"body":{"classes/classBuilder.html":{}}}],["building",{"_index":1080,"title":{},"body":{"index.html":{}}}],["bundled",{"_index":1091,"title":{},"body":{"index.html":{}}}],["button",{"_index":500,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["c",{"_index":849,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"license.html":{},"interfaces/stateConfig.html":{}}}],["c0c0c1",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c4666f",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c6c6c6",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":419,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"miscellaneous/variables.html":{}}}],["cancelformerge",{"_index":334,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["cancelwaitformerge",{"_index":468,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["canvas",{"_index":203,"title":{},"body":{"classes/Context.html":{}}}],["canvas/index.ts",{"_index":646,"title":{},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["canvas/skia",{"_index":163,"title":{},"body":{"classes/Base.html":{},"classes/Context.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["canvaskit",{"_index":209,"title":{},"body":{"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/Rectangle.html":{},"dependencies.html":{}}}],["case",{"_index":199,"title":{},"body":{"classes/ColorRef.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["center",{"_index":273,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["cgray",{"_index":484,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["charge",{"_index":1156,"title":{},"body":{"license.html":{}}}],["check",{"_index":324,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["checkexpandstate",{"_index":659,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["checkexpandstate(clientx",{"_index":675,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["child",{"_index":519,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["childs",{"_index":522,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["ck",{"_index":204,"title":{},"body":{"classes/Context.html":{},"classes/GeometryMixin.html":{}}}],["ck.paint",{"_index":315,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["claim",{"_index":1200,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classbuilder",{"_index":840,"title":{"classes/classBuilder.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classconfig",{"_index":827,"title":{"interfaces/classConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["classname",{"_index":509,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["clear",{"_index":845,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["clientx",{"_index":362,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{}}}],["clienty",{"_index":363,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{}}}],["clone",{"_index":466,"title":{},"body":{"classes/ModuleItem.html":{}}}],["code",{"_index":1061,"title":{},"body":{"index.html":{}}}],["col",{"_index":347,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":186,"title":{},"body":{"classes/ColorRef.html":{},"classes/GeometryMixin.html":{},"dependencies.html":{},"index.html":{}}}],["color(appearancetype",{"_index":192,"title":{},"body":{"classes/ColorRef.html":{}}}],["color.ts",{"_index":945,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["colorref",{"_index":180,"title":{"classes/ColorRef.html":{}},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["column",{"_index":730,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["common",{"_index":1096,"title":{},"body":{"index.html":{}}}],["community",{"_index":1059,"title":{},"body":{"index.html":{}}}],["comp",{"_index":532,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["compilation",{"_index":1115,"title":{},"body":{"index.html":{}}}],["compile",{"_index":1111,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":1131,"title":{},"body":{"index.html":{}}}],["completed",{"_index":896,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["component",{"_index":544,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["components",{"_index":1098,"title":{},"body":{"index.html":{}}}],["concrete",{"_index":1054,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1178,"title":{},"body":{"license.html":{}}}],["config",{"_index":85,"title":{},"body":{"classes/App.html":{},"classes/classBuilder.html":{}}}],["config.workbench",{"_index":104,"title":{},"body":{"classes/App.html":{}}}],["configs",{"_index":914,"title":{},"body":{"classes/classBuilder.html":{}}}],["configs.foreach((config",{"_index":843,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["configured",{"_index":1127,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1208,"title":{},"body":{"license.html":{}}}],["const",{"_index":99,"title":{},"body":{"classes/App.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/Rectangle.html":{},"interfaces/RoutesValue.html":{},"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"classes/App.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/ModuleFactory.html":{},"classes/Rectangle.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["constructor(@inject('modulefactory",{"_index":873,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["constructor(anycolor",{"_index":187,"title":{},"body":{"classes/ColorRef.html":{}}}],["constructor(ck",{"_index":208,"title":{},"body":{"classes/Context.html":{}}}],["constructor(configs",{"_index":842,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["constructor(container",{"_index":449,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["constructor(context",{"_index":554,"title":{},"body":{"classes/Rectangle.html":{}}}],["constructor(modulefactory",{"_index":856,"title":{},"body":{"classes/Workbench.html":{}}}],["constructor(private",{"_index":88,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SplitBoardController.html":{}}}],["constructor(root",{"_index":27,"title":{},"body":{"classes/App.html":{},"classes/View.html":{}}}],["constructor(view",{"_index":664,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["container",{"_index":10,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["containermodule",{"_index":157,"title":{},"body":{"classes/AppearanceService.html":{}}}],["contentview",{"_index":464,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["contentview.classlist.add('flex",{"_index":772,"title":{},"body":{"classes/SplitItemView.html":{}}}],["context",{"_index":11,"title":{"classes/Context.html":{}},"body":{"classes/App.html":{},"classes/Base.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/Rectangle.html":{},"coverage.html":{}}}],["contextisolation",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":1204,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1146,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":1143,"title":{},"body":{"index.html":{}}}],["controlaccentcolor",{"_index":950,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlbackgroundcolor",{"_index":951,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controldisabledcolor",{"_index":952,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlforbiddencolor",{"_index":953,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlhighlightcolor",{"_index":954,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":65,"title":{"classes/Controller.html":{}},"body":{"classes/App.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["controller:10",{"_index":391,"title":{},"body":{"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:12",{"_index":542,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:14",{"_index":393,"title":{},"body":{"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:16",{"_index":389,"title":{},"body":{"classes/MenuBar.html":{}}}],["controller:17",{"_index":392,"title":{},"body":{"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:23",{"_index":390,"title":{},"body":{"classes/MenuBar.html":{}}}],["controller:24",{"_index":543,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:28",{"_index":868,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:47",{"_index":871,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:61",{"_index":869,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:65",{"_index":872,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:68",{"_index":870,"title":{},"body":{"classes/Workbench.html":{}}}],["copies",{"_index":1172,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1159,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1149,"title":{},"body":{"license.html":{}}}],["corner",{"_index":255,"title":{},"body":{"classes/DefaultShapeMixin.html":{}}}],["cornermixin",{"_index":240,"title":{"classes/CornerMixin.html":{}},"body":{"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{}}}],["cornerradius",{"_index":242,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["cosmic",{"_index":1050,"title":{},"body":{"index.html":{}}}],["cosmic/core/browser",{"_index":66,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["cosmic/core/common",{"_index":62,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{}}}],["cosmic/core/parts",{"_index":64,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["cosmic/workbench/services/appearance",{"_index":68,"title":{},"body":{"classes/App.html":{}}}],["cosmic/workbench/services/menu",{"_index":71,"title":{},"body":{"classes/App.html":{}}}],["coverage",{"_index":920,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createproject",{"_index":982,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["createproject(project",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createprojectdto",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createwindow",{"_index":926,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["crosshair",{"_index":354,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["current",{"_index":1132,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":851,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["d00000",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d1905d",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d2r",{"_index":1056,"title":{},"body":{"index.html":{}}}],["d7d7d7",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d9d9d9",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":1201,"title":{},"body":{"license.html":{}}}],["dark",{"_index":118,"title":{},"body":{"classes/App.html":{},"miscellaneous/enumerations.html":{}}}],["dark:bg",{"_index":486,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["darkcolor",{"_index":184,"title":{},"body":{"classes/ColorRef.html":{}}}],["darkcolorhex",{"_index":1046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dashpattern",{"_index":298,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["date.now",{"_index":400,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["deal",{"_index":1162,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1209,"title":{},"body":{"license.html":{}}}],["debugging",{"_index":1134,"title":{},"body":{"index.html":{}}}],["default",{"_index":38,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":330,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["defaultscope",{"_index":90,"title":{},"body":{"classes/App.html":{}}}],["defaultshapemixin",{"_index":250,"title":{"classes/DefaultShapeMixin.html":{}},"body":{"classes/DefaultShapeMixin.html":{},"classes/Rectangle.html":{},"coverage.html":{}}}],["defaultweightmap",{"_index":830,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["dependencies",{"_index":994,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["design",{"_index":1051,"title":{},"body":{"index.html":{}}}],["design/atom",{"_index":626,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["design_atom",{"_index":615,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/enumerations.html":{}}}],["destroy",{"_index":377,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["dev",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["develop",{"_index":1057,"title":{},"body":{"index.html":{}}}],["development",{"_index":1066,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":335,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["directionstyles",{"_index":767,"title":{},"body":{"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["directionstyles[direction",{"_index":792,"title":{},"body":{"classes/SplitItemView.html":{}}}],["directiontype",{"_index":342,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["directiontype.col",{"_index":728,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["directiontype.row",{"_index":734,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["directiontype[props.type",{"_index":880,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["disabled",{"_index":839,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["disappear",{"_index":239,"title":{},"body":{"classes/Controller.html":{}}}],["dist/workbench/desktop",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":1137,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribution",{"_index":1117,"title":{},"body":{"index.html":{}}}],["divided",{"_index":1088,"title":{},"body":{"index.html":{}}}],["document.body.classlist.add('mode",{"_index":117,"title":{},"body":{"classes/App.html":{}}}],["document.body.classlist.remove('mode",{"_index":119,"title":{},"body":{"classes/App.html":{}}}],["document.createelement('div",{"_index":398,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/SvelteModule.html":{},"classes/View.html":{}}}],["document.queryselector('#main",{"_index":128,"title":{},"body":{"classes/App.html":{}}}],["documentation",{"_index":921,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":236,"title":{},"body":{"classes/Controller.html":{}}}],["draft",{"_index":1141,"title":{},"body":{"index.html":{}}}],["draw",{"_index":206,"title":{},"body":{"classes/Context.html":{},"classes/Rectangle.html":{}}}],["e",{"_index":355,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["e0e0e0",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":1092,"title":{},"body":{"index.html":{}}}],["electron",{"_index":327,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{},"index.html":{}}}],["electron/.exec(process.execpath",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["electronstore",{"_index":326,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":235,"title":{},"body":{"classes/Controller.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["enableremotemodule",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entire",{"_index":1086,"title":{},"body":{"index.html":{}}}],["enum",{"_index":346,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/RoutesValue.html":{},"classes/SplitItemView.html":{}}}],["enumerations",{"_index":1030,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["es",{"_index":421,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["event",{"_index":682,"title":{},"body":{"classes/SplitBoardController.html":{},"license.html":{}}}],["event.clientx",{"_index":707,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.clienty",{"_index":694,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.preventdefault",{"_index":708,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.stoppropagation",{"_index":709,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.target",{"_index":701,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["eventemitter2",{"_index":146,"title":{},"body":{"classes/AppearanceService.html":{},"dependencies.html":{}}}],["everyone",{"_index":1069,"title":{},"body":{"index.html":{}}}],["evt",{"_index":141,"title":{},"body":{"classes/AppearanceService.html":{}}}],["exist",{"_index":447,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["exist(moduleid",{"_index":437,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["expand",{"_index":465,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{}}}],["expand.svelte",{"_index":766,"title":{},"body":{"classes/SplitItemView.html":{}}}],["expandactive",{"_index":651,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandleavehandler",{"_index":652,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmouseuphandler",{"_index":653,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmovehandler",{"_index":654,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandnewitem",{"_index":350,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Workbench.html":{}}}],["expandnewitem(view",{"_index":862,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["expandtype",{"_index":655,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["explorer/index.ts",{"_index":608,"title":{},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["explorer/project/api.ts",{"_index":981,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["explorer/routes.ts",{"_index":610,"title":{},"body":{"interfaces/RoutesValue.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["explorer/team/api.ts",{"_index":986,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":87,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["express",{"_index":1188,"title":{},"body":{"license.html":{}}}],["extends",{"_index":260,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["f2f2f2",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f9f9f9",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factory.ts",{"_index":416,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"coverage.html":{}}}],["factory.ts:11",{"_index":450,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:13",{"_index":451,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:14",{"_index":452,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:30",{"_index":455,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:33",{"_index":454,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:36",{"_index":456,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["false",{"_index":331,"title":{},"body":{"interfaces/ISettings.html":{},"classes/SplitBoardController.html":{},"miscellaneous/variables.html":{}}}],["ffae2b",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["file://${join(__dirname",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":1138,"title":{},"body":{"index.html":{},"license.html":{}}}],["fills",{"_index":263,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{}}}],["fillstyleid",{"_index":300,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["first",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fitness",{"_index":1193,"title":{},"body":{"license.html":{}}}],["flex",{"_index":510,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["flowvalue",{"_index":524,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["fn",{"_index":150,"title":{},"body":{"classes/AppearanceService.html":{}}}],["focus",{"_index":833,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":1177,"title":{},"body":{"license.html":{}}}],["fourthbgcolor",{"_index":955,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":1155,"title":{},"body":{"license.html":{}}}],["full",{"_index":773,"title":{},"body":{"classes/SplitItemView.html":{}}}],["function",{"_index":151,"title":{},"body":{"classes/AppearanceService.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/Module.html":{},"interfaces/RoutesValue.html":{},"classes/SplitBoardController.html":{},"coverage.html":{}}}],["functions",{"_index":1037,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1175,"title":{},"body":{"license.html":{}}}],["geometry",{"_index":259,"title":{},"body":{"classes/DefaultShapeMixin.html":{}}}],["geometrymixin",{"_index":258,"title":{"classes/GeometryMixin.html":{}},"body":{"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"coverage.html":{}}}],["get(moduleid",{"_index":435,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["getallteams",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getbackground",{"_index":282,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["getborder",{"_index":287,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["getborderraidus",{"_index":570,"title":{},"body":{"classes/Rectangle.html":{}}}],["getcanvas",{"_index":207,"title":{},"body":{"classes/Context.html":{}}}],["getcanvaskit",{"_index":977,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcompleteroute",{"_index":984,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcompleteroute(route",{"_index":627,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/functions.html":{}}}],["getheight",{"_index":566,"title":{},"body":{"classes/Rectangle.html":{}}}],["getting",{"_index":1048,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwidth",{"_index":562,"title":{},"body":{"classes/Rectangle.html":{}}}],["github",{"_index":1135,"title":{},"body":{"index.html":{}}}],["going",{"_index":232,"title":{},"body":{"classes/Controller.html":{}}}],["granted",{"_index":1154,"title":{},"body":{"license.html":{}}}],["graphql",{"_index":1007,"title":{},"body":{"dependencies.html":{}}}],["gridbackgroundcolor",{"_index":956,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":72,"title":{},"body":{"classes/App.html":{}}}],["group/base",{"_index":170,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["group/index.ts",{"_index":373,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["group/index.ts:13",{"_index":382,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:15",{"_index":380,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:19",{"_index":386,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:28",{"_index":387,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:31",{"_index":383,"title":{},"body":{"classes/MenuBar.html":{}}}],["groupmenu",{"_index":129,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.getmenuinsatance().init(menu.title",{"_index":133,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.initcontainer(header",{"_index":131,"title":{},"body":{"classes/App.html":{}}}],["groupmenuservice",{"_index":173,"title":{},"body":{"classes/BaseMenu.html":{}}}],["grow",{"_index":511,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["guide",{"_index":1067,"title":{},"body":{"index.html":{}}}],["handle",{"_index":597,"title":{},"body":{"classes/Rectangle.html":{}}}],["header",{"_index":127,"title":{},"body":{"classes/App.html":{}}}],["height",{"_index":371,"title":{},"body":{"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"miscellaneous/variables.html":{}}}],["height(height",{"_index":582,"title":{},"body":{"classes/Rectangle.html":{}}}],["here",{"_index":1063,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1153,"title":{},"body":{"license.html":{}}}],["hexdigits",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hide",{"_index":499,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["hideexpandbutton",{"_index":469,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["holders",{"_index":1198,"title":{},"body":{"license.html":{}}}],["hor",{"_index":686,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["horizontal",{"_index":729,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["host",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hover",{"_index":835,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["htmlelement",{"_index":28,"title":{},"body":{"classes/App.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{}}}],["http://localhost:5000/workbench/desktop",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":399,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":374,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Rectangle.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["implied",{"_index":1189,"title":{},"body":{"license.html":{}}}],["import",{"_index":60,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["import(moduleid).then((modulesource",{"_index":440,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["include",{"_index":1095,"title":{},"body":{"index.html":{}}}],["included",{"_index":1182,"title":{},"body":{"license.html":{}}}],["including",{"_index":1165,"title":{},"body":{"license.html":{}}}],["independently",{"_index":1093,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index.svelte",{"_index":545,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["indexable",{"_index":825,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["ing",{"_index":1052,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":280,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{}}}],["init",{"_index":378,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{}}}],["init(props",{"_index":385,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["initframe",{"_index":15,"title":{},"body":{"classes/App.html":{}}}],["initial",{"_index":816,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["initmenu(menuitems",{"_index":174,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenus",{"_index":16,"title":{},"body":{"classes/App.html":{}}}],["initmodules",{"_index":17,"title":{},"body":{"classes/App.html":{}}}],["initnavigationbar",{"_index":18,"title":{},"body":{"classes/App.html":{}}}],["initpreferences",{"_index":19,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel",{"_index":20,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel(container",{"_index":50,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel",{"_index":21,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel(container",{"_index":52,"title":{},"body":{"classes/App.html":{}}}],["initstatusbar",{"_index":22,"title":{},"body":{"classes/App.html":{}}}],["initstyle",{"_index":23,"title":{},"body":{"classes/App.html":{}}}],["initstylemode",{"_index":24,"title":{},"body":{"classes/App.html":{}}}],["initstylemode(type",{"_index":56,"title":{},"body":{"classes/App.html":{}}}],["initwithcomponent",{"_index":533,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["initwithcomponent(target",{"_index":538,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["initworkarea",{"_index":25,"title":{},"body":{"classes/App.html":{}}}],["inject",{"_index":156,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject(token",{"_index":1042,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":155,"title":{},"body":{"classes/AppearanceService.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["insertconfig",{"_index":911,"title":{},"body":{"classes/classBuilder.html":{}}}],["insertconfig(config",{"_index":848,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["inside",{"_index":274,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["install",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["instanceof",{"_index":105,"title":{},"body":{"classes/App.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["interface",{"_index":320,"title":{"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"interfaces/RoutesValue.html":{},"interfaces/WeightMap.html":{},"interfaces/WorkbenchProps.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}},"body":{"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"interfaces/RoutesValue.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["interfaces",{"_index":322,"title":{},"body":{"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"interfaces/RoutesValue.html":{},"interfaces/WeightMap.html":{},"interfaces/WorkbenchProps.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["inversify",{"_index":61,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"dependencies.html":{}}}],["ipc",{"_index":1100,"title":{},"body":{"index.html":{}}}],["isettings",{"_index":321,"title":{"interfaces/ISettings.html":{}},"body":{"interfaces/ISettings.html":{},"coverage.html":{}}}],["isplitboardview",{"_index":332,"title":{"interfaces/ISplitBoardView.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{},"coverage.html":{}}}],["isprod",{"_index":928,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isshrink",{"_index":470,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["issues",{"_index":1062,"title":{},"body":{"index.html":{}}}],["item",{"_index":526,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.id",{"_index":408,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["item.loader",{"_index":883,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.loader.then((module",{"_index":891,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.module",{"_index":905,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.moduleid",{"_index":527,"title":{},"body":{"classes/ModuleItem.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.root",{"_index":703,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientheight",{"_index":737,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientwidth",{"_index":733,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.getboundingclientrect().left",{"_index":732,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.getboundingclientrect().top",{"_index":736,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.setcontent(module.view",{"_index":906,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.ts",{"_index":459,"title":{},"body":{"classes/ModuleItem.html":{},"coverage.html":{}}}],["item.ts:5",{"_index":480,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.ts:6",{"_index":482,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.ts:7",{"_index":481,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.ts:8",{"_index":495,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.view",{"_index":345,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["item.view.ts",{"_index":750,"title":{},"body":{"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["item.view.ts:12",{"_index":753,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:13",{"_index":754,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:14",{"_index":752,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:16",{"_index":755,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:17",{"_index":751,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:25",{"_index":761,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:32",{"_index":760,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:39",{"_index":763,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:46",{"_index":764,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:53",{"_index":759,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:57",{"_index":762,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:63",{"_index":756,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:67",{"_index":758,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:71",{"_index":765,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:77",{"_index":757,"title":{},"body":{"classes/SplitItemView.html":{}}}],["itemgeneratedelegate",{"_index":349,"title":{"interfaces/ItemGenerateDelegate.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["items",{"_index":336,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["join(__dirname",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":617,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["keycode",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["kind",{"_index":1187,"title":{},"body":{"license.html":{}}}],["kit.ts",{"_index":976,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["labelcolor",{"_index":957,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["layout",{"_index":257,"title":{},"body":{"classes/DefaultShapeMixin.html":{}}}],["layoutmixin",{"_index":256,"title":{"classes/LayoutMixin.html":{}},"body":{"classes/DefaultShapeMixin.html":{},"classes/LayoutMixin.html":{},"coverage.html":{}}}],["left",{"_index":585,"title":{},"body":{"classes/Rectangle.html":{}}}],["length",{"_index":360,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["liability",{"_index":1202,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1199,"title":{},"body":{"license.html":{}}}],["license",{"_index":1073,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["light",{"_index":1036,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lightcolor",{"_index":185,"title":{},"body":{"classes/ColorRef.html":{}}}],["lightcolorhex",{"_index":1045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["limitation",{"_index":1166,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1190,"title":{},"body":{"license.html":{}}}],["linux",{"_index":1120,"title":{},"body":{"index.html":{}}}],["liveresize",{"_index":660,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["liveresize(clientx",{"_index":677,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["load",{"_index":448,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["load(moduleid",{"_index":439,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["loader",{"_index":460,"title":{},"body":{"classes/ModuleItem.html":{}}}],["loading",{"_index":411,"title":{},"body":{"interfaces/Module.html":{}}}],["local",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":1001,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":932,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error(json.stringify(err",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lowboardroot",{"_index":941,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":429,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.inrequestscope",{"_index":434,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.insingletonscope",{"_index":431,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.intransientscope",{"_index":433,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["macos",{"_index":1118,"title":{},"body":{"index.html":{}}}],["main",{"_index":1102,"title":{},"body":{"index.html":{}}}],["mainwindow",{"_index":929,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mainwindow.loadurl(url).catch((err",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.on('closed",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.webcontents.opendevtools",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor",{"_index":946,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makecolor('#000000",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#3f3f3f",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#5580c0",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#729cd4",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#bababa",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c0c0c1",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c4666f",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c6c6c6",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d00000",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d1905d",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d7d7d7",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d9d9d9",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#e0e0e0",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f2f2f2",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f9f9f9",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffae2b",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffffff",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor(anycolorhex",{"_index":1044,"title":{},"body":{"miscellaneous/functions.html":{}}}],["map",{"_index":41,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["matching",{"_index":136,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":132,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["menu(this._view",{"_index":402,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["menu.id",{"_index":409,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["menu.items",{"_index":134,"title":{},"body":{"classes/App.html":{}}}],["menu.ts",{"_index":171,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["menu/config",{"_index":75,"title":{},"body":{"classes/App.html":{}}}],["menubar",{"_index":372,"title":{"classes/MenuBar.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["menugroupservice",{"_index":70,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["menuinstance",{"_index":172,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuitemconfig",{"_index":175,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuitems",{"_index":179,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuprops",{"_index":381,"title":{"interfaces/MenuProps.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["merchantability",{"_index":1192,"title":{},"body":{"license.html":{}}}],["merge",{"_index":690,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["metadata",{"_index":1015,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":12,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["meuns",{"_index":396,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["minheight",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minimum",{"_index":1077,"title":{},"body":{"index.html":{}}}],["minwidth",{"_index":866,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1029,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1072,"title":{},"body":{"index.html":{},"license.html":{}}}],["mixer",{"_index":254,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"classes/Rectangle.html":{},"dependencies.html":{}}}],["mixin",{"_index":252,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"classes/Rectangle.html":{}}}],["mixin(cornermixin",{"_index":261,"title":{},"body":{"classes/DefaultShapeMixin.html":{}}}],["mixin(defaultshapemixin",{"_index":576,"title":{},"body":{"classes/Rectangle.html":{}}}],["mixin/shape",{"_index":575,"title":{},"body":{"classes/Rectangle.html":{}}}],["mode",{"_index":740,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["modify",{"_index":1168,"title":{},"body":{"license.html":{}}}],["module",{"_index":375,"title":{"interfaces/Module.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["module.init(props",{"_index":445,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["module.ts",{"_index":795,"title":{},"body":{"classes/SvelteModule.html":{},"coverage.html":{}}}],["module.ts:10",{"_index":798,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:16",{"_index":800,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:22",{"_index":801,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:28",{"_index":799,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:36",{"_index":802,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:8",{"_index":797,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:9",{"_index":796,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.viewdiddisappear",{"_index":895,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["module.viewwillappear",{"_index":894,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["moduleconfig",{"_index":394,"title":{"interfaces/ModuleConfig.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modulefactory",{"_index":63,"title":{"classes/ModuleFactory.html":{}},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modulefactory(this.container",{"_index":100,"title":{},"body":{"classes/App.html":{}}}],["modulefactory.load(config.workbench.id",{"_index":103,"title":{},"body":{"classes/App.html":{}}}],["moduleid",{"_index":453,"title":{},"body":{"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{}}}],["moduleitem",{"_index":457,"title":{"classes/ModuleItem.html":{}},"body":{"classes/ModuleItem.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modules",{"_index":422,"title":{"modules.html":{}},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"index.html":{},"modules.html":{}}}],["modulesource.default",{"_index":442,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["monorepo",{"_index":1085,"title":{},"body":{"index.html":{}}}],["more",{"_index":303,"title":{},"body":{"classes/GeometryMixin.html":{},"index.html":{}}}],["mousedown",{"_index":710,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["mouseevent",{"_index":680,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["mutation",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n",{"_index":358,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":33,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["navigation",{"_index":76,"title":{},"body":{"classes/App.html":{}}}],["navigationbar",{"_index":121,"title":{},"body":{"classes/App.html":{}}}],["new",{"_index":40,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1112,"title":{},"body":{"index.html":{}}}],["none",{"_index":817,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["noninfringement",{"_index":1196,"title":{},"body":{"license.html":{}}}],["normalizeweight",{"_index":912,"title":{},"body":{"classes/classBuilder.html":{}}}],["normalizeweight(config",{"_index":918,"title":{},"body":{"classes/classBuilder.html":{}}}],["nothing",{"_index":1081,"title":{},"body":{"index.html":{}}}],["notice",{"_index":1180,"title":{},"body":{"license.html":{}}}],["notification",{"_index":930,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":1126,"title":{},"body":{"index.html":{}}}],["null",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":243,"title":{},"body":{"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":1158,"title":{},"body":{"license.html":{}}}],["offsetx",{"_index":738,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["offsety",{"_index":739,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["olditem",{"_index":351,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["onmodechanged",{"_index":143,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmodechanged(fn",{"_index":148,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmousedown",{"_index":661,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["onmousedown(event",{"_index":679,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["operationstore",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":35,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{}}}],["options",{"_index":413,"title":{},"body":{"interfaces/Module.html":{}}}],["orderedconfigs",{"_index":841,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["organization",{"_index":1147,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1206,"title":{},"body":{"license.html":{}}}],["out",{"_index":1122,"title":{},"body":{"index.html":{},"license.html":{}}}],["outside",{"_index":275,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["overview",{"_index":1210,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":881,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["p.id",{"_index":885,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["package",{"_index":993,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":1090,"title":{},"body":{"index.html":{}}}],["packaging",{"_index":1114,"title":{},"body":{"index.html":{}}}],["page",{"_index":1108,"title":{},"body":{"index.html":{}}}],["paint",{"_index":271,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{}}}],["paint.setantialias(true",{"_index":311,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["paint.setcolor(ck.parsecolorstring('#ee0033",{"_index":318,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["paint.setcolor(color",{"_index":309,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["paint.setstrokewidth(20",{"_index":317,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["paint.setstyle(ck.paintstyle.stroke",{"_index":316,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["paint.setstyle(this.context.ck.paintstyle.fill",{"_index":310,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["panel/index.ts",{"_index":530,"title":{},"body":{"classes/PropertyPanel.html":{},"coverage.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["paramname",{"_index":642,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["paramnames",{"_index":611,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["paramnames.length",{"_index":638,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["paramnames.map((param",{"_index":630,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["paramnames.map((paramname",{"_index":640,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["parampath",{"_index":629,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["params",{"_index":634,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/functions.html":{}}}],["params[paramname",{"_index":641,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["param}`).join",{"_index":631,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["parent",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["particular",{"_index":1194,"title":{},"body":{"license.html":{}}}],["path",{"_index":557,"title":{},"body":{"classes/Rectangle.html":{},"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["path}/${parampath",{"_index":632,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["path}/${result.join",{"_index":643,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["permission",{"_index":1152,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1173,"title":{},"body":{"license.html":{}}}],["person",{"_index":1157,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1174,"title":{},"body":{"license.html":{}}}],["platform",{"_index":1133,"title":{},"body":{"index.html":{}}}],["pluginapi['mixed",{"_index":296,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["port",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":1184,"title":{},"body":{"license.html":{}}}],["position",{"_index":361,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["possible",{"_index":1130,"title":{},"body":{"index.html":{}}}],["practice",{"_index":1055,"title":{},"body":{"index.html":{}}}],["preload",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preload.js",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepend",{"_index":478,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["prepend(...childs",{"_index":520,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["private",{"_index":9,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["process.env.node_env",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":1087,"title":{},"body":{"index.html":{}}}],["project",{"_index":623,"title":{},"body":{"interfaces/RoutesValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project_detail",{"_index":614,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/enumerations.html":{}}}],["projectid",{"_index":624,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["projects(project",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":414,"title":{},"body":{"interfaces/Module.html":{},"classes/ModuleItem.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["propertypanel",{"_index":83,"title":{"classes/PropertyPanel.html":{}},"body":{"classes/App.html":{},"classes/PropertyPanel.html":{},"coverage.html":{}}}],["props",{"_index":124,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.modules",{"_index":882,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.scale",{"_index":888,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.scope",{"_index":443,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["protected",{"_index":165,"title":{},"body":{"classes/Base.html":{},"classes/GeometryMixin.html":{}}}],["provided",{"_index":1185,"title":{},"body":{"license.html":{}}}],["provides",{"_index":417,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["public",{"_index":142,"title":{},"body":{"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["publish",{"_index":1064,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":1195,"title":{},"body":{"license.html":{}}}],["qiansc",{"_index":1151,"title":{},"body":{"license.html":{}}}],["query",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryprojectdto",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryprojects",{"_index":983,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["quickly",{"_index":1129,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":369,"title":{},"body":{"classes/LayoutMixin.html":{},"classes/Rectangle.html":{}}}],["readonlyarray",{"_index":299,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["ready",{"_index":1116,"title":{},"body":{"index.html":{}}}],["recognize",{"_index":635,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["record",{"_index":637,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["rect",{"_index":551,"title":{},"body":{"classes/Rectangle.html":{}}}],["rectangle",{"_index":546,"title":{"classes/Rectangle.html":{}},"body":{"classes/Rectangle.html":{},"coverage.html":{}}}],["rectanglecornermixin",{"_index":245,"title":{"classes/RectangleCornerMixin.html":{}},"body":{"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{}}}],["rectanglenode",{"_index":548,"title":{},"body":{"classes/Rectangle.html":{}}}],["ref.ts",{"_index":182,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["ref.ts:15",{"_index":193,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:5",{"_index":190,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:6",{"_index":191,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:7",{"_index":188,"title":{},"body":{"classes/ColorRef.html":{}}}],["reflect",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["release",{"_index":1142,"title":{},"body":{"index.html":{}}}],["remove(menu",{"_index":404,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["render",{"_index":233,"title":{},"body":{"classes/Controller.html":{}}}],["replacecontent",{"_index":471,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["replacecontent(contentview",{"_index":502,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["repository",{"_index":1053,"title":{},"body":{"index.html":{}}}],["request",{"_index":426,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["requestpolicy",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1076,"title":{},"body":{"index.html":{}}}],["resize",{"_index":353,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{}}}],["resizeat",{"_index":337,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["resourceexplorer",{"_index":606,"title":{"classes/ResourceExplorer.html":{}},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["resourcepage",{"_index":81,"title":{},"body":{"classes/App.html":{}}}],["resoures",{"_index":412,"title":{},"body":{"interfaces/Module.html":{}}}],["restriction",{"_index":1164,"title":{},"body":{"license.html":{}}}],["result",{"_index":135,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":137,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":161,"title":{},"body":{"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":43,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":589,"title":{},"body":{"classes/Rectangle.html":{}}}],["rights",{"_index":1167,"title":{},"body":{"license.html":{}}}],["roadmap",{"_index":1065,"title":{},"body":{"index.html":{}}}],["rollup",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":36,"title":{},"body":{"classes/App.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["rounded",{"_index":783,"title":{},"body":{"classes/SplitItemView.html":{}}}],["route",{"_index":1041,"title":{},"body":{"miscellaneous/functions.html":{}}}],["router",{"_index":1023,"title":{},"body":{"dependencies.html":{}}}],["routes",{"_index":616,"title":{},"body":{"interfaces/RoutesValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routes[route",{"_index":628,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["routes_enum",{"_index":612,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/enumerations.html":{}}}],["routes_enum.design_atom",{"_index":625,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["routes_enum.index",{"_index":618,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["routes_enum.project_detail",{"_index":622,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["routes_enum.team_detail",{"_index":619,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["routesvalue",{"_index":609,"title":{"interfaces/RoutesValue.html":{}},"body":{"interfaces/RoutesValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":348,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["rrect",{"_index":591,"title":{},"body":{"classes/Rectangle.html":{}}}],["run",{"_index":420,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"index.html":{}}}],["s",{"_index":357,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["scale",{"_index":867,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["scope",{"_index":424,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["script",{"_index":1103,"title":{},"body":{"index.html":{}}}],["secondarybgcolor",{"_index":958,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["secondarylabelcolor",{"_index":959,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":1144,"title":{},"body":{"index.html":{}}}],["sell",{"_index":1171,"title":{},"body":{"license.html":{}}}],["serialize",{"_index":379,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["server",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":69,"title":{},"body":{"classes/App.html":{}}}],["service.ts",{"_index":139,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":147,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:12",{"_index":154,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:18",{"_index":149,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:21",{"_index":152,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:9",{"_index":145,"title":{},"body":{"classes/AppearanceService.html":{}}}],["set",{"_index":305,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{},"index.html":{}}}],["setactivestate",{"_index":662,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setactivestate(index",{"_index":683,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setbackground(background",{"_index":284,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["setborder(border",{"_index":289,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["setborderraidus(borderraidus",{"_index":572,"title":{},"body":{"classes/Rectangle.html":{}}}],["setcontent",{"_index":472,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setcontent(contentview",{"_index":504,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setcursor",{"_index":338,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["setdefaultclass",{"_index":473,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setflow",{"_index":479,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setflow(type",{"_index":523,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setgrow",{"_index":474,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setgrow(classname",{"_index":507,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setheight(height",{"_index":568,"title":{},"body":{"classes/Rectangle.html":{}}}],["setshrink",{"_index":475,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setshrink(classname",{"_index":512,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["settings",{"_index":329,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setwidth(width",{"_index":564,"title":{},"body":{"classes/Rectangle.html":{}}}],["shall",{"_index":1181,"title":{},"body":{"license.html":{}}}],["shapecanvas",{"_index":644,"title":{"classes/ShapeCanvas.html":{}},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["shrink",{"_index":514,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["similar",{"_index":1084,"title":{},"body":{"index.html":{}}}],["singleton",{"_index":91,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["smelte",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":1160,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["spa",{"_index":1022,"title":{},"body":{"dependencies.html":{}}}],["split",{"_index":344,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitItemView.html":{}}}],["split.js",{"_index":1019,"title":{},"body":{"dependencies.html":{}}}],["splitboard",{"_index":855,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["splitboardcontroller",{"_index":647,"title":{"classes/SplitBoardController.html":{}},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["splitboardview",{"_index":395,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["splitboardview>().setflow('1",{"_index":875,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["splitcolumnat",{"_index":339,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["splitexpand",{"_index":492,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["splititemview",{"_index":343,"title":{"classes/SplitItemView.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"coverage.html":{}}}],["splititemview:12",{"_index":489,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:13",{"_index":490,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:14",{"_index":488,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:16",{"_index":491,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:17",{"_index":493,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:25",{"_index":505,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:32",{"_index":503,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:39",{"_index":508,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:46",{"_index":513,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:53",{"_index":501,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:57",{"_index":506,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:63",{"_index":496,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:67",{"_index":498,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:71",{"_index":516,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:77",{"_index":497,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splitrowat",{"_index":340,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["src/.../api.ts",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../appearance.ts",{"_index":1031,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../canvas",{"_index":1038,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../class",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inject.ts",{"_index":1039,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.ts",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../routes.ts",{"_index":1034,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../settings.ts",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../split",{"_index":1032,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../type.ts",{"_index":1033,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../ui",{"_index":1040,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../uuid.ts",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../view.ts",{"_index":1215,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app",{"_index":1101,"title":{},"body":{"index.html":{}}}],["src/app/index.ts",{"_index":924,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/logger.ts",{"_index":931,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/settings.ts",{"_index":323,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core",{"_index":1094,"title":{},"body":{"index.html":{}}}],["src/core/browser/class",{"_index":823,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/controller.ts",{"_index":221,"title":{},"body":{"classes/Controller.html":{},"coverage.html":{}}}],["src/core/browser/controller.ts:10",{"_index":228,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:14",{"_index":231,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:17",{"_index":229,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:5",{"_index":227,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:7",{"_index":230,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/layout/split",{"_index":648,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/layout/type.ts",{"_index":333,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/browser/style/ui",{"_index":944,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/view.ts",{"_index":810,"title":{},"body":{"classes/View.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/browser/view.ts:13",{"_index":812,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:17",{"_index":813,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:4",{"_index":811,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:8",{"_index":814,"title":{},"body":{"classes/View.html":{}}}],["src/core/common/appearance.ts",{"_index":1035,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/common/color",{"_index":181,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["src/core/common/uuid.ts",{"_index":969,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/components",{"_index":1110,"title":{},"body":{"index.html":{}}}],["src/core/parts/ioc/inject.ts",{"_index":971,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/core/parts/modules/module",{"_index":415,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"coverage.html":{}}}],["src/core/parts/modules/module.ts",{"_index":410,"title":{},"body":{"interfaces/Module.html":{},"coverage.html":{}}}],["src/core/parts/modules/svelte",{"_index":794,"title":{},"body":{"classes/SvelteModule.html":{},"coverage.html":{}}}],["src/modules",{"_index":1104,"title":{},"body":{"index.html":{}}}],["src/modules/draw",{"_index":162,"title":{},"body":{"classes/Base.html":{},"classes/Context.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/menu",{"_index":169,"title":{},"body":{"classes/BaseMenu.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["src/modules/property",{"_index":529,"title":{},"body":{"classes/PropertyPanel.html":{},"coverage.html":{}}}],["src/modules/resource",{"_index":607,"title":{},"body":{"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/modules/shape",{"_index":645,"title":{},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["src/modules/workbench/index.ts",{"_index":854,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["src/modules/workbench/index.ts:19",{"_index":859,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:20",{"_index":860,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:21",{"_index":857,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:31",{"_index":864,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:72",{"_index":861,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:81",{"_index":863,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:95",{"_index":865,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/module",{"_index":458,"title":{},"body":{"classes/ModuleItem.html":{},"coverage.html":{}}}],["src/workbench",{"_index":1106,"title":{},"body":{"index.html":{}}}],["src/workbench/desktop/app.ts",{"_index":6,"title":{},"body":{"classes/App.html":{},"coverage.html":{}}}],["src/workbench/desktop/app.ts:103",{"_index":54,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:16",{"_index":37,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:17",{"_index":30,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:24",{"_index":42,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:30",{"_index":47,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:42",{"_index":49,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:47",{"_index":55,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:52",{"_index":58,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:60",{"_index":44,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:64",{"_index":48,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:74",{"_index":46,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:83",{"_index":53,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:91",{"_index":51,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:99",{"_index":59,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/main.ts",{"_index":990,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/services/appearance",{"_index":138,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["standard",{"_index":1071,"title":{},"body":{"index.html":{}}}],["start",{"_index":359,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["started",{"_index":1049,"title":{"index.html":{},"license.html":{}},"body":{}}],["startx",{"_index":656,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["starty",{"_index":657,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["stateconfig",{"_index":828,"title":{"interfaces/stateConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["statements",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["statically",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statusbar",{"_index":79,"title":{},"body":{"classes/App.html":{}}}],["step",{"_index":1113,"title":{},"body":{"index.html":{}}}],["sth",{"_index":120,"title":{},"body":{"classes/App.html":{}}}],["store",{"_index":328,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{}}}],["storybook",{"_index":1109,"title":{},"body":{"index.html":{}}}],["string",{"_index":285,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/Rectangle.html":{},"interfaces/RoutesValue.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":292,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{}}}],["strokealign",{"_index":264,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokecap",{"_index":295,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokejoin",{"_index":297,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokemiterlimit",{"_index":265,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokes",{"_index":266,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokestyleid",{"_index":301,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokeweight",{"_index":267,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["structure",{"_index":1082,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1176,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1169,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1183,"title":{},"body":{"license.html":{}}}],["such",{"_index":1097,"title":{},"body":{"index.html":{}}}],["super",{"_index":577,"title":{},"body":{"classes/Rectangle.html":{},"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["support",{"_index":293,"title":{},"body":{"classes/GeometryMixin.html":{},"index.html":{}}}],["surface",{"_index":205,"title":{},"body":{"classes/Context.html":{}}}],["svelte",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["svelte/internal",{"_index":803,"title":{},"body":{"classes/SvelteModule.html":{}}}],["sveltecomponentdev",{"_index":535,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["sveltemodule",{"_index":531,"title":{"classes/SvelteModule.html":{}},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"coverage.html":{}}}],["sveltemodule:10",{"_index":537,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:16",{"_index":541,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:28",{"_index":540,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:5",{"_index":539,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:8",{"_index":536,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:9",{"_index":534,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["switch",{"_index":198,"title":{},"body":{"classes/ColorRef.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["symbol.for('flowtableroot",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["systembluecolor",{"_index":960,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemgraycolor",{"_index":961,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemorangecolor",{"_index":962,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systempinkcolor",{"_index":963,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemredcolor",{"_index":964,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemyellowcolor",{"_index":965,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":352,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["table",{"_index":992,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["tailwindcss",{"_index":1025,"title":{},"body":{"dependencies.html":{}}}],["target",{"_index":122,"title":{},"body":{"classes/App.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"miscellaneous/variables.html":{}}}],["target.classlist.contains('split",{"_index":705,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["target.parentelement",{"_index":704,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["team",{"_index":620,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["team_detail",{"_index":613,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/enumerations.html":{}}}],["teamid",{"_index":621,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/variables.html":{}}}],["teams",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teamsquery",{"_index":987,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":1075,"title":{},"body":{"index.html":{}}}],["tertiarybgcolor",{"_index":966,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tertiarylabelcolor",{"_index":967,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["textfieldbackground",{"_index":968,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["this._growclassname",{"_index":778,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._height",{"_index":581,"title":{},"body":{"classes/Rectangle.html":{}}}],["this._shrinkclassname",{"_index":777,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._type",{"_index":158,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this._view",{"_index":397,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/SvelteModule.html":{}}}],["this._view.parentnode",{"_index":808,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this._view.parentnode.removechild(this._view",{"_index":809,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this._view.removechild(menu.container",{"_index":405,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this._width",{"_index":578,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.activeexpand",{"_index":713,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.activeid",{"_index":714,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.add(moduleid",{"_index":441,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.addexpandbutton",{"_index":768,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.anycolor",{"_index":195,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.cancelwaitformerge",{"_index":789,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.canvas",{"_index":218,"title":{},"body":{"classes/Context.html":{}}}],["this.checkexpandstate(event.clientx",{"_index":695,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.ck",{"_index":216,"title":{},"body":{"classes/Context.html":{}}}],["this.comp",{"_index":805,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this.comp.$destroy",{"_index":807,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this.container",{"_index":89,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind('modulefactory').todynamicvalue",{"_index":101,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(appearanceservice).to(appearanceservice",{"_index":109,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(menugroupservice).to(menugroupservice",{"_index":110,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(moduleid).to(module",{"_index":430,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.container.get(appearanceservice",{"_index":112,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(menugroupservice",{"_index":130,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(moduleid",{"_index":444,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.contentview",{"_index":770,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.context",{"_index":125,"title":{},"body":{"classes/App.html":{},"classes/GeometryMixin.html":{},"classes/Rectangle.html":{}}}],["this.context.ck.paint",{"_index":307,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.context.ck.parsecolorstring(background",{"_index":308,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.context.ck.path().addrrect(rrect",{"_index":594,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.context.ck.rrectxy([left",{"_index":592,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.context.draw",{"_index":601,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.context.getcanvas().drawpath(this.rect",{"_index":598,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.context.set('container",{"_index":92,"title":{},"body":{"classes/App.html":{}}}],["this.cornerradius",{"_index":583,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.darkcolor",{"_index":197,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.evt.emit('onmodechanged",{"_index":159,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.evt.on('onmodechanged",{"_index":160,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.exist(moduleid",{"_index":427,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.expand",{"_index":787,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.expandhidden",{"_index":788,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.mergedirection",{"_index":791,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expandactive",{"_index":718,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandleavehandler",{"_index":696,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmouseuphandler",{"_index":698,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmovehandler",{"_index":692,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandtype",{"_index":719,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.fills.push(paint",{"_index":312,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.fills.tostring",{"_index":302,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.fills[0",{"_index":599,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.groupmenuservice.getmenuinsatance",{"_index":177,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.initmenus",{"_index":126,"title":{},"body":{"classes/App.html":{}}}],["this.initmodules",{"_index":98,"title":{},"body":{"classes/App.html":{}}}],["this.initnavigationbar",{"_index":95,"title":{},"body":{"classes/App.html":{}}}],["this.initpreferences",{"_index":93,"title":{},"body":{"classes/App.html":{}}}],["this.initstatusbar",{"_index":96,"title":{},"body":{"classes/App.html":{}}}],["this.initstyle",{"_index":94,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(appearancetype.dark",{"_index":115,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(type",{"_index":114,"title":{},"body":{"classes/App.html":{}}}],["this.initwithcomponent(this._view",{"_index":806,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this.insertconfig(config",{"_index":844,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.lightcolor",{"_index":196,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.liveresize(event.clientx",{"_index":693,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.menuinstance",{"_index":176,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.menuinstance.init",{"_index":178,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.meuns",{"_index":406,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.meuns.filter((item",{"_index":407,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.meuns.length",{"_index":401,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.meuns.push(menu",{"_index":403,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.modulefactory",{"_index":877,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.modulefactory.load(item.moduleid",{"_index":903,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.modulefactory.load(p.id",{"_index":884,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.moduleid",{"_index":528,"title":{},"body":{"classes/ModuleItem.html":{}}}],["this.modules.get(moduleid",{"_index":436,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.modules.has(moduleid",{"_index":438,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.modules.set(moduleid",{"_index":428,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.normalizeweight(config",{"_index":850,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.onmousedown(event",{"_index":700,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.orderedconfigs",{"_index":846,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor",{"_index":852,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor].weight",{"_index":853,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.prepend(contentview",{"_index":774,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.props",{"_index":804,"title":{},"body":{"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.props.minwidth",{"_index":908,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.props.scale",{"_index":909,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.props.type",{"_index":907,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.rect",{"_index":593,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.root",{"_index":123,"title":{},"body":{"classes/App.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["this.root.appendchild(child",{"_index":820,"title":{},"body":{"classes/View.html":{}}}],["this.root.appendchild(workbench.view",{"_index":107,"title":{},"body":{"classes/App.html":{}}}],["this.root.classlist.add('flex",{"_index":782,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('relative",{"_index":785,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('split",{"_index":771,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('wait",{"_index":790,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(...this._bgcolorclassname",{"_index":786,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(`flex",{"_index":819,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.add(this._growclassname",{"_index":779,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(this._shrinkclassname",{"_index":781,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove('flex",{"_index":818,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.remove('wait",{"_index":793,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._growclassname",{"_index":780,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._shrinkclassname",{"_index":776,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.prepend(...childs",{"_index":821,"title":{},"body":{"classes/View.html":{}}}],["this.root.replacechild(contentview",{"_index":775,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.setactivestate(index",{"_index":706,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.setdefaultclass",{"_index":769,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.splitboard",{"_index":874,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.additem(item",{"_index":886,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.applysplit",{"_index":887,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.direction",{"_index":879,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.itemgeneratedelegate",{"_index":876,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.items.foreach((item",{"_index":889,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.items[index",{"_index":890,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.root",{"_index":878,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.startx",{"_index":711,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.starty",{"_index":712,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.strokes.push(paint",{"_index":319,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.strokes.tostring",{"_index":313,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.strokes[0",{"_index":600,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.surface",{"_index":217,"title":{},"body":{"classes/Context.html":{}}}],["this.surface.flush",{"_index":220,"title":{},"body":{"classes/Context.html":{}}}],["this.surface.getcanvas",{"_index":219,"title":{},"body":{"classes/Context.html":{}}}],["this.unactiveexpand",{"_index":697,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.updaterect",{"_index":580,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.view",{"_index":897,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.view.cancelformerge",{"_index":724,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.direction",{"_index":727,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items.foreach((item",{"_index":702,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items[this.activeid",{"_index":726,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.resizeat(this.activeid",{"_index":731,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousedown",{"_index":699,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseleave",{"_index":716,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousemove",{"_index":715,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseup",{"_index":717,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseleave",{"_index":722,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mousemove",{"_index":721,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseup",{"_index":723,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor",{"_index":725,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('col",{"_index":742,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('crosshair",{"_index":720,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('n",{"_index":746,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('row",{"_index":743,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('w",{"_index":744,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitcolumnat(this.activeid",{"_index":748,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitrowat(this.activeid",{"_index":749,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.waitformergeatitem(this.activeid",{"_index":745,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.viewdiddisappear",{"_index":901,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.viewwilldisappear",{"_index":898,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.x",{"_index":586,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.y",{"_index":588,"title":{},"body":{"classes/Rectangle.html":{}}}],["three",{"_index":1089,"title":{},"body":{"index.html":{}}}],["title",{"_index":388,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["todo",{"_index":291,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"interfaces/RoutesValue.html":{}}}],["together",{"_index":1058,"title":{},"body":{"index.html":{}}}],["token",{"_index":1043,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tools",{"_index":1105,"title":{},"body":{"index.html":{}}}],["top",{"_index":587,"title":{},"body":{"classes/Rectangle.html":{}}}],["topleftradius",{"_index":246,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["toprightradius",{"_index":247,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["tort",{"_index":1205,"title":{},"body":{"license.html":{}}}],["transient",{"_index":425,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["tree",{"_index":237,"title":{},"body":{"classes/Controller.html":{}}}],["true",{"_index":595,"title":{},"body":{"classes/Rectangle.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":253,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"classes/Rectangle.html":{},"dependencies.html":{}}}],["type",{"_index":34,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"interfaces/RoutesValue.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1213,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":304,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["types/color",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["types/shape",{"_index":574,"title":{},"body":{"classes/Rectangle.html":{}}}],["typography",{"_index":1026,"title":{},"body":{"dependencies.html":{}}}],["ui/components/navigation/navigation",{"_index":77,"title":{},"body":{"classes/App.html":{}}}],["ui/components/property/proterty.svelte",{"_index":84,"title":{},"body":{"classes/App.html":{}}}],["ui/components/resource/resource.svelte",{"_index":82,"title":{},"body":{"classes/App.html":{}}}],["ui/components/status/status",{"_index":80,"title":{},"body":{"classes/App.html":{}}}],["unactiveexpand",{"_index":663,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["undefined",{"_index":831,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1070,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":384,"title":{},"body":{"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{}}}],["update",{"_index":1121,"title":{},"body":{"index.html":{}}}],["updatemode",{"_index":144,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updatemode(type",{"_index":153,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updater",{"_index":1004,"title":{},"body":{"dependencies.html":{}}}],["updaterect",{"_index":552,"title":{},"body":{"classes/Rectangle.html":{}}}],["url",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlfor",{"_index":985,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["urlfor(route",{"_index":636,"title":{},"body":{"interfaces/RoutesValue.html":{},"miscellaneous/functions.html":{}}}],["urql/svelte",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["use",{"_index":596,"title":{},"body":{"classes/Rectangle.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":1079,"title":{},"body":{"index.html":{}}}],["user",{"_index":1148,"title":{},"body":{"index.html":{}}}],["using",{"_index":1124,"title":{},"body":{"index.html":{}}}],["utils",{"_index":1099,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":970,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":633,"title":{},"body":{"interfaces/RoutesValue.html":{}}}],["value",{"_index":39,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/GeometryMixin.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/Rectangle.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/classBuilder.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1216,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":688,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["version",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":735,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["very",{"_index":1083,"title":{},"body":{"index.html":{}}}],["view",{"_index":222,"title":{"classes/View.html":{}},"body":{"classes/Controller.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["view.clone",{"_index":902,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.module",{"_index":893,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.module.serialize",{"_index":904,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.parentnode",{"_index":899,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.parentnode.removechild(view",{"_index":900,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.setcontent(module.view",{"_index":892,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view:13",{"_index":518,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["view:17",{"_index":521,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["view:4",{"_index":494,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["view:8",{"_index":525,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["viewdidappear",{"_index":223,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewdiddisappear",{"_index":224,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewwillappear",{"_index":225,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewwilldisappear",{"_index":226,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["vite",{"_index":1078,"title":{},"body":{"index.html":{}}}],["void",{"_index":45,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/GeometryMixin.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{}}}],["w",{"_index":356,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["waitformerge",{"_index":476,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["waitformerge(direction",{"_index":515,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["waitformergeatitem",{"_index":341,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["warranties",{"_index":1191,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1186,"title":{},"body":{"license.html":{}}}],["wasm",{"_index":215,"title":{},"body":{"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/Rectangle.html":{},"dependencies.html":{}}}],["wasm/canvas",{"_index":975,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["wasm/context.ts",{"_index":202,"title":{},"body":{"classes/Context.html":{},"coverage.html":{}}}],["wasm/context.ts:13",{"_index":214,"title":{},"body":{"classes/Context.html":{}}}],["wasm/context.ts:17",{"_index":213,"title":{},"body":{"classes/Context.html":{}}}],["wasm/context.ts:4",{"_index":211,"title":{},"body":{"classes/Context.html":{}}}],["wasm/context.ts:5",{"_index":212,"title":{},"body":{"classes/Context.html":{}}}],["wasm/context.ts:6",{"_index":210,"title":{},"body":{"classes/Context.html":{}}}],["wasm/mixin/base.ts",{"_index":164,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["wasm/mixin/base.ts:4",{"_index":166,"title":{},"body":{"classes/Base.html":{}}}],["wasm/mixin/corner.ts",{"_index":241,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{}}}],["wasm/mixin/corner.ts:10",{"_index":603,"title":{},"body":{"classes/RectangleCornerMixin.html":{}}}],["wasm/mixin/corner.ts:3",{"_index":244,"title":{},"body":{"classes/CornerMixin.html":{}}}],["wasm/mixin/corner.ts:7",{"_index":604,"title":{},"body":{"classes/RectangleCornerMixin.html":{}}}],["wasm/mixin/corner.ts:8",{"_index":605,"title":{},"body":{"classes/RectangleCornerMixin.html":{}}}],["wasm/mixin/corner.ts:9",{"_index":602,"title":{},"body":{"classes/RectangleCornerMixin.html":{}}}],["wasm/mixin/geometry.ts",{"_index":262,"title":{},"body":{"classes/GeometryMixin.html":{},"coverage.html":{}}}],["wasm/mixin/geometry.ts:10",{"_index":277,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:11",{"_index":276,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:18",{"_index":283,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:23",{"_index":286,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:32",{"_index":288,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:36",{"_index":290,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:7",{"_index":272,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:8",{"_index":278,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:9",{"_index":279,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/layout.ts",{"_index":364,"title":{},"body":{"classes/LayoutMixin.html":{},"coverage.html":{}}}],["wasm/mixin/layout.ts:2",{"_index":367,"title":{},"body":{"classes/LayoutMixin.html":{}}}],["wasm/mixin/layout.ts:3",{"_index":368,"title":{},"body":{"classes/LayoutMixin.html":{}}}],["wasm/mixin/shape.ts",{"_index":251,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"coverage.html":{}}}],["wasm/rectangle.ts",{"_index":547,"title":{},"body":{"classes/Rectangle.html":{},"coverage.html":{}}}],["wasm/rectangle.ts:10",{"_index":556,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:11",{"_index":555,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:18",{"_index":563,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:22",{"_index":565,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:27",{"_index":567,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:31",{"_index":569,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:36",{"_index":571,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:40",{"_index":573,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:45",{"_index":561,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:54",{"_index":560,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:8",{"_index":559,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:9",{"_index":558,"title":{},"body":{"classes/Rectangle.html":{}}}],["web",{"_index":1107,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["webpreferences",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":829,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["weightmap",{"_index":822,"title":{"interfaces/WeightMap.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["whether",{"_index":1203,"title":{},"body":{"license.html":{}}}],["width",{"_index":370,"title":{},"body":{"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"miscellaneous/variables.html":{}}}],["width(width",{"_index":579,"title":{},"body":{"classes/Rectangle.html":{}}}],["wiki",{"_index":1145,"title":{},"body":{"index.html":{}}}],["windows",{"_index":1119,"title":{},"body":{"index.html":{}}}],["without",{"_index":1163,"title":{},"body":{"license.html":{}}}],["work",{"_index":1060,"title":{},"body":{"index.html":{}}}],["workbench",{"_index":102,"title":{"classes/Workbench.html":{}},"body":{"classes/App.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["workbench.viewdidappear",{"_index":108,"title":{},"body":{"classes/App.html":{}}}],["workbench.viewwillappear",{"_index":106,"title":{},"body":{"classes/App.html":{}}}],["workbench/desktop/app.config.json",{"_index":86,"title":{},"body":{"classes/App.html":{}}}],["workbenchprops",{"_index":858,"title":{"interfaces/WorkbenchProps.html":{}},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["works",{"_index":1074,"title":{},"body":{"index.html":{}}}],["x",{"_index":365,"title":{},"body":{"classes/LayoutMixin.html":{}}}],["xl",{"_index":784,"title":{},"body":{"classes/SplitItemView.html":{}}}],["y",{"_index":366,"title":{},"body":{"classes/LayoutMixin.html":{}}}],["yes",{"_index":189,"title":{},"body":{"classes/ColorRef.html":{},"classes/View.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/App.html":{"url":"classes/App.html","title":"class - App","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/app.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                context\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bootstrap\n                            \n                            \n                                initFrame\n                            \n                            \n                                initMenus\n                            \n                            \n                                    Async\n                                initModules\n                            \n                            \n                                initNavigationBar\n                            \n                            \n                                initPreferences\n                            \n                            \n                                initPropertyPanel\n                            \n                            \n                                initResourcePanel\n                            \n                            \n                                initStatusBar\n                            \n                            \n                                initStyle\n                            \n                            \n                                initStyleMode\n                            \n                            \n                                initWorkArea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/app.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Container\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        bootstrap\n                        \n                    \n                \n            \n            \n                \n                    \n                    bootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFrame\n                        \n                    \n                \n            \n            \n                \ninitFrame()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initMenus\n                        \n                    \n                \n            \n            \n                \ninitMenus()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initModules\n                        \n                    \n                \n            \n            \n                \n                    \n                    initModules()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNavigationBar\n                        \n                    \n                \n            \n            \n                \ninitNavigationBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPreferences\n                        \n                    \n                \n            \n            \n                \ninitPreferences()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPropertyPanel\n                        \n                    \n                \n            \n            \n                \ninitPropertyPanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initResourcePanel\n                        \n                    \n                \n            \n            \n                \ninitResourcePanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStatusBar\n                        \n                    \n                \n            \n            \n                \ninitStatusBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyle\n                        \n                    \n                \n            \n            \n                \ninitStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyleMode\n                        \n                    \n                \n            \n            \n                \ninitStyleMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initWorkArea\n                        \n                    \n                \n            \n            \n                \ninitWorkArea()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Container } from 'inversify';\nimport { AppearanceType } from '@cosmic/core/common';\nimport { ModuleFactory } from '@cosmic/core/parts';\nimport { Controller } from '@cosmic/core/browser';\nimport { AppearanceService } from '@cosmic/workbench/services/appearance-service';\n// import { MenuGroupService } from '@cosmic/workbench/services/menu-group-service';\n// import { applicationMenus } from './base-menu/config';\nimport Navigation from '../ui/components/navigation/navigation-bar.svelte';\nimport StatusBar from '../ui/components/status/status-bar.svelte';\nimport ResourcePage from '../ui/components/resource/resource.svelte';\nimport PropertyPanel from '../ui/components/property/proterty.svelte';\n\nimport config from 'workbench/desktop/app.config.json';\n\nexport default class App {\n  private container: Container;\n  private context = new Map();\n  constructor(private root: HTMLElement) {\n    this.container = new Container({ defaultScope: 'Singleton' });\n    this.context.set('container', this.container);\n    this.initPreferences();\n    this.initStyle();\n  }\n  async bootstrap() {\n    // this.initNavigationBar();\n    // this.initStatusBar();\n    await this.initModules();\n  }\n\n  async initModules() {\n    const moduleFactory = new ModuleFactory(this.container);\n    this.container.bind('ModuleFactory').toDynamicValue(() => moduleFactory);\n\n    const workbench = await moduleFactory.load(config.workbench.id, config.workbench);\n    if (workbench instanceof Controller) {\n      workbench.viewWillAppear();\n      this.root.appendChild(workbench.view());\n      workbench.viewDidAppear();\n    }\n  }\n\n  initPreferences() {\n    this.container.bind(AppearanceService).to(AppearanceService);\n    // this.container.bind(MenuGroupService).to(MenuGroupService);\n  }\n\n  initStyle() {\n    const aps = this.container.get(AppearanceService);\n    aps.onModeChanged((type: AppearanceType) => this.initStyleMode(type));\n    this.initStyleMode(AppearanceType.dark);\n  }\n  initStyleMode(type: AppearanceType): void {\n    if (type === AppearanceType.dark) {\n      document.body.classList.add('mode-dark');\n    } else {\n      document.body.classList.remove('mode-dark');\n    }\n  }\n\n  initFrame(): void {\n    // to do sth.\n  }\n\n  initNavigationBar(): void {\n    // to do sth.\n    const navigationBar = new Navigation({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    this.initMenus();\n  }\n\n  initMenus(): void {\n    // const header = document.querySelector('#main-header');\n    // const groupMenu = this.container.get(MenuGroupService);\n    // groupMenu.initContainer(header as HTMLElement);\n    // for (const menu of applicationMenus) {\n    //   groupMenu.getMenuInsatance().init(menu.title, menu.items);\n    // }\n  }\n\n  initResourcePanel(container: HTMLElement): void {\n    new ResourcePage({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initPropertyPanel(container: HTMLElement): void {\n    new PropertyPanel({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initWorkArea(): void {\n    // to do sth.\n  }\n\n  initStatusBar(): void {\n    new StatusBar({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    // to do sth.\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppearanceService.html":{"url":"classes/AppearanceService.html","title":"class - AppearanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppearanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/appearance-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Private\n                                evt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onModeChanged\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                updateMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppearanceType\n\n                    \n                \n                \n                    \n                        Default value : AppearanceType.dark\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        evt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter2()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onModeChanged\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModeChanged(fn: (type: AppearanceType) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        type\n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject, ContainerModule } from 'inversify';\nimport { EventEmitter2 } from 'eventemitter2';\n\nimport { AppearanceType } from '@cosmic/core/common';\n\n@injectable()\n/** 外观设置服务 */\nexport class AppearanceService {\n  private _type: AppearanceType = AppearanceType.dark;\n  private evt = new EventEmitter2();\n\n  public updateMode(type: AppearanceType) {\n    if (this._type !== type) {\n      this._type = type;\n      this.evt.emit('onModeChanged', type);\n    }\n  }\n  public onModeChanged(fn: (type: AppearanceType) => void) {\n    this.evt.on('onModeChanged', fn);\n  }\n  public type() {\n    return this._type;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/base.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                context\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Context\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/base.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { Context } from '../context';\n\nexport abstract class Base {\n  protected context: Context;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseMenu.html":{"url":"classes/BaseMenu.html","title":"class - BaseMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-group/base-menu.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class BaseMenu {\n  // private menuInstance!: Menu;\n  // constructor(private groupMenuService: MenuGroupService) {}\n  // public initMenu(menuItems: MenuItemConfig[]): void {\n  //   this.menuInstance = this.groupMenuService.getMenuInsatance();\n  //   this.menuInstance.init('文件', menuItems);\n  // }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColorRef.html":{"url":"classes/ColorRef.html","title":"class - ColorRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColorRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/common/color-ref.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                anyColor\n                            \n                            \n                                    Private\n                                darkColor\n                            \n                            \n                                    Private\n                                lightColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                color\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(anyColor: Color, lightColor?: Color, darkColor?: Color)\n                    \n                \n                        \n                            \n                                Defined in src/core/common/color-ref.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        anyColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lightColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        darkColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        anyColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        darkColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lightColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        color\n                        \n                    \n                \n            \n            \n                \n                    \n                    color(appearanceType: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/common/color-ref.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appearanceType\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type * as Color from 'color';\nimport { AppearanceType } from './appearance';\n\nexport default class ColorRef {\n  private anyColor: Color;\n  private lightColor: Color;\n  private darkColor: Color;\n\n  constructor(anyColor: Color, lightColor?: Color, darkColor?: Color) {\n    this.anyColor = anyColor;\n    this.lightColor = lightColor || anyColor;\n    this.darkColor = darkColor || anyColor;\n  }\n\n  public color(appearanceType: AppearanceType) {\n    switch (appearanceType) {\n      case AppearanceType.any:\n        return this.anyColor;\n      case AppearanceType.light:\n        return this.lightColor;\n      case AppearanceType.dark:\n        return this.darkColor;\n      default:\n        return this.anyColor;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Context.html":{"url":"classes/Context.html","title":"class - Context","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Context\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/context.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canvas\n                            \n                            \n                                    Public\n                                ck\n                            \n                            \n                                    Private\n                                surface\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                draw\n                            \n                            \n                                getCanvas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ck: CanvasKit, surface: Surface)\n                    \n                \n                        \n                            \n                                Defined in src/modules/draw-canvas/skia-wasm/context.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ck\n                                                  \n                                                        \n                                                                    CanvasKit\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        surface\n                                                  \n                                                        \n                                                                    Surface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Canvas\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/context.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ck\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanvasKit\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/context.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        surface\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Surface\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/context.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        draw\n                        \n                    \n                \n            \n            \n                \ndraw()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/draw-canvas/skia-wasm/context.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCanvas\n                        \n                    \n                \n            \n            \n                \ngetCanvas()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/draw-canvas/skia-wasm/context.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Canvas\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Canvas, Surface, CanvasKit } from 'canvaskit-wasm';\n\nexport class Context {\n  private canvas: Canvas;\n  private surface: Surface;\n  public ck: CanvasKit;\n  constructor(ck: CanvasKit, surface: Surface) {\n    this.ck = ck;\n    this.surface = surface;\n    this.canvas = this.surface.getCanvas();\n  }\n\n  getCanvas(): Canvas {\n    return this.canvas;\n  }\n\n  draw(): void {\n    this.surface.flush();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Controller.html":{"url":"classes/Controller.html","title":"class - Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Controller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                view\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\n\n@injectable()\nexport abstract class Controller {\n  abstract view(): HTMLElement;\n\n  viewWillAppear() {\n    /** going to render, appending element to dom tree  */\n  }\n  viewDidAppear() {\n    /** after appeared */\n  }\n\n  viewWillDisappear() {\n    /** going to disappear */\n  }\n  viewDidDisappear() {\n    /** going to disappear */\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CornerMixin.html":{"url":"classes/CornerMixin.html","title":"class - CornerMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CornerMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/corner.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cornerRadius\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cornerRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CornerMixin {\n  cornerRadius: number;\n}\n\nexport class RectangleCornerMixin {\n  topLeftRadius: number;\n  topRightRadius: number;\n  bottomLeftRadius: number;\n  bottomRightRadius: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultShapeMixin.html":{"url":"classes/DefaultShapeMixin.html","title":"class - DefaultShapeMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultShapeMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/shape.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Mixin } from 'ts-mixer';\nimport { CornerMixin, RectangleCornerMixin } from './corner';\nimport { LayoutMixin } from './layout';\nimport { GeometryMixin } from './geometry';\n\nexport class DefaultShapeMixin extends Mixin(CornerMixin, RectangleCornerMixin, LayoutMixin, GeometryMixin) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeometryMixin.html":{"url":"classes/GeometryMixin.html","title":"class - GeometryMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeometryMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/geometry.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fills\n                            \n                            \n                                strokeAlign\n                            \n                            \n                                strokeMiterLimit\n                            \n                            \n                                strokes\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                    Protected\n                                context\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    background\n                                \n                                \n                                    border\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Paint[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strokeAlign\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"CENTER\" | \"INSIDE\" | \"OUTSIDE\"\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strokeMiterLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strokes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Paint[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strokeWeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Context\n\n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n\n                \n                    \n                        getbackground()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:18\n                                \n                            \n\n                \n                    \n                        setbackground(background: string)\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            background\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        border\n                    \n                \n\n                \n                    \n                        getborder()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:32\n                                \n                            \n\n                \n                    \n                        setborder(border: string)\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            border\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import type { Paint } from 'canvaskit-wasm';\nimport { Base } from './base';\n\n// TODO: fills and stroke support array\nexport class GeometryMixin extends Base {\n  // TODO 确认完更新策略好设置正确的类型\n  fills: Paint[] = [];\n  strokes: Paint[] = [];\n  strokeWeight: number;\n  strokeMiterLimit: number;\n  strokeAlign: 'CENTER' | 'INSIDE' | 'OUTSIDE';\n  // strokeCap: StrokeCap | PluginAPI['mixed']\n  // strokeJoin: StrokeJoin | PluginAPI['mixed']\n  // dashPattern: ReadonlyArray\n  // fillStyleId: string | PluginAPI['mixed']\n  // strokeStyleId: string\n\n  get background(): string {\n    return this.fills.toString();\n  }\n\n  // TODO: support more typeof background\n  set background(background: string) {\n    const paint = new this.context.ck.Paint();\n    const color = this.context.ck.parseColorString(background);\n    paint.setColor(color);\n    paint.setStyle(this.context.ck.PaintStyle.Fill);\n    paint.setAntiAlias(true);\n    this.fills.push(paint);\n  }\n\n  get border(): string {\n    return this.strokes.toString();\n  }\n\n  set border(border: string) {\n    const { ck } = this.context;\n    const paint = new ck.Paint();\n    paint.setStyle(ck.PaintStyle.Stroke);\n    paint.setStrokeWidth(20);\n    paint.setColor(ck.parseColorString('#ee0033'));\n    paint.setAntiAlias(true);\n    this.strokes.push(paint);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISettings.html":{"url":"interfaces/ISettings.html","title":"interface - ISettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/settings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            check\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import ElectronStore from 'electron-store';\n\ninterface ISettings {\n  check: boolean;\n}\n\nconst settings = new ElectronStore({\n  defaults: {\n    check: false,\n  },\n});\n\nexport default settings;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISplitBoardView.html":{"url":"interfaces/ISplitBoardView.html","title":"interface - ISplitBoardView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISplitBoardView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/type.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cancelForMerge\n                                        \n                                \n                                \n                                        \n                                            direction\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            resizeAt\n                                        \n                                \n                                \n                                        \n                                            setCursor\n                                        \n                                \n                                \n                                        \n                                            splitColumnAt\n                                        \n                                \n                                \n                                        \n                                            splitRowAt\n                                        \n                                \n                                \n                                        \n                                            waitForMergeAtItem\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancelForMerge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelForMerge:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:         directionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         directionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     SplitItemView[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SplitItemView[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizeAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resizeAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setCursor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setCursor:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitColumnAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitColumnAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitRowAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitRowAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        waitForMergeAtItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        waitForMergeAtItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type View from '../view';\nimport type SplitItemView from './split-item.view';\n\nexport enum directionType {\n  'col',\n  'row',\n}\n\nexport interface ItemGenerateDelegate {\n  expandNewItem: (oldItem: T, index: number) => T;\n}\n\nexport interface ISplitBoardView extends View {\n  items: SplitItemView[];\n  direction: directionType;\n  setCursor: (\n    type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize'\n  ) => void;\n  cancelForMerge: () => void;\n  resizeAt: (index: number, start: number, length: number, position: number) => void;\n  waitForMergeAtItem: (index: number, direction: 'w' | 'e' | 'n' | 's') => void;\n  splitColumnAt: (index: number, clientX: number, clientY: number) => void;\n  splitRowAt: (index: number, clientX: number, clientY: number) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemGenerateDelegate.html":{"url":"interfaces/ItemGenerateDelegate.html","title":"interface - ItemGenerateDelegate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ItemGenerateDelegate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/type.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expandNewItem\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expandNewItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expandNewItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type View from '../view';\nimport type SplitItemView from './split-item.view';\n\nexport enum directionType {\n  'col',\n  'row',\n}\n\nexport interface ItemGenerateDelegate {\n  expandNewItem: (oldItem: T, index: number) => T;\n}\n\nexport interface ISplitBoardView extends View {\n  items: SplitItemView[];\n  direction: directionType;\n  setCursor: (\n    type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize'\n  ) => void;\n  cancelForMerge: () => void;\n  resizeAt: (index: number, start: number, length: number, position: number) => void;\n  waitForMergeAtItem: (index: number, direction: 'w' | 'e' | 'n' | 's') => void;\n  splitColumnAt: (index: number, clientX: number, clientY: number) => void;\n  splitRowAt: (index: number, clientX: number, clientY: number) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LayoutMixin.html":{"url":"classes/LayoutMixin.html","title":"class - LayoutMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LayoutMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/layout.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/layout.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/layout.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LayoutMixin {\n  x: number;\n  y: number;\n  /** TODO: should it be readonly? */\n  // width: number\n  // height: number\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuBar.html":{"url":"classes/MenuBar.html","title":"class - MenuBar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuBar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-group/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Controller\n            \n\n            \n                Implements\n            \n            \n                            Module\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                serialize\n                            \n                            \n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-group/index.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuProps\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-group/index.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-group/index.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: MenuProps)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-group/index.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                MenuProps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-group/index.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { title: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n            \n                \nview()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\n// import { Menu } from './menu';\n\ninterface MenuProps {\n  title: string;\n}\n\n@injectable()\nexport default class MenuBar extends Controller implements Module {\n  props: MenuProps;\n  // private meuns!: Menu[];\n  private _view: HTMLElement;\n  view() {\n    return this._view;\n  }\n  public async init(props: MenuProps) {\n    this._view = document.createElement('div');\n    return this;\n  }\n  viewWillAppear() {\n    // const id = Date.now() + '' + this.meuns.length;\n    // const menu = new Menu(this._view, id);\n    // this.meuns.push(menu);\n  }\n  serialize() {\n    return { title: '' };\n  }\n  async destroy() {\n    return this;\n  }\n  // remove(menu: Menu) {\n  //   this._view.removeChild(menu.container);\n  //   this.meuns = this.meuns.filter((item) => item.id === menu.id);\n  // }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuProps.html":{"url":"interfaces/MenuProps.html","title":"interface - MenuProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-group/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\n// import { Menu } from './menu';\n\ninterface MenuProps {\n  title: string;\n}\n\n@injectable()\nexport default class MenuBar extends Controller implements Module {\n  props: MenuProps;\n  // private meuns!: Menu[];\n  private _view: HTMLElement;\n  view() {\n    return this._view;\n  }\n  public async init(props: MenuProps) {\n    this._view = document.createElement('div');\n    return this;\n  }\n  viewWillAppear() {\n    // const id = Date.now() + '' + this.meuns.length;\n    // const menu = new Menu(this._view, id);\n    // this.meuns.push(menu);\n  }\n  serialize() {\n    return { title: '' };\n  }\n  async destroy() {\n    return this;\n  }\n  // remove(menu: Menu) {\n  //   this._view.removeChild(menu.container);\n  //   this.meuns = this.meuns.filter((item) => item.id === menu.id);\n  // }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Module.html":{"url":"interfaces/Module.html","title":"interface - Module","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Module\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destroy\n                                        \n                                \n                                \n                                        \n                                            init\n                                        \n                                \n                                \n                                        \n                                            props\n                                        \n                                \n                                \n                                        \n                                            serialize\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destroy:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        init\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        init:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    loading resoures\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        props\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        props:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serialize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serialize:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    to Options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Module {\n  props: T;\n  /** loading resoures */\n  init: (props: T) => Promise>;\n\n  /** to Options */\n  serialize: () => T;\n\n  destroy: () => Promise>;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModuleConfig.html":{"url":"interfaces/ModuleConfig.html","title":"interface - ModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module-factory.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Module } from './module';\nimport { injectable } from 'inversify';\nimport type { Container } from 'inversify';\n\nexport interface ModuleConfig {\n  id: string;\n}\n\n@injectable()\n/** Provides the ability to cache and run ES Modules */\nexport class ModuleFactory {\n  constructor(private container: Container) {}\n  private modules: Map Module> = new Map();\n  add(moduleId: string, module: new () => Module, scope: 'Singleton' | 'Transient' | 'Request' = 'Transient') {\n    if (this.exist(moduleId)) return;\n    this.modules.set(moduleId, module);\n    const m = this.container.bind(moduleId).to(module);\n    switch (scope) {\n      case 'Singleton':\n        m.inSingletonScope();\n        break;\n      case 'Transient':\n        m.inTransientScope();\n        break;\n      case 'Request':\n        m.inRequestScope();\n        break;\n    }\n  }\n  get(moduleId: string) {\n    return this.modules.get(moduleId);\n  }\n  exist(moduleId: string) {\n    return this.modules.has(moduleId);\n  }\n  async load(moduleId: string, props: any) {\n    if (!this.exist(moduleId)) {\n      await import(moduleId).then((ModuleSource) => {\n        this.add(moduleId, ModuleSource.default, props.scope || 'Transient');\n      });\n    }\n    const module = this.container.get(moduleId) as Module;\n    await module.init(props);\n    return module;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModuleFactory.html":{"url":"classes/ModuleFactory.html","title":"class - ModuleFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModuleFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                modules\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                exist\n                            \n                            \n                                get\n                            \n                            \n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: Container)\n                    \n                \n                        \n                            \n                                Defined in src/core/parts/modules/module-factory.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    Container\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/module-factory.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(moduleId: string, module, scope: \"Singleton\" | \"Transient\" | \"Request\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    module\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    scope\n                                    \n                                            \"Singleton\" | \"Transient\" | \"Request\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Transient'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exist\n                        \n                    \n                \n            \n            \n                \nexist(moduleId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(moduleId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load(moduleId: string, props: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Module } from './module';\nimport { injectable } from 'inversify';\nimport type { Container } from 'inversify';\n\nexport interface ModuleConfig {\n  id: string;\n}\n\n@injectable()\n/** Provides the ability to cache and run ES Modules */\nexport class ModuleFactory {\n  constructor(private container: Container) {}\n  private modules: Map Module> = new Map();\n  add(moduleId: string, module: new () => Module, scope: 'Singleton' | 'Transient' | 'Request' = 'Transient') {\n    if (this.exist(moduleId)) return;\n    this.modules.set(moduleId, module);\n    const m = this.container.bind(moduleId).to(module);\n    switch (scope) {\n      case 'Singleton':\n        m.inSingletonScope();\n        break;\n      case 'Transient':\n        m.inTransientScope();\n        break;\n      case 'Request':\n        m.inRequestScope();\n        break;\n    }\n  }\n  get(moduleId: string) {\n    return this.modules.get(moduleId);\n  }\n  exist(moduleId: string) {\n    return this.modules.has(moduleId);\n  }\n  async load(moduleId: string, props: any) {\n    if (!this.exist(moduleId)) {\n      await import(moduleId).then((ModuleSource) => {\n        this.add(moduleId, ModuleSource.default, props.scope || 'Transient');\n      });\n    }\n    const module = this.container.get(moduleId) as Module;\n    await module.init(props);\n    return module;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModuleItem.html":{"url":"classes/ModuleItem.html","title":"class - ModuleItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModuleItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/module-item.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SplitItemView\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loader\n                            \n                            \n                                    Public\n                                module\n                            \n                            \n                                    Public\n                                moduleId\n                            \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clone\n                            \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Promise>\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/module-item.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Module\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/module-item.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        moduleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/module-item.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitExpand\n\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/module-item.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleItem\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:67\n\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:71\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SplitItemView } from '@cosmic/core/browser';\nimport type { Module } from '@cosmic/core/parts';\n\nexport class ModuleItem extends SplitItemView {\n  public loader: Promise>;\n  public moduleId: string;\n  public module: Module;\n  public clone() {\n    const item = new ModuleItem();\n    item.moduleId = this.moduleId;\n    return item;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyPanel.html":{"url":"classes/PropertyPanel.html","title":"class - PropertyPanel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyPanel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/property-panel/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvelteModule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                serialize\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SvelteModule } from '@cosmic/core/parts';\n\nexport default class PropertyPanel extends SvelteModule {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n  serialize() {\n    return {};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rectangle.html":{"url":"classes/Rectangle.html","title":"class - Rectangle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rectangle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/rectangle.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RectangleNode\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _height\n                            \n                            \n                                    Private\n                                _width\n                            \n                            \n                                    Private\n                                rect\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                draw\n                            \n                            \n                                    Private\n                                updateRect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                                \n                                    borderRaidus\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(context: Context)\n                    \n                \n                        \n                            \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        Context\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        rect\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Path\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RECTANGLE'\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        draw\n                        \n                    \n                \n            \n            \n                \ndraw()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateRect\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRect()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:18\n                                \n                            \n\n                \n                    \n                        setwidth(width: number)\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            width\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:27\n                                \n                            \n\n                \n                    \n                        setheight(height: number)\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            height\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        borderRaidus\n                    \n                \n\n                \n                    \n                        getborderRaidus()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:36\n                                \n                            \n\n                \n                    \n                        setborderRaidus(borderRaidus: number)\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            borderRaidus\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import type { RectangleNode } from '../types/shape';\nimport type { Path } from 'canvaskit-wasm';\nimport { Mixin } from 'ts-mixer';\nimport { DefaultShapeMixin } from './mixin/shape';\nimport type { Context } from './context';\n\nexport class Rectangle extends Mixin(DefaultShapeMixin) implements RectangleNode {\n  readonly type = 'RECTANGLE';\n  private rect: Path;\n  private _width: number;\n  private _height: number;\n\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  get width(): number {\n    return this._width;\n  }\n\n  set width(width: number) {\n    this._width = width;\n    this.updateRect();\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  set height(height: number) {\n    this._height = height;\n    this.updateRect();\n  }\n\n  get borderRaidus(): number {\n    return this.cornerRadius;\n  }\n\n  set borderRaidus(borderRaidus: number) {\n    this.cornerRadius = borderRaidus;\n    this.updateRect();\n  }\n\n  private updateRect() {\n    const left = this.x;\n    const top = this.y;\n    const right = this._width + this.x;\n    const bottom = this._height + this.y;\n    const rrect = this.context.ck.RRectXY([left, top, right, bottom], this.cornerRadius, this.cornerRadius);\n    this.rect = new this.context.ck.Path().addRRect(rrect, true);\n  }\n\n  draw(): void {\n    // TODO: use mixin to handle paint and stroke\n    // TODO: set default fills\n    this.context.getCanvas().drawPath(this.rect, this.fills[0]);\n    this.context.getCanvas().drawPath(this.rect, this.strokes[0]);\n    this.context.draw();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RectangleCornerMixin.html":{"url":"classes/RectangleCornerMixin.html","title":"class - RectangleCornerMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RectangleCornerMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/corner.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bottomLeftRadius\n                            \n                            \n                                bottomRightRadius\n                            \n                            \n                                topLeftRadius\n                            \n                            \n                                topRightRadius\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bottomLeftRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bottomRightRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topLeftRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topRightRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CornerMixin {\n  cornerRadius: number;\n}\n\nexport class RectangleCornerMixin {\n  topLeftRadius: number;\n  topRightRadius: number;\n  bottomLeftRadius: number;\n  bottomRightRadius: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceExplorer.html":{"url":"classes/ResourceExplorer.html","title":"class - ResourceExplorer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceExplorer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/resource-explorer/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvelteModule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                serialize\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SvelteModule } from '@cosmic/core/parts';\n\nexport default class ResourceExplorer extends SvelteModule {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n  serialize() {\n    return {};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoutesValue.html":{"url":"interfaces/RoutesValue.html","title":"interface - RoutesValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RoutesValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/resource-explorer/routes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            paramNames\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        paramNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paramNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum ROUTES_ENUM {\n  INDEX,\n  TEAM_DETAIL,\n  PROJECT_DETAIL,\n  DESIGN_ATOM,\n}\n\ninterface RoutesValue {\n  path: string;\n  paramNames: string[];\n}\n\nexport const ROUTES: { [key in ROUTES_ENUM]: RoutesValue } = {\n  [ROUTES_ENUM.INDEX]: {\n    path: '/',\n    paramNames: [],\n  },\n  [ROUTES_ENUM.TEAM_DETAIL]: {\n    path: '/team',\n    paramNames: ['teamId'],\n  },\n  [ROUTES_ENUM.PROJECT_DETAIL]: {\n    path: '/project',\n    paramNames: ['projectId'],\n  },\n  [ROUTES_ENUM.DESIGN_ATOM]: {\n    path: '/design/atom',\n    paramNames: ['teamId'],\n  },\n};\n\nexport function getCompleteRoute(route: ROUTES_ENUM): string {\n  const { path, paramNames } = ROUTES[route];\n  const paramPath = paramNames.map((param: string) => `:${param}`).join('/');\n  return `${path}/${paramPath}`;\n}\n\n// TODO: validate params, recognize params\nexport function urlFor(route: ROUTES_ENUM, params?: Record): string {\n  const { path, paramNames } = ROUTES[route];\n  if (paramNames.length === 0 || !params) {\n    return path;\n  }\n  const result = paramNames.map((paramName: string) => params[paramName] || paramName);\n  return `${path}/${result.join('/')}`;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShapeCanvas.html":{"url":"classes/ShapeCanvas.html","title":"class - ShapeCanvas","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShapeCanvas\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shape-canvas/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvelteModule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                serialize\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SvelteModule } from '@cosmic/core/parts';\n\nexport default class ShapeCanvas extends SvelteModule {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n  serialize() {\n    return {};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardController.html":{"url":"classes/SplitBoardController.html","title":"class - SplitBoardController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeId\n                            \n                            \n                                    Private\n                                expandActive\n                            \n                            \n                                    Private\n                                expandLeaveHandler\n                            \n                            \n                                    Private\n                                expandMouseUpHandler\n                            \n                            \n                                    Private\n                                expandMoveHandler\n                            \n                            \n                                    Private\n                                expandType\n                            \n                            \n                                    Private\n                                startX\n                            \n                            \n                                    Private\n                                startY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeExpand\n                            \n                            \n                                    Public\n                                checkExpandState\n                            \n                            \n                                    Private\n                                liveResize\n                            \n                            \n                                    Public\n                                onMouseDown\n                            \n                            \n                                    Public\n                                setActiveState\n                            \n                            \n                                    Private\n                                unactiveExpand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(view: ISplitBoardView)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        view\n                                                  \n                                                        \n                                                                        ISplitBoardView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandLeaveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMouseUpHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMoveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        activeExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    activeExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkExpandState\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkExpandState(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        liveResize\n                        \n                    \n                \n            \n            \n                \n                    \n                    liveResize(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onMouseDown\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseDown(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setActiveState\n                        \n                    \n                \n            \n            \n                \n                    \n                    setActiveState(index: number, startX: number, startY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        unactiveExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    unactiveExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { directionType } from './type';\nimport type { ISplitBoardView } from './type';\n\nexport default class SplitBoardController {\n  private expandMoveHandler!: (event: MouseEvent) => void;\n  private expandLeaveHandler!: (event: MouseEvent) => void;\n  private expandMouseUpHandler!: (event: MouseEvent) => void;\n\n  private startX = 0;\n  private startY = 0;\n  private activeId = -1;\n\n  private expandActive = false;\n  private expandType = 0; // 是否超过偏移值 0 / 1 expand hor | 2 expand ver | 3 merge hor | 4 merge ver\n\n  constructor(private view: ISplitBoardView) {\n    this.expandMoveHandler = (event: MouseEvent) => {\n      this.liveResize(event.clientX, event.clientY);\n      this.checkExpandState(event.clientX, event.clientY);\n    };\n    this.expandLeaveHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.expandMouseUpHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.view.root.addEventListener('mousedown', (event: MouseEvent) => {\n      this.onMouseDown(event);\n    });\n  }\n  public onMouseDown(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    let index = -1;\n    this.view.items.forEach((item, i) => {\n      if (target && item.root === target.parentElement && target.classList.contains('split-expand')) index = i;\n    });\n    if (index === -1) {\n      return;\n    }\n    if (index > -1) {\n      this.setActiveState(index, event.clientX, event.clientY);\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  public setActiveState(index: number, startX: number, startY: number) {\n    // 锚点mousedown\n    this.startX = startX;\n    this.startY = startY;\n    this.activeExpand();\n    this.activeId = index;\n  }\n  private activeExpand() {\n    this.view.root.addEventListener('mousemove', this.expandMoveHandler);\n    this.view.root.addEventListener('mouseleave', this.expandLeaveHandler);\n    this.view.root.addEventListener('mouseup', this.expandMouseUpHandler);\n    this.expandActive = true;\n    this.expandType = 0;\n    this.view.setCursor('crosshair');\n  }\n  private unactiveExpand() {\n    if (this.expandActive) {\n      this.view.root.removeEventListener('mousemove', this.expandMoveHandler);\n      this.view.root.removeEventListener('mouseleave', this.expandLeaveHandler);\n      this.view.root.removeEventListener('mouseup', this.expandMouseUpHandler);\n      this.view.cancelForMerge();\n      this.expandActive = false;\n      this.expandType = 0;\n      this.view.setCursor('');\n    }\n  }\n  private liveResize(clientX: number, clientY: number) {\n    const item = this.view.items[this.activeId];\n    if (this.expandType === 1 && this.view.direction === directionType.col) {\n      // horizontal expand column\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n    } else if (this.expandType === 2 && this.view.direction === directionType.row) {\n      // vertical expand row\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n    }\n  }\n  public checkExpandState(clientX: number, clientY: number) {\n    const offsetX = this.startX - clientX;\n    const offsetY = this.startY - clientY;\n    /** expand mode */\n    if (this.expandType === 0 && offsetX > 0 && offsetY > 0 && (offsetX > 5 || offsetY > 5)) {\n      if (offsetX > offsetY) {\n        this.view.setCursor('col-resize');\n      } else {\n        this.view.setCursor('row-resize');\n      }\n    }\n    /** merge mode */\n    if (offsetX  5) {\n      this.view.setCursor('w-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'w');\n      return;\n    }\n\n    if (offsetY  5) {\n      this.view.setCursor('n-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'n');\n      return;\n    }\n\n    if (this.expandType) return;\n    /** do expand */\n    if (offsetX > 30) {\n      this.expandType = 1;\n      this.view.setCursor('col-resize');\n      this.view.splitColumnAt(this.activeId, clientX, clientY);\n      return;\n    }\n    if (offsetY > 30) {\n      this.expandType = 2;\n      this.view.setCursor('row-resize');\n      this.view.splitRowAt(this.activeId, clientX, clientY);\n    }\n    if (\n      (this.expandType === 1 && this.view.direction === directionType.row) ||\n      (this.expandType === 2 && this.view.direction === directionType.col)\n    ) {\n      this.unactiveExpand();\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitItemView.html":{"url":"classes/SplitItemView.html","title":"class - SplitItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-item.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitExpand\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:67\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view';\nimport SplitExpand from './split-expand.svelte';\n\nenum directionStyles {\n  'w' = 'merge-w',\n  'e' = 'merge-e',\n  's' = 'merge-s',\n  'n' = 'merge-n',\n}\n\nexport default class SplitItemView extends View {\n  private _growClassName = '';\n  private _shrinkClassName = '';\n  private _bgColorClassName: string[] = ['bg-cgray-100', 'dark:bg-cgray-800'];\n\n  public contentView!: HTMLElement;\n  private expand!: SplitExpand;\n\n  constructor() {\n    super();\n    this.addExpandButton();\n    this.setDefaultClass();\n  }\n\n  public setContent(contentView: HTMLElement): SplitItemView {\n    this.contentView = contentView;\n    this.root.classList.add('split-item', 'flex');\n    contentView.classList.add('flex', 'flex-1', 'w-full');\n    return this.prepend(contentView);\n  }\n\n  public replaceContent(contentView: HTMLElement): SplitItemView {\n    this.root.replaceChild(contentView, this.contentView);\n    this.contentView = contentView;\n    contentView.classList.add('flex', 'flex-1');\n    return this;\n  }\n\n  public setGrow(className = 'flex-grow'): void {\n    this.root.classList.remove(this._shrinkClassName);\n    this._shrinkClassName = '';\n    this._growClassName = className;\n    this.root.classList.add(this._growClassName);\n  }\n\n  public setShrink(className = 'flex-shrink'): void {\n    this.root.classList.remove(this._growClassName);\n    this._growClassName = '';\n    this._shrinkClassName = className;\n    this.root.classList.add(this._shrinkClassName);\n  }\n\n  public isShrink(): boolean {\n    return !!this._growClassName;\n  }\n\n  private setDefaultClass() {\n    this.root.classList.add('flex-grow', 'rounded-xl');\n    this.root.classList.add('relative');\n    this.root.classList.add(...this._bgColorClassName);\n  }\n\n  private addExpandButton() {\n    this.expand = new SplitExpand({ target: this.root });\n  }\n  /** To hide expand button */\n  public hideExpandButton(): void {\n    this.expand.expandHidden = true;\n  }\n\n  public waitForMerge(direction: 'w' | 'e' | 's' | 'n'): void {\n    this.cancelWaitForMerge();\n    this.root.classList.add('wait-for-merge');\n    this.expand.mergeDirection = directionStyles[direction];\n  }\n\n  public cancelWaitForMerge(): void {\n    this.root.classList.remove('wait-for-merge');\n    this.expand.mergeDirection = '';\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SvelteModule.html":{"url":"classes/SvelteModule.html","title":"class - SvelteModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SvelteModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/svelte-module.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Controller\n            \n\n            \n                Implements\n            \n            \n                            Module\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Abstract\n                                initWithComponent\n                            \n                            \n                                    Abstract\n                                serialize\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-module.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-module.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-module.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    initWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SvelteComponentDev\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        serialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    serialize()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\nimport type { SvelteComponentDev } from 'svelte/internal';\nimport { Controller } from '@cosmic/core/browser';\nimport type { Module } from './module';\n\n@injectable()\nexport abstract class SvelteModule extends Controller implements Module {\n  private comp: SvelteComponentDev;\n  private _view: HTMLElement;\n  public props: T;\n\n  public view() {\n    return this._view;\n  }\n\n  public async init(props: T) {\n    this.props = props;\n    this._view = this._view || document.createElement('div');\n    return this;\n  }\n\n  abstract initWithComponent(target: Element): SvelteComponentDev;\n\n  viewWillAppear() {\n    this.comp = this.initWithComponent(this._view);\n  }\n\n  public async destroy() {\n    this.comp.$destroy();\n    if (this._view.parentNode) {\n      this._view.parentNode.removeChild(this._view);\n    }\n    return this;\n  }\n\n  abstract serialize(): T;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/View.html":{"url":"classes/View.html","title":"class - View","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  View\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/view.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root?: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/view.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/view.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        type FlowValue = '1' | 'auto' | 'initial' | 'none';\n\nexport default class View {\n  public root: HTMLElement;\n  constructor(root?: HTMLElement) {\n    this.root = root || document.createElement('div');\n  }\n  setFlow(type: FlowValue) {\n    this.root.classList.remove('flex-1', 'flex-auto', 'flex-initial', 'flex-none');\n    this.root.classList.add(`flex-${type}`);\n    return this;\n  }\n  append(child: HTMLElement) {\n    this.root.appendChild(child);\n    return this;\n  }\n  prepend(...childs: HTMLElement[]) {\n    this.root.prepend(...childs);\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeightMap.html":{"url":"interfaces/WeightMap.html","title":"interface - WeightMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WeightMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [index: string]:        number\n\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:11\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Workbench.html":{"url":"classes/Workbench.html","title":"class - Workbench","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Workbench\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Controller\n            \n\n            \n                Implements\n            \n            \n                            Module\n                            ItemGenerateDelegate\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                moduleFactory\n                            \n                            \n                                    Public\n                                props\n                            \n                            \n                                    Private\n                                splitBoard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                expandNewItem\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                serialize\n                            \n                            \n                                view\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleFactory: ModuleFactory)\n                    \n                \n                        \n                            \n                                Defined in src/modules/workbench/index.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleFactory\n                                                  \n                                                        \n                                                                        ModuleFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        moduleFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModuleFactory\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkbenchProps\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        splitBoard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SplitBoardView>\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:20\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expandNewItem\n                        \n                    \n                \n            \n            \n                \nexpandNewItem(view: ModuleItem, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    view\n                                    \n                                                ModuleItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: WorkbenchProps)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                WorkbenchProps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { type: \"col\" | \"row\"; minWidth: number; scale: {}; modules: {}; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n            \n                \nview()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\nimport { ModuleItem } from './module-item';\n\ninterface WorkbenchProps {\n  type: 'col' | 'row';\n  minWidth: number;\n  scale: number[];\n  modules?: ModuleConfig[];\n}\n\n@injectable()\nexport default class Workbench\n  extends Controller\n  implements Module, ItemGenerateDelegate>\n{\n  public props: WorkbenchProps;\n  private splitBoard: SplitBoardView>;\n  private moduleFactory: ModuleFactory;\n  constructor(@inject('ModuleFactory') moduleFactory: ModuleFactory) {\n    super();\n    this.splitBoard = new SplitBoardView>().setFlow('1');\n    this.splitBoard.itemGenerateDelegate = this;\n    this.moduleFactory = moduleFactory;\n  }\n  view() {\n    return this.splitBoard.root;\n  }\n  async init(props: WorkbenchProps) {\n    this.props = props;\n    this.splitBoard.direction = directionType[props.type];\n    for (const p of props.modules || []) {\n      const item = new ModuleItem();\n      item.loader = this.moduleFactory.load(p.id, p);\n      item.moduleId = p.id;\n      this.splitBoard.addItem(item);\n    }\n    this.splitBoard.applySplit(\n      this.splitBoard.direction === directionType.col ? 'horizontal' : 'vertical',\n      props.scale || []\n    );\n    return this;\n  }\n\n  viewWillAppear(): void {\n    this.splitBoard.items.forEach((item, index) => {\n      const view = this.splitBoard.items[index];\n      item.loader.then((module) => {\n        if (module instanceof Controller) {\n          view.setContent(module.view());\n          view.module = module;\n          module.viewWillAppear();\n          module.viewDidDisappear();\n        }\n      });\n    });\n    /** to be completed */\n  }\n  viewDidAppear(): void {\n    /** to be completed */\n  }\n\n  viewWillDisappear(): void {\n    /** to be completed */\n  }\n  viewDidDisappear(): void {\n    /** to be completed */\n  }\n\n  public async destroy() {\n    const view = this.view();\n    this.viewWillDisappear();\n    if (view.parentNode) {\n      view.parentNode.removeChild(view);\n    }\n    this.viewDidDisappear();\n    return this;\n  }\n  expandNewItem(view: ModuleItem, index: number) {\n    const item = view.clone();\n    item.loader = this.moduleFactory.load(item.moduleId, view.module.serialize());\n    item.loader.then((module) => {\n      if (module instanceof Controller) {\n        item.module = module;\n        item.setContent(module.view());\n        module.viewWillAppear();\n        module.viewDidDisappear();\n      }\n    });\n    return item;\n  }\n\n  serialize() {\n    return {\n      type: this.props.type,\n      minWidth: this.props.minWidth,\n      scale: this.props.scale,\n      modules: [],\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkbenchProps.html":{"url":"interfaces/WorkbenchProps.html","title":"interface - WorkbenchProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkbenchProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            minWidth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            modules\n                                        \n                                \n                                \n                                        \n                                            scale\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        minWidth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minWidth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modules\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modules:     ModuleConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scale:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"col\" | \"row\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"col\" | \"row\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\nimport { ModuleItem } from './module-item';\n\ninterface WorkbenchProps {\n  type: 'col' | 'row';\n  minWidth: number;\n  scale: number[];\n  modules?: ModuleConfig[];\n}\n\n@injectable()\nexport default class Workbench\n  extends Controller\n  implements Module, ItemGenerateDelegate>\n{\n  public props: WorkbenchProps;\n  private splitBoard: SplitBoardView>;\n  private moduleFactory: ModuleFactory;\n  constructor(@inject('ModuleFactory') moduleFactory: ModuleFactory) {\n    super();\n    this.splitBoard = new SplitBoardView>().setFlow('1');\n    this.splitBoard.itemGenerateDelegate = this;\n    this.moduleFactory = moduleFactory;\n  }\n  view() {\n    return this.splitBoard.root;\n  }\n  async init(props: WorkbenchProps) {\n    this.props = props;\n    this.splitBoard.direction = directionType[props.type];\n    for (const p of props.modules || []) {\n      const item = new ModuleItem();\n      item.loader = this.moduleFactory.load(p.id, p);\n      item.moduleId = p.id;\n      this.splitBoard.addItem(item);\n    }\n    this.splitBoard.applySplit(\n      this.splitBoard.direction === directionType.col ? 'horizontal' : 'vertical',\n      props.scale || []\n    );\n    return this;\n  }\n\n  viewWillAppear(): void {\n    this.splitBoard.items.forEach((item, index) => {\n      const view = this.splitBoard.items[index];\n      item.loader.then((module) => {\n        if (module instanceof Controller) {\n          view.setContent(module.view());\n          view.module = module;\n          module.viewWillAppear();\n          module.viewDidDisappear();\n        }\n      });\n    });\n    /** to be completed */\n  }\n  viewDidAppear(): void {\n    /** to be completed */\n  }\n\n  viewWillDisappear(): void {\n    /** to be completed */\n  }\n  viewDidDisappear(): void {\n    /** to be completed */\n  }\n\n  public async destroy() {\n    const view = this.view();\n    this.viewWillDisappear();\n    if (view.parentNode) {\n      view.parentNode.removeChild(view);\n    }\n    this.viewDidDisappear();\n    return this;\n  }\n  expandNewItem(view: ModuleItem, index: number) {\n    const item = view.clone();\n    item.loader = this.moduleFactory.load(item.moduleId, view.module.serialize());\n    item.loader.then((module) => {\n      if (module instanceof Controller) {\n        item.module = module;\n        item.setContent(module.view());\n        module.viewWillAppear();\n        module.viewDidDisappear();\n      }\n    });\n    return item;\n  }\n\n  serialize() {\n    return {\n      type: this.props.type,\n      minWidth: this.props.minWidth,\n      scale: this.props.scale,\n      modules: [],\n    };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/classBuilder.html":{"url":"classes/classBuilder.html","title":"class - classBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  classBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                orderedConfigs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addConfig\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Private\n                                insertConfig\n                            \n                            \n                                    Private\n                                normalizeWeight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configs: stateConfig[], weightMap: WeightMap)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                        stateConfig[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weightMap\n                                                  \n                                                        \n                                                                        WeightMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orderedConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         stateConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/class-builder.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    addConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        normalizeWeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    normalizeWeight(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         stateConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/classConfig.html":{"url":"interfaces/classConfig.html","title":"interface - classConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  classConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            createWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            mainWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            notification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            interface\n            ISettings\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            variable\n            settings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            class\n            classBuilder\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            classConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            stateConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            WeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            variable\n            defaultWeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/controller.ts\n            \n            class\n            Controller\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.controller.ts\n            \n            class\n            SplitBoardController\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            class\n            SplitBoardView\n            \n                3 %\n                (1/28)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            variable\n            lowBoardRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-item.view.ts\n            \n            class\n            SplitItemView\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/core/browser/layout/type.ts\n            \n            interface\n            ISplitBoardView\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/core/browser/layout/type.ts\n            \n            interface\n            ItemGenerateDelegate\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            function\n            makeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BgColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BorderColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlAccentColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlBackgroundColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlDisabledColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlForbiddenColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlHighlightColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            FourthBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            GridBackgroundColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            LabelColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemBlueColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemGrayColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemOrangeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemPinkColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemRedColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemYellowColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TextFieldBackground\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/view.ts\n            \n            class\n            View\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/color-ref.ts\n            \n            class\n            ColorRef\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/uuid.ts\n            \n            variable\n            uuid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/ioc/inject.ts\n            \n            function\n            inject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module-factory.ts\n            \n            class\n            ModuleFactory\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module-factory.ts\n            \n            interface\n            ModuleConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module.ts\n            \n            interface\n            Module\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/core/parts/modules/svelte-module.ts\n            \n            class\n            SvelteModule\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/canvas-kit.ts\n            \n            function\n            getCanvasKit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/context.ts\n            \n            class\n            Context\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/base.ts\n            \n            class\n            Base\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/corner.ts\n            \n            class\n            CornerMixin\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/corner.ts\n            \n            class\n            RectangleCornerMixin\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/geometry.ts\n            \n            class\n            GeometryMixin\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/layout.ts\n            \n            class\n            LayoutMixin\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/shape.ts\n            \n            class\n            DefaultShapeMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/rectangle.ts\n            \n            class\n            Rectangle\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/menu-group/base-menu.ts\n            \n            class\n            BaseMenu\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/menu-group/index.ts\n            \n            class\n            MenuBar\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/menu-group/index.ts\n            \n            interface\n            MenuProps\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/property-panel/index.ts\n            \n            class\n            PropertyPanel\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/index.ts\n            \n            class\n            ResourceExplorer\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/project/api.ts\n            \n            variable\n            createProject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/project/api.ts\n            \n            variable\n            queryProjects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/routes.ts\n            \n            interface\n            RoutesValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/routes.ts\n            \n            function\n            getCompleteRoute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/routes.ts\n            \n            function\n            urlFor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/routes.ts\n            \n            variable\n            ROUTES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/team/api.ts\n            \n            variable\n            teamsQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/shape-canvas/index.ts\n            \n            class\n            ShapeCanvas\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/workbench/index.ts\n            \n            class\n            Workbench\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/workbench/index.ts\n            \n            interface\n            WorkbenchProps\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/workbench/module-item.ts\n            \n            class\n            ModuleItem\n            \n                4 %\n                (1/24)\n            \n        \n        \n            \n                \n                src/workbench/desktop/app.ts\n            \n            class\n            App\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/workbench/desktop/main.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/services/appearance-service.ts\n            \n            class\n            AppearanceService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @types/color : ^3.0.1\n        \n            @urql/svelte : ~1.3.0\n        \n            canvaskit-wasm : ~0.28.1\n        \n            color : ^3.1.3\n        \n            electron-log : ^4.3.1\n        \n            electron-store : ^7.0.2\n        \n            electron-updater : ^4.3.5\n        \n            eventemitter2 : ^6.4.4\n        \n            graphql : ~15.6.0\n        \n            install : ~0.13.0\n        \n            inversify : ^5.1.1\n        \n            keycode : ^2.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            smelte : ^1.1.5\n        \n            split.js : ^1.6.4\n        \n            svelte-spa-router : ~3.2.0\n        \n            tailwindcss-typography : ~3.1.0\n        \n            ts-mixer : ~6.0.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppearanceType   (src/.../appearance.ts)\n                        \n                        \n                            directionStyles   (src/.../split-item.view.ts)\n                        \n                        \n                            directionType   (src/.../type.ts)\n                        \n                        \n                            ROUTES_ENUM   (src/.../routes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/common/appearance.ts\n    \n        \n            \n                \n                    \n                        \n                        AppearanceType\n                    \n                \n                    \n                        \n                            模式类型\n\n                        \n                    \n                        \n                            \n                                 any\n                            \n                        \n                        \n                            \n                                 light\n                            \n                        \n                        \n                            \n                                 dark\n                            \n                        \n            \n        \n\n    src/core/browser/layout/split-item.view.ts\n    \n        \n            \n                \n                    \n                        \n                        directionStyles\n                    \n                \n                        \n                            \n                                 w\n                            \n                        \n                        \n                            \n                                Value : merge-w\n                            \n                        \n                        \n                            \n                                 e\n                            \n                        \n                        \n                            \n                                Value : merge-e\n                            \n                        \n                        \n                            \n                                 s\n                            \n                        \n                        \n                            \n                                Value : merge-s\n                            \n                        \n                        \n                            \n                                 n\n                            \n                        \n                        \n                            \n                                Value : merge-n\n                            \n                        \n            \n        \n\n    src/core/browser/layout/type.ts\n    \n        \n            \n                \n                    \n                        \n                        directionType\n                    \n                \n                        \n                            \n                                 col\n                            \n                        \n                        \n                            \n                                 row\n                            \n                        \n            \n        \n\n    src/modules/resource-explorer/routes.ts\n    \n        \n            \n                \n                    \n                        \n                        ROUTES_ENUM\n                    \n                \n                        \n                            \n                                 INDEX\n                            \n                        \n                        \n                            \n                                 TEAM_DETAIL\n                            \n                        \n                        \n                            \n                                 PROJECT_DETAIL\n                            \n                        \n                        \n                            \n                                 DESIGN_ATOM\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getCanvasKit   (src/.../canvas-kit.ts)\n                        \n                        \n                            getCompleteRoute   (src/.../routes.ts)\n                        \n                        \n                            inject   (src/.../inject.ts)\n                        \n                        \n                            makeColor   (src/.../ui-color.ts)\n                        \n                        \n                            urlFor   (src/.../routes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/draw-canvas/skia-wasm/canvas-kit.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCanvasKit\n                        \n                    \n                \n            \n            \n                \ngetCanvasKit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise | void\n\n                    \n                \n            \n        \n    \n    src/modules/resource-explorer/routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCompleteRoute\n                        \n                    \n                \n            \n            \n                \ngetCompleteRoute(route)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        urlFor\n                        \n                    \n                \n            \n            \n                \nurlFor(route, params?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/core/parts/ioc/inject.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inject\n                        \n                    \n                \n            \n            \n                \ninject(token)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        makeColor\n                        \n                    \n                \n            \n            \n                \nmakeColor(anyColorHex, lightColorHex?, darkColorHex?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anyColorHex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    darkColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCosmic Design\n\n\n\n\n\n\n🚧 ing...\n\nThe Repository\nCosmic design is a concrete practice of D2R.\nThis repository is where we develop it together with the community. Not only do we work on code and issues here, we also publish our roadmap , development guide. This source code is available to everyone under the standard MIT license.\nAbout Cosmic Design\n\n🚧 ing...\n\nHow it works\nThe template required a minimum dependencies. Only Vite is used for building, nothing more.\nProject Structure\nThe structure of this template is very similar to the structure of a monorepo.\nThe entire source code of the program is divided into three modules (packages) that are bundled each independently:\n\nsrc/core\nInclude common dependencies, such as components, utils, ipc.\nsrc/app\nElectron main script.\nsrc/modules\nModules of tools\nsrc/workbench\nElectron web page.\n\nCosmic Components\n\nComponents StoryBook\nsrc/core/components\n\nCompile App\nNext step is run packaging and compilation a ready for distribution Electron app for macOS, Windows and Linux with \"auto update\" support out of the box.\nTo do this, using the electron-builder:\n\nIn npm script compile: This script is configured to compile the application as quickly as possible. It is not ready for distribution, is compiled only for the current platform and is used for debugging.\nIn GitHub Action: The application is compiled for any platform and ready-to-distribute files are automatically added to the draft GitHub release.\n\nContribution\nSee Wiki Contributing\n\nSource Code Organization\nUser Interface\nColor Set\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 qiansc\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    26 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/stateConfig.html":{"url":"interfaces/stateConfig.html","title":"interface - stateConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  stateConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:         classConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         classConfig[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FlowValue   (src/.../view.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/browser/view.ts\n    \n    \n        \n            \n                \n                    \n                    FlowValue\n                \n            \n            \n                \n                        \"1\" | \"auto\" | \"initial\" | \"none\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (src/.../main.ts)\n                        \n                        \n                            BgColor   (src/.../ui-color.ts)\n                        \n                        \n                            BorderColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlAccentColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlDisabledColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlForbiddenColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlHighlightColor   (src/.../ui-color.ts)\n                        \n                        \n                            createProject   (src/.../api.ts)\n                        \n                        \n                            createWindow   (src/.../index.ts)\n                        \n                        \n                            defaultWeightMap   (src/.../class-builder.ts)\n                        \n                        \n                            FourthBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            GridBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            isProd   (src/.../index.ts)\n                        \n                        \n                            isProd   (src/.../logger.ts)\n                        \n                        \n                            LabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            logger   (src/.../logger.ts)\n                        \n                        \n                            lowBoardRoot   (src/.../split-board.view.ts)\n                        \n                        \n                            mainWindow   (src/.../index.ts)\n                        \n                        \n                            notification   (src/.../index.ts)\n                        \n                        \n                            queryProjects   (src/.../api.ts)\n                        \n                        \n                            ROUTES   (src/.../routes.ts)\n                        \n                        \n                            SecondaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            SecondaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            settings   (src/.../settings.ts)\n                        \n                        \n                            SystemBlueColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemGrayColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemOrangeColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemPinkColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemRedColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemYellowColor   (src/.../ui-color.ts)\n                        \n                        \n                            teamsQuery   (src/.../api.ts)\n                        \n                        \n                            TertiaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            TextFieldBackground   (src/.../ui-color.ts)\n                        \n                        \n                            uuid   (src/.../uuid.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new App(document.body)\n                    \n                \n\n\n        \n    \n\n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#E0E0E0', '#E0E0E0', '#1F1F1F')\n                    \n                \n\n            \n                \n                    三级背景色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BorderColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D9D9D9', '#D9D9D9', '#D9D9D9')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlAccentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#5580c0', '#5580c0', '#5580c0')\n                    \n                \n\n            \n                \n                    高亮色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#FFFFFF', '#5D5F61')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlDisabledColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F9F9F9', '#F9F9F9', '#464749')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlForbiddenColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlHighlightColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#ffae2b', '#ffae2b', '#ffae2b')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FourthBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#BABABA', '#BABABA', '#454545')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GridBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F2F2F2', '#F2F2F2', '#2E2F30')\n                    \n                \n\n            \n                \n                    组件色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#E0E0E0')\n                    \n                \n\n            \n                \n                    三级标签色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D7D7D7', '#D7D7D7', '#272728')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#808080')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemBlueColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#729cd4', '#729cd4', '#729cd4')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemGrayColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c0c0c1', '#c0c0c1', '#c0c0c1')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemOrangeColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemPinkColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c4666f', '#c4666f', '#c4666f')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemRedColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemYellowColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n            \n                \n                    辅助色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#C6C6C6', '#C6C6C6', '#393939')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#3F3F3F', '#3F3F3F', '#3F3F3F')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TextFieldBackground\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#F2F2F2', '#454545')\n                    \n                \n\n\n        \n    \n\n    src/modules/resource-explorer/project/api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createProject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return mutation({\n    query: `\n      mutation ($project: CreateProjectDTO!) {\n        createProject(project: $project) {\n          id,\n        }\n      }\n    `,\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (project: QueryProjectDTO = {}) => {\n  return operationStore(\n    `\n    query ($project: QueryProjectDTO) {\n      projects(project: $project) {\n        id,\n        name,\n        team,\n        parent\n      }\n    }\n  `,\n    { project },\n    { requestPolicy: 'cache-first' }\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/app/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createWindow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  mainWindow = new BrowserWindow({\n    width: 1280,\n    height: 768,\n    minHeight: 600,\n    minWidth: 960,\n    webPreferences: {\n      devTools: isProd ? false : true,\n      contextIsolation: true,\n      enableRemoteModule: false,\n      // preload: join(__dirname, 'preload.js'),\n    },\n  });\n\n  const url =\n    // process.env.NODE_ENV === \"production\"\n    isProd\n      ? // in production, use the statically build version of our application\n        `file://${join(__dirname, 'dist/workbench/desktop/', 'index.html')}`\n      : // in dev, target the host and port of the local rollup web server\n        'http://localhost:5000/workbench/desktop/';\n\n  mainWindow.loadURL(url).catch((err: any) => {\n    logger.error(JSON.stringify(err));\n    app.quit();\n  });\n\n  if (!isProd) mainWindow.webContents.openDevTools();\n\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BrowserWindow | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Notification | null\n\n                    \n                \n\n\n        \n    \n\n    src/core/browser/class-builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultWeightMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WeightMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/utils/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log\n                    \n                \n\n\n        \n    \n\n    src/core/browser/layout/split-board.view.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lowBoardRoot\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('FlowTableRoot')\n                    \n                \n\n\n        \n    \n\n    src/modules/resource-explorer/routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROUTES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoutesValue\n\n                    \n                \n                \n                    \n                        Default value : {\n  [ROUTES_ENUM.INDEX]: {\n    path: '/',\n    paramNames: [],\n  },\n  [ROUTES_ENUM.TEAM_DETAIL]: {\n    path: '/team',\n    paramNames: ['teamId'],\n  },\n  [ROUTES_ENUM.PROJECT_DETAIL]: {\n    path: '/project',\n    paramNames: ['projectId'],\n  },\n  [ROUTES_ENUM.DESIGN_ATOM]: {\n    path: '/design/atom',\n    paramNames: ['teamId'],\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/utils/settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ElectronStore({\n  defaults: {\n    check: false,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/modules/resource-explorer/team/api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        teamsQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : operationStore(`\n  query getAllTeams {\n    teams {\n      name,\n      id\n    }\n  }\n`)\n                    \n                \n\n\n        \n    \n\n    src/core/common/uuid.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): string => {\n  const s: string[] | number[] = [];\n  const hexDigits = '0123456789abcdef';\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
