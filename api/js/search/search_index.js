var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/App.html",[0,0.071,1,1.867]],["body/classes/App.html",[0,0.049,1,1.952,2,0.419,3,0.277,4,0.246,5,0.246,6,1.868,7,0.132,8,0.467,9,0.864,10,4.164,11,2.311,12,0.974,13,4.504,14,4.504,15,4.504,16,4.504,17,4.504,18,4.504,19,3.367,20,3.367,21,4.504,22,4.504,23,3.367,24,4.504,25,0.763,26,1.868,27,1.926,28,1.464,29,3.367,30,1.101,31,0.033,32,1.101,33,0.507,34,0.843,35,2.171,36,2.238,37,0.896,38,0.902,39,2.125,40,1.952,41,2.238,42,1.681,43,1.067,44,2.238,45,2.238,46,2.238,47,2.238,48,2.238,49,3.367,50,2.238,51,3.367,52,2.238,53,2.238,54,2.238,55,3.367,56,3.114,57,2.238,58,2.238,59,1.159,60,1.297,61,1.868,62,1.442,63,2.238,64,2.811,65,1.297,66,1.868,67,0.982,68,2.444,69,2.238,70,2.238,71,3.367,72,2.238,73,3.367,74,3.367,75,2.238,76,3.367,77,2.238,78,3.367,79,2.238,80,1.442,81,1.176,82,2.238,83,0.277,84,1.624,85,2.444,86,2.238,87,2.238,88,2.238,89,2.238,90,2.238,91,2.238,92,2.238,93,2.238,94,2.238,95,2.238,96,2.238,97,1.633,98,3.367,99,2.238,100,2.238,101,2.238,102,2.238,103,2.238,104,2.238,105,2.238,106,2.238,107,2.238,108,1.624,109,2.238,110,2.811,111,2.238,112,3.76,113,2.238,114,1.815,115,2.444,116,2.611,117,3.76,118,2.238,119,3.367,120,2.238,121,2.238,122,2.238,123,2.238,124,0.982,125,2.238,126,2.238,127,2.238,128,1.868,129,2.238,130,3.38,131,2.238,132,2.238,133,2.238,134,2.238,135,2.238,136,2.238,137,3.367,138,2.238,139,2.238,140,2.238,141,2.238,142,0.011,143,0.017,144,0.011]],["title/classes/AppearanceService.html",[0,0.071,62,2.076]],["body/classes/AppearanceService.html",[0,0.077,2,0.654,3,0.433,4,0.384,5,0.384,7,0.206,8,0.64,9,1,12,1.334,28,1.398,30,1.128,31,0.033,32,1.128,33,0.611,34,0.864,37,1.228,38,1.859,39,1.709,42,1.494,43,0.936,56,3.919,59,1.061,60,2.024,61,2.915,62,2.974,83,0.433,108,3.349,142,0.017,143,0.023,144,0.017,145,4.902,146,2.535,147,5.168,148,5.168,149,1.047,150,4.614,151,4.614,152,3.492,153,4.589,154,3.492,155,4.614,156,3.492,157,4.614,158,1.835,159,3.492,160,4.614,161,2.915,162,3.349,163,2.251,164,3.492,165,5.168,166,3.492,167,3.492,168,1.097]],["title/classes/BaseMenu.html",[0,0.071,169,2.338]],["body/classes/BaseMenu.html",[0,0.088,2,0.746,3,0.493,4,0.437,5,0.437,7,0.235,8,0.696,9,0.936,12,1.452,25,1.358,28,1.345,30,1.228,31,0.032,32,1.228,33,0.574,34,0.94,42,1.151,43,0.855,59,1.031,64,3.324,65,3.349,66,3.324,67,1.747,83,0.493,84,2.891,124,2.536,142,0.02,143,0.025,144,0.02,149,0.936,169,3.646,170,3.724,171,4.823,172,3.324,173,5.502,174,5.023,175,3.982,176,5.023,177,5.023,178,5.023,179,3.037,180,3.982,181,4.193,182,3.982,183,3.982,184,3.982]],["title/classes/ColorRef.html",[0,0.071,185,2.338]],["body/classes/ColorRef.html",[0,0.077,2,0.658,3,0.435,4,0.386,5,0.386,7,0.207,8,0.642,9,1.048,12,1.34,25,1.198,28,1.4,30,1.133,31,0.032,32,1.133,33,0.567,34,0.867,37,1.233,42,1.016,56,3.792,59,0.951,83,0.435,108,2.55,142,0.017,143,0.023,144,0.017,149,0.882,168,1.731,185,3.363,186,4.911,187,2.933,188,5.999,189,5.999,190,5.999,191,4.705,192,4.633,193,4.633,194,2.686,195,3.513,196,3.513,197,4.633,198,3.513,199,3.513,200,5.184,201,4.633,202,4.633,203,3.513,204,5.184,205,3.513,206,3.513]],["title/interfaces/Controller.html",[207,0.446,208,1.693]],["body/interfaces/Controller.html",[0,0.073,3,0.411,4,0.364,5,0.364,7,0.196,8,0.618,9,0.759,11,1.455,27,1.52,31,0.033,33,0.587,40,1.921,43,1.036,59,0.68,83,0.552,114,1.335,116,2.919,142,0.016,143,0.022,144,0.016,149,0.857,158,3.325,168,1.4,207,0.618,208,2.83,209,1.335,210,1.921,211,3.257,212,2.953,213,1.916,214,3.622,215,3.622,216,3.622,217,3.622,218,3.246,219,2.406,220,2.406,221,2.137,222,1.921,223,3.246,224,2.406,225,2.406,226,2.647,227,2.406,228,2.406,229,4.2,230,1.742,231,2.137,232,2.137,233,2.137,234,3.655,235,1.921,236,2.406,237,2.406,238,2.406,239,2.406,240,2.137,241,2.406,242,2.406,243,2.406,244,2.406,245,2.406]],["title/interfaces/IComponentOptions.html",[207,0.446,222,1.867]],["body/interfaces/IComponentOptions.html",[0,0.071,3,0.401,4,0.356,5,0.356,7,0.191,8,0.608,9,0.747,11,2.341,27,1.496,31,0.033,33,0.584,34,1.166,40,2.885,43,1.031,59,0.665,83,0.544,114,2.149,116,3.466,142,0.016,143,0.022,144,0.016,149,0.847,168,1.378,207,0.608,208,2.616,209,1.305,210,1.878,211,2.544,212,2.306,213,1.496,214,2.828,215,2.828,216,2.828,217,2.828,218,3.208,219,2.351,220,2.351,221,2.088,222,2.544,223,3.788,224,3.872,225,3.872,226,3.185,227,3.872,228,3.872,229,4.172,230,1.703,231,2.088,232,2.088,233,2.088,234,3.612,235,1.878,236,2.351,237,2.351,238,2.351,239,2.351,240,2.088,241,2.351,242,2.351,243,2.351,244,2.351,245,2.351]],["title/interfaces/ISettings.html",[207,0.446,246,2.338]],["body/interfaces/ISettings.html",[3,0.568,4,0.503,5,0.503,7,0.27,8,0.759,31,0.032,33,0.442,37,1.219,39,1.698,59,0.94,83,0.568,97,1.325,142,0.023,143,0.027,144,0.023,207,0.635,209,1.846,226,3.078,246,3.975,247,3.327,248,5.176,249,4.571,250,3.327,251,3.825,252,3.975,253,3.825,254,2.954]],["title/interfaces/ISplitBoardView.html",[207,0.446,255,1.867]],["body/interfaces/ISplitBoardView.html",[3,0.423,4,0.375,5,0.375,7,0.335,8,0.63,31,0.033,33,0.601,43,0.993,59,0.933,81,2.864,83,0.563,142,0.017,143,0.022,144,0.017,158,3.302,207,0.473,209,1.376,213,1.858,255,2.635,256,2.479,257,2.931,258,4.549,259,4.119,260,3.956,261,4.549,262,4.549,263,4.549,264,4.549,265,4.549,266,3.513,267,2.479,268,2.85,269,2.201,270,3.3,271,2.931,272,4.236,273,2.85,274,2.931,275,2.635,276,2.635,277,2.635,278,2.513,279,2.85,280,2.85,281,2.85,282,3.3,283,3.3]],["title/classes/Menu.html",[0,0.071,124,1.413]],["body/classes/Menu.html",[0,0.055,2,0.463,3,0.307,4,0.272,5,0.272,7,0.311,8,0.503,9,1.069,10,3.658,11,2.077,12,1.05,25,0.844,27,1.719,28,1.478,30,1.157,31,0.033,32,1.392,33,0.558,34,0.886,37,1.259,38,1.731,39,1.753,40,2.104,42,1.457,43,0.95,59,0.971,67,1.886,83,0.307,85,2.635,97,1.05,114,0.997,117,2.066,124,2.077,142,0.012,143,0.018,144,0.012,149,1.055,168,1.35,179,2.86,181,3.587,194,1.435,211,2.744,212,1.908,278,2.122,284,2.066,285,4.421,286,2.388,287,5.039,288,4.298,289,4.298,290,4.733,291,3.63,292,3.63,293,3.63,294,2.221,295,3.63,296,2.476,297,2.476,298,2.476,299,3.235,300,2.476,301,2.476,302,5.039,303,2.476,304,2.476,305,2.476,306,2.476,307,3.63,308,3.248,309,2.476,310,3.63,311,2.476,312,3.63,313,2.476,314,2.476,315,1.593,316,2.476,317,1.797,318,2.476,319,2.476,320,2.476,321,2.476,322,2.476,323,2.476,324,2.476,325,2.476,326,2.476,327,2.476,328,2.476,329,2.476,330,0.997,331,2.476,332,2.476,333,2.476,334,2.476,335,2.476,336,2.476,337,2.476,338,2.476]],["title/classes/MenuGroupService.html",[0,0.071,65,1.867]],["body/classes/MenuGroupService.html",[0,0.074,2,0.628,3,0.416,4,0.368,5,0.368,7,0.198,8,0.623,9,0.988,10,4.095,12,1.299,25,1.727,27,1.924,28,1.419,30,1.098,31,0.033,32,1.098,33,0.521,34,0.841,39,1.243,42,1.465,43,0.921,59,0.922,60,1.944,65,2.604,67,2.602,83,0.416,85,3.261,97,1.465,124,2.729,142,0.017,143,0.022,144,0.017,146,2.435,149,1.039,161,2.8,162,3.261,168,1.411,235,1.944,286,1.971,339,4.95,340,5.065,341,5.41,342,4.492,343,4.492,344,4.492,345,3.354,346,3.354,347,4.492,348,4.492,349,3.354,350,3.354,351,4.492,352,3.354,353,3.354,354,3.354,355,3.354,356,3.354,357,3.354,358,4.492,359,3.354,360,3.354,361,3.354]],["title/classes/MenuItem.html",[0,0.071,299,1.867]],["body/classes/MenuItem.html",[0,0.075,2,0.639,3,0.423,4,0.375,5,0.375,7,0.201,8,0.63,9,1.069,11,1.498,25,1.165,28,1.427,30,0.835,31,0.033,32,0.835,33,0.612,34,0.639,43,0.581,59,0.701,67,1.498,83,0.675,97,0.987,124,1.498,142,0.017,143,0.022,144,0.017,149,0.87,179,2.864,207,0.473,269,2.201,285,3.71,286,2.243,294,2.162,299,3.29,308,2.931,315,1.498,317,2.479,362,3.453,363,1.979,364,4.236,365,4.266,366,4.236,367,3.795,368,4.546,369,3.956,370,3.415,371,3.415,372,3.415,373,3.956,374,3.415,375,2.931,376,2.479,377,2.479,378,2.85,379,2.85,380,2.85,381,2.479,382,2.85,383,2.85,384,2.85,385,2.85]],["title/interfaces/MenuItemConfig.html",[179,1.693,207,0.446]],["body/interfaces/MenuItemConfig.html",[0,0.081,3,0.455,4,0.403,5,0.403,7,0.217,8,0.661,9,0.954,11,1.612,31,0.033,33,0.615,34,0.893,43,0.625,59,0.754,67,1.612,83,0.695,97,1.062,124,1.612,142,0.018,143,0.024,144,0.018,149,0.625,179,2.784,207,0.509,209,1.48,269,2.367,285,2.666,286,1.612,294,2.277,299,3.07,308,2.367,315,1.612,317,2.666,362,2.129,363,2.129,364,4.401,365,3.066,366,4.401,367,3.066,369,4.218,373,4.218,375,3.074,376,2.666,377,2.666,378,3.066,379,3.066,380,4.68,381,2.666,382,3.066,383,3.066,384,3.066,385,3.066]],["title/classes/ResourceExplorer.html",[0,0.071,386,2.338]],["body/classes/ResourceExplorer.html",[0,0.073,2,0.623,3,0.412,4,0.366,5,0.366,7,0.196,8,0.619,9,0.918,12,1.292,27,1.135,28,1.505,30,0.814,31,0.033,32,0.814,33,0.486,34,0.623,39,1.233,42,1.74,43,1.037,59,0.917,83,0.412,114,1.8,142,0.016,143,0.022,144,0.016,149,0.986,168,1.045,211,2.925,212,2.652,213,1.721,214,3.476,215,3.476,216,3.476,217,3.476,218,2.145,223,3.252,230,3.309,232,2.88,233,2.88,240,2.88,257,2.88,386,3.244,387,2.778,388,2.778,389,3.73,390,4.47,391,3.328,392,3.328,393,3.328,394,3.328,395,3.328,396,3.328,397,3.328,398,3.328,399,3.328,400,3.328,401,4.469,402,3.328,403,3.328,404,3.328,405,5.393]],["title/classes/SVController.html",[0,0.071,230,1.693]],["body/classes/SVController.html",[0,0.065,2,0.557,3,0.368,4,0.327,5,0.327,7,0.175,8,0.573,9,0.953,11,1.305,12,1.196,27,1.623,28,1.473,30,0.727,31,0.033,32,0.727,33,0.521,34,0.557,40,1.723,42,1.694,43,1.06,59,0.61,83,0.513,114,1.667,116,2.758,142,0.015,143,0.02,144,0.015,149,1.013,168,1.299,207,0.573,208,2.704,210,1.723,211,3.135,212,2.843,213,1.844,214,3.486,215,3.486,216,3.486,217,3.486,218,3.486,219,2.158,220,2.158,221,1.916,222,1.723,223,3.486,224,2.158,225,2.158,226,2.501,227,2.158,228,2.158,229,4.569,230,2.175,231,2.667,232,3.067,233,3.067,234,3.454,235,1.723,236,2.158,237,2.158,238,2.158,239,2.158,240,2.667,241,2.158,242,2.158,243,2.158,244,2.158,245,2.158,389,3.454,406,2.973,407,2.973,408,2.973,409,2.973,410,2.973,411,2.973,412,2.973,413,2.973,414,2.973,415,2.973]],["title/classes/SplitBoardController.html",[0,0.071,416,2.076]],["body/classes/SplitBoardController.html",[0,0.039,2,0.335,3,0.221,4,0.196,5,0.196,7,0.286,8,0.392,9,1.067,12,0.818,25,0.609,27,0.609,28,1.4,30,1.065,31,0.033,32,1.065,33,0.546,34,0.816,37,1.233,38,1.755,42,1.34,43,0.904,59,0.581,83,0.221,84,1.297,97,1.156,114,1.14,142,0.009,143,0.014,144,0.009,149,0.882,158,1.847,168,1.368,213,0.965,254,2.265,255,2.317,266,1.152,271,1.152,272,3.363,275,1.036,277,1.036,278,2.453,282,3.363,283,3.855,315,0.784,330,2.22,416,1.824,417,3.041,418,1.491,419,3.514,420,3.514,421,3.514,422,3.514,423,3.514,424,3.514,425,4.854,426,4.854,427,3.996,428,2.83,429,2.83,430,2.83,431,2.83,432,3.996,433,1.787,434,2.83,435,2.725,436,1.787,437,1.787,438,1.787,439,1.787,440,1.787,441,1.787,442,1.787,443,1.787,444,2.83,445,1.787,446,2.83,447,1.787,448,2.83,449,5.31,450,1.787,451,4.202,452,2.83,453,1.787,454,1.787,455,4.052,456,2.83,457,3.996,458,2.83,459,1.491,460,2.265,461,1.491,462,3.514,463,1.787,464,3.514,465,1.787,466,3.514,467,3.514,468,3.514,469,1.787,470,1.787,471,1.787,472,1.787,473,1.787,474,1.787,475,1.787,476,1.787,477,1.787,478,1.787,479,1.787,480,1.787,481,2.83,482,2.83,483,1.787,484,1.787,485,1.787,486,1.787,487,1.787,488,3.514,489,1.152,490,5.31,491,1.787,492,1.787,493,1.787,494,1.787,495,1.787,496,1.787,497,1.787,498,3.996,499,2.362,500,1.491,501,1.787,502,2.83,503,1.491,504,1.491,505,2.362,506,1.491,507,1.491,508,1.491,509,4.633,510,4.633,511,2.83,512,3.996,513,2.83,514,2.83,515,1.787,516,2.83,517,1.787,518,2.362,519,1.787,520,1.787]],["title/classes/SplitBoardView.html",[0,0.071,80,2.076]],["body/classes/SplitBoardView.html",[0,0.024,2,0.208,3,0.138,4,0.122,5,0.122,7,0.294,8,0.265,9,0.931,12,0.552,25,0.857,27,1.146,28,1.38,30,1.239,31,0.033,32,1.239,33,0.56,34,0.949,35,1.231,37,1.045,38,1.478,39,1.536,42,1.531,43,0.947,59,0.806,60,0.644,80,1.231,81,2.708,83,0.237,97,1.549,112,1.594,128,1.594,130,2.097,142,0.005,143,0.009,144,0.005,149,1.034,162,1.386,163,0.716,168,1.497,194,1.107,208,1.32,212,1.568,213,1.478,226,0.584,231,1.231,254,0.716,255,1.456,257,1.231,258,2.49,259,3.146,260,1.824,261,1.594,262,2.097,263,1.594,264,1.594,265,1.594,266,2.365,267,2.165,268,0.927,270,2.663,271,2.365,272,3.93,273,2.097,274,2.365,275,2.403,276,2.127,277,2.127,278,2.539,279,4.072,280,3.979,281,4.072,282,3.146,283,3.368,294,0.708,315,2.036,330,1.353,390,2.165,416,1.619,417,2.899,435,1.928,489,0.716,499,2.804,500,3.063,503,0.927,504,0.927,505,0.927,506,2.804,507,0.927,508,0.927,518,0.927,521,0.806,522,2.512,523,2.512,524,1.91,525,1.91,526,1.91,527,1.91,528,2.982,529,1.91,530,1.91,531,1.91,532,1.386,533,1.386,534,1.386,535,1.91,536,3.754,537,1.111,538,1.111,539,1.111,540,1.91,541,1.111,542,0.927,543,1.91,544,1.111,545,1.91,546,1.111,547,1.91,548,3.36,549,1.111,550,1.111,551,1.91,552,1.111,553,1.111,554,1.91,555,1.111,556,1.111,557,1.91,558,3.927,559,1.111,560,1.91,561,1.111,562,1.91,563,1.91,564,1.111,565,1.111,566,1.91,567,1.111,568,1.91,569,1.111,570,1.91,571,1.111,572,1.91,573,1.111,574,0.806,575,0.927,576,0.806,577,0.806,578,0.927,579,0.806,580,0.806,581,1.231,582,0.927,583,1.111,584,0.927,585,0.806,586,0.927,587,1.91,588,0.927,589,1.111,590,1.111,591,1.111,592,0.927,593,1.386,594,1.111,595,1.111,596,1.111,597,1.111,598,1.111,599,1.91,600,1.91,601,1.91,602,1.594,603,2.512,604,1.594,605,1.594,606,1.91,607,1.111,608,1.91,609,1.111,610,1.004,611,1.91,612,1.111,613,1.111,614,1.111,615,1.111,616,1.111,617,2.982,618,4.146,619,1.111,620,1.111,621,1.111,622,1.111,623,1.111,624,1.91,625,3.36,626,1.111,627,1.111,628,1.111,629,1.111,630,1.111,631,1.111,632,0.927,633,1.91,634,0.927,635,1.111,636,1.91,637,1.594,638,1.91,639,1.91,640,1.91,641,1.91,642,1.91,643,1.91,644,1.111,645,1.111,646,1.91,647,1.91,648,1.91,649,1.111,650,1.111,651,3.36,652,1.111,653,1.111,654,1.111,655,1.111,656,2.512,657,1.111,658,1.111,659,1.111,660,3.36,661,1.91,662,2.982,663,2.512,664,1.91,665,1.111,666,1.111,667,1.91,668,1.111,669,1.111]],["title/classes/SplitItemView.html",[0,0.071,81,1.693]],["body/classes/SplitItemView.html",[0,0.044,2,0.375,3,0.248,4,0.22,5,0.22,7,0.118,8,0.429,9,1.021,12,0.894,25,1.289,27,1.958,28,1.484,30,1.279,31,0.033,32,1.279,33,0.565,34,0.98,35,1.993,37,1.293,38,1.851,39,0.741,42,1.66,43,0.965,59,0.635,81,2.554,83,0.248,114,0.806,115,1.452,142,0.01,143,0.015,144,0.01,149,1.069,168,1.187,213,1.784,226,1.625,257,1.993,259,1.452,267,1.452,269,1.29,274,2.962,275,2.664,276,2.664,277,2.664,294,1.938,315,0.878,390,3.086,417,3.132,435,1.625,455,3.836,460,3.132,489,1.29,532,2.244,533,2.244,534,2.244,542,1.67,574,1.452,575,1.67,576,1.452,577,1.452,578,1.67,579,1.452,580,1.452,581,1.993,582,1.67,588,1.67,592,1.67,593,3.676,605,1.67,637,4.228,670,1.452,671,3.779,672,3.779,673,3.779,674,4.251,675,4.251,676,4.251,677,4.251,678,3.092,679,3.092,680,4.251,681,3.092,682,3.092,683,3.092,684,3.092,685,3.092,686,4.251,687,1.482,688,3.092,689,1.625,690,2.001,691,2.001,692,2.001,693,2.001,694,4.251,695,2.001,696,2.001,697,2.001,698,3.092,699,3.092,700,2.001,701,3.092,702,2.001,703,3.092,704,2.001,705,2.001,706,3.092,707,2.001,708,4.251,709,3.779,710,3.092,711,2.001,712,3.092,713,3.092,714,2.001,715,2.001,716,1.67,717,2.001,718,2.001,719,3.779,720,3.092,721,2.001,722,2.001,723,2.001,724,3.092,725,3.779,726,2.001,727,2.001,728,2.001,729,2.001,730,2.001,731,2.001,732,2.001,733,2.001,734,2.001,735,2.001,736,2.001,737,3.092,738,2.001,739,2.001]],["title/classes/View.html",[0,0.071,213,1.098]],["body/classes/View.html",[0,0.081,2,0.686,3,0.454,4,0.403,5,0.403,7,0.216,8,0.66,12,1.377,25,1.25,26,3.976,27,2.152,28,1.42,30,1.37,31,0.033,32,1.37,33,0.592,34,1.049,35,3.743,37,0.975,42,1.53,83,0.454,115,2.66,142,0.018,143,0.024,144,0.018,149,0.901,168,1.662,194,2.124,213,1.624,235,2.124,435,2.503,532,3.457,533,3.457,534,3.457,574,3.457,576,2.66,577,3.457,579,2.66,580,3.457,581,3.611,593,3.841,604,3.059,740,2.66,741,4.763,742,3.665,743,3.665,744,3.665,745,3.457,746,3.976,747,3.976,748,3.665,749,3.665,750,3.665]],["title/interfaces/WeightMap.html",[207,0.446,751,1.544]],["body/interfaces/WeightMap.html",[0,0.108,2,0.722,3,0.478,4,0.423,5,0.423,7,0.29,9,0.923,28,0.943,31,0.033,37,1.026,43,0.838,83,0.478,97,1.423,142,0.019,143,0.024,144,0.019,149,0.838,207,0.751,209,1.553,278,2.184,286,2.16,294,2.185,330,1.553,610,2.027,687,1.848,689,2.027,751,2.828,752,2.587,753,2.027,754,3.856,755,3.856,756,2.587,757,3.171,758,2.485,759,2.587,760,2.235,761,2.235,762,2.235,763,2.235,764,2.235,765,2.235,766,2.235,767,2.235,768,2.027,769,2.485,770,2.485,771,2.485,772,3.172,773,2.485,774,2.485,775,2.485,776,2.485,777,2.235,778,2.485,779,2.485,780,2.485,781,2.485]],["title/classes/classBuilder.html",[0,0.071,768,1.693]],["body/classes/classBuilder.html",[0,0.095,2,0.808,3,0.392,4,0.347,5,0.347,7,0.255,8,0.598,9,1.026,12,1.248,25,1.078,28,1.395,30,1.291,31,0.033,32,1.291,33,0.533,34,0.989,37,1.148,38,1.273,42,1.527,43,0.941,83,0.392,97,1.248,142,0.016,143,0.021,144,0.016,149,0.971,207,0.681,278,1.739,286,1.894,294,1.956,308,3.168,330,1.273,610,1.661,687,1.515,689,1.661,751,2.849,752,3.069,753,1.661,756,2.268,757,3.334,758,2.037,759,2.268,760,1.832,761,1.832,762,1.832,763,1.832,764,1.832,765,1.832,766,1.832,767,1.832,768,2.268,769,3.168,770,2.782,771,2.037,772,2.782,773,3.404,774,2.037,775,2.782,776,2.782,777,1.832,778,2.037,779,2.037,780,2.037,781,2.037,782,4.316,783,4.316,784,4.316,785,4.316,786,3.161,787,3.161,788,3.161,789,3.161,790,3.161,791,3.161]],["title/interfaces/classConfig.html",[207,0.446,756,1.693]],["body/interfaces/classConfig.html",[0,0.129,2,0.706,3,0.467,4,0.414,5,0.414,7,0.286,8,0.672,9,0.913,31,0.033,33,0.467,37,1.003,43,0.826,83,0.467,97,1.403,142,0.019,143,0.024,144,0.019,149,0.826,207,0.743,209,1.519,278,1.954,286,2.571,294,2.289,330,1.519,610,1.982,687,1.807,689,1.982,751,2.714,752,1.982,753,1.982,756,2.819,757,3.152,758,2.43,759,2.55,760,2.185,761,2.185,762,2.185,763,2.185,764,2.185,765,2.185,766,2.185,767,2.185,768,1.982,769,2.43,770,2.43,771,2.43,772,3.127,773,2.43,774,2.43,775,2.43,776,2.43,777,2.185,778,2.43,779,2.43,780,2.43,781,2.43]],["title/coverage.html",[792,3.649]],["body/coverage.html",[0,0.132,1,2.016,5,0.257,6,1.95,31,0.033,33,0.225,39,0.865,62,1.506,65,1.354,67,1.025,68,1.696,80,1.506,81,1.228,124,1.025,142,0.012,143,0.017,144,0.012,145,1.95,146,2.524,158,1.828,163,1.506,169,1.696,170,2.242,171,1.95,172,1.95,179,1.228,185,1.696,186,1.95,187,1.95,207,0.761,208,1.228,210,2.408,213,0.797,222,1.354,230,1.228,246,1.696,247,2.524,252,1.696,255,1.354,256,1.696,284,1.95,299,1.354,330,2.641,339,1.95,362,2.016,363,2.016,375,1.506,386,1.696,387,1.95,388,1.95,416,1.506,417,2.419,418,1.95,459,1.95,461,1.95,521,2.524,585,1.696,670,1.696,687,2.358,740,1.696,751,1.12,752,2.586,753,2.586,756,1.228,757,1.228,759,1.228,768,1.228,792,1.95,793,1.95,794,2.336,795,2.336,796,3.841,797,6.438,798,1.95,799,6.417,800,2.903,801,1.95,802,1.95,803,2.903,804,1.95,805,2.336,806,4.154,807,2.336,808,3.478,809,3.478,810,2.336,811,2.336,812,2.336,813,4.542,814,4.542,815,1.95,816,1.95,817,4.92,818,1.95,819,1.95,820,1.95,821,1.95,822,1.95,823,1.95,824,1.95,825,1.95,826,1.95,827,1.95,828,1.95,829,1.95,830,1.95,831,1.95,832,1.95,833,1.95,834,1.95,835,1.95,836,1.95,837,1.95,838,4.154,839,1.95,840,3.478,841,3.478,842,1.696,843,1.95,844,1.95,845,2.336,846,2.336,847,1.95,848,2.336,849,2.336]],["title/dependencies.html",[850,2.702,851,2.807]],["body/dependencies.html",[31,0.032,60,2.671,142,0.023,143,0.027,144,0.023,153,3.846,191,3.345,250,4.26,251,3.846,584,3.846,851,3.345,852,4.608,853,4.608,854,4.608,855,3.846,856,4.608,857,4.608,858,4.608,859,4.608,860,4.608,861,4.608,862,4.608,863,4.608,864,4.608,865,4.608,866,4.608,867,4.608,868,4.608,869,4.608]],["title/miscellaneous/enumerations.html",[870,1.186,871,3.228]],["body/miscellaneous/enumerations.html",[7,0.263,31,0.031,38,2.422,56,3.474,67,1.958,110,3.725,142,0.022,143,0.027,144,0.022,256,3.239,266,3.474,270,3.239,271,2.877,274,3.474,275,3.124,276,3.124,277,3.124,315,1.958,362,2.587,363,3.124,373,3.912,417,2.346,460,3.876,670,3.912,716,4.498,870,1.958,871,3.725,872,4.463,873,3.725,874,4.463,875,3.725,876,4.463,877,4.463]],["title/miscellaneous/functions.html",[870,1.186,878,3.228]],["body/miscellaneous/functions.html",[7,0.277,30,1.358,31,0.03,32,1.358,34,1.04,142,0.023,143,0.027,144,0.023,163,3.581,194,3.221,813,3.409,814,4.033,815,4.638,839,3.92,870,2.061,878,3.92,879,4.697,880,3.92,881,4.697,882,4.697,883,4.697,884,5.556,885,5.556,886,4.697]],["title/index.html",[7,0.159,887,2.255,888,2.255]],["body/index.html",[1,2.708,4,0.573,31,0.028,142,0.018,143,0.023,144,0.018,191,2.582,207,0.493,250,4.02,376,2.582,602,2.97,745,2.582,851,3.391,889,5.538,890,5.216,891,4.671,892,4.671,893,3.557,894,3.557,895,3.557,896,3.557,897,3.557,898,3.557,899,3.557,900,5.538,901,3.557,902,3.557,903,2.97,904,3.557,905,3.557,906,3.557,907,3.557,908,3.557,909,3.557,910,3.557,911,2.97,912,2.582,913,3.557,914,4.671,915,3.557,916,3.557,917,3.557,918,4.671,919,3.557,920,3.557,921,3.557,922,3.557,923,5.216,924,3.557,925,3.557,926,3.557,927,3.557,928,3.557,929,3.557,930,3.557,931,2.582,932,3.557,933,3.557,934,3.557,935,3.557,936,3.557,937,3.557,938,3.557,939,3.557,940,5.216,941,3.557,942,3.557,943,3.557,944,5.216,945,3.557,946,2.97,947,3.557,948,3.557,949,3.557,950,5.216,951,3.557,952,3.557,953,3.557,954,3.557,955,3.557,956,5.216,957,4.671,958,3.557,959,3.557,960,3.557,961,3.557,962,3.557,963,2.97,964,3.557,965,3.557,966,3.557,967,3.557,968,3.557,969,3.899,970,3.557,971,3.557,972,4.671,973,3.557,974,4.671,975,3.557,976,4.671,977,2.97,978,2.97,979,2.97,980,3.557,981,3.557,982,3.557,983,3.557,984,3.557,985,3.557,986,3.557,987,3.557,988,3.557,989,3.557]],["title/license.html",[887,2.255,888,2.255,912,1.961]],["body/license.html",[31,0.025,142,0.02,143,0.025,144,0.02,451,3.355,460,2.591,777,2.33,793,3.355,903,3.355,911,3.355,912,2.918,963,3.355,977,3.355,978,3.355,979,3.355,990,5.526,991,4.02,992,4.02,993,5.053,994,4.02,995,4.02,996,4.02,997,4.02,998,4.02,999,4.02,1000,5.053,1001,6.315,1002,4.02,1003,4.02,1004,5.526,1005,4.02,1006,5.053,1007,4.02,1008,4.02,1009,4.218,1010,4.02,1011,4.02,1012,4.02,1013,4.02,1014,5.053,1015,4.02,1016,4.02,1017,4.02,1018,4.02,1019,4.02,1020,4.02,1021,4.02,1022,5.053,1023,5.053,1024,4.02,1025,4.02,1026,4.02,1027,4.02,1028,4.02,1029,4.02,1030,4.02,1031,4.02,1032,4.02,1033,4.02,1034,4.02,1035,4.02,1036,4.02,1037,4.02,1038,4.02,1039,4.02,1040,4.02,1041,4.02,1042,4.02,1043,4.02,1044,4.02,1045,4.02,1046,4.02,1047,4.02,1048,4.02,1049,4.02,1050,4.02,1051,4.02]],["title/modules.html",[931,3.173]],["body/modules.html",[31,0.029,142,0.025,143,0.029,144,0.025,931,3.717]],["title/overview.html",[1052,3.649]],["body/overview.html",[2,0.947,31,0.029,142,0.025,143,0.029,144,0.025,209,2.038,1052,4.224,1053,5.06,1054,5.06]],["title/interfaces/stateConfig.html",[207,0.446,757,1.693]],["body/interfaces/stateConfig.html",[0,0.105,2,1.052,3,0.458,4,0.406,5,0.406,7,0.283,8,0.664,9,0.904,31,0.033,33,0.512,34,0.897,37,0.983,43,0.815,83,0.458,97,1.385,142,0.018,143,0.024,144,0.018,149,0.815,207,0.736,209,1.489,278,2.264,286,2.555,294,2.21,330,1.489,610,1.943,687,1.772,689,1.943,751,2.694,752,1.943,753,1.943,756,2.954,757,3.192,758,3.623,759,2.517,760,2.143,761,2.143,762,2.143,763,2.143,764,2.143,765,2.143,766,2.143,767,2.143,768,1.943,769,2.383,770,2.383,771,2.383,772,3.087,773,2.383,774,2.383,775,2.383,776,2.383,777,2.143,778,2.383,779,2.383,780,2.383,781,2.383]],["title/miscellaneous/typealiases.html",[870,1.186,1055,3.867]],["body/miscellaneous/typealiases.html",[7,0.275,31,0.031,33,0.533,116,3.205,142,0.023,143,0.027,144,0.023,158,2.448,170,3.003,210,2.7,221,3.003,362,2.7,363,3.205,369,4.013,435,2.448,581,3.564,740,3.381,745,3.381,746,3.888,747,3.888,842,3.381,870,2.044,875,3.888,1056,4.658,1057,4.615,1058,3.888,1059,4.658,1060,4.658,1061,4.658]],["title/miscellaneous/variables.html",[870,1.186,1062,3.228]],["body/miscellaneous/variables.html",[1,1.807,7,0.119,11,2.141,31,0.033,33,0.506,37,1.688,38,2.551,39,1.409,68,2.263,97,1.1,114,0.815,142,0.01,143,0.015,144,0.01,170,1.304,247,1.468,248,1.688,249,1.688,252,2.263,253,1.688,254,2.452,260,1.468,276,1.172,278,1.256,294,1.155,315,1.669,330,0.815,364,2.761,366,3.103,375,2.01,377,2.761,381,2.761,417,1.063,435,1.063,489,2.01,521,2.263,536,3.176,585,2.263,586,1.688,610,1.063,632,1.688,634,1.688,687,0.969,689,1.063,751,0.969,752,1.063,753,1.639,759,1.639,760,1.172,761,1.172,762,1.172,763,1.172,764,1.172,765,1.172,766,1.172,767,1.172,796,1.688,798,2.602,800,4.244,801,3.569,802,3.176,803,1.688,804,2.602,813,1.468,814,4.458,816,2.602,818,2.602,819,2.602,820,2.602,821,2.602,822,2.602,823,2.602,824,2.602,825,2.602,826,2.602,827,2.602,828,2.602,829,2.602,830,2.602,831,2.602,832,2.602,833,2.602,834,2.602,835,2.602,836,2.602,837,2.602,842,1.468,843,1.688,844,1.688,847,1.688,855,1.688,870,0.887,873,1.688,880,5.102,946,1.688,969,1.688,1009,1.688,1057,1.688,1058,1.688,1062,1.688,1063,2.022,1064,2.022,1065,4.275,1066,2.022,1067,3.118,1068,2.022,1069,2.022,1070,2.022,1071,3.804,1072,3.804,1073,2.022,1074,3.118,1075,2.022,1076,2.022,1077,3.118,1078,2.022,1079,3.118,1080,3.118,1081,2.022,1082,2.022,1083,2.022,1084,2.022,1085,2.022,1086,3.118,1087,4.275,1088,2.022,1089,3.118,1090,2.022,1091,2.022,1092,3.118,1093,2.022,1094,3.118,1095,2.022,1096,3.118,1097,3.118,1098,2.022,1099,2.022,1100,2.022,1101,2.022,1102,2.022,1103,3.118,1104,2.022,1105,3.118,1106,3.118,1107,4.275,1108,2.022,1109,3.118,1110,2.022,1111,2.022,1112,2.022,1113,2.022,1114,3.118,1115,3.118,1116,2.022,1117,2.022,1118,2.022,1119,2.022,1120,2.022,1121,2.022,1122,2.022,1123,2.022,1124,2.022,1125,2.022,1126,3.804,1127,4.275,1128,2.022,1129,2.022,1130,2.022,1131,2.022,1132,2.022,1133,2.022,1134,2.022,1135,2.022,1136,2.022,1137,2.022,1138,2.022,1139,2.022,1140,2.022,1141,2.022,1142,2.022,1143,2.022,1144,2.022,1145,2.022,1146,3.118,1147,2.022,1148,2.022]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":330,"title":{},"body":{"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":846,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0123456789abcdef",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":435,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["1.1.5",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["1.6.4",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":817,"title":{},"body":{"coverage.html":{}}}],["1/21",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["1/26",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":687,"title":{},"body":{"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["14",{"_index":1053,"title":{},"body":{"overview.html":{}}}],["15",{"_index":629,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1].root.after(item.root",{"_index":615,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1].root[this.direction",{"_index":657,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1f1f1f",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":457,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["2.2.0",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":137,"title":{},"body":{"classes/App.html":{}}}],["200",{"_index":760,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["2020",{"_index":991,"title":{},"body":{"license.html":{}}}],["272728",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e2f30",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":459,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["3.0.1",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["3.1.3",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":518,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["300",{"_index":762,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["393939",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3f3f3f",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3px",{"_index":633,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["4",{"_index":461,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["4.3.1",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["4.3.5",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":764,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["454545",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["464749",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4px",{"_index":598,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["5",{"_index":512,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["5.1.1",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["5580c0",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5d5f61",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.4",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":138,"title":{},"body":{"classes/App.html":{}}}],["600",{"_index":766,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["680",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.2",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":627,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["729cd4",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":1054,"title":{},"body":{"overview.html":{}}}],["800",{"_index":689,"title":{},"body":{"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["808080",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["900",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_bgcolorclassname",{"_index":671,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_growclassname",{"_index":672,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_shrinkclassname",{"_index":673,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_type",{"_index":147,"title":{},"body":{"classes/AppearanceService.html":{}}}],["_view",{"_index":233,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["_waitformergeitem",{"_index":522,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["above",{"_index":1021,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":229,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{}}}],["action",{"_index":977,"title":{},"body":{"index.html":{},"license.html":{}}}],["active",{"_index":765,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["activeexpand",{"_index":427,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["activeid",{"_index":419,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["addcolumn",{"_index":524,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addcolumn(item",{"_index":543,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addconfig",{"_index":782,"title":{},"body":{"classes/classBuilder.html":{}}}],["addconfig(config",{"_index":775,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["added",{"_index":602,"title":{},"body":{"classes/SplitBoardView.html":{},"index.html":{}}}],["addexpandbutton",{"_index":674,"title":{},"body":{"classes/SplitItemView.html":{}}}],["addrow",{"_index":525,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addrow(item",{"_index":545,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["aliases",{"_index":1056,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["anchor",{"_index":224,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{}}}],["and/or",{"_index":1012,"title":{},"body":{"license.html":{}}}],["anycolor",{"_index":188,"title":{},"body":{"classes/ColorRef.html":{}}}],["anycolorhex",{"_index":886,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":1,"title":{"classes/App.html":{}},"body":{"classes/App.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app(document.body",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.quit",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appearance",{"_index":199,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearanceservice",{"_index":62,"title":{"classes/AppearanceService.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"coverage.html":{}}}],["appearancetype",{"_index":56,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"miscellaneous/enumerations.html":{}}}],["appearancetype.any",{"_index":205,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearancetype.dark",{"_index":108,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{}}}],["appearancetype.light",{"_index":206,"title":{},"body":{"classes/ColorRef.html":{}}}],["append",{"_index":532,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["append(child",{"_index":574,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["application",{"_index":969,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["applicationmenus",{"_index":68,"title":{},"body":{"classes/App.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationmenustype",{"_index":1057,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["applysplit",{"_index":526,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["applysplit(direction",{"_index":547,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["aps",{"_index":103,"title":{},"body":{"classes/App.html":{}}}],["aps.onmodechanged((type",{"_index":105,"title":{},"body":{"classes/App.html":{}}}],["arising",{"_index":1049,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1002,"title":{},"body":{"license.html":{}}}],["authors",{"_index":1039,"title":{},"body":{"license.html":{}}}],["auto",{"_index":745,"title":{},"body":{"classes/View.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["automatically",{"_index":980,"title":{},"body":{"index.html":{}}}],["available",{"_index":907,"title":{},"body":{"index.html":{}}}],["bababa",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar.svelte",{"_index":73,"title":{},"body":{"classes/App.html":{}}}],["base",{"_index":69,"title":{},"body":{"classes/App.html":{}}}],["basemenu",{"_index":169,"title":{"classes/BaseMenu.html":{}},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["bg",{"_index":685,"title":{},"body":{"classes/SplitItemView.html":{}}}],["bgcolor",{"_index":816,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["board",{"_index":587,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.controller",{"_index":583,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.controller.ts",{"_index":418,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["board.controller.ts:10",{"_index":442,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:11",{"_index":436,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:13",{"_index":437,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:14",{"_index":434,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:31",{"_index":450,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:46",{"_index":453,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:5",{"_index":440,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:53",{"_index":443,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:6",{"_index":438,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:61",{"_index":454,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:7",{"_index":439,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:72",{"_index":447,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:82",{"_index":445,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:9",{"_index":441,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.view.ts",{"_index":521,"title":{},"body":{"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["board.view.ts:104",{"_index":553,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:109",{"_index":567,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:129",{"_index":569,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:13",{"_index":539,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:14",{"_index":538,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:149",{"_index":571,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:15",{"_index":541,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:158",{"_index":561,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:16",{"_index":537,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:17",{"_index":535,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:190",{"_index":555,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:23",{"_index":556,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:27",{"_index":546,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:38",{"_index":544,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:49",{"_index":559,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:59",{"_index":565,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:64",{"_index":573,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:74",{"_index":550,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:80",{"_index":552,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:92",{"_index":549,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["boolean",{"_index":226,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"classes/SVController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["bootstrap",{"_index":13,"title":{},"body":{"classes/App.html":{}}}],["bordercolor",{"_index":818,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":964,"title":{},"body":{"index.html":{}}}],["browserwindow",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder",{"_index":966,"title":{},"body":{"index.html":{}}}],["builder.ts",{"_index":753,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["builder.ts:11",{"_index":755,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["builder.ts:24",{"_index":785,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:30",{"_index":788,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:33",{"_index":787,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:36",{"_index":789,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:44",{"_index":791,"title":{},"body":{"classes/classBuilder.html":{}}}],["building",{"_index":919,"title":{},"body":{"index.html":{}}}],["bundled",{"_index":933,"title":{},"body":{"index.html":{}}}],["button",{"_index":699,"title":{},"body":{"classes/SplitItemView.html":{}}}],["c",{"_index":777,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"license.html":{},"interfaces/stateConfig.html":{}}}],["c0c0c1",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c4666f",{"_index":1109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c6c6c6",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback",{"_index":364,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["cancelformerge",{"_index":258,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["cancelwaitformerge",{"_index":675,"title":{},"body":{"classes/SplitItemView.html":{}}}],["case",{"_index":204,"title":{},"body":{"classes/ColorRef.html":{}}}],["cgray",{"_index":686,"title":{},"body":{"classes/SplitItemView.html":{}}}],["charge",{"_index":997,"title":{},"body":{"license.html":{}}}],["check",{"_index":248,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["checkdirection",{"_index":527,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["checkdirection(type",{"_index":551,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["checkexpandstate",{"_index":428,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["checkexpandstate(clientx",{"_index":444,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["child",{"_index":576,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["children",{"_index":365,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["childs",{"_index":579,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["claim",{"_index":1042,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classbuilder",{"_index":768,"title":{"classes/classBuilder.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classconfig",{"_index":756,"title":{"interfaces/classConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["classname",{"_index":708,"title":{},"body":{"classes/SplitItemView.html":{}}}],["clear",{"_index":773,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["clientheight",{"_index":659,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["clientwidth",{"_index":658,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["clientx",{"_index":282,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["clienty",{"_index":283,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["code",{"_index":900,"title":{},"body":{"index.html":{}}}],["col",{"_index":270,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":191,"title":{},"body":{"classes/ColorRef.html":{},"dependencies.html":{},"index.html":{}}}],["color(appearancetype",{"_index":197,"title":{},"body":{"classes/ColorRef.html":{}}}],["color.ts",{"_index":814,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["colorref",{"_index":185,"title":{"classes/ColorRef.html":{}},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["colorsetroot",{"_index":98,"title":{},"body":{"classes/App.html":{}}}],["column",{"_index":501,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["command",{"_index":380,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["common",{"_index":938,"title":{},"body":{"index.html":{}}}],["community",{"_index":898,"title":{},"body":{"index.html":{}}}],["comp",{"_index":232,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["compilation",{"_index":955,"title":{},"body":{"index.html":{}}}],["compile",{"_index":950,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":972,"title":{},"body":{"index.html":{}}}],["completed",{"_index":405,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["component",{"_index":401,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["components",{"_index":940,"title":{},"body":{"index.html":{}}}],["concrete",{"_index":893,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1020,"title":{},"body":{"license.html":{}}}],["config",{"_index":308,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/classBuilder.html":{}}}],["configs",{"_index":786,"title":{},"body":{"classes/classBuilder.html":{}}}],["configs.foreach((config",{"_index":771,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["configured",{"_index":968,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1050,"title":{},"body":{"license.html":{}}}],["console",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(item",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.warn('direction",{"_index":600,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["const",{"_index":97,"title":{},"body":{"classes/App.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{}}}],["constructor(anycolor",{"_index":192,"title":{},"body":{"classes/ColorRef.html":{}}}],["constructor(config",{"_index":367,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["constructor(configs",{"_index":770,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["constructor(container",{"_index":293,"title":{},"body":{"classes/Menu.html":{}}}],["constructor(groupmenuservice",{"_index":175,"title":{},"body":{"classes/BaseMenu.html":{}}}],["constructor(private",{"_index":84,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/SplitBoardController.html":{}}}],["constructor(root",{"_index":26,"title":{},"body":{"classes/App.html":{},"classes/View.html":{}}}],["constructor(view",{"_index":433,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["container",{"_index":10,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{}}}],["containermodule",{"_index":164,"title":{},"body":{"classes/AppearanceService.html":{}}}],["contentview",{"_index":637,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["contentview.classlist.add('flex",{"_index":720,"title":{},"body":{"classes/SplitItemView.html":{}}}],["context",{"_index":11,"title":{},"body":{"classes/App.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SVController.html":{},"miscellaneous/variables.html":{}}}],["contextisolation",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":1046,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":986,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":983,"title":{},"body":{"index.html":{}}}],["controlaccentcolor",{"_index":819,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlbackgroundcolor",{"_index":820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controldisabledcolor",{"_index":821,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlforbiddencolor",{"_index":822,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlhighlightcolor",{"_index":823,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":208,"title":{"interfaces/Controller.html":{}},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{},"classes/SplitBoardView.html":{},"coverage.html":{}}}],["copies",{"_index":1014,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1000,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":990,"title":{},"body":{"license.html":{}}}],["cosmic",{"_index":889,"title":{},"body":{"index.html":{}}}],["cosmic/core/browser",{"_index":82,"title":{},"body":{"classes/App.html":{}}}],["cosmic/core/common",{"_index":61,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{}}}],["cosmic/core/parts",{"_index":404,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["cosmic/workbench/services/appearance",{"_index":63,"title":{},"body":{"classes/App.html":{}}}],["cosmic/workbench/services/menu",{"_index":66,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["coverage",{"_index":792,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createmenu",{"_index":290,"title":{},"body":{"classes/Menu.html":{}}}],["createwindow",{"_index":798,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["crosshair",{"_index":273,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["current",{"_index":973,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":779,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["d00000",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d1905d",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d2r",{"_index":895,"title":{},"body":{"index.html":{}}}],["d7d7d7",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d9d9d9",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":1043,"title":{},"body":{"license.html":{}}}],["dark",{"_index":110,"title":{},"body":{"classes/App.html":{},"miscellaneous/enumerations.html":{}}}],["dark:bg",{"_index":688,"title":{},"body":{"classes/SplitItemView.html":{}}}],["darkcolor",{"_index":189,"title":{},"body":{"classes/ColorRef.html":{}}}],["darkcolorhex",{"_index":885,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date.now",{"_index":353,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["deal",{"_index":1003,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1051,"title":{},"body":{"license.html":{}}}],["debugging",{"_index":975,"title":{},"body":{"index.html":{}}}],["declare",{"_index":220,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{}}}],["default",{"_index":37,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":253,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["defaultscope",{"_index":86,"title":{},"body":{"classes/App.html":{}}}],["defaultweightmap",{"_index":759,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{}}}],["dependencies",{"_index":851,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["design",{"_index":890,"title":{},"body":{"index.html":{}}}],["desktop/menu",{"_index":350,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["destorysplit",{"_index":528,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["destroy",{"_index":211,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/Menu.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["dev",{"_index":1134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["develop",{"_index":896,"title":{},"body":{"index.html":{}}}],["development",{"_index":905,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":259,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["directionstyles",{"_index":716,"title":{},"body":{"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["directionstyles[direction",{"_index":738,"title":{},"body":{"classes/SplitItemView.html":{}}}],["directiontype",{"_index":266,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"miscellaneous/enumerations.html":{}}}],["directiontype.col",{"_index":499,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["directiontype.row",{"_index":505,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["disable",{"_index":378,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["disabled",{"_index":767,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["dist/workbench/desktop",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":978,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribution",{"_index":957,"title":{},"body":{"index.html":{}}}],["divided",{"_index":929,"title":{},"body":{"index.html":{}}}],["document.body.classlist.add('mode",{"_index":109,"title":{},"body":{"classes/App.html":{}}}],["document.body.classlist.remove('mode",{"_index":111,"title":{},"body":{"classes/App.html":{}}}],["document.createelement('div",{"_index":235,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/MenuGroupService.html":{},"classes/SVController.html":{},"classes/View.html":{}}}],["document.createelement('style",{"_index":99,"title":{},"body":{"classes/App.html":{}}}],["document.queryselector('#main",{"_index":120,"title":{},"body":{"classes/App.html":{}}}],["documentation",{"_index":793,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["draft",{"_index":981,"title":{},"body":{"index.html":{}}}],["e",{"_index":274,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["e0e0e0",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":934,"title":{},"body":{"index.html":{}}}],["electron",{"_index":250,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{},"index.html":{}}}],["electron/.exec(process.execpath",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["electronstore",{"_index":249,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":223,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["enableremotemodule",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entire",{"_index":927,"title":{},"body":{"index.html":{}}}],["enum",{"_index":269,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitItemView.html":{}}}],["enumerations",{"_index":871,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eslint",{"_index":377,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":451,"title":{},"body":{"classes/SplitBoardController.html":{},"license.html":{}}}],["event.clientx",{"_index":477,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.clienty",{"_index":464,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.preventdefault",{"_index":478,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.stoppropagation",{"_index":479,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.target",{"_index":471,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["eventemitter2",{"_index":153,"title":{},"body":{"classes/AppearanceService.html":{},"dependencies.html":{}}}],["everyone",{"_index":908,"title":{},"body":{"index.html":{}}}],["evt",{"_index":148,"title":{},"body":{"classes/AppearanceService.html":{}}}],["expand",{"_index":455,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{}}}],["expand.svelte",{"_index":715,"title":{},"body":{"classes/SplitItemView.html":{}}}],["expandactive",{"_index":420,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expanded",{"_index":563,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["expandleavehandler",{"_index":421,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmouseuphandler",{"_index":422,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmovehandler",{"_index":423,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandtype",{"_index":424,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["explorer.svelte",{"_index":403,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["explorer/index.ts",{"_index":388,"title":{},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["export",{"_index":83,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["express",{"_index":1030,"title":{},"body":{"license.html":{}}}],["extends",{"_index":257,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/ResourceExplorer.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["f2f2f2",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f9f9f9",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":254,"title":{},"body":{"interfaces/ISettings.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["ffae2b",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["file://${join(__dirname",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":979,"title":{},"body":{"index.html":{},"license.html":{}}}],["fitness",{"_index":1035,"title":{},"body":{"license.html":{}}}],["flex",{"_index":593,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["flowvalue",{"_index":581,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["fn",{"_index":157,"title":{},"body":{"classes/AppearanceService.html":{}}}],["focus",{"_index":761,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":1019,"title":{},"body":{"license.html":{}}}],["fourthbgcolor",{"_index":824,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":996,"title":{},"body":{"license.html":{}}}],["function",{"_index":158,"title":{},"body":{"classes/AppearanceService.html":{},"interfaces/Controller.html":{},"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":878,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1017,"title":{},"body":{"license.html":{}}}],["getexpandresizes",{"_index":529,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["getexpandresizes(index",{"_index":554,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["getmenuinsatance",{"_index":341,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["getting",{"_index":887,"title":{"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":976,"title":{},"body":{"index.html":{}}}],["granted",{"_index":995,"title":{},"body":{"license.html":{}}}],["gridbackgroundcolor",{"_index":825,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":67,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["groupmenu",{"_index":121,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.getmenuinsatance().init(menu.title",{"_index":125,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.initcontainer(header",{"_index":123,"title":{},"body":{"classes/App.html":{}}}],["groupmenuservice",{"_index":177,"title":{},"body":{"classes/BaseMenu.html":{}}}],["grow",{"_index":709,"title":{},"body":{"classes/SplitItemView.html":{}}}],["guide",{"_index":906,"title":{},"body":{"index.html":{}}}],["gutterstyle",{"_index":631,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["header",{"_index":119,"title":{},"body":{"classes/App.html":{}}}],["height",{"_index":632,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":902,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":994,"title":{},"body":{"license.html":{}}}],["hexdigits",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hidden",{"_index":596,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["hide",{"_index":698,"title":{},"body":{"classes/SplitItemView.html":{}}}],["hideexpandbutton",{"_index":676,"title":{},"body":{"classes/SplitItemView.html":{}}}],["holders",{"_index":1040,"title":{},"body":{"license.html":{}}}],["hor",{"_index":456,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["horizontal",{"_index":500,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["host",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hover",{"_index":763,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["htmlelement",{"_index":27,"title":{},"body":{"classes/App.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["http://localhost:5000/workbench/desktop",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hydrate",{"_index":225,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{}}}],["icomponentoptions",{"_index":222,"title":{"interfaces/IComponentOptions.html":{}},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{},"coverage.html":{}}}],["id",{"_index":286,"title":{},"body":{"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["identifier",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":231,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{},"classes/SplitBoardView.html":{}}}],["implied",{"_index":1031,"title":{},"body":{"license.html":{}}}],["import",{"_index":59,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["include",{"_index":937,"title":{},"body":{"index.html":{}}}],["included",{"_index":1024,"title":{},"body":{"license.html":{}}}],["including",{"_index":1006,"title":{},"body":{"license.html":{}}}],["independently",{"_index":935,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indexable",{"_index":754,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["ing",{"_index":891,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":390,"title":{},"body":{"classes/ResourceExplorer.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["init",{"_index":212,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/Menu.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardView.html":{}}}],["init(name",{"_index":307,"title":{},"body":{"classes/Menu.html":{}}}],["initcontainer",{"_index":342,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["initcontainer(container",{"_index":347,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["initflowtable",{"_index":14,"title":{},"body":{"classes/App.html":{}}}],["initframe",{"_index":15,"title":{},"body":{"classes/App.html":{}}}],["initial",{"_index":746,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["initmenu",{"_index":174,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenu(menuitems",{"_index":178,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenus",{"_index":16,"title":{},"body":{"classes/App.html":{}}}],["initnavigationbar",{"_index":17,"title":{},"body":{"classes/App.html":{}}}],["initpreferences",{"_index":18,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel",{"_index":19,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel(container",{"_index":49,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel",{"_index":20,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel(container",{"_index":51,"title":{},"body":{"classes/App.html":{}}}],["initstatusbar",{"_index":21,"title":{},"body":{"classes/App.html":{}}}],["initstyle",{"_index":22,"title":{},"body":{"classes/App.html":{}}}],["initstylemode",{"_index":23,"title":{},"body":{"classes/App.html":{}}}],["initstylemode(type",{"_index":55,"title":{},"body":{"classes/App.html":{}}}],["initwithcomponent",{"_index":389,"title":{},"body":{"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["initwithcomponent(target",{"_index":240,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["initworkarea",{"_index":24,"title":{},"body":{"classes/App.html":{}}}],["inject",{"_index":163,"title":{},"body":{"classes/AppearanceService.html":{},"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject(token",{"_index":881,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":162,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardView.html":{}}}],["inline",{"_index":228,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{}}}],["insertconfig",{"_index":783,"title":{},"body":{"classes/classBuilder.html":{}}}],["insertconfig(config",{"_index":776,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["insertitemat",{"_index":530,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["insertitemat(item",{"_index":557,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["interface",{"_index":207,"title":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SVController.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["interfaces",{"_index":209,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["intro",{"_index":227,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{}}}],["inversify",{"_index":60,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardView.html":{},"dependencies.html":{}}}],["ipc",{"_index":941,"title":{},"body":{"index.html":{}}}],["isettings",{"_index":246,"title":{"interfaces/ISettings.html":{}},"body":{"interfaces/ISettings.html":{},"coverage.html":{}}}],["isplitboardview",{"_index":255,"title":{"interfaces/ISplitBoardView.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"coverage.html":{}}}],["isprod",{"_index":800,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isshrink",{"_index":677,"title":{},"body":{"classes/SplitItemView.html":{}}}],["issues",{"_index":901,"title":{},"body":{"index.html":{}}}],["item",{"_index":315,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["item.contentview",{"_index":638,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.hideexpandbutton",{"_index":643,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.id",{"_index":360,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["item.replacecontent(newboard.root",{"_index":639,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.root",{"_index":473,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientheight",{"_index":508,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.clientwidth",{"_index":504,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.getboundingclientrect().left",{"_index":503,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.getboundingclientrect().top",{"_index":507,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.ts",{"_index":363,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["item.ts:18",{"_index":371,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:19",{"_index":372,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:20",{"_index":374,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:21",{"_index":370,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:22",{"_index":368,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.view",{"_index":268,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["item.view.ts",{"_index":670,"title":{},"body":{"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["item.view.ts:12",{"_index":691,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:13",{"_index":692,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:14",{"_index":690,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:16",{"_index":693,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:17",{"_index":684,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:25",{"_index":704,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:32",{"_index":702,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:39",{"_index":707,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:46",{"_index":711,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:53",{"_index":700,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:57",{"_index":705,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:63",{"_index":695,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:67",{"_index":697,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:71",{"_index":714,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:77",{"_index":696,"title":{},"body":{"classes/SplitItemView.html":{}}}],["items",{"_index":260,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["join(__dirname",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keycode",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["kind",{"_index":1029,"title":{},"body":{"license.html":{}}}],["labelcolor",{"_index":826,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["length",{"_index":280,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["liability",{"_index":1044,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1041,"title":{},"body":{"license.html":{}}}],["license",{"_index":912,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["light",{"_index":877,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lightcolor",{"_index":190,"title":{},"body":{"classes/ColorRef.html":{}}}],["lightcolorhex",{"_index":884,"title":{},"body":{"miscellaneous/functions.html":{}}}],["limitation",{"_index":1007,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1032,"title":{},"body":{"license.html":{}}}],["linux",{"_index":960,"title":{},"body":{"index.html":{}}}],["literal",{"_index":1061,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["live",{"_index":562,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["liveresize",{"_index":429,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["liveresize(clientx",{"_index":446,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["local",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":855,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":804,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error(json.stringify(err",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lowboardroot",{"_index":585,"title":{},"body":{"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["macos",{"_index":958,"title":{},"body":{"index.html":{}}}],["main",{"_index":943,"title":{},"body":{"index.html":{}}}],["mainwindow",{"_index":801,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mainwindow.loadurl(url).catch((err",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.on('closed",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.webcontents.opendevtools",{"_index":1144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor",{"_index":815,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makecolor('#000000",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#3f3f3f",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#5580c0",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#729cd4",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#bababa",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c0c0c1",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c4666f",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c6c6c6",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d00000",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d1905d",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d7d7d7",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d9d9d9",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#e0e0e0",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f2f2f2",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f9f9f9",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffae2b",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffffff",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor(anycolorhex",{"_index":883,"title":{},"body":{"miscellaneous/functions.html":{}}}],["map",{"_index":40,"title":{},"body":{"classes/App.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/Menu.html":{},"classes/SVController.html":{}}}],["matching",{"_index":143,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":656,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["menu",{"_index":124,"title":{"classes/Menu.html":{}},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menu(menucontainer",{"_index":356,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menu.id",{"_index":361,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menu.items",{"_index":126,"title":{},"body":{"classes/App.html":{}}}],["menu.svelte",{"_index":314,"title":{},"body":{"classes/Menu.html":{}}}],["menu.ts",{"_index":172,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["menu.ts:5",{"_index":176,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu.ts:8",{"_index":180,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu/base",{"_index":171,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["menu/config",{"_index":70,"title":{},"body":{"classes/App.html":{}}}],["menu/config.ts",{"_index":842,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menucommonfunction",{"_index":369,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/typealiases.html":{}}}],["menucontainer",{"_index":352,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menugroupservice",{"_index":65,"title":{"classes/MenuGroupService.html":{}},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/MenuGroupService.html":{},"coverage.html":{}}}],["menuinstance",{"_index":173,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuitem",{"_index":299,"title":{"classes/MenuItem.html":{}},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menuitem(config",{"_index":331,"title":{},"body":{"classes/Menu.html":{}}}],["menuitem(menuitem",{"_index":325,"title":{},"body":{"classes/Menu.html":{}}}],["menuitemconfig",{"_index":179,"title":{"interfaces/MenuItemConfig.html":{}},"body":{"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menuitems",{"_index":181,"title":{},"body":{"classes/BaseMenu.html":{},"classes/Menu.html":{}}}],["menuitemtype",{"_index":373,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/enumerations.html":{}}}],["menuitemtype.group",{"_index":381,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["menusvelte",{"_index":287,"title":{},"body":{"classes/Menu.html":{}}}],["merchantability",{"_index":1034,"title":{},"body":{"license.html":{}}}],["merge",{"_index":460,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["metadata",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":12,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{}}}],["meuns",{"_index":340,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["meunswritable",{"_index":288,"title":{},"body":{"classes/Menu.html":{}}}],["minimum",{"_index":916,"title":{},"body":{"index.html":{}}}],["minsize",{"_index":628,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["miscellaneous",{"_index":870,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":911,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":511,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["modify",{"_index":1010,"title":{},"body":{"license.html":{}}}],["modules",{"_index":931,"title":{"modules.html":{}},"body":{"index.html":{},"modules.html":{}}}],["monorepo",{"_index":926,"title":{},"body":{"index.html":{}}}],["more",{"_index":921,"title":{},"body":{"index.html":{}}}],["mousedown",{"_index":480,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["mouseevent",{"_index":449,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["n",{"_index":277,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":32,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["namewritable",{"_index":289,"title":{},"body":{"classes/Menu.html":{}}}],["navigation",{"_index":71,"title":{},"body":{"classes/App.html":{}}}],["navigationbar",{"_index":113,"title":{},"body":{"classes/App.html":{}}}],["new",{"_index":39,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/ResourceExplorer.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newboard",{"_index":636,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addcolumn(newemptyview",{"_index":645,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addcolumn(newitemview",{"_index":644,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addrow(newemptyview",{"_index":650,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addrow(newitemview",{"_index":649,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.controller.checkexpandstate(clientx",{"_index":647,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.controller.setactivestate(0",{"_index":646,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newemptyview",{"_index":642,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newitem",{"_index":653,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newitemview",{"_index":640,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsize",{"_index":663,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes",{"_index":651,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(newsize",{"_index":665,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(size",{"_index":667,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(sum",{"_index":666,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(w",{"_index":669,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["next",{"_index":951,"title":{},"body":{"index.html":{}}}],["none",{"_index":747,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["noninfringement",{"_index":1038,"title":{},"body":{"license.html":{}}}],["normalizeweight",{"_index":784,"title":{},"body":{"classes/classBuilder.html":{}}}],["normalizeweight(config",{"_index":790,"title":{},"body":{"classes/classBuilder.html":{}}}],["nothing",{"_index":920,"title":{},"body":{"index.html":{}}}],["notice",{"_index":1022,"title":{},"body":{"license.html":{}}}],["notification",{"_index":802,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nowrap",{"_index":594,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["npm",{"_index":967,"title":{},"body":{"index.html":{}}}],["null",{"_index":536,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":278,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":999,"title":{},"body":{"license.html":{}}}],["offsetx",{"_index":509,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["offsety",{"_index":510,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["onmodechanged",{"_index":150,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmodechanged(fn",{"_index":155,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmousedown",{"_index":430,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["onmousedown(event",{"_index":448,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["optional",{"_index":34,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/IComponentOptions.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{}}}],["orderedconfigs",{"_index":769,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["organization",{"_index":987,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1048,"title":{},"body":{"license.html":{}}}],["out",{"_index":963,"title":{},"body":{"index.html":{},"license.html":{}}}],["overflow",{"_index":595,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["overview",{"_index":1052,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":850,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":932,"title":{},"body":{"index.html":{}}}],["packaging",{"_index":954,"title":{},"body":{"index.html":{}}}],["page",{"_index":947,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":30,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":1036,"title":{},"body":{"license.html":{}}}],["permission",{"_index":993,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1015,"title":{},"body":{"license.html":{}}}],["person",{"_index":998,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1016,"title":{},"body":{"license.html":{}}}],["platform",{"_index":974,"title":{},"body":{"index.html":{}}}],["port",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":1026,"title":{},"body":{"license.html":{}}}],["pos",{"_index":558,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["position",{"_index":281,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["possible",{"_index":971,"title":{},"body":{"index.html":{}}}],["practice",{"_index":894,"title":{},"body":{"index.html":{}}}],["preload",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preload.js",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepend",{"_index":533,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["prepend(...childs",{"_index":577,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["private",{"_index":9,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["process.env.node_env",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":928,"title":{},"body":{"index.html":{}}}],["project",{"_index":922,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["propertypanel",{"_index":78,"title":{},"body":{"classes/App.html":{}}}],["props",{"_index":116,"title":{},"body":{"classes/App.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{},"miscellaneous/typealiases.html":{}}}],["provided",{"_index":1027,"title":{},"body":{"license.html":{}}}],["public",{"_index":149,"title":{},"body":{"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["publish",{"_index":903,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":1037,"title":{},"body":{"license.html":{}}}],["qiansc",{"_index":992,"title":{},"body":{"license.html":{}}}],["quickly",{"_index":970,"title":{},"body":{"index.html":{}}}],["r",{"_index":660,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["readonly",{"_index":285,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["ready",{"_index":956,"title":{},"body":{"index.html":{}}}],["record",{"_index":221,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{},"miscellaneous/typealiases.html":{}}}],["ref.ts",{"_index":187,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["ref.ts:15",{"_index":198,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:5",{"_index":195,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:6",{"_index":196,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:7",{"_index":193,"title":{},"body":{"classes/ColorRef.html":{}}}],["reflect",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["registeritem",{"_index":291,"title":{},"body":{"classes/Menu.html":{}}}],["registeritem(config",{"_index":310,"title":{},"body":{"classes/Menu.html":{}}}],["release",{"_index":982,"title":{},"body":{"index.html":{}}}],["removecolumn(item",{"_index":622,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["removeitem",{"_index":292,"title":{},"body":{"classes/Menu.html":{}}}],["removeitem(index",{"_index":312,"title":{},"body":{"classes/Menu.html":{}}}],["removemenuinstances",{"_index":343,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["removemenuinstances(menu",{"_index":348,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["removerow(item",{"_index":623,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["replacecontent",{"_index":678,"title":{},"body":{"classes/SplitItemView.html":{}}}],["replacecontent(contentview",{"_index":701,"title":{},"body":{"classes/SplitItemView.html":{}}}],["repository",{"_index":892,"title":{},"body":{"index.html":{}}}],["required",{"_index":915,"title":{},"body":{"index.html":{}}}],["resize",{"_index":272,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["resizeat",{"_index":261,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["resizeat(index",{"_index":560,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["resource",{"_index":402,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["resourceexplorer",{"_index":386,"title":{"classes/ResourceExplorer.html":{}},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["resourcepage",{"_index":76,"title":{},"body":{"classes/App.html":{}}}],["restriction",{"_index":1005,"title":{},"body":{"license.html":{}}}],["result",{"_index":142,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":144,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":168,"title":{},"body":{"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["returns",{"_index":42,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{}}}],["right",{"_index":601,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["rights",{"_index":1008,"title":{},"body":{"license.html":{}}}],["roadmap",{"_index":904,"title":{},"body":{"index.html":{}}}],["rollup",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":35,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["rounded",{"_index":729,"title":{},"body":{"classes/SplitItemView.html":{}}}],["row",{"_index":271,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":953,"title":{},"body":{"index.html":{}}}],["s",{"_index":276,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["script",{"_index":944,"title":{},"body":{"index.html":{}}}],["secondarybgcolor",{"_index":827,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["secondarylabelcolor",{"_index":828,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":984,"title":{},"body":{"index.html":{}}}],["sell",{"_index":1013,"title":{},"body":{"license.html":{}}}],["server",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":64,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["service.ts",{"_index":146,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":154,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:12",{"_index":161,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{}}}],["service.ts:18",{"_index":156,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:19",{"_index":346,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:21",{"_index":159,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:28",{"_index":349,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:6",{"_index":345,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:7",{"_index":344,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:9",{"_index":152,"title":{},"body":{"classes/AppearanceService.html":{}}}],["set",{"_index":989,"title":{},"body":{"index.html":{}}}],["setactivestate",{"_index":431,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setactivestate(index",{"_index":452,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setcontent",{"_index":679,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setcontent(contentview",{"_index":703,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setcursor",{"_index":262,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["setcursor(type",{"_index":564,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["setdefaultclass",{"_index":680,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setflow",{"_index":534,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setflow(type",{"_index":580,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setgrow",{"_index":681,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setgrow(classname",{"_index":706,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setshrink",{"_index":682,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setshrink(classname",{"_index":710,"title":{},"body":{"classes/SplitItemView.html":{}}}],["settings",{"_index":252,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shadow",{"_index":379,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["shall",{"_index":1023,"title":{},"body":{"license.html":{}}}],["shrink",{"_index":712,"title":{},"body":{"classes/SplitItemView.html":{}}}],["similar",{"_index":925,"title":{},"body":{"index.html":{}}}],["singleton",{"_index":87,"title":{},"body":{"classes/App.html":{}}}],["size",{"_index":662,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["sizes",{"_index":548,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["smelte",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["snapoffset",{"_index":630,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["software",{"_index":1001,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["split",{"_index":267,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["split(array.prototype.slice.call(this.root.children",{"_index":626,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["split.instance",{"_index":540,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["split.js",{"_index":584,"title":{},"body":{"classes/SplitBoardView.html":{},"dependencies.html":{}}}],["splitboard",{"_index":127,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view0",{"_index":133,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view1",{"_index":134,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view2",{"_index":135,"title":{},"body":{"classes/App.html":{}}}],["splitboard.applysplit('horizontal",{"_index":136,"title":{},"body":{"classes/App.html":{}}}],["splitboardcontroller",{"_index":416,"title":{"classes/SplitBoardController.html":{}},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"coverage.html":{}}}],["splitboardcontroller(this",{"_index":591,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitboardview",{"_index":80,"title":{"classes/SplitBoardView.html":{}},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{},"coverage.html":{}}}],["splitboardview().setflow('1",{"_index":128,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["splitcolumnat",{"_index":263,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["splitcolumnat(index",{"_index":566,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitexpand",{"_index":694,"title":{},"body":{"classes/SplitItemView.html":{}}}],["splitinstance",{"_index":523,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splititemview",{"_index":81,"title":{"classes/SplitItemView.html":{}},"body":{"classes/App.html":{},"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{}}}],["splititemview().setcontent(contentview",{"_index":641,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splititemview().setcontent(document.createelement('div",{"_index":130,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["splitrowat",{"_index":264,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["splitrowat(index",{"_index":568,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["src/.../appearance.ts",{"_index":872,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../class",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.ts",{"_index":1058,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../controller.ts",{"_index":1060,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../index.ts",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inject.ts",{"_index":879,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../lib.ts",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.ts",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu",{"_index":875,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../settings.ts",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../split",{"_index":873,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../type.ts",{"_index":874,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../ui",{"_index":880,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../view.ts",{"_index":1059,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app",{"_index":942,"title":{},"body":{"index.html":{}}}],["src/app/index.ts",{"_index":796,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/logger.ts",{"_index":803,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/settings.ts",{"_index":247,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core",{"_index":936,"title":{},"body":{"index.html":{}}}],["src/core/browser/class",{"_index":752,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/layout/split",{"_index":417,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/layout/type.ts",{"_index":256,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/browser/style/ui",{"_index":813,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/view.ts",{"_index":740,"title":{},"body":{"classes/View.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/browser/view.ts:13",{"_index":742,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:17",{"_index":743,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:4",{"_index":741,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:8",{"_index":744,"title":{},"body":{"classes/View.html":{}}}],["src/core/common/appearance.ts",{"_index":876,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/common/color",{"_index":186,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["src/core/components",{"_index":949,"title":{},"body":{"index.html":{}}}],["src/core/parts/ioc/inject.ts",{"_index":839,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/core/parts/modules/controller.ts",{"_index":210,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/parts/modules/controller.ts:26",{"_index":407,"title":{},"body":{"classes/SVController.html":{}}}],["src/core/parts/modules/controller.ts:27",{"_index":406,"title":{},"body":{"classes/SVController.html":{}}}],["src/core/parts/modules/controller.ts:29",{"_index":411,"title":{},"body":{"classes/SVController.html":{}}}],["src/core/parts/modules/controller.ts:33",{"_index":409,"title":{},"body":{"classes/SVController.html":{}}}],["src/core/parts/modules/controller.ts:41",{"_index":410,"title":{},"body":{"classes/SVController.html":{}}}],["src/core/parts/modules/controller.ts:43",{"_index":414,"title":{},"body":{"classes/SVController.html":{}}}],["src/core/parts/modules/controller.ts:44",{"_index":412,"title":{},"body":{"classes/SVController.html":{}}}],["src/core/parts/modules/controller.ts:46",{"_index":415,"title":{},"body":{"classes/SVController.html":{}}}],["src/core/parts/modules/controller.ts:47",{"_index":413,"title":{},"body":{"classes/SVController.html":{}}}],["src/core/parts/modules/controller.ts:49",{"_index":408,"title":{},"body":{"classes/SVController.html":{}}}],["src/modules/resource",{"_index":387,"title":{},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["src/workbench",{"_index":945,"title":{},"body":{"index.html":{}}}],["src/workbench/desktop/app.ts",{"_index":6,"title":{},"body":{"classes/App.html":{},"coverage.html":{}}}],["src/workbench/desktop/app.ts:103",{"_index":58,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:107",{"_index":53,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:12",{"_index":36,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:13",{"_index":29,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:20",{"_index":41,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:26",{"_index":48,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:31",{"_index":54,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:41",{"_index":57,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:49",{"_index":45,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:53",{"_index":47,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:63",{"_index":46,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:72",{"_index":44,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:87",{"_index":52,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:95",{"_index":50,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/base",{"_index":170,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/desktop/lib.ts",{"_index":843,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/desktop/main.ts",{"_index":844,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/desktop/menu/menu",{"_index":362,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/workbench/desktop/menu/menu.ts",{"_index":284,"title":{},"body":{"classes/Menu.html":{},"coverage.html":{}}}],["src/workbench/desktop/menu/menu.ts:10",{"_index":300,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:11",{"_index":301,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:12",{"_index":297,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:13",{"_index":303,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:14",{"_index":295,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:23",{"_index":309,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:31",{"_index":306,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:38",{"_index":311,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:43",{"_index":313,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:49",{"_index":305,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:7",{"_index":296,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:8",{"_index":298,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:9",{"_index":304,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/utils/utils.ts",{"_index":847,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/services/appearance",{"_index":145,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["src/workbench/services/menu",{"_index":339,"title":{},"body":{"classes/MenuGroupService.html":{},"coverage.html":{}}}],["standard",{"_index":910,"title":{},"body":{"index.html":{}}}],["start",{"_index":279,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["started",{"_index":888,"title":{"index.html":{},"license.html":{}},"body":{}}],["starttoexpand",{"_index":531,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["starttoexpand(index",{"_index":570,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["startx",{"_index":425,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["starty",{"_index":426,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["stateconfig",{"_index":757,"title":{"interfaces/stateConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["statements",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["statically",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statusbar",{"_index":74,"title":{},"body":{"classes/App.html":{}}}],["step",{"_index":952,"title":{},"body":{"index.html":{}}}],["sth",{"_index":112,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["store",{"_index":251,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{}}}],["storybook",{"_index":948,"title":{},"body":{"index.html":{}}}],["string",{"_index":294,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":923,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1018,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1011,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1025,"title":{},"body":{"license.html":{}}}],["such",{"_index":939,"title":{},"body":{"index.html":{}}}],["sum",{"_index":661,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["super",{"_index":588,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["support",{"_index":962,"title":{},"body":{"index.html":{}}}],["svcontroller",{"_index":230,"title":{"classes/SVController.html":{}},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"coverage.html":{}}}],["svcontroller:11",{"_index":396,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["svcontroller:14",{"_index":394,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["svcontroller:18",{"_index":397,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["svcontroller:21",{"_index":395,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["svcontroller:26",{"_index":392,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["svcontroller:27",{"_index":391,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["svcontroller:29",{"_index":400,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["svcontroller:33",{"_index":399,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["svcontroller:49",{"_index":398,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["svcontroller:5",{"_index":393,"title":{},"body":{"classes/ResourceExplorer.html":{}}}],["svelte/internal",{"_index":219,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{}}}],["svelte/store",{"_index":316,"title":{},"body":{"classes/Menu.html":{}}}],["sveltecomponentdev",{"_index":218,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["switch",{"_index":203,"title":{},"body":{"classes/ColorRef.html":{}}}],["symbol.for('flowtableroot",{"_index":586,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["systembluecolor",{"_index":829,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemgraycolor",{"_index":830,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemorangecolor",{"_index":831,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systempinkcolor",{"_index":832,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemredcolor",{"_index":833,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemyellowcolor",{"_index":834,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":114,"title":{},"body":{"classes/App.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/Menu.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/variables.html":{}}}],["target.classlist.contains('split",{"_index":475,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["target.parentelement",{"_index":474,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["template",{"_index":914,"title":{},"body":{"index.html":{}}}],["tertiarybgcolor",{"_index":835,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tertiarylabelcolor",{"_index":836,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["textfieldbackground",{"_index":837,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["this._growclassname",{"_index":725,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._shrinkclassname",{"_index":724,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._type",{"_index":165,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this._view",{"_index":234,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{}}}],["this._view.parentnode",{"_index":243,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{}}}],["this._view.parentnode.removechild(this._view",{"_index":244,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{}}}],["this._waitformergeitem",{"_index":617,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this._waitformergeitem.cancelwaitformerge",{"_index":621,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.activeexpand",{"_index":483,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.activeid",{"_index":484,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.addexpandbutton",{"_index":717,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.anycolor",{"_index":200,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.applysplit",{"_index":609,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.applysplit('vertical",{"_index":607,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.applysplit(this.direction",{"_index":655,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.callback",{"_index":385,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.cancelformerge",{"_index":619,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.cancelwaitformerge",{"_index":735,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.checkdirection(directiontype.col",{"_index":608,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.checkdirection(directiontype.row",{"_index":599,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.checkexpandstate(event.clientx",{"_index":465,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.children",{"_index":382,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.comp",{"_index":237,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{}}}],["this.comp.$destroy",{"_index":242,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{}}}],["this.container",{"_index":85,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{}}}],["this.container.append(menucontainer",{"_index":355,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.container.bind(appearanceservice).to(appearanceservice",{"_index":94,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(colorset).to(colorset",{"_index":96,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(colorsetroot).todynamicvalue",{"_index":100,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(menugroupservice).to(menugroupservice",{"_index":95,"title":{},"body":{"classes/App.html":{}}}],["this.container.firstchild",{"_index":327,"title":{},"body":{"classes/Menu.html":{}}}],["this.container.get(appearanceservice",{"_index":104,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(colorset",{"_index":102,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(menugroupservice",{"_index":122,"title":{},"body":{"classes/App.html":{}}}],["this.container.removechild(menu.container",{"_index":358,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.container.removechild(this.container.firstchild",{"_index":328,"title":{},"body":{"classes/Menu.html":{}}}],["this.contentview",{"_index":719,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.context",{"_index":117,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{}}}],["this.context.set('container",{"_index":88,"title":{},"body":{"classes/App.html":{}}}],["this.context.set('menus",{"_index":319,"title":{},"body":{"classes/Menu.html":{}}}],["this.context.set('name",{"_index":321,"title":{},"body":{"classes/Menu.html":{}}}],["this.controller",{"_index":590,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.createmenu",{"_index":326,"title":{},"body":{"classes/Menu.html":{}}}],["this.darkcolor",{"_index":202,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.destorysplit",{"_index":624,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.direction",{"_index":603,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.evt.emit('onmodechanged",{"_index":166,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.evt.on('onmodechanged",{"_index":167,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.expand",{"_index":733,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.expandhidden",{"_index":734,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.mergedirection",{"_index":737,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expandactive",{"_index":488,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandleavehandler",{"_index":466,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmouseuphandler",{"_index":468,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmovehandler",{"_index":462,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandtype",{"_index":490,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.getexpandresizes(index",{"_index":652,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.groupmenuservice.getmenuinsatance",{"_index":183,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.id",{"_index":317,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.init",{"_index":589,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.initflowtable",{"_index":92,"title":{},"body":{"classes/App.html":{}}}],["this.initmenus",{"_index":118,"title":{},"body":{"classes/App.html":{}}}],["this.initnavigationbar",{"_index":91,"title":{},"body":{"classes/App.html":{}}}],["this.initpreferences",{"_index":89,"title":{},"body":{"classes/App.html":{}}}],["this.initpropertypanel(view2.contentview",{"_index":141,"title":{},"body":{"classes/App.html":{}}}],["this.initresourcepanel(view0.contentview",{"_index":140,"title":{},"body":{"classes/App.html":{}}}],["this.initstatusbar",{"_index":93,"title":{},"body":{"classes/App.html":{}}}],["this.initstyle",{"_index":90,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(appearancetype.dark",{"_index":107,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(type",{"_index":106,"title":{},"body":{"classes/App.html":{}}}],["this.initwithcomponent(this._view",{"_index":238,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{}}}],["this.insertconfig(config",{"_index":772,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.insertitemat(item",{"_index":606,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.insertitemat(newitem",{"_index":654,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items.length",{"_index":611,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items.splice(pos",{"_index":612,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[index",{"_index":618,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[index].waitformerge(direction",{"_index":620,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[pos",{"_index":614,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.lightcolor",{"_index":201,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.liveresize(event.clientx",{"_index":463,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.menuinstance",{"_index":182,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.menuinstance.init",{"_index":184,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.menuitems",{"_index":318,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.filter((_",{"_index":335,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.push(new",{"_index":324,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.splice(index",{"_index":329,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems[index",{"_index":333,"title":{},"body":{"classes/Menu.html":{}}}],["this.menusvelte",{"_index":336,"title":{},"body":{"classes/Menu.html":{}}}],["this.meuns",{"_index":351,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meuns.filter((item",{"_index":359,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meuns.length",{"_index":354,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meuns.push(menu",{"_index":357,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meunswritable",{"_index":320,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set((this.menuitems",{"_index":334,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set([...this.menuitems",{"_index":332,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set(this.menuitems",{"_index":338,"title":{},"body":{"classes/Menu.html":{}}}],["this.name",{"_index":323,"title":{},"body":{"classes/Menu.html":{}}}],["this.namewritable",{"_index":322,"title":{},"body":{"classes/Menu.html":{}}}],["this.namewritable.set(this.name",{"_index":337,"title":{},"body":{"classes/Menu.html":{}}}],["this.normalizeweight(config",{"_index":778,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.onmousedown(event",{"_index":470,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.orderedconfigs",{"_index":774,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor",{"_index":780,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor].weight",{"_index":781,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.prepend(contentview",{"_index":721,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root",{"_index":115,"title":{},"body":{"classes/App.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["this.root.appendchild(child",{"_index":749,"title":{},"body":{"classes/View.html":{}}}],["this.root.appendchild(colorsetroot",{"_index":101,"title":{},"body":{"classes/App.html":{}}}],["this.root.appendchild(item.root",{"_index":613,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.root.appendchild(splitboard.root",{"_index":139,"title":{},"body":{"classes/App.html":{}}}],["this.root.classlist.add('flex",{"_index":605,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["this.root.classlist.add('relative",{"_index":731,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('split",{"_index":592,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["this.root.classlist.add('wait",{"_index":736,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(...this._bgcolorclassname",{"_index":732,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(`flex",{"_index":748,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.add(this._growclassname",{"_index":726,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(this._shrinkclassname",{"_index":728,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove('flex",{"_index":604,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/View.html":{}}}],["this.root.classlist.remove('wait",{"_index":739,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._growclassname",{"_index":727,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._shrinkclassname",{"_index":723,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.prepend(...childs",{"_index":750,"title":{},"body":{"classes/View.html":{}}}],["this.root.replacechild(contentview",{"_index":722,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.style.cursor",{"_index":616,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.root.style.margin",{"_index":597,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.setactivestate(index",{"_index":476,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.setdefaultclass",{"_index":718,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.splitinstance",{"_index":625,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.destroy",{"_index":635,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.getsizes().foreach((size",{"_index":664,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.setsizes(newsizes",{"_index":668,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.starttoexpand(index",{"_index":648,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.startx",{"_index":481,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.starty",{"_index":482,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.title",{"_index":383,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.type",{"_index":384,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.unactiveexpand",{"_index":467,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.cancelformerge",{"_index":495,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.direction",{"_index":498,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items.foreach((item",{"_index":472,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items[this.activeid",{"_index":497,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.resizeat(this.activeid",{"_index":502,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousedown",{"_index":469,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseleave",{"_index":486,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousemove",{"_index":485,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseup",{"_index":487,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseleave",{"_index":493,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mousemove",{"_index":492,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseup",{"_index":494,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor",{"_index":496,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('col",{"_index":513,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('crosshair",{"_index":491,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('n",{"_index":517,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('row",{"_index":514,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('w",{"_index":515,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitcolumnat(this.activeid",{"_index":519,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitrowat(this.activeid",{"_index":520,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.waitformergeatitem(this.activeid",{"_index":516,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.viewdidappear",{"_index":239,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{}}}],["this.viewdiddisappear",{"_index":245,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{}}}],["this.viewwillappear",{"_index":236,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{}}}],["this.viewwilldisappear",{"_index":241,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/SVController.html":{}}}],["three",{"_index":930,"title":{},"body":{"index.html":{}}}],["title",{"_index":366,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["together",{"_index":897,"title":{},"body":{"index.html":{}}}],["token",{"_index":882,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tort",{"_index":1047,"title":{},"body":{"license.html":{}}}],["true",{"_index":489,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":33,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1055,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/color",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["ui/components/navigation/navigation",{"_index":72,"title":{},"body":{"classes/App.html":{}}}],["ui/components/property/proterty.svelte",{"_index":79,"title":{},"body":{"classes/App.html":{}}}],["ui/components/resource/resource.svelte",{"_index":77,"title":{},"body":{"classes/App.html":{}}}],["ui/components/status/status",{"_index":75,"title":{},"body":{"classes/App.html":{}}}],["unactiveexpand",{"_index":432,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["undefined",{"_index":610,"title":{},"body":{"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":909,"title":{},"body":{"index.html":{}}}],["update",{"_index":961,"title":{},"body":{"index.html":{}}}],["updatemode",{"_index":151,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updatemode(type",{"_index":160,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updater",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["url",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":1009,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":918,"title":{},"body":{"index.html":{}}}],["user",{"_index":988,"title":{},"body":{"index.html":{}}}],["using",{"_index":965,"title":{},"body":{"index.html":{}}}],["utils",{"_index":376,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"index.html":{}}}],["uuid",{"_index":375,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":38,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/classBuilder.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1062,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":458,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["version",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":506,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["very",{"_index":924,"title":{},"body":{"index.html":{}}}],["view",{"_index":213,"title":{"classes/View.html":{}},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISplitBoardView.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"coverage.html":{}}}],["view0",{"_index":129,"title":{},"body":{"classes/App.html":{}}}],["view1",{"_index":131,"title":{},"body":{"classes/App.html":{}}}],["view2",{"_index":132,"title":{},"body":{"classes/App.html":{}}}],["view:13",{"_index":575,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:17",{"_index":578,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:4",{"_index":542,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:8",{"_index":582,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["viewdidappear",{"_index":214,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["viewdiddisappear",{"_index":215,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["viewwillappear",{"_index":216,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["viewwilldisappear",{"_index":217,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{}}}],["vite",{"_index":917,"title":{},"body":{"index.html":{}}}],["void",{"_index":43,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"interfaces/Controller.html":{},"interfaces/IComponentOptions.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["w",{"_index":275,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["waitformerge",{"_index":683,"title":{},"body":{"classes/SplitItemView.html":{}}}],["waitformerge(direction",{"_index":713,"title":{},"body":{"classes/SplitItemView.html":{}}}],["waitformergeatitem",{"_index":265,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardView.html":{}}}],["waitformergeatitem(index",{"_index":572,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["warranties",{"_index":1033,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1028,"title":{},"body":{"license.html":{}}}],["web",{"_index":946,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["webpreferences",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":758,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["weightmap",{"_index":751,"title":{"interfaces/WeightMap.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["whether",{"_index":1045,"title":{},"body":{"license.html":{}}}],["width",{"_index":634,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["wiki",{"_index":985,"title":{},"body":{"index.html":{}}}],["windows",{"_index":959,"title":{},"body":{"index.html":{}}}],["without",{"_index":1004,"title":{},"body":{"license.html":{}}}],["work",{"_index":899,"title":{},"body":{"index.html":{}}}],["works",{"_index":913,"title":{},"body":{"index.html":{}}}],["writable",{"_index":302,"title":{},"body":{"classes/Menu.html":{}}}],["xl",{"_index":730,"title":{},"body":{"classes/SplitItemView.html":{}}}],["yes",{"_index":194,"title":{},"body":{"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/SplitBoardView.html":{},"classes/View.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/App.html":{"url":"classes/App.html","title":"class - App","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/app.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                context\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bootstrap\n                            \n                            \n                                initFlowTable\n                            \n                            \n                                initFrame\n                            \n                            \n                                initMenus\n                            \n                            \n                                initNavigationBar\n                            \n                            \n                                initPreferences\n                            \n                            \n                                initPropertyPanel\n                            \n                            \n                                initResourcePanel\n                            \n                            \n                                initStatusBar\n                            \n                            \n                                initStyle\n                            \n                            \n                                initStyleMode\n                            \n                            \n                                initWorkArea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/app.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Container\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFlowTable\n                        \n                    \n                \n            \n            \n                \ninitFlowTable()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFrame\n                        \n                    \n                \n            \n            \n                \ninitFrame()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initMenus\n                        \n                    \n                \n            \n            \n                \ninitMenus()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNavigationBar\n                        \n                    \n                \n            \n            \n                \ninitNavigationBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPreferences\n                        \n                    \n                \n            \n            \n                \ninitPreferences()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPropertyPanel\n                        \n                    \n                \n            \n            \n                \ninitPropertyPanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initResourcePanel\n                        \n                    \n                \n            \n            \n                \ninitResourcePanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStatusBar\n                        \n                    \n                \n            \n            \n                \ninitStatusBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyle\n                        \n                    \n                \n            \n            \n                \ninitStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyleMode\n                        \n                    \n                \n            \n            \n                \ninitStyleMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initWorkArea\n                        \n                    \n                \n            \n            \n                \ninitWorkArea()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Container } from 'inversify';\nimport { AppearanceType } from '@cosmic/core/common';\nimport { AppearanceService } from '@cosmic/workbench/services/appearance-service';\nimport { MenuGroupService } from '@cosmic/workbench/services/menu-group-service';\nimport { applicationMenus } from './base-menu/config';\nimport Navigation from '../ui/components/navigation/navigation-bar.svelte';\nimport StatusBar from '../ui/components/status/status-bar.svelte';\nimport ResourcePage from '../ui/components/resource/resource.svelte';\nimport PropertyPanel from '../ui/components/property/proterty.svelte';\nimport { SplitBoardView, SplitItemView } from '@cosmic/core/browser';\nexport default class App {\n  private container: Container;\n  private context = new Map();\n  constructor(private root: HTMLElement) {\n    this.container = new Container({ defaultScope: 'Singleton' });\n    this.context.set('container', this.container);\n    this.initPreferences();\n    this.initStyle();\n  }\n  bootstrap(): void {\n    this.initNavigationBar();\n    this.initFlowTable();\n    this.initStatusBar();\n  }\n\n  initPreferences(): void {\n    this.container.bind(AppearanceService).to(AppearanceService);\n    this.container.bind(MenuGroupService).to(MenuGroupService);\n  }\n\n  initStyle(): void {\n    // this.container.bind(ColorSet).to(ColorSet);\n    // const colorSetRoot = document.createElement('style');\n    // this.container.bind(ColorSetRoot).toDynamicValue(() => colorSetRoot);\n    // this.root.appendChild(colorSetRoot);\n    // this.container.get(ColorSet);\n    const aps = this.container.get(AppearanceService);\n    aps.onModeChanged((type: AppearanceType) => this.initStyleMode(type));\n    this.initStyleMode(AppearanceType.dark);\n  }\n  initStyleMode(type: AppearanceType): void {\n    if (type === AppearanceType.dark) {\n      document.body.classList.add('mode-dark');\n    } else {\n      document.body.classList.remove('mode-dark');\n    }\n  }\n\n  initFrame(): void {\n    // to do sth.\n  }\n\n  initNavigationBar(): void {\n    // to do sth.\n    const navigationBar = new Navigation({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    this.initMenus();\n  }\n\n  initMenus(): void {\n    const header = document.querySelector('#main-header');\n    const groupMenu = this.container.get(MenuGroupService);\n    groupMenu.initContainer(header as HTMLElement);\n    for (const menu of applicationMenus) {\n      groupMenu.getMenuInsatance().init(menu.title, menu.items);\n    }\n  }\n\n  initFlowTable(): void {\n    const splitBoard = new SplitBoardView().setFlow('1');\n    const view0 = new SplitItemView().setContent(document.createElement('div'));\n    const view1 = new SplitItemView().setContent(document.createElement('div'));\n    const view2 = new SplitItemView().setContent(document.createElement('div'));\n    splitBoard.addColumn(view0);\n    splitBoard.addColumn(view1);\n    splitBoard.addColumn(view2);\n    splitBoard.applySplit('horizontal', [20, 60, 20]);\n\n    this.root.appendChild(splitBoard.root);\n    this.initResourcePanel(view0.contentView);\n    this.initPropertyPanel(view2.contentView);\n  }\n\n  initResourcePanel(container: HTMLElement): void {\n    new ResourcePage({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initPropertyPanel(container: HTMLElement): void {\n    new PropertyPanel({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initWorkArea(): void {\n    // to do sth.\n  }\n\n  initStatusBar(): void {\n    new StatusBar({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    // to do sth.\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppearanceService.html":{"url":"classes/AppearanceService.html","title":"class - AppearanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppearanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/appearance-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Private\n                                evt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onModeChanged\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                updateMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppearanceType\n\n                    \n                \n                \n                    \n                        Default value : AppearanceType.dark\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        evt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter2()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onModeChanged\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModeChanged(fn: (type: AppearanceType) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        type\n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject, ContainerModule } from 'inversify';\nimport { EventEmitter2 } from 'eventemitter2';\n\nimport { AppearanceType } from '@cosmic/core/common';\n\n@injectable()\n/** 外观设置服务 */\nexport class AppearanceService {\n  private _type: AppearanceType = AppearanceType.dark;\n  private evt = new EventEmitter2();\n\n  public updateMode(type: AppearanceType) {\n    if (this._type !== type) {\n      this._type = type;\n      this.evt.emit('onModeChanged', type);\n    }\n  }\n  public onModeChanged(fn: (type: AppearanceType) => void) {\n    this.evt.on('onModeChanged', fn);\n  }\n  public type() {\n    return this._type;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseMenu.html":{"url":"classes/BaseMenu.html","title":"class - BaseMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/base-menu/base-menu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                menuInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(groupMenuService: MenuGroupService)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/base-menu/base-menu.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupMenuService\n                                                  \n                                                        \n                                                                        MenuGroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/base-menu/base-menu.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    initMenu(menuItems: MenuItemConfig[])\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/base-menu/base-menu.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuItems\n                                    \n                                                MenuItemConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { MenuGroupService } from '@cosmic/workbench/services/menu-group-service';\nimport type { Menu, MenuItemConfig } from '../menu';\n\nexport class BaseMenu {\n  private menuInstance!: Menu;\n  constructor(private groupMenuService: MenuGroupService) {}\n\n  public initMenu(menuItems: MenuItemConfig[]): void {\n    this.menuInstance = this.groupMenuService.getMenuInsatance();\n    this.menuInstance.init('文件', menuItems);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColorRef.html":{"url":"classes/ColorRef.html","title":"class - ColorRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColorRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/common/color-ref.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                anyColor\n                            \n                            \n                                    Private\n                                darkColor\n                            \n                            \n                                    Private\n                                lightColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                color\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(anyColor: Color, lightColor?: Color, darkColor?: Color)\n                    \n                \n                        \n                            \n                                Defined in src/core/common/color-ref.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        anyColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lightColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        darkColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        anyColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        darkColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lightColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        color\n                        \n                    \n                \n            \n            \n                \n                    \n                    color(appearanceType: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/common/color-ref.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appearanceType\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type * as Color from 'color';\nimport { AppearanceType } from './appearance';\n\nexport default class ColorRef {\n  private anyColor: Color;\n  private lightColor: Color;\n  private darkColor: Color;\n\n  constructor(anyColor: Color, lightColor?: Color, darkColor?: Color) {\n    this.anyColor = anyColor;\n    this.lightColor = lightColor || anyColor;\n    this.darkColor = darkColor || anyColor;\n  }\n\n  public color(appearanceType: AppearanceType) {\n    switch (appearanceType) {\n      case AppearanceType.any:\n        return this.anyColor;\n      case AppearanceType.light:\n        return this.lightColor;\n      case AppearanceType.dark:\n        return this.darkColor;\n      default:\n        return this.anyColor;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Controller.html":{"url":"interfaces/Controller.html","title":"interface - Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Controller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destroy\n                                        \n                                \n                                \n                                        \n                                            init\n                                        \n                                \n                                \n                                        \n                                            view\n                                        \n                                \n                                \n                                        \n                                            viewDidAppear\n                                        \n                                \n                                \n                                        \n                                            viewDidDisappear\n                                        \n                                \n                                \n                                        \n                                            viewWillAppear\n                                        \n                                \n                                \n                                        \n                                            viewWillDisappear\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destroy:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        init\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        init:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        view\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        view:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewDidAppear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewDidAppear:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewDidDisappear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewDidDisappear:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewWillAppear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewWillAppear:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewWillDisappear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewWillDisappear:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { SvelteComponentDev } from 'svelte/internal';\nexport interface Controller {\n  view: () => HTMLElement;\n  init: () => Controller;\n  viewWillAppear: () => void;\n  viewDidAppear: () => void;\n\n  viewWillDisappear: () => void;\n  viewDidDisappear: () => void;\n\n  destroy: () => void;\n}\n\ndeclare type Props = Record;\ninterface IComponentOptions {\n  target: Element;\n  anchor?: Element;\n  props?: Props;\n  context?: Map;\n  hydrate?: boolean;\n  intro?: boolean;\n  $$inline?: boolean;\n}\n\nexport abstract class SVController implements Controller {\n  private comp: SvelteComponentDev;\n  private _view: HTMLElement;\n\n  public view() {\n    return this._view;\n  }\n\n  public init() {\n    this._view = this._view || document.createElement('div');\n    this.viewWillAppear();\n    this.comp = this.initWithComponent(this._view);\n    this.viewDidAppear();\n    return this;\n  }\n\n  abstract initWithComponent(target: Element): SvelteComponentDev;\n\n  abstract viewWillAppear(): void;\n  abstract viewDidAppear(): void;\n\n  abstract viewWillDisappear(): void;\n  abstract viewDidDisappear(): void;\n\n  public destroy() {\n    this.viewWillDisappear();\n    this.comp.$destroy();\n    if (this._view.parentNode) {\n      this._view.parentNode.removeChild(this._view);\n    }\n    this.viewDidDisappear();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IComponentOptions.html":{"url":"interfaces/IComponentOptions.html","title":"interface - IComponentOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IComponentOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            $$inline\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            anchor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            context\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hydrate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            intro\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            props\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $$inline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $$inline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        anchor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anchor:     Element\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Element\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        context:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hydrate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hydrate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intro\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        intro:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        props\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        props:         Props\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Props\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     Element\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Element\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { SvelteComponentDev } from 'svelte/internal';\nexport interface Controller {\n  view: () => HTMLElement;\n  init: () => Controller;\n  viewWillAppear: () => void;\n  viewDidAppear: () => void;\n\n  viewWillDisappear: () => void;\n  viewDidDisappear: () => void;\n\n  destroy: () => void;\n}\n\ndeclare type Props = Record;\ninterface IComponentOptions {\n  target: Element;\n  anchor?: Element;\n  props?: Props;\n  context?: Map;\n  hydrate?: boolean;\n  intro?: boolean;\n  $$inline?: boolean;\n}\n\nexport abstract class SVController implements Controller {\n  private comp: SvelteComponentDev;\n  private _view: HTMLElement;\n\n  public view() {\n    return this._view;\n  }\n\n  public init() {\n    this._view = this._view || document.createElement('div');\n    this.viewWillAppear();\n    this.comp = this.initWithComponent(this._view);\n    this.viewDidAppear();\n    return this;\n  }\n\n  abstract initWithComponent(target: Element): SvelteComponentDev;\n\n  abstract viewWillAppear(): void;\n  abstract viewDidAppear(): void;\n\n  abstract viewWillDisappear(): void;\n  abstract viewDidDisappear(): void;\n\n  public destroy() {\n    this.viewWillDisappear();\n    this.comp.$destroy();\n    if (this._view.parentNode) {\n      this._view.parentNode.removeChild(this._view);\n    }\n    this.viewDidDisappear();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISettings.html":{"url":"interfaces/ISettings.html","title":"interface - ISettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/settings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            check\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import ElectronStore from 'electron-store';\n\ninterface ISettings {\n  check: boolean;\n}\n\nconst settings = new ElectronStore({\n  defaults: {\n    check: false,\n  },\n});\n\nexport default settings;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISplitBoardView.html":{"url":"interfaces/ISplitBoardView.html","title":"interface - ISplitBoardView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISplitBoardView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/type.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cancelForMerge\n                                        \n                                \n                                \n                                        \n                                            direction\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            resizeAt\n                                        \n                                \n                                \n                                        \n                                            setCursor\n                                        \n                                \n                                \n                                        \n                                            splitColumnAt\n                                        \n                                \n                                \n                                        \n                                            splitRowAt\n                                        \n                                \n                                \n                                        \n                                            waitForMergeAtItem\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancelForMerge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelForMerge:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:         directionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         directionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     SplitItemView[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SplitItemView[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizeAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resizeAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setCursor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setCursor:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitColumnAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitColumnAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitRowAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitRowAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        waitForMergeAtItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        waitForMergeAtItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type View from '../view';\nimport type SplitItemView from './split-item.view';\n\nexport enum directionType {\n  'col',\n  'row',\n}\n\nexport interface ISplitBoardView extends View {\n  items: SplitItemView[];\n  direction: directionType;\n  setCursor: (\n    type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize'\n  ) => void;\n  cancelForMerge: () => void;\n  resizeAt: (index: number, start: number, length: number, position: number) => void;\n  waitForMergeAtItem: (index: number, direction: 'w' | 'e' | 'n' | 's') => void;\n  splitColumnAt: (index: number, clientX: number, clientY: number) => void;\n  splitRowAt: (index: number, clientX: number, clientY: number) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Menu.html":{"url":"classes/Menu.html","title":"class - Menu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Menu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                container\n                            \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                menuItems\n                            \n                            \n                                    Private\n                                menuSvelte\n                            \n                            \n                                    Private\n                                    Readonly\n                                meunsWritable\n                            \n                            \n                                    Private\n                                name\n                            \n                            \n                                    Private\n                                    Readonly\n                                nameWritable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMenu\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                registerItem\n                            \n                            \n                                    Public\n                                removeItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: HTMLElement, id: string)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/menu/menu.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuSvelte\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        meunsWritable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : writable([])\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        nameWritable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : writable('')\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(name: string, config: MenuItemConfig[])\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                MenuItemConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerItem(config: MenuItemConfig, index: number, group?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                MenuItemConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItem(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MenuItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import MenuSvelte from './menu.svelte';\nimport type { MenuItemConfig } from './menu-item';\nimport { MenuItem } from './menu-item';\nimport { writable } from 'svelte/store';\n\nexport default class Menu {\n  public readonly container!: HTMLElement;\n  public readonly id!: string;\n  private name!: string;\n  private menuItems!: MenuItem[];\n  private menuSvelte: any;\n  private readonly context = new Map();\n  private readonly meunsWritable = writable([]);\n  private readonly nameWritable = writable('');\n  constructor(container: HTMLElement, id: string) {\n    this.container = container;\n    this.id = id;\n    this.menuItems = [];\n    this.context.set('menus', this.meunsWritable);\n    this.context.set('name', this.nameWritable);\n  }\n\n  public init(name: string, config: MenuItemConfig[]): void {\n    this.name = name;\n    for (const menuItem of config) {\n      this.menuItems.push(new MenuItem(menuItem));\n    }\n    return this.createMenu();\n  }\n\n  public destroy(): void {\n    while (this.container.firstChild) {\n      this.container.removeChild(this.container.firstChild);\n    }\n    return;\n  }\n\n  public registerItem(config: MenuItemConfig, index: number, group?: string): void {\n    this.menuItems.splice(index, 0, new MenuItem(config));\n    this.meunsWritable.set([...this.menuItems]);\n  }\n\n  public removeItem(index: number): MenuItem {\n    const menuItem = this.menuItems[index];\n    this.meunsWritable.set((this.menuItems = this.menuItems.filter((_, i) => index !== i)));\n    return menuItem;\n  }\n\n  private createMenu(): void {\n    this.menuSvelte = new MenuSvelte({\n      target: this.container,\n      context: this.context,\n    });\n    this.nameWritable.set(this.name);\n    this.meunsWritable.set(this.menuItems);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuGroupService.html":{"url":"classes/MenuGroupService.html","title":"class - MenuGroupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuGroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/menu-group-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                meuns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMenuInsatance\n                            \n                            \n                                    Public\n                                initContainer\n                            \n                            \n                                    Public\n                                removeMenuInstances\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/workbench/services/menu-group-service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/menu-group-service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        meuns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/menu-group-service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getMenuInsatance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenuInsatance()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/menu-group-service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Menu\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initContainer\n                        \n                    \n                \n            \n            \n                \n                    \n                    initContainer(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/menu-group-service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeMenuInstances\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeMenuInstances(menu: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/menu-group-service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\nimport { Menu } from '../desktop/menu';\n\n@injectable()\nexport class MenuGroupService {\n  private container!: HTMLElement;\n  private meuns!: Menu[];\n  constructor() {\n    this.meuns = [];\n  }\n\n  public initContainer(container: HTMLElement): void {\n    if (this.container) {\n      return;\n    }\n    this.container = container;\n  }\n\n  public getMenuInsatance(): Menu {\n    const menuContainer = document.createElement('div');\n    const id = Date.now() + '' + this.meuns.length;\n    this.container.append(menuContainer);\n    const menu = new Menu(menuContainer, id);\n    this.meuns.push(menu);\n    return menu;\n  }\n\n  public removeMenuInstances(menu: Menu): void {\n    this.container.removeChild(menu.container);\n    this.meuns = this.meuns.filter((item) => item.id === menu.id);\n    this.container.removeChild(menu.container);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItem.html":{"url":"classes/MenuItem.html","title":"class - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu-item.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                callback\n                            \n                            \n                                    Private\n                                children\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                title\n                            \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MenuItemConfig)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/menu/menu-item.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MenuItemConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        callback\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuCommonFunction\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItemType\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { uuid } from '../utils';\n/* eslint-disable no-shadow */\nexport enum MenuItemType {\n  group,\n  item,\n}\n\nexport type MenuCommonFunction = (menu: MenuItem, context: any) => void;\n\nexport interface MenuItemConfig {\n  title: string;\n  type: MenuItemType;\n  callback: MenuCommonFunction;\n  command?: string;\n}\n\nexport class MenuItem {\n  public readonly id!: string;\n  private title!: string;\n  private type!: MenuItemType;\n  private callback: MenuCommonFunction;\n  private children!: MenuItem[];\n  constructor(config: MenuItemConfig) {\n    this.id = uuid();\n    const { title, type, callback } = config;\n    if (type === MenuItemType.group) {\n      this.children = [];\n    }\n    this.title = title;\n    this.type = type;\n    this.callback = callback;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemConfig.html":{"url":"interfaces/MenuItemConfig.html","title":"interface - MenuItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu-item.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            command\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         MenuCommonFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuCommonFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         MenuItemType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItemType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { uuid } from '../utils';\n/* eslint-disable no-shadow */\nexport enum MenuItemType {\n  group,\n  item,\n}\n\nexport type MenuCommonFunction = (menu: MenuItem, context: any) => void;\n\nexport interface MenuItemConfig {\n  title: string;\n  type: MenuItemType;\n  callback: MenuCommonFunction;\n  command?: string;\n}\n\nexport class MenuItem {\n  public readonly id!: string;\n  private title!: string;\n  private type!: MenuItemType;\n  private callback: MenuCommonFunction;\n  private children!: MenuItem[];\n  constructor(config: MenuItemConfig) {\n    this.id = uuid();\n    const { title, type, callback } = config;\n    if (type === MenuItemType.group) {\n      this.children = [];\n    }\n    this.title = title;\n    this.type = type;\n    this.callback = callback;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceExplorer.html":{"url":"classes/ResourceExplorer.html","title":"class - ResourceExplorer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceExplorer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/resource-explorer/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SVController\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewWillDisappear\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SVController\n\n                            \n                        \n                    \n                        \n                                Defined in         SVController:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SVController\n\n                            \n                        \n                    \n                        \n                                Defined in         SVController:26\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     this\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './resource-explorer.svelte';\nimport { SVController } from '@cosmic/core/parts';\n\nexport class ResourceExplorer extends SVController {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n\n  viewWillAppear(): void {\n    /** to be completed */\n  }\n  viewDidAppear(): void {\n    /** to be completed */\n  }\n\n  viewWillDisappear(): void {\n    /** to be completed */\n  }\n  viewDidDisappear(): void {\n    /** to be completed */\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SVController.html":{"url":"classes/SVController.html","title":"class - SVController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SVController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/controller.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Controller\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Abstract\n                                initWithComponent\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                    Abstract\n                                viewDidAppear\n                            \n                            \n                                    Abstract\n                                viewDidDisappear\n                            \n                            \n                                    Abstract\n                                viewWillAppear\n                            \n                            \n                                    Abstract\n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/controller.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/controller.ts:26\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     this\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    initWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SvelteComponentDev\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \n                    \n                    viewDidAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \n                    \n                    viewDidDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \n                    \n                    viewWillAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \n                    \n                    viewWillDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { SvelteComponentDev } from 'svelte/internal';\nexport interface Controller {\n  view: () => HTMLElement;\n  init: () => Controller;\n  viewWillAppear: () => void;\n  viewDidAppear: () => void;\n\n  viewWillDisappear: () => void;\n  viewDidDisappear: () => void;\n\n  destroy: () => void;\n}\n\ndeclare type Props = Record;\ninterface IComponentOptions {\n  target: Element;\n  anchor?: Element;\n  props?: Props;\n  context?: Map;\n  hydrate?: boolean;\n  intro?: boolean;\n  $$inline?: boolean;\n}\n\nexport abstract class SVController implements Controller {\n  private comp: SvelteComponentDev;\n  private _view: HTMLElement;\n\n  public view() {\n    return this._view;\n  }\n\n  public init() {\n    this._view = this._view || document.createElement('div');\n    this.viewWillAppear();\n    this.comp = this.initWithComponent(this._view);\n    this.viewDidAppear();\n    return this;\n  }\n\n  abstract initWithComponent(target: Element): SvelteComponentDev;\n\n  abstract viewWillAppear(): void;\n  abstract viewDidAppear(): void;\n\n  abstract viewWillDisappear(): void;\n  abstract viewDidDisappear(): void;\n\n  public destroy() {\n    this.viewWillDisappear();\n    this.comp.$destroy();\n    if (this._view.parentNode) {\n      this._view.parentNode.removeChild(this._view);\n    }\n    this.viewDidDisappear();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardController.html":{"url":"classes/SplitBoardController.html","title":"class - SplitBoardController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeId\n                            \n                            \n                                    Private\n                                expandActive\n                            \n                            \n                                    Private\n                                expandLeaveHandler\n                            \n                            \n                                    Private\n                                expandMouseUpHandler\n                            \n                            \n                                    Private\n                                expandMoveHandler\n                            \n                            \n                                    Private\n                                expandType\n                            \n                            \n                                    Private\n                                startX\n                            \n                            \n                                    Private\n                                startY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeExpand\n                            \n                            \n                                    Public\n                                checkExpandState\n                            \n                            \n                                    Private\n                                liveResize\n                            \n                            \n                                    Public\n                                onMouseDown\n                            \n                            \n                                    Public\n                                setActiveState\n                            \n                            \n                                    Private\n                                unactiveExpand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(view: ISplitBoardView)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        view\n                                                  \n                                                        \n                                                                        ISplitBoardView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandLeaveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMouseUpHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMoveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        activeExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    activeExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkExpandState\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkExpandState(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        liveResize\n                        \n                    \n                \n            \n            \n                \n                    \n                    liveResize(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onMouseDown\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseDown(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setActiveState\n                        \n                    \n                \n            \n            \n                \n                    \n                    setActiveState(index: number, startX: number, startY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        unactiveExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    unactiveExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { directionType } from './type';\nimport type { ISplitBoardView } from './type';\n\nexport default class SplitBoardController {\n  private expandMoveHandler!: (event: MouseEvent) => void;\n  private expandLeaveHandler!: (event: MouseEvent) => void;\n  private expandMouseUpHandler!: (event: MouseEvent) => void;\n\n  private startX = 0;\n  private startY = 0;\n  private activeId = -1;\n\n  private expandActive = false;\n  private expandType = 0; // 是否超过偏移值 0 / 1 expand hor | 2 expand ver | 3 merge hor | 4 merge ver\n\n  constructor(private view: ISplitBoardView) {\n    this.expandMoveHandler = (event: MouseEvent) => {\n      this.liveResize(event.clientX, event.clientY);\n      this.checkExpandState(event.clientX, event.clientY);\n    };\n    this.expandLeaveHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.expandMouseUpHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.view.root.addEventListener('mousedown', (event: MouseEvent) => {\n      this.onMouseDown(event);\n    });\n  }\n  public onMouseDown(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    let index = -1;\n    this.view.items.forEach((item, i) => {\n      if (target && item.root == target.parentElement && target.classList.contains('split-expand')) index = i;\n    });\n    if (index === -1) {\n      return;\n    }\n    if (index > -1) {\n      this.setActiveState(index, event.clientX, event.clientY);\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  public setActiveState(index: number, startX: number, startY: number) {\n    // 锚点mousedown\n    this.startX = startX;\n    this.startY = startY;\n    this.activeExpand();\n    this.activeId = index;\n  }\n  private activeExpand() {\n    this.view.root.addEventListener('mousemove', this.expandMoveHandler);\n    this.view.root.addEventListener('mouseleave', this.expandLeaveHandler);\n    this.view.root.addEventListener('mouseup', this.expandMouseUpHandler);\n    this.expandActive = true;\n    this.expandType = 0;\n    this.view.setCursor('crosshair');\n  }\n  private unactiveExpand() {\n    if (this.expandActive) {\n      this.view.root.removeEventListener('mousemove', this.expandMoveHandler);\n      this.view.root.removeEventListener('mouseleave', this.expandLeaveHandler);\n      this.view.root.removeEventListener('mouseup', this.expandMouseUpHandler);\n      this.view.cancelForMerge();\n      this.expandActive = false;\n      this.expandType = 0;\n      this.view.setCursor('');\n    }\n  }\n  private liveResize(clientX: number, clientY: number) {\n    const item = this.view.items[this.activeId];\n    if (this.expandType == 1 && this.view.direction == directionType.col) {\n      // horizontal expand column\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n    } else if (this.expandType == 2 && this.view.direction == directionType.row) {\n      // vertical expand row\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n    }\n  }\n  public checkExpandState(clientX: number, clientY: number) {\n    const offsetX = this.startX - clientX;\n    const offsetY = this.startY - clientY;\n    /** expand mode */\n    if (this.expandType == 0 && offsetX > 0 && offsetY > 0 && (offsetX > 5 || offsetY > 5)) {\n      if (offsetX > offsetY) {\n        this.view.setCursor('col-resize');\n      } else {\n        this.view.setCursor('row-resize');\n      }\n    }\n    /** merge mode */\n    if (offsetX  5) {\n      this.view.setCursor('w-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'w');\n      return;\n    }\n\n    if (offsetY  5) {\n      this.view.setCursor('n-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'n');\n      return;\n    }\n\n    if (this.expandType) return;\n    /** do expand */\n    if (offsetX > 30) {\n      this.expandType = 1;\n      this.view.setCursor('col-resize');\n      this.view.splitColumnAt(this.activeId, clientX, clientY);\n      return;\n    }\n    if (offsetY > 30) {\n      this.expandType = 2;\n      this.view.setCursor('row-resize');\n      this.view.splitRowAt(this.activeId, clientX, clientY);\n    }\n    if (\n      (this.expandType == 1 && this.view.direction == directionType.row) ||\n      (this.expandType == 2 && this.view.direction == directionType.col)\n    ) {\n      this.unactiveExpand();\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardView.html":{"url":"classes/SplitBoardView.html","title":"class - SplitBoardView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n            \n                Implements\n            \n            \n                            ISplitBoardView\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _waitForMergeItem\n                            \n                            \n                                    Public\n                                controller\n                            \n                            \n                                    Public\n                                direction\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Private\n                                splitInstance\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addColumn\n                            \n                            \n                                    Public\n                                addRow\n                            \n                            \n                                    Public\n                                applySplit\n                            \n                            \n                                    Public\n                                cancelForMerge\n                            \n                            \n                                    Private\n                                checkDirection\n                            \n                            \n                                    Private\n                                destorySplit\n                            \n                            \n                                    Private\n                                getExpandResizes\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Public\n                                insertItemAt\n                            \n                            \n                                    Public\n                                resizeAt\n                            \n                            \n                                    Public\n                                setCursor\n                            \n                            \n                                    Public\n                                splitColumnAt\n                            \n                            \n                                    Public\n                                splitRowAt\n                            \n                            \n                                    Private\n                                startToExpand\n                            \n                            \n                                    Public\n                                waitForMergeAtItem\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.view.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _waitForMergeItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitItemView | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        controller\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SplitBoardController\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        direction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         directionType\n\n                    \n                \n                \n                    \n                        Default value : directionType.col\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitItemView[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        splitInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Split.Instance | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addColumn\n                        \n                    \n                \n            \n            \n                \n                    \n                    addColumn(item: SplitItemView)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addRow\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRow(item: SplitItemView)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applySplit\n                        \n                    \n                \n            \n            \n                \n                    \n                    applySplit(direction: \"vertical\" | \"horizontal\", sizes?: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                                \"vertical\" | \"horizontal\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'horizontal'\n                                    \n\n                                \n                                \n                                    sizes\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkDirection\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkDirection(type: directionType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                directionType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        destorySplit\n                        \n                    \n                \n            \n            \n                \n                    \n                    destorySplit()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getExpandResizes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getExpandResizes(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        insertItemAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertItemAt(item: SplitItemView, pos?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pos\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resizeAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    resizeAt(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:158\n                \n            \n\n\n            \n                \n                    live resize after expanded\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCursor\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCursor(type: string | \"row-resize\" | \"col-resize\" | \"crosshair\" | \"e-resize\" | \"w-resize\" | \"s-resize\" | \"n-resize\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string | \"row-resize\" | \"col-resize\" | \"crosshair\" | \"e-resize\" | \"w-resize\" | \"s-resize\" | \"n-resize\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        splitColumnAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    splitColumnAt(index: number, clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        splitRowAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    splitRowAt(index: number, clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        startToExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    startToExpand(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMergeAtItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMergeAtItem(index: number, direction: \"w\" | \"e\" | \"n\" | \"s\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"n\" | \"s\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view';\nimport { injectable, inject } from 'inversify';\nimport SplitItemView from './split-item.view';\nimport SplitBoardController from './split-board.controller';\nimport Split from 'split.js';\nimport type { ISplitBoardView } from './type';\nimport { directionType } from './type';\nexport const lowBoardRoot = Symbol.for('FlowTableRoot');\n\n@injectable()\n/** Split Board View */\nexport default class SplitBoardView extends View implements ISplitBoardView {\n  public items: SplitItemView[] = [];\n  public direction: directionType = directionType.col;\n  private splitInstance: Split.Instance | null = null;\n  public controller: SplitBoardController;\n  private _waitForMergeItem: SplitItemView | null = null;\n  constructor() {\n    super();\n    this.init();\n    this.controller = new SplitBoardController(this);\n  }\n  private init() {\n    this.root.classList.add('split-board', 'flex', 'flex-nowrap', 'overflow-hidden');\n    // this.root.style.margin = '0 4px';\n  }\n  public addRow(item: SplitItemView): void {\n    if (!this.checkDirection(directionType.row)) {\n      console.warn('direction is not right when added row', item);\n      return;\n    }\n    this.direction = directionType.row;\n    this.root.classList.remove('flex-row');\n    this.root.classList.add('flex-col');\n    this.insertItemAt(item);\n    this.applySplit('vertical');\n  }\n  public addColumn(item: SplitItemView): void {\n    if (!this.checkDirection(directionType.col)) {\n      console.warn('direction is not right when added col', item);\n      return;\n    }\n    this.direction = directionType.col;\n    this.root.classList.remove('flex-col');\n    this.root.classList.add('flex-row');\n    this.insertItemAt(item);\n    this.applySplit();\n  }\n  public insertItemAt(item: SplitItemView, pos?: number): void {\n    pos = pos === undefined ? this.items.length : pos;\n    this.items.splice(pos, 0, item);\n    if (pos == 0) {\n      this.root.appendChild(item.root);\n    } else {\n      this.items[pos - 1].root.after(item.root);\n    }\n  }\n\n  public setCursor(\n    type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize' = '',\n  ): void {\n    this.root.style.cursor = type;\n  }\n  public waitForMergeAtItem(index: number, direction: 'w' | 'e' | 'n' | 's'): void {\n    if (this._waitForMergeItem == this.items[index]) {\n      return;\n    }\n    this.cancelForMerge();\n    if (this.items[index]) {\n      this.items[index].waitForMerge(direction);\n      this._waitForMergeItem = this.items[index];\n    }\n  }\n  public cancelForMerge(): void {\n    if (this._waitForMergeItem) {\n      this._waitForMergeItem.cancelWaitForMerge();\n      this._waitForMergeItem = null;\n    }\n  }\n  private checkDirection(type: directionType) {\n    if (this.items.length > 1 && this.direction !== type) {\n      return false;\n    }\n    return true;\n  }\n  // public removeColumn(item: SplitItemView) {\n  //     // do sth.\n  // }\n  // public removeRow(item: SplitItemView) {\n  //     // do sth.\n  // }\n  public applySplit(direction: 'vertical' | 'horizontal' = 'horizontal', sizes?: number[]): void {\n    this.destorySplit();\n    this.splitInstance = Split(Array.prototype.slice.call(this.root.children), {\n      sizes,\n      // sizes: [30, 70],\n      minSize: 15,\n      direction,\n      snapOffset: 0,\n      gutterStyle: () => (direction == 'vertical' ? { height: '3px' } : { width: '3px' }),\n    });\n  }\n\n  private destorySplit() {\n    this.splitInstance && this.splitInstance.destroy();\n    this.splitInstance = null;\n  }\n  // 切分列\n  public splitColumnAt(index: number, clientX: number, clientY: number): void {\n    const item = this.items[index];\n    if (!this.checkDirection(directionType.col)) {\n      // 列切分行\n      const newBoard = new SplitBoardView().setFlow('1');\n      const contentView = item.contentView;\n      item.replaceContent(newBoard.root);\n      const newItemView = new SplitItemView().setContent(contentView);\n      const newEmptyView = new SplitItemView().setContent(document.createElement('div'));\n      item.hideExpandButton(); // 不再使用该item的拉伸按钮\n      newBoard.addColumn(newItemView);\n      // newBoard.addColumn(newEmptyView);\n      newBoard.controller.setActiveState(0, clientX, clientY);\n      newBoard.controller.checkExpandState(clientX, clientY);\n      return;\n    }\n    // 列扩展列\n    this.startToExpand(index, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n  }\n  // 切分行\n  public splitRowAt(index: number, clientX: number, clientY: number): void {\n    const item = this.items[index];\n    if (!this.checkDirection(directionType.row)) {\n      // 行切分列\n      const newBoard = new SplitBoardView().setFlow('1');\n      const contentView = item.contentView;\n      item.replaceContent(newBoard.root);\n      const newItemView = new SplitItemView().setContent(contentView);\n      const newEmptyView = new SplitItemView().setContent(document.createElement('div'));\n      item.hideExpandButton(); // 不再使用该item的拉伸按钮\n      newBoard.addRow(newItemView);\n      // newBoard.addRow(newEmptyView);\n      newBoard.controller.setActiveState(0, clientX, clientY);\n      newBoard.controller.checkExpandState(clientX, clientY);\n      return;\n    }\n    // 行切分行\n    this.startToExpand(index, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n  }\n\n  private startToExpand(index: number, start: number, length: number, position: number) {\n    const newSizes = this.getExpandResizes(index, start, length, position);\n    const newItem = new SplitItemView().setContent(document.createElement('div'));\n    this.destorySplit();\n    this.insertItemAt(newItem, index + 1);\n    this.applySplit(this.direction == directionType.col ? 'horizontal' : 'vertical', newSizes);\n  }\n\n  /** live resize after expanded  */\n  public resizeAt(index: number, start: number, length: number, position: number): void {\n    if (!this.splitInstance) return;\n    // const item = this.items[index];\n    let max = length;\n    if (this.items[index + 1]) {\n      max += this.items[index + 1].root[this.direction == directionType.col ? 'clientWidth' : 'clientHeight'];\n    }\n    const r = (position - start) / max;\n    if (position - start  {\n      sum += size;\n      if (i == index || i == index + 1) return;\n      other += size;\n    });\n    let newSize = 0;\n    const newSizes: number[] = [];\n    this.splitInstance.getSizes().forEach((size, i) => {\n      if (index == i) {\n        newSize = (sum - other) * r;\n        newSizes.push(newSize);\n      } else if (index + 1 == i) {\n        newSizes.push(sum - other - newSize);\n      } else if (index !== i) {\n        newSizes.push(size);\n      }\n    });\n    this.splitInstance.setSizes(newSizes);\n  }\n\n  private getExpandResizes(index: number, start: number, length: number, position: number) {\n    const r = (position - start) / length;\n    if (r = 1) return undefined;\n    const newSizes: number[] = [];\n    this.splitInstance &&\n      this.splitInstance.getSizes().forEach((size, i) => {\n        if (index !== i) {\n          newSizes.push(size);\n          return;\n        }\n        const w = size * r;\n        newSizes.push(w, size - w);\n      });\n    return newSizes;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitItemView.html":{"url":"classes/SplitItemView.html","title":"class - SplitItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-item.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SplitExpand\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:67\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view';\nimport SplitExpand from './split-expand.svelte';\n\nenum directionStyles {\n  'w' = 'merge-w',\n  'e' = 'merge-e',\n  's' = 'merge-s',\n  'n' = 'merge-n',\n}\n\nexport default class SplitItemView extends View {\n  private _growClassName = '';\n  private _shrinkClassName = '';\n  private _bgColorClassName: string[] = ['bg-cgray-100', 'dark:bg-cgray-800'];\n\n  public contentView!: HTMLElement;\n  private expand!: SplitExpand;\n\n  constructor() {\n    super();\n    this.addExpandButton();\n    this.setDefaultClass();\n  }\n\n  public setContent(contentView: HTMLElement): SplitItemView {\n    this.contentView = contentView;\n    this.root.classList.add('split-item', 'flex');\n    contentView.classList.add('flex', 'flex-1');\n    return this.prepend(contentView);\n  }\n\n  public replaceContent(contentView: HTMLElement): SplitItemView {\n    this.root.replaceChild(contentView, this.contentView);\n    this.contentView = contentView;\n    contentView.classList.add('flex', 'flex-1');\n    return this;\n  }\n\n  public setGrow(className = 'flex-grow'): void {\n    this.root.classList.remove(this._shrinkClassName);\n    this._shrinkClassName = '';\n    this._growClassName = className;\n    this.root.classList.add(this._growClassName);\n  }\n\n  public setShrink(className = 'flex-shrink'): void {\n    this.root.classList.remove(this._growClassName);\n    this._growClassName = '';\n    this._shrinkClassName = className;\n    this.root.classList.add(this._shrinkClassName);\n  }\n\n  public isShrink(): boolean {\n    return !!this._growClassName;\n  }\n\n  private setDefaultClass() {\n    this.root.classList.add('flex-grow', 'rounded-xl');\n    this.root.classList.add('relative');\n    this.root.classList.add(...this._bgColorClassName);\n  }\n\n  private addExpandButton() {\n    this.expand = new SplitExpand({ target: this.root });\n  }\n  /** To hide expand button */\n  public hideExpandButton(): void {\n    this.expand.expandHidden = true;\n  }\n\n  public waitForMerge(direction: 'w' | 'e' | 's' | 'n'): void {\n    this.cancelWaitForMerge();\n    this.root.classList.add('wait-for-merge');\n    this.expand.mergeDirection = directionStyles[direction];\n  }\n\n  public cancelWaitForMerge(): void {\n    this.root.classList.remove('wait-for-merge');\n    this.expand.mergeDirection = '';\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/View.html":{"url":"classes/View.html","title":"class - View","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  View\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/view.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root?: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/view.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/view.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        type FlowValue = '1' | 'auto' | 'initial' | 'none';\n\nexport default class View {\n  public root: HTMLElement;\n  constructor(root?: HTMLElement) {\n    this.root = root || document.createElement('div');\n  }\n  setFlow(type: FlowValue) {\n    this.root.classList.remove('flex-1', 'flex-auto', 'flex-initial', 'flex-none');\n    this.root.classList.add(`flex-${type}`);\n    return this;\n  }\n  append(child: HTMLElement) {\n    this.root.appendChild(child);\n    return this;\n  }\n  prepend(...childs: HTMLElement[]) {\n    this.root.prepend(...childs);\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeightMap.html":{"url":"interfaces/WeightMap.html","title":"interface - WeightMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WeightMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [index: string]:        number\n\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:11\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/classBuilder.html":{"url":"classes/classBuilder.html","title":"class - classBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  classBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                orderedConfigs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addConfig\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Private\n                                insertConfig\n                            \n                            \n                                    Private\n                                normalizeWeight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configs: stateConfig[], weightMap: WeightMap)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                        stateConfig[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weightMap\n                                                  \n                                                        \n                                                                        WeightMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orderedConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         stateConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/class-builder.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    addConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        normalizeWeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    normalizeWeight(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         stateConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/classConfig.html":{"url":"interfaces/classConfig.html","title":"interface - classConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  classConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            createWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            mainWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            notification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            interface\n            ISettings\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            variable\n            settings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            class\n            classBuilder\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            classConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            stateConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            WeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            variable\n            defaultWeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.controller.ts\n            \n            class\n            SplitBoardController\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            class\n            SplitBoardView\n            \n                3 %\n                (1/26)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            variable\n            lowBoardRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-item.view.ts\n            \n            class\n            SplitItemView\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/core/browser/layout/type.ts\n            \n            interface\n            ISplitBoardView\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            function\n            makeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BgColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BorderColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlAccentColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlBackgroundColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlDisabledColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlForbiddenColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlHighlightColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            FourthBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            GridBackgroundColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            LabelColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemBlueColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemGrayColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemOrangeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemPinkColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemRedColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemYellowColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TextFieldBackground\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/view.ts\n            \n            class\n            View\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/color-ref.ts\n            \n            class\n            ColorRef\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/parts/ioc/inject.ts\n            \n            function\n            inject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/modules/controller.ts\n            \n            class\n            SVController\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/core/parts/modules/controller.ts\n            \n            interface\n            Controller\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/core/parts/modules/controller.ts\n            \n            interface\n            IComponentOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/index.ts\n            \n            class\n            ResourceExplorer\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/workbench/desktop/app.ts\n            \n            class\n            App\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/workbench/desktop/base-menu/base-menu.ts\n            \n            class\n            BaseMenu\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/workbench/desktop/base-menu/config.ts\n            \n            variable\n            applicationMenus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/desktop/lib.ts\n            \n            variable\n            a\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/desktop/main.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu-item.ts\n            \n            class\n            MenuItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu-item.ts\n            \n            interface\n            MenuItemConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu.ts\n            \n            class\n            Menu\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/workbench/desktop/utils/utils.ts\n            \n            variable\n            uuid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/services/appearance-service.ts\n            \n            class\n            AppearanceService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/workbench/services/menu-group-service.ts\n            \n            class\n            MenuGroupService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @types/color : ^3.0.1\n        \n            color : ^3.1.3\n        \n            electron-log : ^4.3.1\n        \n            electron-store : ^7.0.2\n        \n            electron-updater : ^4.3.5\n        \n            eventemitter2 : ^6.4.4\n        \n            inversify : ^5.1.1\n        \n            keycode : ^2.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            smelte : ^1.1.5\n        \n            split.js : ^1.6.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppearanceType   (src/.../appearance.ts)\n                        \n                        \n                            directionStyles   (src/.../split-item.view.ts)\n                        \n                        \n                            directionType   (src/.../type.ts)\n                        \n                        \n                            MenuItemType   (src/.../menu-item.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/common/appearance.ts\n    \n        \n            \n                \n                    \n                        \n                        AppearanceType\n                    \n                \n                    \n                        \n                            模式类型\n\n                        \n                    \n                        \n                            \n                                 any\n                            \n                        \n                        \n                            \n                                 light\n                            \n                        \n                        \n                            \n                                 dark\n                            \n                        \n            \n        \n\n    src/core/browser/layout/split-item.view.ts\n    \n        \n            \n                \n                    \n                        \n                        directionStyles\n                    \n                \n                        \n                            \n                                 w\n                            \n                        \n                        \n                            \n                                Value : merge-w\n                            \n                        \n                        \n                            \n                                 e\n                            \n                        \n                        \n                            \n                                Value : merge-e\n                            \n                        \n                        \n                            \n                                 s\n                            \n                        \n                        \n                            \n                                Value : merge-s\n                            \n                        \n                        \n                            \n                                 n\n                            \n                        \n                        \n                            \n                                Value : merge-n\n                            \n                        \n            \n        \n\n    src/core/browser/layout/type.ts\n    \n        \n            \n                \n                    \n                        \n                        directionType\n                    \n                \n                        \n                            \n                                 col\n                            \n                        \n                        \n                            \n                                 row\n                            \n                        \n            \n        \n\n    src/workbench/desktop/menu/menu-item.ts\n    \n        \n            \n                \n                    \n                        \n                        MenuItemType\n                    \n                \n                        \n                            \n                                 group\n                            \n                        \n                        \n                            \n                                 item\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            inject   (src/.../inject.ts)\n                        \n                        \n                            makeColor   (src/.../ui-color.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/parts/ioc/inject.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inject\n                        \n                    \n                \n            \n            \n                \ninject(token)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        makeColor\n                        \n                    \n                \n            \n            \n                \nmakeColor(anyColorHex, lightColorHex?, darkColorHex?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anyColorHex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    darkColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCosmic Design\n\n\n\n\n\n\n🚧 ing...\n\nThe Repository\nCosmic design is a concrete practice of D2R.\nThis repository is where we develop it together with the community. Not only do we work on code and issues here, we also publish our roadmap , development guide. This source code is available to everyone under the standard MIT license.\nAbout Cosmic Design\n\n🚧 ing...\n\nHow it works\nThe template required a minimum dependencies. Only Vite is used for building, nothing more.\nProject Structure\nThe structure of this template is very similar to the structure of a monorepo.\nThe entire source code of the program is divided into three modules (packages) that are bundled each independently:\n\nsrc/core\nInclude common dependencies, such as components, utils, ipc.\nsrc/app\nElectron main script.\nsrc/workbench\nElectron web page.\n\nCosmic Components\n\nComponents StoryBook\nsrc/core/components\n\nCompile App\nNext step is run packaging and compilation a ready for distribution Electron app for macOS, Windows and Linux with \"auto update\" support out of the box.\nTo do this, using the electron-builder:\n\nIn npm script compile: This script is configured to compile the application as quickly as possible. It is not ready for distribution, is compiled only for the current platform and is used for debugging.\nIn GitHub Action: The application is compiled for any platform and ready-to-distribute files are automatically added to the draft GitHub release.\n\nContribution\nSee Wiki Contributing\n\nSource Code Organization\nUser Interface\nColor Set\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 qiansc\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/stateConfig.html":{"url":"interfaces/stateConfig.html","title":"interface - stateConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  stateConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:         classConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         classConfig[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationMenusType   (src/.../config.ts)\n                        \n                        \n                            FlowValue   (src/.../view.ts)\n                        \n                        \n                            MenuCommonFunction   (src/.../menu-item.ts)\n                        \n                        \n                            Props   (src/.../controller.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/base-menu/config.ts\n    \n    \n        \n            \n                \n                    \n                    ApplicationMenusType\n                \n            \n            \n                \n                            literal type\n\n                \n            \n        \n    \n    src/core/browser/view.ts\n    \n    \n        \n            \n                \n                    \n                    FlowValue\n                \n            \n            \n                \n                            \"1\" | \"auto\" | \"initial\" | \"none\"\n\n                \n            \n        \n    \n    src/workbench/desktop/menu/menu-item.ts\n    \n    \n        \n            \n                \n                    \n                    MenuCommonFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/core/parts/modules/controller.ts\n    \n    \n        \n            \n                \n                    \n                    Props\n                \n            \n            \n                \n                            Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            a   (src/.../lib.ts)\n                        \n                        \n                            app   (src/.../main.ts)\n                        \n                        \n                            applicationMenus   (src/.../config.ts)\n                        \n                        \n                            BgColor   (src/.../ui-color.ts)\n                        \n                        \n                            BorderColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlAccentColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlDisabledColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlForbiddenColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlHighlightColor   (src/.../ui-color.ts)\n                        \n                        \n                            createWindow   (src/.../index.ts)\n                        \n                        \n                            defaultWeightMap   (src/.../class-builder.ts)\n                        \n                        \n                            FourthBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            GridBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            isProd   (src/.../index.ts)\n                        \n                        \n                            isProd   (src/.../logger.ts)\n                        \n                        \n                            LabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            logger   (src/.../logger.ts)\n                        \n                        \n                            lowBoardRoot   (src/.../split-board.view.ts)\n                        \n                        \n                            mainWindow   (src/.../index.ts)\n                        \n                        \n                            notification   (src/.../index.ts)\n                        \n                        \n                            SecondaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            SecondaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            settings   (src/.../settings.ts)\n                        \n                        \n                            SystemBlueColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemGrayColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemOrangeColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemPinkColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemRedColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemYellowColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            TextFieldBackground   (src/.../ui-color.ts)\n                        \n                        \n                            uuid   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/lib.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        a\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n\n\n        \n    \n\n    src/workbench/desktop/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new App(document.body)\n                    \n                \n\n\n        \n    \n\n    src/workbench/desktop/base-menu/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applicationMenus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationMenusType[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    title: '文件',\n    items: [\n      {\n        title: '打开文件',\n        type: MenuItemType.group,\n        /* eslint no-console: \"off\" */\n        callback: (item, context) => console.log(item, context),\n      },\n      {\n        title: '保存',\n        type: MenuItemType.group,\n        /* eslint no-console: \"off\" */\n        callback: (item, context) => console.log(item, context),\n      },\n\n      {\n        title: '另存为',\n        type: MenuItemType.group,\n        /* eslint no-console: \"off\" */\n        callback: (item, context) => console.log(item, context),\n      },\n    ],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#E0E0E0', '#E0E0E0', '#1F1F1F')\n                    \n                \n\n            \n                \n                    三级背景色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BorderColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D9D9D9', '#D9D9D9', '#D9D9D9')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlAccentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#5580c0', '#5580c0', '#5580c0')\n                    \n                \n\n            \n                \n                    高亮色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#FFFFFF', '#5D5F61')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlDisabledColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F9F9F9', '#F9F9F9', '#464749')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlForbiddenColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlHighlightColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#ffae2b', '#ffae2b', '#ffae2b')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FourthBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#BABABA', '#BABABA', '#454545')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GridBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F2F2F2', '#F2F2F2', '#2E2F30')\n                    \n                \n\n            \n                \n                    组件色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#E0E0E0')\n                    \n                \n\n            \n                \n                    三级标签色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D7D7D7', '#D7D7D7', '#272728')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#808080')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemBlueColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#729cd4', '#729cd4', '#729cd4')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemGrayColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c0c0c1', '#c0c0c1', '#c0c0c1')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemOrangeColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemPinkColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c4666f', '#c4666f', '#c4666f')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemRedColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemYellowColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n            \n                \n                    辅助色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#C6C6C6', '#C6C6C6', '#393939')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#3F3F3F', '#3F3F3F', '#3F3F3F')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TextFieldBackground\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#F2F2F2', '#454545')\n                    \n                \n\n\n        \n    \n\n    src/app/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createWindow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  mainWindow = new BrowserWindow({\n    width: 900,\n    height: 680,\n    webPreferences: {\n      devTools: isProd ? false : true,\n      contextIsolation: true,\n      enableRemoteModule: false,\n      // preload: join(__dirname, 'preload.js'),\n    },\n  });\n\n  const url =\n    // process.env.NODE_ENV === \"production\"\n    isProd\n      ? // in production, use the statically build version of our application\n        `file://${join(__dirname, 'dist/workbench/desktop/', 'index.html')}`\n      : // in dev, target the host and port of the local rollup web server\n        'http://localhost:5000/workbench/desktop/';\n\n  mainWindow.loadURL(url).catch((err: any) => {\n    logger.error(JSON.stringify(err));\n    app.quit();\n  });\n\n  if (!isProd) mainWindow.webContents.openDevTools();\n\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BrowserWindow | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Notification | null\n\n                    \n                \n\n\n        \n    \n\n    src/core/browser/class-builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultWeightMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WeightMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/utils/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log\n                    \n                \n\n\n        \n    \n\n    src/core/browser/layout/split-board.view.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lowBoardRoot\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('FlowTableRoot')\n                    \n                \n\n\n        \n    \n\n    src/app/utils/settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ElectronStore({\n  defaults: {\n    check: false,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/workbench/desktop/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): string => {\n  const s: string[] | number[] = [];\n  const hexDigits = '0123456789abcdef';\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
