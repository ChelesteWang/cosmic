var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/App.html",[0,0.107,1,1.978]],["body/classes/App.html",[0,0.071,1,2.004,2,0.375,3,0.231,4,0.205,5,0.205,6,1.861,7,0.111,8,0.391,9,0.802,10,3.498,11,2.916,12,0.849,13,2.193,14,4.56,15,4.56,16,4.56,17,4.56,18,4.56,19,4.56,20,3.37,21,3.37,22,4.56,23,4.56,24,3.37,25,4.56,26,0.749,27,1.861,28,2.11,29,1.331,30,3.37,31,0.986,32,0.029,33,0.986,34,0.438,35,0.772,36,2.479,37,2.214,38,0.673,39,0.939,40,1.503,41,2.004,42,2.214,43,1.503,44,2.214,45,0.976,46,2.214,47,2.214,48,2.214,49,2.214,50,3.37,51,2.214,52,3.37,53,2.214,54,2.214,55,2.214,56,3.37,57,3.225,58,2.214,59,2.214,60,1.084,61,0.939,62,1.861,63,2.031,64,1.201,65,1.455,66,2.214,67,2.833,68,1.316,69,1.861,70,1.016,71,2.479,72,2.214,73,2.214,74,3.37,75,2.214,76,3.37,77,3.37,78,2.214,79,3.37,80,2.214,81,2.215,82,2.214,83,1.316,84,2.214,85,0.231,86,1.316,87,2.479,88,2.214,89,1.629,90,2.214,91,2.214,92,2.214,93,2.214,94,2.214,95,2.004,96,2.214,97,1.354,98,2.214,99,2.214,100,1.316,101,2.214,102,2.214,103,2.214,104,2.214,105,2.214,106,2.214,107,2.214,108,2.214,109,2.214,110,2.214,111,2.214,112,2.214,113,1.629,114,2.214,115,2.833,116,2.214,117,4.56,118,2.214,119,1.792,120,2.479,121,1.934,122,3.834,123,2.214,124,3.37,125,2.214,126,2.214,127,2.214,128,2.214,129,1.016,130,2.214,131,2.214,132,0.009,133,0.014,134,0.009]],["title/classes/AppearanceService.html",[0,0.107,65,2.186]],["body/classes/AppearanceService.html",[0,0.111,2,0.584,3,0.359,4,0.319,5,0.319,7,0.173,8,0.538,9,0.932,12,1.167,29,1.261,31,1.002,32,0.029,33,1.002,34,0.532,35,0.784,38,0.926,39,1.965,40,1.257,43,1.318,45,0.868,57,4.1,60,0.963,61,1.463,62,2.899,65,3.044,85,0.359,113,3.407,132,0.015,133,0.02,134,0.015,135,5.049,136,2.537,137,5.23,138,5.23,139,1.164,140,4.632,141,4.632,142,3.448,143,4.7,144,3.448,145,4.632,146,3.448,147,4.632,148,1.871,149,3.448,150,4.632,151,2.899,152,2.306,153,2.051,154,3.448,155,5.23,156,3.448,157,3.448,158,0.936]],["title/classes/BaseMenu.html",[0,0.107,159,2.447]],["body/classes/BaseMenu.html",[0,0.128,2,0.675,3,0.415,4,0.369,5,0.369,7,0.2,8,0.591,9,0.871,12,1.283,26,1.35,29,1.214,31,1.101,32,0.029,33,1.101,34,0.498,35,0.863,43,1.004,45,0.79,60,0.938,67,3.351,68,3.517,69,3.351,70,1.829,85,0.415,86,2.37,129,2.714,132,0.017,133,0.022,134,0.017,139,1.034,159,3.747,160,3.888,161,4.972,162,3.351,163,5.613,164,5.093,165,3.986,166,5.093,167,5.093,168,5.093,169,3.209,170,3.986,171,4.282,172,3.986,173,3.986,174,3.986]],["title/classes/ColorRef.html",[0,0.107,175,2.447]],["body/classes/ColorRef.html",[0,0.112,2,0.588,3,0.362,4,0.321,5,0.321,7,0.174,8,0.54,9,0.982,12,1.172,26,1.175,29,1.264,31,1.006,32,0.029,33,1.006,34,0.49,35,0.788,38,0.93,43,0.875,57,3.955,60,0.857,85,0.362,113,2.554,132,0.015,133,0.02,134,0.015,139,0.967,158,1.522,175,3.423,176,5.059,177,2.918,178,6.146,179,6.146,180,6.146,181,4.921,182,4.653,183,4.653,184,3.058,185,3.472,186,3.472,187,4.653,188,3.472,189,3.472,190,5.248,191,4.653,192,4.653,193,2.554,194,3.861,195,3.472,196,3.472]],["title/interfaces/Controller.html",[197,0.428,198,1.526]],["body/interfaces/Controller.html",[3,0.386,4,0.343,5,0.343,7,0.186,8,0.564,11,2.011,28,1.351,32,0.029,34,0.516,41,2.204,45,0.927,85,0.386,119,1.457,121,2.441,132,0.016,133,0.021,134,0.016,148,3.594,197,0.625,198,2.23,199,1.457,200,3.116,201,2.64,202,2.865,203,1.81,204,2.865,205,2.865,206,2.865,207,2.865,208,2.204,209,3.707,210,3.707,211,3.707,212,3.707,213,2.89,214,3.707,215,3.707,216,3.988,217,3.707,218,3.707]],["title/interfaces/ISettings.html",[197,0.428,219,2.447]],["body/interfaces/ISettings.html",[3,0.486,4,0.432,5,0.432,7,0.234,8,0.652,32,0.028,34,0.38,38,0.932,40,1.266,60,0.859,85,0.486,97,1.175,132,0.02,133,0.024,134,0.02,197,0.6,199,1.833,216,4.432,219,4.131,220,3.432,221,5.378,222,4.721,223,3.432,224,3.922,225,4.131,226,3.922,227,3.432]],["title/interfaces/ISplitBoardView.html",[197,0.428,228,2.186]],["body/interfaces/ISplitBoardView.html",[3,0.35,4,0.312,5,0.312,7,0.29,8,0.529,32,0.029,34,0.522,45,0.925,60,0.839,85,0.474,132,0.014,133,0.019,134,0.014,148,3.506,197,0.433,199,1.322,203,1.741,228,2.995,229,2.476,230,2.709,231,5.536,232,4.863,233,4.654,234,5.536,235,5.536,236,5.536,237,5.536,238,5.536,239,3.292,240,3.003,241,2.829,242,3.365,243,2.212,244,2.995,245,2.709,246,5.013,247,3.365,248,3.352,249,2.995,250,2.995,251,2.995,252,2.52,253,3.365,254,3.365,255,3.365,256,3.83,257,3.83]],["title/classes/Menu.html",[0,0.107,129,1.526]],["body/classes/Menu.html",[0,0.076,2,0.403,3,0.248,4,0.22,5,0.22,7,0.267,8,0.413,9,1.001,10,3.011,11,2.566,12,0.896,26,0.805,28,1.846,29,1.337,31,1.023,32,0.029,33,1.252,34,0.48,35,0.801,38,0.945,39,1.807,40,1.284,41,2.115,43,1.275,45,0.879,60,0.871,70,1.955,83,3.011,85,0.248,87,2.617,97,0.896,119,0.935,122,1.999,129,2.17,132,0.01,133,0.015,134,0.01,139,1.171,158,1.157,169,2.987,171,3.582,184,1.563,201,2.17,202,1.771,252,2.087,258,1.999,259,4.587,260,2.164,261,5.063,262,4.261,263,4.261,264,4.729,265,3.557,266,3.557,267,2.99,268,2.233,269,3.557,270,2.379,271,2.379,272,2.379,273,3.367,274,2.379,275,2.379,276,5.063,277,2.379,278,2.379,279,2.379,280,2.379,281,3.557,282,2.379,283,3.557,284,2.379,285,3.557,286,2.379,287,2.379,288,1.771,289,2.379,290,1.75,291,2.379,292,2.379,293,2.379,294,2.379,295,2.379,296,2.379,297,2.379,298,2.379,299,2.379,300,2.379,301,2.379,302,2.379,303,1.091,304,2.379,305,2.379,306,2.379,307,2.379,308,2.379,309,2.379,310,2.379,311,2.379]],["title/classes/MenuGroupService.html",[0,0.107,68,1.978]],["body/classes/MenuGroupService.html",[0,0.106,2,0.559,3,0.344,4,0.305,5,0.305,7,0.166,8,0.522,9,0.92,10,3.417,12,1.133,26,1.731,28,2.095,29,1.282,31,0.972,32,0.029,33,0.972,34,0.447,35,0.761,40,0.896,43,1.288,45,0.852,60,0.828,61,1.4,68,2.674,70,2.784,85,0.344,87,3.308,97,1.288,129,2.933,132,0.014,133,0.019,134,0.014,136,2.428,139,1.153,151,2.774,152,2.239,158,1.22,260,1.767,312,5.1,313,5.114,314,5.491,315,4.496,316,4.496,317,4.496,318,3.3,319,3.3,320,4.496,321,4.496,322,3.3,323,3.3,324,4.496,325,3.3,326,2.428,327,3.3,328,3.3,329,3.3,330,3.3,331,3.3,332,4.496,333,3.3,334,3.3,335,3.3]],["title/classes/MenuItem.html",[0,0.107,273,1.978]],["body/classes/MenuItem.html",[0,0.108,2,0.57,3,0.35,4,0.312,5,0.312,7,0.169,8,0.529,9,1.003,11,1.826,26,1.139,29,1.289,31,0.728,32,0.029,33,0.728,34,0.533,35,0.57,45,0.522,60,0.62,70,1.544,83,2.709,85,0.576,97,0.848,129,1.544,132,0.014,133,0.019,134,0.014,139,0.952,169,3.003,197,0.433,243,2.212,259,3.8,260,2.03,268,2.174,273,3.44,288,1.676,290,2.476,336,3.626,337,2.001,338,4.387,339,4.342,340,4.387,341,3.83,342,4.556,343,4.072,344,3.365,345,3.365,346,3.365,347,4.072,348,3.365,349,2.995,350,2.476,351,2.476,352,2.829,353,2.829,354,2.829,355,2.476,356,2.829,357,2.829,358,2.829,359,2.829]],["title/interfaces/MenuItemConfig.html",[169,1.805,197,0.428]],["body/interfaces/MenuItemConfig.html",[0,0.117,3,0.38,4,0.337,5,0.337,7,0.183,8,0.558,9,0.887,11,1.978,32,0.029,34,0.536,35,0.814,45,0.566,60,0.671,70,1.673,83,2.168,85,0.595,97,0.918,129,1.673,132,0.015,133,0.02,134,0.015,139,0.671,169,2.917,197,0.469,199,1.432,243,2.396,259,2.682,260,1.432,268,2.302,273,3.197,288,1.815,290,2.682,336,2.168,337,2.168,338,4.577,339,3.064,340,4.577,341,3.064,343,4.371,347,4.371,349,3.159,350,2.682,351,2.682,352,3.064,353,3.064,354,4.805,355,2.682,356,3.064,357,3.064,358,3.064,359,3.064]],["title/interfaces/ModuleConfig.html",[197,0.428,360,1.805]],["body/interfaces/ModuleConfig.html",[0,0.113,3,0.367,4,0.327,5,0.327,7,0.177,8,0.546,9,0.547,10,3.146,13,1.496,32,0.029,34,0.431,40,1.277,41,2.797,60,0.975,61,1.995,63,1.756,85,0.49,86,2.098,89,3.46,95,2.098,97,1.185,121,1.496,132,0.015,133,0.02,134,0.015,152,2.342,158,1.532,193,2.595,194,3.892,197,0.454,198,2.697,199,1.386,260,2.217,268,2.25,360,2.552,361,2.595,362,2.595,363,2.966,364,2.966,365,2.966,366,2.595,367,2.966,368,2.342,369,2.966,370,3.709,371,3.953,372,4.743,373,3.953,374,3.953,375,2.966,376,2.966,377,2.966,378,2.966,379,4.447,380,2.966,381,2.966,382,2.966,383,2.966,384,2.966,385,2.966,386,2.966,387,2.966,388,2.966,389,2.966,390,2.966,391,2.966,392,2.966]],["title/classes/ModuleFactory.html",[0,0.107,63,1.656]],["body/classes/ModuleFactory.html",[0,0.091,2,0.479,3,0.294,4,0.262,5,0.262,7,0.142,8,0.469,9,0.73,10,3.357,12,1.016,13,1.996,26,0.957,29,1.221,31,1.174,32,0.029,33,1.174,34,0.484,35,0.919,38,0.806,39,1.711,40,1.277,41,3.052,43,1.293,45,0.438,60,0.867,61,1.711,63,2.009,85,0.42,86,1.68,89,3.776,95,1.68,97,1.016,121,1.996,132,0.012,133,0.017,134,0.012,152,2.009,158,1.393,193,2.079,194,3.462,197,0.363,198,2.491,260,1.11,267,2.375,268,2.306,360,1.533,361,4.275,362,2.079,363,2.375,364,2.375,365,2.375,366,2.079,367,2.375,368,2.556,369,3.392,370,3.71,371,4.315,372,4.884,373,4.315,374,3.392,375,2.375,376,2.375,377,2.375,378,2.375,379,3.956,380,2.375,381,2.375,382,3.392,383,2.375,384,3.392,385,2.375,386,3.392,387,2.375,388,2.375,389,2.375,390,2.375,391,2.375,392,2.375,393,4.035,394,4.035,395,4.035,396,2.826,397,2.826,398,2.826,399,5.133,400,2.826,401,2.826,402,2.826,403,1.533]],["title/classes/PropertyPanel.html",[0,0.107,81,2.186]],["body/classes/PropertyPanel.html",[0,0.1,2,0.529,3,0.325,4,0.289,5,0.289,7,0.157,8,0.503,9,0.905,12,1.091,13,1.837,28,1.139,29,1.369,31,0.937,32,0.029,33,0.937,34,0.459,35,0.733,38,0.624,40,0.848,43,1.535,45,0.96,60,0.798,64,1.696,81,2.847,85,0.325,119,1.702,121,2.108,132,0.013,133,0.018,134,0.013,139,1.074,158,0.848,201,2.281,202,2.156,203,1.563,204,2.672,205,2.672,206,2.672,207,2.672,208,2.956,213,2.956,230,2.575,403,1.696,404,2.627,405,2.627,406,3.511,407,2.847,408,2.847,409,2.847,410,4.16,411,2.299,412,2.054,413,2.299,414,2.299,415,2.847,416,2.299,417,2.299,418,2.299,419,3.186,420,2.299,421,2.299,422,1.696,423,2.299,424,3.186,425,2.299,426,3.191]],["title/classes/ResourceExplorer.html",[0,0.107,427,2.447]],["body/classes/ResourceExplorer.html",[0,0.1,2,0.529,3,0.325,4,0.289,5,0.289,7,0.157,8,0.503,9,0.905,12,1.091,13,1.837,28,1.139,29,1.369,31,0.937,32,0.029,33,0.937,34,0.459,35,0.733,38,0.624,40,0.848,43,1.535,45,0.96,60,0.798,64,1.696,85,0.325,119,1.702,121,2.108,132,0.013,133,0.018,134,0.013,139,1.074,158,0.848,201,2.281,202,2.156,203,1.563,204,2.672,205,2.672,206,2.672,207,2.672,208,2.956,213,2.956,230,2.575,403,1.696,406,3.511,407,2.847,408,2.847,409,2.847,410,4.16,411,2.299,412,2.054,413,2.299,414,2.299,415,2.847,416,2.299,417,2.299,418,2.299,419,3.186,420,2.299,421,2.299,422,1.696,423,2.299,424,3.186,425,2.299,426,3.191,427,3.186,428,2.627,429,2.627]],["title/classes/SVController.html",[0,0.107,406,1.805]],["body/classes/SVController.html",[0,0.094,2,0.494,3,0.304,4,0.27,5,0.27,7,0.146,8,0.479,9,0.945,12,1.04,13,2.031,28,1.504,29,1.351,31,0.892,32,0.029,33,0.892,34,0.478,35,0.699,43,1.509,45,0.945,60,0.882,61,1.237,85,0.304,119,1.146,121,2.33,132,0.012,133,0.018,134,0.012,139,1.122,152,2.055,158,1.12,198,2.389,201,2.389,202,2.055,203,1.638,204,2.592,205,2.592,206,2.592,207,2.592,208,3.267,213,2.848,326,2.146,403,1.583,406,2.239,407,3.148,408,3.148,409,2.712,412,3.611,415,2.712,422,2.239,430,5.302,431,2.452,432,3.036,433,6.478,434,2.917,435,2.917,436,2.917,437,2.917,438,2.917,439,2.917,440,2.917,441,2.917,442,2.917,443,2.917,444,2.917,445,2.917,446,4.789,447,2.917,448,2.917,449,2.917,450,2.917,451,2.917,452,2.146,453,2.917,454,2.917,455,2.917,456,2.146]],["title/classes/ShapeCanvas.html",[0,0.107,457,2.447]],["body/classes/ShapeCanvas.html",[0,0.1,2,0.529,3,0.325,4,0.289,5,0.289,7,0.157,8,0.503,9,0.905,12,1.091,13,1.837,28,1.139,29,1.369,31,0.937,32,0.029,33,0.937,34,0.459,35,0.733,38,0.624,40,0.848,43,1.535,45,0.96,60,0.798,64,1.696,85,0.325,119,1.702,121,2.108,132,0.013,133,0.018,134,0.013,139,1.074,158,0.848,201,2.281,202,2.156,203,1.563,204,2.672,205,2.672,206,2.672,207,2.672,208,2.956,213,2.956,230,2.575,403,1.696,406,3.511,407,2.847,408,2.847,409,2.847,410,4.16,411,2.299,412,2.054,413,2.299,414,2.299,415,2.847,416,2.299,417,2.299,418,2.299,419,3.186,420,2.299,421,2.299,422,1.696,423,2.299,424,3.186,425,2.299,426,3.191,457,3.186,458,2.627,459,2.627]],["title/classes/SplitBoardController.html",[0,0.107,460,2.447]],["body/classes/SplitBoardController.html",[0,0.054,2,0.285,3,0.176,4,0.156,5,0.156,7,0.243,8,0.316,9,0.998,12,0.685,26,0.571,28,0.615,29,1.258,31,0.932,32,0.029,33,0.932,34,0.468,35,0.73,38,0.921,39,1.828,43,1.161,45,0.83,60,0.501,85,0.176,86,1.002,97,0.989,119,1.069,132,0.007,133,0.012,134,0.007,139,0.96,148,1.856,158,1.17,203,0.856,227,2.517,228,2.581,239,1.002,245,1.002,246,3.873,249,1.108,251,1.108,252,2.446,256,3.873,257,4.497,288,0.839,303,2.557,460,2.002,461,3.498,462,1.417,463,3.421,464,3.421,465,3.421,466,3.421,467,3.421,468,3.421,469,4.847,470,4.847,471,3.927,472,2.721,473,2.721,474,2.721,475,2.721,476,3.927,477,1.686,478,2.721,479,3.424,480,1.686,481,1.686,482,1.686,483,1.686,484,1.686,485,1.686,486,1.686,487,1.686,488,2.721,489,1.686,490,2.721,491,1.686,492,2.721,493,5.349,494,1.686,495,4.241,496,2.721,497,1.686,498,1.686,499,4.075,500,2.721,501,3.927,502,2.721,503,1.417,504,2.249,505,1.417,506,3.421,507,1.686,508,3.421,509,1.686,510,3.421,511,3.421,512,3.421,513,1.686,514,1.686,515,1.686,516,1.686,517,1.686,518,1.686,519,1.686,520,1.686,521,1.686,522,1.686,523,1.686,524,1.686,525,2.721,526,2.721,527,1.686,528,1.686,529,1.686,530,1.686,531,1.686,532,3.421,533,1.24,534,5.349,535,1.686,536,1.686,537,1.686,538,1.686,539,1.686,540,1.686,541,1.686,542,3.927,543,2.002,544,1.24,545,1.686,546,2.721,547,1.686,548,1.686,549,2.721,550,1.24,551,1.686,552,1.686,553,4.607,554,4.607,555,2.721,556,3.927,557,2.721,558,2.721,559,1.686,560,2.721,561,1.686,562,2.721,563,1.686,564,1.686]],["title/classes/SplitItemView.html",[0,0.107,240,1.805]],["body/classes/SplitItemView.html",[0,0.061,2,0.322,3,0.198,4,0.176,5,0.176,7,0.095,8,0.347,9,0.951,12,0.754,26,1.253,28,2.127,29,1.343,31,1.139,32,0.029,33,1.139,34,0.486,35,0.892,36,2.201,38,0.97,39,1.939,40,0.515,43,1.47,45,0.892,60,0.551,85,0.198,119,0.746,120,1.397,132,0.008,133,0.013,134,0.008,139,1.188,158,1.005,203,1.656,216,2.201,230,1.779,232,1.596,240,2.634,241,1.596,243,1.248,248,3.362,249,3.004,250,3.004,251,3.004,268,1.92,288,0.945,410,2.761,461,3.616,479,1.966,499,3.842,504,3.191,533,1.397,565,1.397,566,3.702,567,3.702,568,3.702,569,5.081,570,4.201,571,4.201,572,4.201,573,4.201,574,2.992,575,2.992,576,4.201,577,2.992,578,2.992,579,2.992,580,2.515,581,2.515,582,2.515,583,2.992,584,2.992,585,4.201,586,1.49,587,2.992,588,1.623,589,1.899,590,1.899,591,1.899,592,1.899,593,4.201,594,1.899,595,1.899,596,1.899,597,1.899,598,2.992,599,2.992,600,1.899,601,2.992,602,1.899,603,2.992,604,1.899,605,1.899,606,2.992,607,1.899,608,4.201,609,4.272,610,3.702,611,2.992,612,1.899,613,2.992,614,2.992,615,1.899,616,1.596,617,1.899,618,1.596,619,1.596,620,1.899,621,1.596,622,1.596,623,2.201,624,1.899,625,1.899,626,1.596,627,1.899,628,1.899,629,1.899,630,3.702,631,1.899,632,2.992,633,1.899,634,1.899,635,1.899,636,2.992,637,3.702,638,1.899,639,1.899,640,1.899,641,1.899,642,1.899,643,1.899,644,1.899,645,1.899,646,1.899,647,1.899,648,1.899,649,1.899,650,2.992,651,1.899,652,1.899]],["title/classes/View.html",[0,0.107,203,1.046]],["body/classes/View.html",[0,0.117,2,0.616,3,0.379,4,0.337,5,0.337,7,0.183,8,0.557,12,1.209,26,1.231,27,4.034,28,2.369,29,1.284,31,1.235,32,0.029,33,1.235,34,0.514,35,0.967,36,4.367,38,0.727,43,1.353,85,0.379,120,2.675,132,0.015,133,0.02,134,0.015,139,0.989,158,1.458,184,2.39,203,1.509,326,2.675,479,3.154,580,4.034,581,4.034,582,4.034,609,4.515,616,4.034,618,3.057,619,4.034,621,3.057,622,4.034,623,4.201,653,2.675,654,4.798,655,3.636,656,3.636,657,3.636,658,3.53,659,4.034,660,4.034,661,3.636,662,3.636,663,3.636,664,3.636]],["title/interfaces/WeightMap.html",[197,0.428,665,1.656]],["body/interfaces/WeightMap.html",[0,0.16,2,0.651,3,0.4,4,0.356,5,0.356,7,0.25,9,0.856,29,0.832,32,0.029,38,0.769,45,0.772,85,0.4,97,1.254,132,0.016,133,0.021,134,0.016,139,0.917,197,0.71,199,1.511,252,2.169,260,1.956,268,2.204,303,1.765,586,1.915,588,2.087,665,3.01,666,2.701,667,2.087,668,3.846,669,3.846,670,2.701,671,3.359,672,2.528,673,2.701,674,2.287,675,2.287,676,2.287,677,2.287,678,2.287,679,2.287,680,2.287,681,2.287,682,2.287,683,2.087,684,2.528,685,2.528,686,2.528,687,3.272,688,2.528,689,2.528,690,2.528,691,2.528,692,2.287,693,2.528,694,2.528,695,2.528,696,2.528]],["title/classes/Workbench.html",[0,0.107,100,1.978]],["body/classes/Workbench.html",[0,0.09,2,0.474,3,0.292,4,0.259,5,0.259,7,0.141,8,0.465,9,0.873,12,1.01,13,1.986,26,0.948,29,1.324,31,0.867,32,0.029,33,0.867,34,0.458,35,0.679,38,0.559,40,1.088,43,1.46,45,0.936,60,0.862,61,1.188,63,3.117,64,1.519,85,0.292,95,1.665,97,1.288,100,2.384,121,1.188,132,0.012,133,0.017,134,0.012,139,0.862,152,1.996,153,1.665,158,1.088,197,0.36,198,2.148,201,2.345,202,1.996,203,1.77,204,2.545,205,2.545,206,2.545,207,2.545,239,1.665,240,1.519,244,1.84,245,1.665,252,1.575,360,2.175,368,1.394,370,1.84,403,1.519,422,2.175,426,3.04,432,2.949,452,2.06,456,2.06,543,2.06,544,2.06,550,2.06,697,2.06,698,3.936,699,2.8,700,4.008,701,3.444,702,2.8,703,2.8,704,3.36,705,2.8,706,2.8,707,2.8,708,2.8,709,2.8,710,2.8,711,2.354,712,2.354,713,2.354,714,2.354,715,2.354,716,2.354,717,2.354,718,2.354,719,3.369,720,2.354,721,3.369,722,2.354,723,2.354,724,2.354,725,2.354,726,2.354,727,2.354,728,2.354,729,2.354,730,2.354]],["title/interfaces/WorkbenchProps.html",[197,0.428,704,2.186]],["body/interfaces/WorkbenchProps.html",[0,0.102,3,0.332,4,0.295,5,0.295,7,0.16,8,0.51,9,0.682,13,1.353,32,0.029,34,0.506,35,0.744,38,0.637,40,1.192,45,0.84,60,0.926,61,1.353,63,2.922,64,1.731,85,0.332,95,1.897,97,1.364,100,1.897,132,0.014,133,0.019,134,0.014,139,0.588,152,2.187,153,1.897,158,1.192,197,0.41,198,2.016,199,1.254,201,1.464,203,1.58,204,1.588,205,1.588,206,1.588,207,1.588,239,1.897,240,1.731,244,3.302,245,2.988,252,2.306,360,2.937,368,2.695,370,2.097,422,1.731,426,3.219,432,2.347,452,2.347,456,2.347,543,2.347,544,2.347,550,2.347,697,2.347,698,2.682,701,3.232,704,3.302,711,2.682,712,4.551,713,4.551,714,2.682,715,2.682,716,2.682,717,2.682,718,2.682,719,3.693,720,2.682,721,3.693,722,2.682,723,2.682,724,2.682,725,2.682,726,2.682,727,2.682,728,2.682,729,2.682,730,2.682]],["title/classes/classBuilder.html",[0,0.107,683,1.805]],["body/classes/classBuilder.html",[0,0.138,2,0.728,3,0.322,4,0.286,5,0.286,7,0.216,8,0.499,9,0.958,12,1.083,26,1.047,29,1.257,31,1.155,32,0.029,33,1.155,34,0.457,35,0.905,38,0.859,39,1.312,43,1.346,45,0.871,83,2.94,85,0.322,97,1.083,132,0.013,133,0.018,134,0.013,139,1.071,197,0.636,252,1.69,260,1.69,268,1.948,303,1.419,586,1.54,588,1.678,665,3.027,666,3.235,667,1.678,670,2.333,671,3.543,672,2.033,673,2.333,674,1.84,675,1.84,676,1.84,677,1.84,678,1.84,679,1.84,680,1.84,681,1.84,682,1.84,683,2.333,684,3.249,685,2.827,686,2.033,687,2.827,688,3.512,689,2.033,690,2.827,691,2.827,692,1.84,693,2.033,694,2.033,695,2.033,696,2.033,731,4.301,732,4.301,733,4.301,734,4.301,735,3.094,736,3.094,737,3.094,738,3.094,739,3.094,740,3.094]],["title/interfaces/classConfig.html",[197,0.428,670,1.805]],["body/interfaces/classConfig.html",[0,0.193,2,0.635,3,0.391,4,0.347,5,0.347,7,0.246,8,0.569,9,0.846,32,0.029,34,0.399,38,0.75,45,0.76,85,0.391,97,1.234,132,0.016,133,0.021,134,0.016,139,0.902,197,0.701,199,1.474,252,1.925,260,2.356,268,2.316,303,1.722,586,1.868,588,2.036,665,2.878,666,2.036,667,2.036,670,2.959,671,3.337,672,2.466,673,2.657,674,2.231,675,2.231,676,2.231,677,2.231,678,2.231,679,2.231,680,2.231,681,2.231,682,2.231,683,2.036,684,2.466,685,2.466,686,2.466,687,3.219,688,2.466,689,2.466,690,2.466,691,2.466,692,2.231,693,2.466,694,2.466,695,2.466,696,2.466]],["title/coverage.html",[741,3.8]],["body/coverage.html",[0,0.201,1,1.954,5,0.198,6,1.801,32,0.029,34,0.174,40,0.582,63,1.067,65,1.408,68,1.274,70,0.983,71,1.576,81,1.408,100,1.274,129,0.983,132,0.009,133,0.014,134,0.009,135,1.801,136,2.418,148,1.783,153,1.274,159,1.576,160,2.16,161,1.801,162,1.801,169,1.162,175,1.576,176,1.801,177,1.801,197,0.723,198,0.983,200,1.801,203,0.674,219,1.576,220,2.418,225,1.576,228,1.408,229,1.576,240,1.162,258,1.801,273,1.274,303,3.106,312,1.801,336,1.954,337,1.954,349,1.408,360,1.162,361,2.418,362,2.418,404,1.801,405,1.801,406,1.162,427,1.576,428,1.801,429,1.801,430,1.801,431,1.801,457,1.576,458,1.801,459,1.801,460,1.576,461,2.666,462,1.801,503,1.801,505,1.801,565,1.576,586,2.408,653,1.576,665,1.067,666,2.624,667,2.624,670,1.162,671,1.162,673,1.162,683,1.162,697,2.418,701,1.576,704,1.408,741,1.801,742,1.801,743,2.143,744,2.143,745,3.769,746,6.594,747,1.801,748,6.567,749,2.763,750,1.801,751,1.801,752,2.763,753,1.801,754,3.287,755,4.484,756,2.143,757,3.287,758,3.287,759,2.763,760,2.143,761,1.801,762,2.143,763,2.143,764,4.699,765,4.699,766,1.801,767,1.801,768,4.836,769,1.801,770,1.801,771,1.801,772,1.801,773,1.801,774,1.801,775,1.801,776,1.801,777,1.801,778,1.801,779,1.801,780,1.801,781,1.801,782,1.801,783,1.801,784,1.801,785,1.801,786,1.801,787,1.801,788,1.801,789,3.998,790,1.801,791,2.143,792,4.484,793,2.143,794,3.287,795,1.576,796,1.801,797,2.143,798,1.801,799,2.143,800,2.143]],["title/dependencies.html",[801,2.787,802,2.939]],["body/dependencies.html",[32,0.029,61,1.991,132,0.02,133,0.024,134,0.02,143,3.946,181,3.453,223,4.444,224,3.946,802,3.453,803,4.694,804,4.694,805,4.694,806,3.946,807,4.694,808,4.694,809,4.694,810,4.694,811,4.694,812,4.694,813,4.694,814,4.694,815,4.694,816,4.694,817,4.694,818,4.694,819,4.694,820,4.694,821,4.694]],["title/miscellaneous/enumerations.html",[822,1.279,823,3.358]],["body/miscellaneous/enumerations.html",[7,0.227,32,0.028,39,2.625,57,3.625,70,2.078,115,3.806,132,0.019,133,0.023,134,0.019,229,3.331,239,3.279,244,2.976,245,2.692,248,4.057,249,3.625,250,3.625,251,3.625,288,2.254,336,2.692,337,3.279,347,4.057,461,2.692,504,4.068,565,4.057,626,4.636,822,2.078,823,3.806,824,4.528,825,3.806,826,4.528,827,3.806,828,4.528,829,4.528]],["title/miscellaneous/functions.html",[822,1.279,830,3.358]],["body/miscellaneous/functions.html",[7,0.241,31,1.235,32,0.027,33,1.235,35,0.967,132,0.02,133,0.024,134,0.02,153,3.395,184,3.753,764,3.529,765,4.2,766,4.8,790,4.032,822,2.201,830,4.032,831,4.797,832,4.032,833,4.797,834,4.797,835,4.797,836,5.71,837,5.71,838,4.797]],["title/index.html",[7,0.14,839,2.343,840,2.343]],["body/index.html",[1,2.78,4,0.487,32,0.025,132,0.015,133,0.02,134,0.015,181,2.572,197,0.45,223,4.136,350,2.572,366,2.572,368,2.327,658,2.572,802,3.439,841,5.622,842,5.266,843,4.674,844,4.674,845,3.496,846,3.496,847,3.496,848,3.496,849,3.496,850,3.496,851,3.496,852,5.622,853,3.496,854,3.496,855,2.938,856,3.496,857,3.496,858,3.496,859,3.496,860,3.496,861,3.496,862,3.496,863,2.938,864,2.572,865,3.496,866,4.674,867,3.496,868,3.496,869,3.496,870,4.674,871,3.496,872,3.496,873,3.496,874,3.496,875,5.266,876,3.496,877,3.496,878,3.496,879,3.496,880,3.496,881,3.496,882,3.496,883,3.496,884,3.496,885,3.496,886,3.496,887,3.496,888,3.496,889,3.496,890,3.496,891,5.266,892,3.496,893,3.496,894,3.496,895,5.266,896,3.496,897,3.496,898,3.496,899,2.938,900,3.496,901,3.496,902,3.496,903,5.266,904,3.496,905,3.496,906,3.496,907,3.496,908,5.266,909,4.674,910,3.496,911,3.496,912,3.496,913,3.496,914,3.496,915,2.938,916,3.496,917,3.496,918,3.496,919,3.496,920,3.496,921,3.929,922,3.496,923,3.496,924,4.674,925,3.496,926,4.674,927,3.496,928,4.674,929,2.938,930,2.938,931,2.938,932,3.496,933,3.496,934,3.496,935,3.496,936,3.496,937,3.496,938,3.496,939,3.496,940,3.496,941,3.496,942,3.496]],["title/license.html",[839,2.343,840,2.343,864,2.05]],["body/license.html",[32,0.022,132,0.017,133,0.022,134,0.017,495,3.386,504,2.648,692,2.395,742,3.386,855,3.386,863,3.386,864,2.963,915,3.386,929,3.386,930,3.386,931,3.386,943,5.641,944,4.028,945,4.028,946,5.127,947,4.028,948,4.028,949,4.028,950,4.028,951,4.028,952,4.028,953,5.127,954,6.509,955,4.028,956,4.028,957,5.641,958,4.028,959,5.127,960,4.028,961,4.028,962,4.31,963,4.028,964,4.028,965,4.028,966,4.028,967,5.127,968,4.028,969,4.028,970,4.028,971,4.028,972,4.028,973,4.028,974,4.028,975,5.127,976,5.127,977,4.028,978,4.028,979,4.028,980,4.028,981,4.028,982,4.028,983,4.028,984,4.028,985,4.028,986,4.028,987,4.028,988,4.028,989,4.028,990,4.028,991,4.028,992,4.028,993,4.028,994,4.028,995,4.028,996,4.028,997,4.028,998,4.028,999,4.028,1000,4.028,1001,4.028,1002,4.028,1003,4.028,1004,4.028]],["title/modules.html",[368,2.251]],["body/modules.html",[32,0.026,132,0.022,133,0.026,134,0.022,368,2.636]],["title/overview.html",[1005,3.8]],["body/overview.html",[2,0.884,32,0.025,132,0.022,133,0.025,134,0.022,199,2.052,1005,4.389,1006,5.221,1007,5.221]],["title/interfaces/stateConfig.html",[197,0.428,671,1.805]],["body/interfaces/stateConfig.html",[0,0.155,2,0.971,3,0.382,4,0.34,5,0.34,7,0.242,8,0.561,9,0.837,32,0.029,34,0.439,35,0.818,38,0.734,45,0.749,85,0.382,97,1.217,132,0.016,133,0.02,134,0.016,139,0.89,197,0.694,199,1.443,252,2.252,260,2.34,268,2.229,303,1.685,586,1.828,588,1.992,665,2.854,666,1.992,667,1.992,670,3.11,671,3.381,672,3.768,673,2.62,674,2.183,675,2.183,676,2.183,677,2.183,678,2.183,679,2.183,680,2.183,681,2.183,682,2.183,683,1.992,684,2.413,685,2.413,686,2.413,687,3.174,688,2.413,689,2.413,690,2.413,691,2.413,692,2.183,693,2.413,694,2.413,695,2.413,696,2.413]],["title/miscellaneous/typealiases.html",[822,1.279,1008,3.995]],["body/miscellaneous/typealiases.html",[7,0.242,32,0.027,34,0.467,132,0.02,133,0.024,134,0.02,148,2.619,160,3.173,336,2.87,337,3.408,343,4.216,479,3.173,623,4.216,653,3.551,658,3.551,659,4.058,660,4.058,795,3.551,822,2.215,827,4.058,1009,4.827,1010,4.818,1011,4.058,1012,4.827,1013,4.827]],["title/miscellaneous/variables.html",[822,1.279,1014,3.358]],["body/miscellaneous/variables.html",[1,1.811,7,0.097,11,2.66,32,0.029,34,0.417,38,1.302,39,2.757,40,1.02,71,2.24,97,0.946,119,0.763,132,0.008,133,0.013,134,0.008,160,1.276,220,1.429,221,1.632,222,1.632,225,2.24,226,1.632,227,2.764,233,1.632,250,1.276,252,0.763,268,1.11,288,1.87,303,0.891,338,2.764,340,3.129,349,2.001,351,2.764,355,2.764,461,1.155,533,2.24,586,0.967,588,1.054,665,0.967,666,1.054,667,1.652,673,1.652,674,1.155,675,1.155,676,1.155,677,1.155,678,1.155,679,1.155,680,1.155,681,1.155,682,1.155,745,1.632,747,2.56,749,4.308,750,3.576,751,3.158,752,1.632,753,2.56,759,2.56,761,2.56,764,1.429,765,4.634,767,2.56,769,2.56,770,2.56,771,2.56,772,2.56,773,2.56,774,2.56,775,2.56,776,2.56,777,2.56,778,2.56,779,2.56,780,2.56,781,2.56,782,2.56,783,2.56,784,2.56,785,2.56,786,2.56,787,2.56,788,2.56,795,1.429,796,1.632,798,1.632,806,1.632,822,0.891,825,1.632,832,5.268,899,1.632,921,1.632,962,1.632,1010,1.632,1011,1.632,1014,1.632,1015,1.942,1016,4.254,1017,1.942,1018,3.045,1019,1.942,1020,1.942,1021,1.942,1022,3.757,1023,3.757,1024,1.942,1025,3.045,1026,1.942,1027,1.942,1028,3.045,1029,1.942,1030,3.045,1031,3.045,1032,1.942,1033,1.942,1034,1.942,1035,1.942,1036,1.942,1037,3.045,1038,4.254,1039,1.942,1040,3.045,1041,1.942,1042,1.942,1043,3.045,1044,1.942,1045,3.045,1046,1.942,1047,3.045,1048,3.045,1049,1.942,1050,1.942,1051,1.942,1052,1.942,1053,1.942,1054,3.045,1055,1.942,1056,3.045,1057,3.045,1058,4.254,1059,1.942,1060,3.045,1061,1.942,1062,1.942,1063,1.942,1064,1.942,1065,3.045,1066,3.045,1067,1.942,1068,1.942,1069,1.942,1070,1.942,1071,1.942,1072,1.942,1073,1.942,1074,1.942,1075,1.942,1076,1.942,1077,1.942,1078,1.942,1079,3.757,1080,4.254,1081,1.942,1082,1.942,1083,1.942,1084,1.942,1085,1.942,1086,1.942,1087,1.942,1088,1.942,1089,1.942,1090,1.942,1091,1.942,1092,1.942,1093,1.942,1094,1.942,1095,1.942,1096,1.942,1097,1.942,1098,1.942,1099,3.757,1100,3.045,1101,1.942,1102,1.942,1103,1.942]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":303,"title":{},"body":{"classes/Menu.html":{},"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0123456789abcdef",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":479,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["1.1.5",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["1.6.4",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["1/21",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["1/27",{"_index":760,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":586,"title":{},"body":{"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["18",{"_index":1006,"title":{},"body":{"overview.html":{}}}],["1f1f1f",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":501,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["2.2.0",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":675,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["2020",{"_index":944,"title":{},"body":{"license.html":{}}}],["272728",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e2f30",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":503,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["3.0.1",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["3.1.3",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":562,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["300",{"_index":677,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["393939",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3f3f3f",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":505,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["4.3.1",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["4.3.5",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":679,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["454545",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["464749",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":556,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["5.1.1",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["5580c0",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5d5f61",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.4",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":681,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["680",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.2",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["729cd4",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["800",{"_index":588,"title":{},"body":{"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["808080",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":1007,"title":{},"body":{"overview.html":{}}}],["900",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_bgcolorclassname",{"_index":566,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_growclassname",{"_index":567,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_shrinkclassname",{"_index":568,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_type",{"_index":137,"title":{},"body":{"classes/AppearanceService.html":{}}}],["_view",{"_index":407,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{}}}],["ability",{"_index":364,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["above",{"_index":974,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":433,"title":{},"body":{"classes/SVController.html":{}}}],["action",{"_index":929,"title":{},"body":{"index.html":{},"license.html":{}}}],["active",{"_index":680,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["activeexpand",{"_index":471,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["activeid",{"_index":463,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["add",{"_index":393,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["add(moduleid",{"_index":369,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["addconfig",{"_index":731,"title":{},"body":{"classes/classBuilder.html":{}}}],["addconfig(config",{"_index":690,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["added",{"_index":933,"title":{},"body":{"index.html":{}}}],["addexpandbutton",{"_index":570,"title":{},"body":{"classes/SplitItemView.html":{}}}],["aliases",{"_index":1009,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["anchor",{"_index":214,"title":{},"body":{"interfaces/Controller.html":{}}}],["and/or",{"_index":965,"title":{},"body":{"license.html":{}}}],["anycolor",{"_index":178,"title":{},"body":{"classes/ColorRef.html":{}}}],["anycolorhex",{"_index":838,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":1,"title":{"classes/App.html":{}},"body":{"classes/App.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app(document.body",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.quit",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appearance",{"_index":189,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearanceservice",{"_index":65,"title":{"classes/AppearanceService.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"coverage.html":{}}}],["appearancetype",{"_index":57,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"miscellaneous/enumerations.html":{}}}],["appearancetype.any",{"_index":195,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearancetype.dark",{"_index":113,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{}}}],["appearancetype.light",{"_index":196,"title":{},"body":{"classes/ColorRef.html":{}}}],["append",{"_index":580,"title":{},"body":{"classes/SplitItemView.html":{},"classes/View.html":{}}}],["append(child",{"_index":616,"title":{},"body":{"classes/SplitItemView.html":{},"classes/View.html":{}}}],["application",{"_index":921,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["applicationmenus",{"_index":71,"title":{},"body":{"classes/App.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationmenustype",{"_index":1010,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aps",{"_index":108,"title":{},"body":{"classes/App.html":{}}}],["aps.onmodechanged((type",{"_index":110,"title":{},"body":{"classes/App.html":{}}}],["arising",{"_index":1002,"title":{},"body":{"license.html":{}}}],["associated",{"_index":955,"title":{},"body":{"license.html":{}}}],["async",{"_index":13,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["authors",{"_index":992,"title":{},"body":{"license.html":{}}}],["auto",{"_index":658,"title":{},"body":{"classes/View.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["automatically",{"_index":932,"title":{},"body":{"index.html":{}}}],["available",{"_index":859,"title":{},"body":{"index.html":{}}}],["await",{"_index":95,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["bababa",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar.svelte",{"_index":76,"title":{},"body":{"classes/App.html":{}}}],["base",{"_index":72,"title":{},"body":{"classes/App.html":{}}}],["basemenu",{"_index":159,"title":{"classes/BaseMenu.html":{}},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["bg",{"_index":584,"title":{},"body":{"classes/SplitItemView.html":{}}}],["bgcolor",{"_index":767,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["board.controller.ts",{"_index":462,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["board.controller.ts:10",{"_index":486,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:11",{"_index":480,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:13",{"_index":481,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:14",{"_index":478,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:31",{"_index":494,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:46",{"_index":497,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:5",{"_index":484,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:53",{"_index":487,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:6",{"_index":482,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:61",{"_index":498,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:7",{"_index":483,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:72",{"_index":491,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:82",{"_index":489,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:9",{"_index":485,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.view.ts",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":216,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/ISettings.html":{},"classes/SplitItemView.html":{}}}],["bootstrap",{"_index":14,"title":{},"body":{"classes/App.html":{}}}],["bordercolor",{"_index":769,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":916,"title":{},"body":{"index.html":{}}}],["break",{"_index":379,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["browserwindow",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder",{"_index":918,"title":{},"body":{"index.html":{}}}],["builder.ts",{"_index":667,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["builder.ts:11",{"_index":669,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["builder.ts:24",{"_index":734,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:30",{"_index":737,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:33",{"_index":736,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:36",{"_index":738,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:44",{"_index":740,"title":{},"body":{"classes/classBuilder.html":{}}}],["building",{"_index":871,"title":{},"body":{"index.html":{}}}],["bundled",{"_index":884,"title":{},"body":{"index.html":{}}}],["button",{"_index":599,"title":{},"body":{"classes/SplitItemView.html":{}}}],["c",{"_index":692,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"license.html":{},"interfaces/stateConfig.html":{}}}],["c0c0c1",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c4666f",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c6c6c6",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":365,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["callback",{"_index":338,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["cancelformerge",{"_index":231,"title":{},"body":{"interfaces/ISplitBoardView.html":{}}}],["cancelwaitformerge",{"_index":571,"title":{},"body":{"classes/SplitItemView.html":{}}}],["canvas/index.ts",{"_index":459,"title":{},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["case",{"_index":194,"title":{},"body":{"classes/ColorRef.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["cgray",{"_index":585,"title":{},"body":{"classes/SplitItemView.html":{}}}],["charge",{"_index":950,"title":{},"body":{"license.html":{}}}],["check",{"_index":221,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["checkexpandstate",{"_index":472,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["checkexpandstate(clientx",{"_index":488,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["child",{"_index":618,"title":{},"body":{"classes/SplitItemView.html":{},"classes/View.html":{}}}],["children",{"_index":339,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["childs",{"_index":621,"title":{},"body":{"classes/SplitItemView.html":{},"classes/View.html":{}}}],["claim",{"_index":995,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classbuilder",{"_index":683,"title":{"classes/classBuilder.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classconfig",{"_index":670,"title":{"interfaces/classConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["classname",{"_index":608,"title":{},"body":{"classes/SplitItemView.html":{}}}],["clear",{"_index":688,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["clientx",{"_index":256,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{}}}],["clienty",{"_index":257,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{}}}],["code",{"_index":852,"title":{},"body":{"index.html":{}}}],["col",{"_index":244,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":181,"title":{},"body":{"classes/ColorRef.html":{},"dependencies.html":{},"index.html":{}}}],["color(appearancetype",{"_index":187,"title":{},"body":{"classes/ColorRef.html":{}}}],["color.ts",{"_index":765,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["colorref",{"_index":175,"title":{"classes/ColorRef.html":{}},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["column",{"_index":545,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["command",{"_index":354,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["common",{"_index":889,"title":{},"body":{"index.html":{}}}],["community",{"_index":850,"title":{},"body":{"index.html":{}}}],["comp",{"_index":408,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{}}}],["compilation",{"_index":907,"title":{},"body":{"index.html":{}}}],["compile",{"_index":903,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":924,"title":{},"body":{"index.html":{}}}],["completed",{"_index":426,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["component",{"_index":424,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["components",{"_index":891,"title":{},"body":{"index.html":{}}}],["concrete",{"_index":845,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":973,"title":{},"body":{"license.html":{}}}],["config",{"_index":83,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/classBuilder.html":{}}}],["config.workbench",{"_index":102,"title":{},"body":{"classes/App.html":{}}}],["configs",{"_index":735,"title":{},"body":{"classes/classBuilder.html":{}}}],["configs.foreach((config",{"_index":686,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["configured",{"_index":920,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1003,"title":{},"body":{"license.html":{}}}],["console",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(item",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":97,"title":{},"body":{"classes/App.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ModuleFactory.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["constructor(@inject('modulefactory",{"_index":714,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["constructor(anycolor",{"_index":182,"title":{},"body":{"classes/ColorRef.html":{}}}],["constructor(config",{"_index":341,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["constructor(configs",{"_index":685,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["constructor(container",{"_index":267,"title":{},"body":{"classes/Menu.html":{},"classes/ModuleFactory.html":{}}}],["constructor(groupmenuservice",{"_index":165,"title":{},"body":{"classes/BaseMenu.html":{}}}],["constructor(modulefactory",{"_index":699,"title":{},"body":{"classes/Workbench.html":{}}}],["constructor(private",{"_index":86,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SplitBoardController.html":{}}}],["constructor(root",{"_index":27,"title":{},"body":{"classes/App.html":{},"classes/View.html":{}}}],["constructor(view",{"_index":477,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["container",{"_index":10,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["containermodule",{"_index":154,"title":{},"body":{"classes/AppearanceService.html":{}}}],["contentview",{"_index":569,"title":{},"body":{"classes/SplitItemView.html":{}}}],["contentview.classlist.add('flex",{"_index":632,"title":{},"body":{"classes/SplitItemView.html":{}}}],["context",{"_index":11,"title":{},"body":{"classes/App.html":{},"interfaces/Controller.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["contextisolation",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":999,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":939,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":936,"title":{},"body":{"index.html":{}}}],["controlaccentcolor",{"_index":770,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlbackgroundcolor",{"_index":771,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controldisabledcolor",{"_index":772,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlforbiddencolor",{"_index":773,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlhighlightcolor",{"_index":774,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":198,"title":{"interfaces/Controller.html":{}},"body":{"interfaces/Controller.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SVController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["controller.ts",{"_index":431,"title":{},"body":{"classes/SVController.html":{},"coverage.html":{}}}],["controller.ts:11",{"_index":440,"title":{},"body":{"classes/SVController.html":{}}}],["controller.ts:15",{"_index":438,"title":{},"body":{"classes/SVController.html":{}}}],["controller.ts:24",{"_index":439,"title":{},"body":{"classes/SVController.html":{}}}],["controller.ts:26",{"_index":443,"title":{},"body":{"classes/SVController.html":{}}}],["controller.ts:27",{"_index":441,"title":{},"body":{"classes/SVController.html":{}}}],["controller.ts:29",{"_index":444,"title":{},"body":{"classes/SVController.html":{}}}],["controller.ts:30",{"_index":442,"title":{},"body":{"classes/SVController.html":{}}}],["controller.ts:32",{"_index":437,"title":{},"body":{"classes/SVController.html":{}}}],["controller.ts:7",{"_index":435,"title":{},"body":{"classes/SVController.html":{}}}],["controller.ts:8",{"_index":434,"title":{},"body":{"classes/SVController.html":{}}}],["controller.ts:9",{"_index":436,"title":{},"body":{"classes/SVController.html":{}}}],["copies",{"_index":967,"title":{},"body":{"license.html":{}}}],["copy",{"_index":953,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":943,"title":{},"body":{"license.html":{}}}],["cosmic",{"_index":841,"title":{},"body":{"index.html":{}}}],["cosmic/core/browser",{"_index":711,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["cosmic/core/common",{"_index":62,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{}}}],["cosmic/core/parts",{"_index":64,"title":{},"body":{"classes/App.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["cosmic/workbench/services/appearance",{"_index":66,"title":{},"body":{"classes/App.html":{}}}],["cosmic/workbench/services/menu",{"_index":69,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["coverage",{"_index":741,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createmenu",{"_index":264,"title":{},"body":{"classes/Menu.html":{}}}],["createwindow",{"_index":747,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["crosshair",{"_index":247,"title":{},"body":{"interfaces/ISplitBoardView.html":{}}}],["current",{"_index":925,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":694,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["d00000",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d1905d",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d2r",{"_index":847,"title":{},"body":{"index.html":{}}}],["d7d7d7",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d9d9d9",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":996,"title":{},"body":{"license.html":{}}}],["dark",{"_index":115,"title":{},"body":{"classes/App.html":{},"miscellaneous/enumerations.html":{}}}],["dark:bg",{"_index":587,"title":{},"body":{"classes/SplitItemView.html":{}}}],["darkcolor",{"_index":179,"title":{},"body":{"classes/ColorRef.html":{}}}],["darkcolorhex",{"_index":837,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date.now",{"_index":327,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["deal",{"_index":956,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1004,"title":{},"body":{"license.html":{}}}],["debugging",{"_index":927,"title":{},"body":{"index.html":{}}}],["declare",{"_index":210,"title":{},"body":{"interfaces/Controller.html":{}}}],["default",{"_index":38,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":226,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["defaultscope",{"_index":88,"title":{},"body":{"classes/App.html":{}}}],["defaultweightmap",{"_index":673,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["dependencies",{"_index":802,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["design",{"_index":842,"title":{},"body":{"index.html":{}}}],["desktop/menu",{"_index":323,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["destroy",{"_index":201,"title":{},"body":{"interfaces/Controller.html":{},"classes/Menu.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["dev",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["develop",{"_index":848,"title":{},"body":{"index.html":{}}}],["development",{"_index":857,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":232,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["directionstyles",{"_index":626,"title":{},"body":{"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["directionstyles[direction",{"_index":651,"title":{},"body":{"classes/SplitItemView.html":{}}}],["directiontype",{"_index":239,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["directiontype.col",{"_index":543,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["directiontype.row",{"_index":549,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["directiontype[props.type",{"_index":720,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["disable",{"_index":352,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["disabled",{"_index":682,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["dist/workbench/desktop",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":930,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribution",{"_index":909,"title":{},"body":{"index.html":{}}}],["divided",{"_index":881,"title":{},"body":{"index.html":{}}}],["document.body.classlist.add('mode",{"_index":114,"title":{},"body":{"classes/App.html":{}}}],["document.body.classlist.remove('mode",{"_index":116,"title":{},"body":{"classes/App.html":{}}}],["document.createelement('div",{"_index":326,"title":{},"body":{"classes/MenuGroupService.html":{},"classes/SVController.html":{},"classes/View.html":{}}}],["document.queryselector('#main",{"_index":125,"title":{},"body":{"classes/App.html":{}}}],["documentation",{"_index":742,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["draft",{"_index":934,"title":{},"body":{"index.html":{}}}],["e",{"_index":248,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["e0e0e0",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":885,"title":{},"body":{"index.html":{}}}],["electron",{"_index":223,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{},"index.html":{}}}],["electron/.exec(process.execpath",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["electronstore",{"_index":222,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":213,"title":{},"body":{"interfaces/Controller.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{}}}],["enableremotemodule",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entire",{"_index":879,"title":{},"body":{"index.html":{}}}],["enum",{"_index":243,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitItemView.html":{}}}],["enumerations",{"_index":823,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["es",{"_index":367,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["eslint",{"_index":351,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":495,"title":{},"body":{"classes/SplitBoardController.html":{},"license.html":{}}}],["event.clientx",{"_index":521,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.clienty",{"_index":508,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.preventdefault",{"_index":522,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.stoppropagation",{"_index":523,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.target",{"_index":515,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["eventemitter2",{"_index":143,"title":{},"body":{"classes/AppearanceService.html":{},"dependencies.html":{}}}],["everyone",{"_index":860,"title":{},"body":{"index.html":{}}}],["evt",{"_index":138,"title":{},"body":{"classes/AppearanceService.html":{}}}],["exist",{"_index":394,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["exist(moduleid",{"_index":384,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["expand",{"_index":499,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{}}}],["expand.svelte",{"_index":625,"title":{},"body":{"classes/SplitItemView.html":{}}}],["expandactive",{"_index":464,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandleavehandler",{"_index":465,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmouseuphandler",{"_index":466,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmovehandler",{"_index":467,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandtype",{"_index":468,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["explorer/index.ts",{"_index":429,"title":{},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["export",{"_index":85,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["express",{"_index":983,"title":{},"body":{"license.html":{}}}],["extends",{"_index":230,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{}}}],["f2f2f2",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f9f9f9",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factory.ts",{"_index":362,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"coverage.html":{}}}],["factory.ts:11",{"_index":396,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:13",{"_index":397,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:14",{"_index":398,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:30",{"_index":401,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:33",{"_index":400,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:36",{"_index":402,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["false",{"_index":227,"title":{},"body":{"interfaces/ISettings.html":{},"classes/SplitBoardController.html":{},"miscellaneous/variables.html":{}}}],["ffae2b",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["file://${join(__dirname",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":931,"title":{},"body":{"index.html":{},"license.html":{}}}],["fitness",{"_index":988,"title":{},"body":{"license.html":{}}}],["flex",{"_index":609,"title":{},"body":{"classes/SplitItemView.html":{},"classes/View.html":{}}}],["flowvalue",{"_index":623,"title":{},"body":{"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["fn",{"_index":147,"title":{},"body":{"classes/AppearanceService.html":{}}}],["focus",{"_index":676,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":972,"title":{},"body":{"license.html":{}}}],["fourthbgcolor",{"_index":775,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":949,"title":{},"body":{"license.html":{}}}],["function",{"_index":148,"title":{},"body":{"classes/AppearanceService.html":{},"interfaces/Controller.html":{},"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":830,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":970,"title":{},"body":{"license.html":{}}}],["get(moduleid",{"_index":382,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["getmenuinsatance",{"_index":314,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["getting",{"_index":839,"title":{"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":928,"title":{},"body":{"index.html":{}}}],["granted",{"_index":948,"title":{},"body":{"license.html":{}}}],["gridbackgroundcolor",{"_index":776,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":70,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["groupmenu",{"_index":126,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.getmenuinsatance().init(menu.title",{"_index":130,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.initcontainer(header",{"_index":128,"title":{},"body":{"classes/App.html":{}}}],["groupmenuservice",{"_index":167,"title":{},"body":{"classes/BaseMenu.html":{}}}],["grow",{"_index":610,"title":{},"body":{"classes/SplitItemView.html":{}}}],["guide",{"_index":858,"title":{},"body":{"index.html":{}}}],["header",{"_index":124,"title":{},"body":{"classes/App.html":{}}}],["height",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["here",{"_index":854,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":947,"title":{},"body":{"license.html":{}}}],["hexdigits",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hide",{"_index":598,"title":{},"body":{"classes/SplitItemView.html":{}}}],["hideexpandbutton",{"_index":572,"title":{},"body":{"classes/SplitItemView.html":{}}}],["holders",{"_index":993,"title":{},"body":{"license.html":{}}}],["hor",{"_index":500,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["horizontal",{"_index":544,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["host",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hover",{"_index":678,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["htmlelement",{"_index":28,"title":{},"body":{"classes/App.html":{},"interfaces/Controller.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["http://localhost:5000/workbench/desktop",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hydrate",{"_index":215,"title":{},"body":{"interfaces/Controller.html":{}}}],["icomponentoptions",{"_index":212,"title":{},"body":{"interfaces/Controller.html":{}}}],["id",{"_index":260,"title":{},"body":{"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["identifier",{"_index":743,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":432,"title":{},"body":{"classes/SVController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["implied",{"_index":984,"title":{},"body":{"license.html":{}}}],["import",{"_index":60,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["import(moduleid).then((module",{"_index":387,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["include",{"_index":888,"title":{},"body":{"index.html":{}}}],["included",{"_index":977,"title":{},"body":{"license.html":{}}}],["including",{"_index":959,"title":{},"body":{"license.html":{}}}],["independently",{"_index":886,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index.svelte",{"_index":425,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["indexable",{"_index":668,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["ing",{"_index":843,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":410,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{}}}],["init",{"_index":202,"title":{},"body":{"interfaces/Controller.html":{},"classes/Menu.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/Workbench.html":{}}}],["init(name",{"_index":281,"title":{},"body":{"classes/Menu.html":{}}}],["init(props",{"_index":422,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["initcontainer",{"_index":315,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["initcontainer(container",{"_index":320,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["initframe",{"_index":15,"title":{},"body":{"classes/App.html":{}}}],["initial",{"_index":659,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["initmenu",{"_index":164,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenu(menuitems",{"_index":168,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenus",{"_index":16,"title":{},"body":{"classes/App.html":{}}}],["initmodules",{"_index":17,"title":{},"body":{"classes/App.html":{}}}],["initnavigationbar",{"_index":18,"title":{},"body":{"classes/App.html":{}}}],["initpreferences",{"_index":19,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel",{"_index":20,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel(container",{"_index":50,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel",{"_index":21,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel(container",{"_index":52,"title":{},"body":{"classes/App.html":{}}}],["initstatusbar",{"_index":22,"title":{},"body":{"classes/App.html":{}}}],["initstyle",{"_index":23,"title":{},"body":{"classes/App.html":{}}}],["initstylemode",{"_index":24,"title":{},"body":{"classes/App.html":{}}}],["initstylemode(type",{"_index":56,"title":{},"body":{"classes/App.html":{}}}],["initwithcomponent",{"_index":409,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{}}}],["initwithcomponent(target",{"_index":415,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{}}}],["initworkarea",{"_index":25,"title":{},"body":{"classes/App.html":{}}}],["inject",{"_index":153,"title":{},"body":{"classes/AppearanceService.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject(token",{"_index":833,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":152,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SVController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["inline",{"_index":218,"title":{},"body":{"interfaces/Controller.html":{}}}],["insertconfig",{"_index":732,"title":{},"body":{"classes/classBuilder.html":{}}}],["insertconfig(config",{"_index":691,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["interface",{"_index":197,"title":{"interfaces/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/WorkbenchProps.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}},"body":{"interfaces/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["interfaces",{"_index":199,"title":{},"body":{"interfaces/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/WorkbenchProps.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["intro",{"_index":217,"title":{},"body":{"interfaces/Controller.html":{}}}],["inversify",{"_index":61,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SVController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"dependencies.html":{}}}],["ipc",{"_index":892,"title":{},"body":{"index.html":{}}}],["isettings",{"_index":219,"title":{"interfaces/ISettings.html":{}},"body":{"interfaces/ISettings.html":{},"coverage.html":{}}}],["isplitboardview",{"_index":228,"title":{"interfaces/ISplitBoardView.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"coverage.html":{}}}],["isprod",{"_index":749,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isshrink",{"_index":573,"title":{},"body":{"classes/SplitItemView.html":{}}}],["issues",{"_index":853,"title":{},"body":{"index.html":{}}}],["item",{"_index":288,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["item.id",{"_index":334,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["item.root",{"_index":517,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientheight",{"_index":552,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientwidth",{"_index":548,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.getboundingclientrect().left",{"_index":547,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.getboundingclientrect().top",{"_index":551,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.ts",{"_index":337,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["item.ts:18",{"_index":345,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:19",{"_index":346,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:20",{"_index":348,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:21",{"_index":344,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:22",{"_index":342,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.view",{"_index":242,"title":{},"body":{"interfaces/ISplitBoardView.html":{}}}],["item.view.ts",{"_index":565,"title":{},"body":{"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["item.view.ts:12",{"_index":590,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:13",{"_index":591,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:14",{"_index":589,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:16",{"_index":592,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:17",{"_index":583,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:25",{"_index":604,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:32",{"_index":602,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:39",{"_index":607,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:46",{"_index":612,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:53",{"_index":600,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:57",{"_index":605,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:63",{"_index":595,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:67",{"_index":597,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:71",{"_index":615,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:77",{"_index":596,"title":{},"body":{"classes/SplitItemView.html":{}}}],["items",{"_index":233,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["join(__dirname",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keycode",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["kind",{"_index":982,"title":{},"body":{"license.html":{}}}],["labelcolor",{"_index":777,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["length",{"_index":254,"title":{},"body":{"interfaces/ISplitBoardView.html":{}}}],["liability",{"_index":997,"title":{},"body":{"license.html":{}}}],["liable",{"_index":994,"title":{},"body":{"license.html":{}}}],["license",{"_index":864,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["light",{"_index":829,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lightcolor",{"_index":180,"title":{},"body":{"classes/ColorRef.html":{}}}],["lightcolorhex",{"_index":836,"title":{},"body":{"miscellaneous/functions.html":{}}}],["limitation",{"_index":960,"title":{},"body":{"license.html":{}}}],["limited",{"_index":985,"title":{},"body":{"license.html":{}}}],["linux",{"_index":912,"title":{},"body":{"index.html":{}}}],["literal",{"_index":1013,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["liveresize",{"_index":473,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["liveresize(clientx",{"_index":490,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["load",{"_index":395,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["load(moduleid",{"_index":386,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["local",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":806,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":753,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error(json.stringify(err",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lowboardroot",{"_index":761,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":376,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.inrequestscope",{"_index":381,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.insingletonscope",{"_index":378,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.intransientscope",{"_index":380,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["macos",{"_index":910,"title":{},"body":{"index.html":{}}}],["main",{"_index":894,"title":{},"body":{"index.html":{}}}],["mainwindow",{"_index":750,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mainwindow.loadurl(url).catch((err",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.on('closed",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.webcontents.opendevtools",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor",{"_index":766,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makecolor('#000000",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#3f3f3f",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#5580c0",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#729cd4",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#bababa",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c0c0c1",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c4666f",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c6c6c6",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d00000",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d1905d",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d7d7d7",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d9d9d9",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#e0e0e0",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f2f2f2",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f9f9f9",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffae2b",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffffff",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor(anycolorhex",{"_index":835,"title":{},"body":{"miscellaneous/functions.html":{}}}],["map",{"_index":41,"title":{},"body":{"classes/App.html":{},"interfaces/Controller.html":{},"classes/Menu.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["matching",{"_index":133,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":129,"title":{"classes/Menu.html":{}},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menu(menucontainer",{"_index":330,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menu.id",{"_index":335,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menu.items",{"_index":131,"title":{},"body":{"classes/App.html":{}}}],["menu.svelte",{"_index":287,"title":{},"body":{"classes/Menu.html":{}}}],["menu.ts",{"_index":162,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["menu.ts:5",{"_index":166,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu.ts:8",{"_index":170,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu/base",{"_index":161,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["menu/config",{"_index":73,"title":{},"body":{"classes/App.html":{}}}],["menu/config.ts",{"_index":795,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menucommonfunction",{"_index":343,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/typealiases.html":{}}}],["menucontainer",{"_index":325,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menugroupservice",{"_index":68,"title":{"classes/MenuGroupService.html":{}},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/MenuGroupService.html":{},"coverage.html":{}}}],["menuinstance",{"_index":163,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuitem",{"_index":273,"title":{"classes/MenuItem.html":{}},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menuitem(config",{"_index":304,"title":{},"body":{"classes/Menu.html":{}}}],["menuitem(menuitem",{"_index":298,"title":{},"body":{"classes/Menu.html":{}}}],["menuitemconfig",{"_index":169,"title":{"interfaces/MenuItemConfig.html":{}},"body":{"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menuitems",{"_index":171,"title":{},"body":{"classes/BaseMenu.html":{},"classes/Menu.html":{}}}],["menuitemtype",{"_index":347,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/enumerations.html":{}}}],["menuitemtype.group",{"_index":355,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["menusvelte",{"_index":261,"title":{},"body":{"classes/Menu.html":{}}}],["merchantability",{"_index":987,"title":{},"body":{"license.html":{}}}],["merge",{"_index":504,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["metadata",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":12,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["meuns",{"_index":313,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["meunswritable",{"_index":262,"title":{},"body":{"classes/Menu.html":{}}}],["minimum",{"_index":868,"title":{},"body":{"index.html":{}}}],["minwidth",{"_index":712,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["miscellaneous",{"_index":822,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":863,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":555,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["modify",{"_index":963,"title":{},"body":{"license.html":{}}}],["module",{"_index":370,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["module.default",{"_index":389,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["module.init(props",{"_index":392,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["moduleconfig",{"_index":360,"title":{"interfaces/ModuleConfig.html":{}},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modulefactory",{"_index":63,"title":{"classes/ModuleFactory.html":{}},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modulefactory(this.container",{"_index":98,"title":{},"body":{"classes/App.html":{}}}],["modulefactory.load(config.workbench.id",{"_index":101,"title":{},"body":{"classes/App.html":{}}}],["moduleid",{"_index":399,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["modules",{"_index":368,"title":{"modules.html":{}},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"index.html":{},"modules.html":{}}}],["monorepo",{"_index":878,"title":{},"body":{"index.html":{}}}],["more",{"_index":873,"title":{},"body":{"index.html":{}}}],["mousedown",{"_index":524,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["mouseevent",{"_index":493,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["n",{"_index":251,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":33,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["namewritable",{"_index":263,"title":{},"body":{"classes/Menu.html":{}}}],["navigation",{"_index":74,"title":{},"body":{"classes/App.html":{}}}],["navigationbar",{"_index":118,"title":{},"body":{"classes/App.html":{}}}],["new",{"_index":40,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":904,"title":{},"body":{"index.html":{}}}],["none",{"_index":660,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["noninfringement",{"_index":991,"title":{},"body":{"license.html":{}}}],["normalizeweight",{"_index":733,"title":{},"body":{"classes/classBuilder.html":{}}}],["normalizeweight(config",{"_index":739,"title":{},"body":{"classes/classBuilder.html":{}}}],["nothing",{"_index":872,"title":{},"body":{"index.html":{}}}],["notice",{"_index":975,"title":{},"body":{"license.html":{}}}],["notification",{"_index":751,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":919,"title":{},"body":{"index.html":{}}}],["null",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":252,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":952,"title":{},"body":{"license.html":{}}}],["offsetx",{"_index":553,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["offsety",{"_index":554,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["onmodechanged",{"_index":140,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmodechanged(fn",{"_index":145,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmousedown",{"_index":474,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["onmousedown(event",{"_index":492,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["optional",{"_index":35,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{}}}],["orderedconfigs",{"_index":684,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["organization",{"_index":940,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1001,"title":{},"body":{"license.html":{}}}],["out",{"_index":915,"title":{},"body":{"index.html":{},"license.html":{}}}],["overview",{"_index":1005,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":721,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["package",{"_index":801,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":883,"title":{},"body":{"index.html":{}}}],["packaging",{"_index":906,"title":{},"body":{"index.html":{}}}],["page",{"_index":900,"title":{},"body":{"index.html":{}}}],["panel/index.ts",{"_index":405,"title":{},"body":{"classes/PropertyPanel.html":{},"coverage.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":989,"title":{},"body":{"license.html":{}}}],["permission",{"_index":946,"title":{},"body":{"license.html":{}}}],["permit",{"_index":968,"title":{},"body":{"license.html":{}}}],["person",{"_index":951,"title":{},"body":{"license.html":{}}}],["persons",{"_index":969,"title":{},"body":{"license.html":{}}}],["platform",{"_index":926,"title":{},"body":{"index.html":{}}}],["port",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":979,"title":{},"body":{"license.html":{}}}],["position",{"_index":255,"title":{},"body":{"interfaces/ISplitBoardView.html":{}}}],["possible",{"_index":923,"title":{},"body":{"index.html":{}}}],["practice",{"_index":846,"title":{},"body":{"index.html":{}}}],["preload",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preload.js",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepend",{"_index":581,"title":{},"body":{"classes/SplitItemView.html":{},"classes/View.html":{}}}],["prepend(...childs",{"_index":619,"title":{},"body":{"classes/SplitItemView.html":{},"classes/View.html":{}}}],["private",{"_index":9,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["process.env.node_env",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":880,"title":{},"body":{"index.html":{}}}],["project",{"_index":874,"title":{},"body":{"index.html":{}}}],["promise",{"_index":209,"title":{},"body":{"interfaces/Controller.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["propertypanel",{"_index":81,"title":{"classes/PropertyPanel.html":{}},"body":{"classes/App.html":{},"classes/PropertyPanel.html":{},"coverage.html":{}}}],["props",{"_index":121,"title":{},"body":{"classes/App.html":{},"interfaces/Controller.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/Workbench.html":{}}}],["props.modules",{"_index":722,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.scale",{"_index":727,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.scope",{"_index":390,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["provided",{"_index":980,"title":{},"body":{"license.html":{}}}],["provides",{"_index":363,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["public",{"_index":139,"title":{},"body":{"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["publish",{"_index":855,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":990,"title":{},"body":{"license.html":{}}}],["qiansc",{"_index":945,"title":{},"body":{"license.html":{}}}],["quickly",{"_index":922,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":259,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["ready",{"_index":908,"title":{},"body":{"index.html":{}}}],["record",{"_index":211,"title":{},"body":{"interfaces/Controller.html":{}}}],["ref.ts",{"_index":177,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["ref.ts:15",{"_index":188,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:5",{"_index":185,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:6",{"_index":186,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:7",{"_index":183,"title":{},"body":{"classes/ColorRef.html":{}}}],["reflect",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["registeritem",{"_index":265,"title":{},"body":{"classes/Menu.html":{}}}],["registeritem(config",{"_index":283,"title":{},"body":{"classes/Menu.html":{}}}],["release",{"_index":935,"title":{},"body":{"index.html":{}}}],["removeitem",{"_index":266,"title":{},"body":{"classes/Menu.html":{}}}],["removeitem(index",{"_index":285,"title":{},"body":{"classes/Menu.html":{}}}],["removemenuinstances",{"_index":316,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["removemenuinstances(menu",{"_index":321,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["replacecontent",{"_index":574,"title":{},"body":{"classes/SplitItemView.html":{}}}],["replacecontent(contentview",{"_index":601,"title":{},"body":{"classes/SplitItemView.html":{}}}],["repository",{"_index":844,"title":{},"body":{"index.html":{}}}],["request",{"_index":373,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["required",{"_index":867,"title":{},"body":{"index.html":{}}}],["resize",{"_index":246,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{}}}],["resizeat",{"_index":234,"title":{},"body":{"interfaces/ISplitBoardView.html":{}}}],["resourceexplorer",{"_index":427,"title":{"classes/ResourceExplorer.html":{}},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["resourcepage",{"_index":79,"title":{},"body":{"classes/App.html":{}}}],["restriction",{"_index":958,"title":{},"body":{"license.html":{}}}],["result",{"_index":132,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":134,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":158,"title":{},"body":{"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["returns",{"_index":43,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["rights",{"_index":961,"title":{},"body":{"license.html":{}}}],["roadmap",{"_index":856,"title":{},"body":{"index.html":{}}}],["rollup",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":36,"title":{},"body":{"classes/App.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["rounded",{"_index":642,"title":{},"body":{"classes/SplitItemView.html":{}}}],["row",{"_index":245,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":366,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"index.html":{}}}],["s",{"_index":250,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["scale",{"_index":713,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["scope",{"_index":371,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["script",{"_index":895,"title":{},"body":{"index.html":{}}}],["secondarybgcolor",{"_index":778,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["secondarylabelcolor",{"_index":779,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":937,"title":{},"body":{"index.html":{}}}],["sell",{"_index":966,"title":{},"body":{"license.html":{}}}],["server",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":67,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["service.ts",{"_index":136,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":144,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:12",{"_index":151,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{}}}],["service.ts:18",{"_index":146,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:19",{"_index":319,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:21",{"_index":149,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:28",{"_index":322,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:6",{"_index":318,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:7",{"_index":317,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:9",{"_index":142,"title":{},"body":{"classes/AppearanceService.html":{}}}],["set",{"_index":942,"title":{},"body":{"index.html":{}}}],["setactivestate",{"_index":475,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setactivestate(index",{"_index":496,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setcontent",{"_index":575,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setcontent(contentview",{"_index":603,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setcursor",{"_index":235,"title":{},"body":{"interfaces/ISplitBoardView.html":{}}}],["setdefaultclass",{"_index":576,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setflow",{"_index":582,"title":{},"body":{"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setflow(type",{"_index":622,"title":{},"body":{"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setgrow",{"_index":577,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setgrow(classname",{"_index":606,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setshrink",{"_index":578,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setshrink(classname",{"_index":611,"title":{},"body":{"classes/SplitItemView.html":{}}}],["settings",{"_index":225,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shadow",{"_index":353,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["shall",{"_index":976,"title":{},"body":{"license.html":{}}}],["shapecanvas",{"_index":457,"title":{"classes/ShapeCanvas.html":{}},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["shrink",{"_index":613,"title":{},"body":{"classes/SplitItemView.html":{}}}],["similar",{"_index":877,"title":{},"body":{"index.html":{}}}],["singleton",{"_index":89,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["smelte",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":954,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["split",{"_index":241,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["split.js",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["splitboard",{"_index":698,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["splitboardcontroller",{"_index":460,"title":{"classes/SplitBoardController.html":{}},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["splitboardview",{"_index":701,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["splitboardview().setflow('1",{"_index":716,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["splitcolumnat",{"_index":236,"title":{},"body":{"interfaces/ISplitBoardView.html":{}}}],["splitexpand",{"_index":593,"title":{},"body":{"classes/SplitItemView.html":{}}}],["splititemview",{"_index":240,"title":{"classes/SplitItemView.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["splititemview().setcontent(module.view",{"_index":724,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["splitrowat",{"_index":237,"title":{},"body":{"interfaces/ISplitBoardView.html":{}}}],["src/.../appearance.ts",{"_index":824,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../class",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.ts",{"_index":1011,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inject.ts",{"_index":831,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.ts",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu",{"_index":827,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../settings.ts",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../split",{"_index":825,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../type.ts",{"_index":826,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../ui",{"_index":832,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../view.ts",{"_index":1012,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app",{"_index":893,"title":{},"body":{"index.html":{}}}],["src/app/index.ts",{"_index":745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/logger.ts",{"_index":752,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/settings.ts",{"_index":220,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core",{"_index":887,"title":{},"body":{"index.html":{}}}],["src/core/browser/class",{"_index":666,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/layout/split",{"_index":461,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/layout/type.ts",{"_index":229,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/browser/style/ui",{"_index":764,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/view.ts",{"_index":653,"title":{},"body":{"classes/View.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/browser/view.ts:13",{"_index":655,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:17",{"_index":656,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:4",{"_index":654,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:8",{"_index":657,"title":{},"body":{"classes/View.html":{}}}],["src/core/common/appearance.ts",{"_index":828,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/common/color",{"_index":176,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["src/core/components",{"_index":902,"title":{},"body":{"index.html":{}}}],["src/core/parts/ioc/inject.ts",{"_index":790,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/core/parts/modules/controller.ts",{"_index":200,"title":{},"body":{"interfaces/Controller.html":{},"coverage.html":{}}}],["src/core/parts/modules/module",{"_index":361,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"coverage.html":{}}}],["src/core/parts/modules/svelte",{"_index":430,"title":{},"body":{"classes/SVController.html":{},"coverage.html":{}}}],["src/modules",{"_index":896,"title":{},"body":{"index.html":{}}}],["src/modules/property",{"_index":404,"title":{},"body":{"classes/PropertyPanel.html":{},"coverage.html":{}}}],["src/modules/resource",{"_index":428,"title":{},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["src/modules/shape",{"_index":458,"title":{},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["src/modules/workbench/index.ts",{"_index":697,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["src/modules/workbench/index.ts:14",{"_index":702,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:15",{"_index":700,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:20",{"_index":706,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:23",{"_index":705,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:37",{"_index":709,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:40",{"_index":707,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:44",{"_index":710,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:47",{"_index":708,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:51",{"_index":703,"title":{},"body":{"classes/Workbench.html":{}}}],["src/workbench",{"_index":898,"title":{},"body":{"index.html":{}}}],["src/workbench/desktop/app.ts",{"_index":6,"title":{},"body":{"classes/App.html":{},"coverage.html":{}}}],["src/workbench/desktop/app.ts:100",{"_index":54,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:15",{"_index":37,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:16",{"_index":30,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:23",{"_index":42,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:29",{"_index":47,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:39",{"_index":49,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:44",{"_index":55,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:49",{"_index":58,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:57",{"_index":44,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:61",{"_index":48,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:71",{"_index":46,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:80",{"_index":53,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:88",{"_index":51,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:96",{"_index":59,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/base",{"_index":160,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/desktop/main.ts",{"_index":796,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/desktop/menu/menu",{"_index":336,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/workbench/desktop/menu/menu.ts",{"_index":258,"title":{},"body":{"classes/Menu.html":{},"coverage.html":{}}}],["src/workbench/desktop/menu/menu.ts:10",{"_index":274,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:11",{"_index":275,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:12",{"_index":271,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:13",{"_index":277,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:14",{"_index":269,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:23",{"_index":282,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:31",{"_index":280,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:38",{"_index":284,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:43",{"_index":286,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:49",{"_index":279,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:7",{"_index":270,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:8",{"_index":272,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:9",{"_index":278,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/utils/utils.ts",{"_index":798,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/services/appearance",{"_index":135,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["src/workbench/services/menu",{"_index":312,"title":{},"body":{"classes/MenuGroupService.html":{},"coverage.html":{}}}],["standard",{"_index":862,"title":{},"body":{"index.html":{}}}],["start",{"_index":253,"title":{},"body":{"interfaces/ISplitBoardView.html":{}}}],["started",{"_index":840,"title":{"index.html":{},"license.html":{}},"body":{}}],["startx",{"_index":469,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["starty",{"_index":470,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["stateconfig",{"_index":671,"title":{"interfaces/stateConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["statements",{"_index":744,"title":{},"body":{"coverage.html":{}}}],["statically",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statusbar",{"_index":77,"title":{},"body":{"classes/App.html":{}}}],["step",{"_index":905,"title":{},"body":{"index.html":{}}}],["sth",{"_index":117,"title":{},"body":{"classes/App.html":{}}}],["store",{"_index":224,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{}}}],["storybook",{"_index":901,"title":{},"body":{"index.html":{}}}],["string",{"_index":268,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":875,"title":{},"body":{"index.html":{}}}],["subject",{"_index":971,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":964,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":978,"title":{},"body":{"license.html":{}}}],["such",{"_index":890,"title":{},"body":{"index.html":{}}}],["super",{"_index":627,"title":{},"body":{"classes/SplitItemView.html":{}}}],["support",{"_index":914,"title":{},"body":{"index.html":{}}}],["svcontroller",{"_index":406,"title":{"classes/SVController.html":{}},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["svcontroller:11",{"_index":419,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["svcontroller:14",{"_index":417,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["svcontroller:15",{"_index":423,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["svcontroller:18",{"_index":420,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["svcontroller:21",{"_index":418,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["svcontroller:32",{"_index":421,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["svcontroller:5",{"_index":416,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["svcontroller:7",{"_index":413,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["svcontroller:8",{"_index":411,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["svcontroller:9",{"_index":414,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["svelte/internal",{"_index":445,"title":{},"body":{"classes/SVController.html":{}}}],["svelte/store",{"_index":289,"title":{},"body":{"classes/Menu.html":{}}}],["sveltecomponentdev",{"_index":412,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{}}}],["switch",{"_index":193,"title":{},"body":{"classes/ColorRef.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["symbol.for('flowtableroot",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["systembluecolor",{"_index":780,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemgraycolor",{"_index":781,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemorangecolor",{"_index":782,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systempinkcolor",{"_index":783,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemredcolor",{"_index":784,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemyellowcolor",{"_index":785,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":208,"title":{},"body":{"interfaces/Controller.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{}}}],["table",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":119,"title":{},"body":{"classes/App.html":{},"interfaces/Controller.html":{},"classes/Menu.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/variables.html":{}}}],["target.classlist.contains('split",{"_index":519,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["target.parentelement",{"_index":518,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["template",{"_index":866,"title":{},"body":{"index.html":{}}}],["tertiarybgcolor",{"_index":786,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tertiarylabelcolor",{"_index":787,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["textfieldbackground",{"_index":788,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["this._growclassname",{"_index":637,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._shrinkclassname",{"_index":636,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._type",{"_index":155,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this._view",{"_index":446,"title":{},"body":{"classes/SVController.html":{}}}],["this._view.parentnode",{"_index":454,"title":{},"body":{"classes/SVController.html":{}}}],["this._view.parentnode.removechild(this._view",{"_index":455,"title":{},"body":{"classes/SVController.html":{}}}],["this.activeexpand",{"_index":527,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.activeid",{"_index":528,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.add(moduleid",{"_index":388,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.addexpandbutton",{"_index":628,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.anycolor",{"_index":190,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.callback",{"_index":359,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.cancelwaitformerge",{"_index":648,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.checkexpandstate(event.clientx",{"_index":509,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.children",{"_index":356,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.comp",{"_index":449,"title":{},"body":{"classes/SVController.html":{}}}],["this.comp.$destroy",{"_index":453,"title":{},"body":{"classes/SVController.html":{}}}],["this.container",{"_index":87,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{}}}],["this.container.append(menucontainer",{"_index":329,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.container.bind('modulefactory').todynamicvalue",{"_index":99,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(appearanceservice).to(appearanceservice",{"_index":106,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(menugroupservice).to(menugroupservice",{"_index":107,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(moduleid).to(module",{"_index":377,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.container.firstchild",{"_index":300,"title":{},"body":{"classes/Menu.html":{}}}],["this.container.get(appearanceservice",{"_index":109,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(menugroupservice",{"_index":127,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(moduleid",{"_index":391,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.container.removechild(menu.container",{"_index":332,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.container.removechild(this.container.firstchild",{"_index":301,"title":{},"body":{"classes/Menu.html":{}}}],["this.contentview",{"_index":630,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.context",{"_index":122,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{}}}],["this.context.set('container",{"_index":90,"title":{},"body":{"classes/App.html":{}}}],["this.context.set('menus",{"_index":292,"title":{},"body":{"classes/Menu.html":{}}}],["this.context.set('name",{"_index":294,"title":{},"body":{"classes/Menu.html":{}}}],["this.createmenu",{"_index":299,"title":{},"body":{"classes/Menu.html":{}}}],["this.darkcolor",{"_index":192,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.evt.emit('onmodechanged",{"_index":156,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.evt.on('onmodechanged",{"_index":157,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.exist(moduleid",{"_index":374,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.expand",{"_index":646,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.expandhidden",{"_index":647,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.mergedirection",{"_index":650,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expandactive",{"_index":532,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandleavehandler",{"_index":510,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmouseuphandler",{"_index":512,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmovehandler",{"_index":506,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandtype",{"_index":534,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.groupmenuservice.getmenuinsatance",{"_index":173,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.id",{"_index":290,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.initmenus",{"_index":123,"title":{},"body":{"classes/App.html":{}}}],["this.initmodules",{"_index":96,"title":{},"body":{"classes/App.html":{}}}],["this.initnavigationbar",{"_index":93,"title":{},"body":{"classes/App.html":{}}}],["this.initpreferences",{"_index":91,"title":{},"body":{"classes/App.html":{}}}],["this.initstatusbar",{"_index":94,"title":{},"body":{"classes/App.html":{}}}],["this.initstyle",{"_index":92,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(appearancetype.dark",{"_index":112,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(type",{"_index":111,"title":{},"body":{"classes/App.html":{}}}],["this.initwithcomponent(this._view",{"_index":450,"title":{},"body":{"classes/SVController.html":{}}}],["this.insertconfig(config",{"_index":687,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.lightcolor",{"_index":191,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.liveresize(event.clientx",{"_index":507,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.menuinstance",{"_index":172,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.menuinstance.init",{"_index":174,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.menuitems",{"_index":291,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.filter((_",{"_index":308,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.push(new",{"_index":297,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.splice(index",{"_index":302,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems[index",{"_index":306,"title":{},"body":{"classes/Menu.html":{}}}],["this.menusvelte",{"_index":309,"title":{},"body":{"classes/Menu.html":{}}}],["this.meuns",{"_index":324,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meuns.filter((item",{"_index":333,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meuns.length",{"_index":328,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meuns.push(menu",{"_index":331,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meunswritable",{"_index":293,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set((this.menuitems",{"_index":307,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set([...this.menuitems",{"_index":305,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set(this.menuitems",{"_index":311,"title":{},"body":{"classes/Menu.html":{}}}],["this.modulefactory",{"_index":717,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.modulefactory.load(p.id",{"_index":723,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.modules.get(moduleid",{"_index":383,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.modules.has(moduleid",{"_index":385,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.modules.set(moduleid",{"_index":375,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.name",{"_index":296,"title":{},"body":{"classes/Menu.html":{}}}],["this.namewritable",{"_index":295,"title":{},"body":{"classes/Menu.html":{}}}],["this.namewritable.set(this.name",{"_index":310,"title":{},"body":{"classes/Menu.html":{}}}],["this.normalizeweight(config",{"_index":693,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.onmousedown(event",{"_index":514,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.orderedconfigs",{"_index":689,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor",{"_index":695,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor].weight",{"_index":696,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.prepend(contentview",{"_index":633,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.props",{"_index":447,"title":{},"body":{"classes/SVController.html":{}}}],["this.root",{"_index":120,"title":{},"body":{"classes/App.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["this.root.appendchild(child",{"_index":663,"title":{},"body":{"classes/View.html":{}}}],["this.root.appendchild(workbench.view",{"_index":104,"title":{},"body":{"classes/App.html":{}}}],["this.root.classlist.add('flex",{"_index":641,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('relative",{"_index":644,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('split",{"_index":631,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('wait",{"_index":649,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(...this._bgcolorclassname",{"_index":645,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(`flex",{"_index":662,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.add(this._growclassname",{"_index":638,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(this._shrinkclassname",{"_index":640,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove('flex",{"_index":661,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.remove('wait",{"_index":652,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._growclassname",{"_index":639,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._shrinkclassname",{"_index":635,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.prepend(...childs",{"_index":664,"title":{},"body":{"classes/View.html":{}}}],["this.root.replacechild(contentview",{"_index":634,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.setactivestate(index",{"_index":520,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.setdefaultclass",{"_index":629,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.splitboard",{"_index":715,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.additem(view",{"_index":725,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.applysplit",{"_index":726,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.direction",{"_index":719,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.root",{"_index":718,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.startx",{"_index":525,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.starty",{"_index":526,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.title",{"_index":357,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.type",{"_index":358,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.unactiveexpand",{"_index":511,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view",{"_index":728,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.view.cancelformerge",{"_index":539,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.direction",{"_index":542,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items.foreach((item",{"_index":516,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items[this.activeid",{"_index":541,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.resizeat(this.activeid",{"_index":546,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousedown",{"_index":513,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseleave",{"_index":530,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousemove",{"_index":529,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseup",{"_index":531,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseleave",{"_index":537,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mousemove",{"_index":536,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseup",{"_index":538,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor",{"_index":540,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('col",{"_index":557,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('crosshair",{"_index":535,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('n",{"_index":561,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('row",{"_index":558,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('w",{"_index":559,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitcolumnat(this.activeid",{"_index":563,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitrowat(this.activeid",{"_index":564,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.waitformergeatitem(this.activeid",{"_index":560,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.viewdidappear",{"_index":451,"title":{},"body":{"classes/SVController.html":{}}}],["this.viewdiddisappear",{"_index":456,"title":{},"body":{"classes/SVController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.viewwillappear",{"_index":448,"title":{},"body":{"classes/SVController.html":{}}}],["this.viewwilldisappear",{"_index":452,"title":{},"body":{"classes/SVController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["three",{"_index":882,"title":{},"body":{"index.html":{}}}],["title",{"_index":340,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["together",{"_index":849,"title":{},"body":{"index.html":{}}}],["token",{"_index":834,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tools",{"_index":897,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1000,"title":{},"body":{"license.html":{}}}],["transient",{"_index":372,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["true",{"_index":533,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":34,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/Controller.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1008,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/color",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["ui/components/navigation/navigation",{"_index":75,"title":{},"body":{"classes/App.html":{}}}],["ui/components/property/proterty.svelte",{"_index":82,"title":{},"body":{"classes/App.html":{}}}],["ui/components/resource/resource.svelte",{"_index":80,"title":{},"body":{"classes/App.html":{}}}],["ui/components/status/status",{"_index":78,"title":{},"body":{"classes/App.html":{}}}],["unactiveexpand",{"_index":476,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["undefined",{"_index":674,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":861,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":403,"title":{},"body":{"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/Workbench.html":{}}}],["update",{"_index":913,"title":{},"body":{"index.html":{}}}],["updatemode",{"_index":141,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updatemode(type",{"_index":150,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updater",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["url",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":962,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":870,"title":{},"body":{"index.html":{}}}],["user",{"_index":941,"title":{},"body":{"index.html":{}}}],["using",{"_index":917,"title":{},"body":{"index.html":{}}}],["utils",{"_index":350,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"index.html":{}}}],["uuid",{"_index":349,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":39,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Menu.html":{},"classes/ModuleFactory.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/classBuilder.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1014,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":502,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["version",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":550,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["very",{"_index":876,"title":{},"body":{"index.html":{}}}],["view",{"_index":203,"title":{"classes/View.html":{}},"body":{"interfaces/Controller.html":{},"interfaces/ISplitBoardView.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["view.parentnode",{"_index":729,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.parentnode.removechild(view",{"_index":730,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view:13",{"_index":617,"title":{},"body":{"classes/SplitItemView.html":{}}}],["view:17",{"_index":620,"title":{},"body":{"classes/SplitItemView.html":{}}}],["view:4",{"_index":594,"title":{},"body":{"classes/SplitItemView.html":{}}}],["view:8",{"_index":624,"title":{},"body":{"classes/SplitItemView.html":{}}}],["viewdidappear",{"_index":204,"title":{},"body":{"interfaces/Controller.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewdiddisappear",{"_index":205,"title":{},"body":{"interfaces/Controller.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewwillappear",{"_index":206,"title":{},"body":{"interfaces/Controller.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewwilldisappear",{"_index":207,"title":{},"body":{"interfaces/Controller.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["vite",{"_index":869,"title":{},"body":{"index.html":{}}}],["void",{"_index":45,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"interfaces/Controller.html":{},"interfaces/ISplitBoardView.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/SVController.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["w",{"_index":249,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["waitformerge",{"_index":579,"title":{},"body":{"classes/SplitItemView.html":{}}}],["waitformerge(direction",{"_index":614,"title":{},"body":{"classes/SplitItemView.html":{}}}],["waitformergeatitem",{"_index":238,"title":{},"body":{"interfaces/ISplitBoardView.html":{}}}],["warranties",{"_index":986,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":981,"title":{},"body":{"license.html":{}}}],["web",{"_index":899,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["webpreferences",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":672,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["weightmap",{"_index":665,"title":{"interfaces/WeightMap.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["whether",{"_index":998,"title":{},"body":{"license.html":{}}}],["width",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wiki",{"_index":938,"title":{},"body":{"index.html":{}}}],["windows",{"_index":911,"title":{},"body":{"index.html":{}}}],["without",{"_index":957,"title":{},"body":{"license.html":{}}}],["work",{"_index":851,"title":{},"body":{"index.html":{}}}],["workbench",{"_index":100,"title":{"classes/Workbench.html":{}},"body":{"classes/App.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["workbench.viewdidappear",{"_index":105,"title":{},"body":{"classes/App.html":{}}}],["workbench.viewwillappear",{"_index":103,"title":{},"body":{"classes/App.html":{}}}],["workbench/desktop/app.config.json",{"_index":84,"title":{},"body":{"classes/App.html":{}}}],["workbenchprops",{"_index":704,"title":{"interfaces/WorkbenchProps.html":{}},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["works",{"_index":865,"title":{},"body":{"index.html":{}}}],["writable",{"_index":276,"title":{},"body":{"classes/Menu.html":{}}}],["xl",{"_index":643,"title":{},"body":{"classes/SplitItemView.html":{}}}],["yes",{"_index":184,"title":{},"body":{"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/View.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/App.html":{"url":"classes/App.html","title":"class - App","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/app.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                context\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bootstrap\n                            \n                            \n                                initFrame\n                            \n                            \n                                initMenus\n                            \n                            \n                                    Async\n                                initModules\n                            \n                            \n                                initNavigationBar\n                            \n                            \n                                initPreferences\n                            \n                            \n                                initPropertyPanel\n                            \n                            \n                                initResourcePanel\n                            \n                            \n                                initStatusBar\n                            \n                            \n                                initStyle\n                            \n                            \n                                initStyleMode\n                            \n                            \n                                initWorkArea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/app.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Container\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        bootstrap\n                        \n                    \n                \n            \n            \n                \n                    \n                    bootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFrame\n                        \n                    \n                \n            \n            \n                \ninitFrame()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initMenus\n                        \n                    \n                \n            \n            \n                \ninitMenus()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initModules\n                        \n                    \n                \n            \n            \n                \n                    \n                    initModules()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNavigationBar\n                        \n                    \n                \n            \n            \n                \ninitNavigationBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPreferences\n                        \n                    \n                \n            \n            \n                \ninitPreferences()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPropertyPanel\n                        \n                    \n                \n            \n            \n                \ninitPropertyPanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initResourcePanel\n                        \n                    \n                \n            \n            \n                \ninitResourcePanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStatusBar\n                        \n                    \n                \n            \n            \n                \ninitStatusBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyle\n                        \n                    \n                \n            \n            \n                \ninitStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyleMode\n                        \n                    \n                \n            \n            \n                \ninitStyleMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initWorkArea\n                        \n                    \n                \n            \n            \n                \ninitWorkArea()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Container } from 'inversify';\nimport { AppearanceType } from '@cosmic/core/common';\nimport { ModuleFactory } from '@cosmic/core/parts';\nimport { AppearanceService } from '@cosmic/workbench/services/appearance-service';\nimport { MenuGroupService } from '@cosmic/workbench/services/menu-group-service';\nimport { applicationMenus } from './base-menu/config';\nimport Navigation from '../ui/components/navigation/navigation-bar.svelte';\nimport StatusBar from '../ui/components/status/status-bar.svelte';\nimport ResourcePage from '../ui/components/resource/resource.svelte';\nimport PropertyPanel from '../ui/components/property/proterty.svelte';\n\nimport config from 'workbench/desktop/app.config.json';\n\nexport default class App {\n  private container: Container;\n  private context = new Map();\n  constructor(private root: HTMLElement) {\n    this.container = new Container({ defaultScope: 'Singleton' });\n    this.context.set('container', this.container);\n    this.initPreferences();\n    this.initStyle();\n  }\n  async bootstrap() {\n    this.initNavigationBar();\n    this.initStatusBar();\n    await this.initModules();\n  }\n\n  async initModules() {\n    const moduleFactory = new ModuleFactory(this.container);\n    this.container.bind('ModuleFactory').toDynamicValue(() => moduleFactory);\n\n    const workbench = await moduleFactory.load(config.workbench.id, config.workbench);\n    workbench.viewWillAppear();\n    this.root.appendChild(workbench.view());\n    workbench.viewDidAppear();\n  }\n\n  initPreferences() {\n    this.container.bind(AppearanceService).to(AppearanceService);\n    this.container.bind(MenuGroupService).to(MenuGroupService);\n  }\n\n  initStyle() {\n    const aps = this.container.get(AppearanceService);\n    aps.onModeChanged((type: AppearanceType) => this.initStyleMode(type));\n    this.initStyleMode(AppearanceType.dark);\n  }\n  initStyleMode(type: AppearanceType): void {\n    if (type === AppearanceType.dark) {\n      document.body.classList.add('mode-dark');\n    } else {\n      document.body.classList.remove('mode-dark');\n    }\n  }\n\n  initFrame(): void {\n    // to do sth.\n  }\n\n  initNavigationBar(): void {\n    // to do sth.\n    const navigationBar = new Navigation({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    this.initMenus();\n  }\n\n  initMenus(): void {\n    const header = document.querySelector('#main-header');\n    const groupMenu = this.container.get(MenuGroupService);\n    groupMenu.initContainer(header as HTMLElement);\n    for (const menu of applicationMenus) {\n      groupMenu.getMenuInsatance().init(menu.title, menu.items);\n    }\n  }\n\n  initResourcePanel(container: HTMLElement): void {\n    new ResourcePage({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initPropertyPanel(container: HTMLElement): void {\n    new PropertyPanel({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initWorkArea(): void {\n    // to do sth.\n  }\n\n  initStatusBar(): void {\n    new StatusBar({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    // to do sth.\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppearanceService.html":{"url":"classes/AppearanceService.html","title":"class - AppearanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppearanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/appearance-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Private\n                                evt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onModeChanged\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                updateMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppearanceType\n\n                    \n                \n                \n                    \n                        Default value : AppearanceType.dark\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        evt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter2()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onModeChanged\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModeChanged(fn: (type: AppearanceType) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        type\n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject, ContainerModule } from 'inversify';\nimport { EventEmitter2 } from 'eventemitter2';\n\nimport { AppearanceType } from '@cosmic/core/common';\n\n@injectable()\n/** 外观设置服务 */\nexport class AppearanceService {\n  private _type: AppearanceType = AppearanceType.dark;\n  private evt = new EventEmitter2();\n\n  public updateMode(type: AppearanceType) {\n    if (this._type !== type) {\n      this._type = type;\n      this.evt.emit('onModeChanged', type);\n    }\n  }\n  public onModeChanged(fn: (type: AppearanceType) => void) {\n    this.evt.on('onModeChanged', fn);\n  }\n  public type() {\n    return this._type;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseMenu.html":{"url":"classes/BaseMenu.html","title":"class - BaseMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/base-menu/base-menu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                menuInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(groupMenuService: MenuGroupService)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/base-menu/base-menu.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupMenuService\n                                                  \n                                                        \n                                                                        MenuGroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/base-menu/base-menu.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    initMenu(menuItems: MenuItemConfig[])\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/base-menu/base-menu.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuItems\n                                    \n                                                MenuItemConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { MenuGroupService } from '@cosmic/workbench/services/menu-group-service';\nimport type { Menu, MenuItemConfig } from '../menu';\n\nexport class BaseMenu {\n  private menuInstance!: Menu;\n  constructor(private groupMenuService: MenuGroupService) {}\n\n  public initMenu(menuItems: MenuItemConfig[]): void {\n    this.menuInstance = this.groupMenuService.getMenuInsatance();\n    this.menuInstance.init('文件', menuItems);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColorRef.html":{"url":"classes/ColorRef.html","title":"class - ColorRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColorRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/common/color-ref.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                anyColor\n                            \n                            \n                                    Private\n                                darkColor\n                            \n                            \n                                    Private\n                                lightColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                color\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(anyColor: Color, lightColor?: Color, darkColor?: Color)\n                    \n                \n                        \n                            \n                                Defined in src/core/common/color-ref.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        anyColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lightColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        darkColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        anyColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        darkColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lightColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        color\n                        \n                    \n                \n            \n            \n                \n                    \n                    color(appearanceType: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/common/color-ref.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appearanceType\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type * as Color from 'color';\nimport { AppearanceType } from './appearance';\n\nexport default class ColorRef {\n  private anyColor: Color;\n  private lightColor: Color;\n  private darkColor: Color;\n\n  constructor(anyColor: Color, lightColor?: Color, darkColor?: Color) {\n    this.anyColor = anyColor;\n    this.lightColor = lightColor || anyColor;\n    this.darkColor = darkColor || anyColor;\n  }\n\n  public color(appearanceType: AppearanceType) {\n    switch (appearanceType) {\n      case AppearanceType.any:\n        return this.anyColor;\n      case AppearanceType.light:\n        return this.lightColor;\n      case AppearanceType.dark:\n        return this.darkColor;\n      default:\n        return this.anyColor;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Controller.html":{"url":"interfaces/Controller.html","title":"interface - Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Controller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destroy\n                                        \n                                \n                                \n                                        \n                                            init\n                                        \n                                \n                                \n                                        \n                                            view\n                                        \n                                \n                                \n                                        \n                                            viewDidAppear\n                                        \n                                \n                                \n                                        \n                                            viewDidDisappear\n                                        \n                                \n                                \n                                        \n                                            viewWillAppear\n                                        \n                                \n                                \n                                        \n                                            viewWillDisappear\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destroy:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        init\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        init:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        view\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        view:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewDidAppear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewDidAppear:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewDidDisappear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewDidDisappear:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewWillAppear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewWillAppear:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewWillDisappear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewWillDisappear:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Controller {\n  view: () => HTMLElement;\n  init: (props: T) => Promise>;\n  viewWillAppear: () => void;\n  viewDidAppear: () => void;\n\n  viewWillDisappear: () => void;\n  viewDidDisappear: () => void;\n\n  destroy: () => void;\n}\n\n// declare type Props = Record;\n// interface IComponentOptions {\n//   target: Element;\n//   anchor?: Element;\n//   props?: Props;\n//   context?: Map;\n//   hydrate?: boolean;\n//   intro?: boolean;\n//   $$inline?: boolean;\n// }\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISettings.html":{"url":"interfaces/ISettings.html","title":"interface - ISettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/settings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            check\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import ElectronStore from 'electron-store';\n\ninterface ISettings {\n  check: boolean;\n}\n\nconst settings = new ElectronStore({\n  defaults: {\n    check: false,\n  },\n});\n\nexport default settings;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISplitBoardView.html":{"url":"interfaces/ISplitBoardView.html","title":"interface - ISplitBoardView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISplitBoardView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/type.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cancelForMerge\n                                        \n                                \n                                \n                                        \n                                            direction\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            resizeAt\n                                        \n                                \n                                \n                                        \n                                            setCursor\n                                        \n                                \n                                \n                                        \n                                            splitColumnAt\n                                        \n                                \n                                \n                                        \n                                            splitRowAt\n                                        \n                                \n                                \n                                        \n                                            waitForMergeAtItem\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancelForMerge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelForMerge:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:         directionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         directionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     SplitItemView[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SplitItemView[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizeAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resizeAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setCursor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setCursor:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitColumnAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitColumnAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitRowAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitRowAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        waitForMergeAtItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        waitForMergeAtItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type View from '../view';\nimport type SplitItemView from './split-item.view';\n\nexport enum directionType {\n  'col',\n  'row',\n}\n\nexport interface ISplitBoardView extends View {\n  items: SplitItemView[];\n  direction: directionType;\n  setCursor: (\n    type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize'\n  ) => void;\n  cancelForMerge: () => void;\n  resizeAt: (index: number, start: number, length: number, position: number) => void;\n  waitForMergeAtItem: (index: number, direction: 'w' | 'e' | 'n' | 's') => void;\n  splitColumnAt: (index: number, clientX: number, clientY: number) => void;\n  splitRowAt: (index: number, clientX: number, clientY: number) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Menu.html":{"url":"classes/Menu.html","title":"class - Menu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Menu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                container\n                            \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                menuItems\n                            \n                            \n                                    Private\n                                menuSvelte\n                            \n                            \n                                    Private\n                                    Readonly\n                                meunsWritable\n                            \n                            \n                                    Private\n                                name\n                            \n                            \n                                    Private\n                                    Readonly\n                                nameWritable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMenu\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                registerItem\n                            \n                            \n                                    Public\n                                removeItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: HTMLElement, id: string)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/menu/menu.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuSvelte\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        meunsWritable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : writable([])\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        nameWritable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : writable('')\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(name: string, config: MenuItemConfig[])\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                MenuItemConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerItem(config: MenuItemConfig, index: number, group?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                MenuItemConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItem(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MenuItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import MenuSvelte from './menu.svelte';\nimport type { MenuItemConfig } from './menu-item';\nimport { MenuItem } from './menu-item';\nimport { writable } from 'svelte/store';\n\nexport default class Menu {\n  public readonly container!: HTMLElement;\n  public readonly id!: string;\n  private name!: string;\n  private menuItems!: MenuItem[];\n  private menuSvelte: any;\n  private readonly context = new Map();\n  private readonly meunsWritable = writable([]);\n  private readonly nameWritable = writable('');\n  constructor(container: HTMLElement, id: string) {\n    this.container = container;\n    this.id = id;\n    this.menuItems = [];\n    this.context.set('menus', this.meunsWritable);\n    this.context.set('name', this.nameWritable);\n  }\n\n  public init(name: string, config: MenuItemConfig[]): void {\n    this.name = name;\n    for (const menuItem of config) {\n      this.menuItems.push(new MenuItem(menuItem));\n    }\n    return this.createMenu();\n  }\n\n  public destroy(): void {\n    while (this.container.firstChild) {\n      this.container.removeChild(this.container.firstChild);\n    }\n    return;\n  }\n\n  public registerItem(config: MenuItemConfig, index: number, group?: string): void {\n    this.menuItems.splice(index, 0, new MenuItem(config));\n    this.meunsWritable.set([...this.menuItems]);\n  }\n\n  public removeItem(index: number): MenuItem {\n    const menuItem = this.menuItems[index];\n    this.meunsWritable.set((this.menuItems = this.menuItems.filter((_, i) => index !== i)));\n    return menuItem;\n  }\n\n  private createMenu(): void {\n    this.menuSvelte = new MenuSvelte({\n      target: this.container,\n      context: this.context,\n    });\n    this.nameWritable.set(this.name);\n    this.meunsWritable.set(this.menuItems);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuGroupService.html":{"url":"classes/MenuGroupService.html","title":"class - MenuGroupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuGroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/menu-group-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                meuns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMenuInsatance\n                            \n                            \n                                    Public\n                                initContainer\n                            \n                            \n                                    Public\n                                removeMenuInstances\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/workbench/services/menu-group-service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/menu-group-service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        meuns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/menu-group-service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getMenuInsatance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenuInsatance()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/menu-group-service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Menu\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initContainer\n                        \n                    \n                \n            \n            \n                \n                    \n                    initContainer(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/menu-group-service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeMenuInstances\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeMenuInstances(menu: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/menu-group-service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\nimport { Menu } from '../desktop/menu';\n\n@injectable()\nexport class MenuGroupService {\n  private container!: HTMLElement;\n  private meuns!: Menu[];\n  constructor() {\n    this.meuns = [];\n  }\n\n  public initContainer(container: HTMLElement): void {\n    if (this.container) {\n      return;\n    }\n    this.container = container;\n  }\n\n  public getMenuInsatance(): Menu {\n    const menuContainer = document.createElement('div');\n    const id = Date.now() + '' + this.meuns.length;\n    this.container.append(menuContainer);\n    const menu = new Menu(menuContainer, id);\n    this.meuns.push(menu);\n    return menu;\n  }\n\n  public removeMenuInstances(menu: Menu): void {\n    this.container.removeChild(menu.container);\n    this.meuns = this.meuns.filter((item) => item.id === menu.id);\n    this.container.removeChild(menu.container);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItem.html":{"url":"classes/MenuItem.html","title":"class - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu-item.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                callback\n                            \n                            \n                                    Private\n                                children\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                title\n                            \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MenuItemConfig)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/menu/menu-item.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MenuItemConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        callback\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuCommonFunction\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItemType\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { uuid } from '../utils';\n/* eslint-disable no-shadow */\nexport enum MenuItemType {\n  group,\n  item,\n}\n\nexport type MenuCommonFunction = (menu: MenuItem, context: any) => void;\n\nexport interface MenuItemConfig {\n  title: string;\n  type: MenuItemType;\n  callback: MenuCommonFunction;\n  command?: string;\n}\n\nexport class MenuItem {\n  public readonly id!: string;\n  private title!: string;\n  private type!: MenuItemType;\n  private callback: MenuCommonFunction;\n  private children!: MenuItem[];\n  constructor(config: MenuItemConfig) {\n    this.id = uuid();\n    const { title, type, callback } = config;\n    if (type === MenuItemType.group) {\n      this.children = [];\n    }\n    this.title = title;\n    this.type = type;\n    this.callback = callback;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemConfig.html":{"url":"interfaces/MenuItemConfig.html","title":"interface - MenuItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu-item.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            command\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         MenuCommonFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuCommonFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         MenuItemType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItemType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { uuid } from '../utils';\n/* eslint-disable no-shadow */\nexport enum MenuItemType {\n  group,\n  item,\n}\n\nexport type MenuCommonFunction = (menu: MenuItem, context: any) => void;\n\nexport interface MenuItemConfig {\n  title: string;\n  type: MenuItemType;\n  callback: MenuCommonFunction;\n  command?: string;\n}\n\nexport class MenuItem {\n  public readonly id!: string;\n  private title!: string;\n  private type!: MenuItemType;\n  private callback: MenuCommonFunction;\n  private children!: MenuItem[];\n  constructor(config: MenuItemConfig) {\n    this.id = uuid();\n    const { title, type, callback } = config;\n    if (type === MenuItemType.group) {\n      this.children = [];\n    }\n    this.title = title;\n    this.type = type;\n    this.callback = callback;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModuleConfig.html":{"url":"interfaces/ModuleConfig.html","title":"interface - ModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module-factory.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Controller } from './controller';\nimport { injectable } from 'inversify';\nimport type { Container } from 'inversify';\n\nexport interface ModuleConfig {\n  id: string;\n}\n\n@injectable()\n/** Provides the ability to cache and run ES Modules */\nexport class ModuleFactory {\n  constructor(private container: Container) {}\n  private modules: Map Controller> = new Map();\n  add(moduleId: string, module: new () => Controller, scope: 'Singleton' | 'Transient' | 'Request' = 'Transient') {\n    if (this.exist(moduleId)) return;\n    this.modules.set(moduleId, module);\n    const m = this.container.bind(moduleId).to(module);\n    switch (scope) {\n      case 'Singleton':\n        m.inSingletonScope();\n        break;\n      case 'Transient':\n        m.inTransientScope();\n        break;\n      case 'Request':\n        m.inRequestScope();\n        break;\n    }\n  }\n  get(moduleId: string) {\n    return this.modules.get(moduleId);\n  }\n  exist(moduleId: string) {\n    return this.modules.has(moduleId);\n  }\n  async load(moduleId: string, props: any) {\n    if (!this.exist(moduleId)) {\n      await import(moduleId).then((Module) => {\n        this.add(moduleId, Module.default, props.scope || 'Transient');\n      });\n    }\n    const module = this.container.get(moduleId) as Controller;\n    module.init(props);\n    return module;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModuleFactory.html":{"url":"classes/ModuleFactory.html","title":"class - ModuleFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModuleFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                modules\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                exist\n                            \n                            \n                                get\n                            \n                            \n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: Container)\n                    \n                \n                        \n                            \n                                Defined in src/core/parts/modules/module-factory.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    Container\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/module-factory.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(moduleId: string, module, scope: \"Singleton\" | \"Transient\" | \"Request\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    module\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    scope\n                                    \n                                            \"Singleton\" | \"Transient\" | \"Request\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Transient'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exist\n                        \n                    \n                \n            \n            \n                \nexist(moduleId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(moduleId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load(moduleId: string, props: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Controller } from './controller';\nimport { injectable } from 'inversify';\nimport type { Container } from 'inversify';\n\nexport interface ModuleConfig {\n  id: string;\n}\n\n@injectable()\n/** Provides the ability to cache and run ES Modules */\nexport class ModuleFactory {\n  constructor(private container: Container) {}\n  private modules: Map Controller> = new Map();\n  add(moduleId: string, module: new () => Controller, scope: 'Singleton' | 'Transient' | 'Request' = 'Transient') {\n    if (this.exist(moduleId)) return;\n    this.modules.set(moduleId, module);\n    const m = this.container.bind(moduleId).to(module);\n    switch (scope) {\n      case 'Singleton':\n        m.inSingletonScope();\n        break;\n      case 'Transient':\n        m.inTransientScope();\n        break;\n      case 'Request':\n        m.inRequestScope();\n        break;\n    }\n  }\n  get(moduleId: string) {\n    return this.modules.get(moduleId);\n  }\n  exist(moduleId: string) {\n    return this.modules.has(moduleId);\n  }\n  async load(moduleId: string, props: any) {\n    if (!this.exist(moduleId)) {\n      await import(moduleId).then((Module) => {\n        this.add(moduleId, Module.default, props.scope || 'Transient');\n      });\n    }\n    const module = this.container.get(moduleId) as Controller;\n    module.init(props);\n    return module;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyPanel.html":{"url":"classes/PropertyPanel.html","title":"class - PropertyPanel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyPanel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/property-panel/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SVController\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewWillDisappear\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SVController\n\n                            \n                        \n                    \n                        \n                                Defined in         SVController:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SVController\n\n                            \n                        \n                    \n                        \n                                Defined in         SVController:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SVController\n\n                            \n                        \n                    \n                        \n                                Defined in         SVController:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SVController } from '@cosmic/core/parts';\n\nexport default class PropertyPanel extends SVController {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n\n  viewWillAppear(): void {\n    /** to be completed */\n  }\n  viewDidAppear(): void {\n    /** to be completed */\n  }\n\n  viewWillDisappear(): void {\n    /** to be completed */\n  }\n  viewDidDisappear(): void {\n    /** to be completed */\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceExplorer.html":{"url":"classes/ResourceExplorer.html","title":"class - ResourceExplorer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceExplorer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/resource-explorer/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SVController\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewWillDisappear\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SVController\n\n                            \n                        \n                    \n                        \n                                Defined in         SVController:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SVController\n\n                            \n                        \n                    \n                        \n                                Defined in         SVController:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SVController\n\n                            \n                        \n                    \n                        \n                                Defined in         SVController:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SVController } from '@cosmic/core/parts';\n\nexport default class ResourceExplorer extends SVController {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n\n  viewWillAppear(): void {\n    /** to be completed */\n  }\n  viewDidAppear(): void {\n    /** to be completed */\n  }\n\n  viewWillDisappear(): void {\n    /** to be completed */\n  }\n  viewDidDisappear(): void {\n    /** to be completed */\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SVController.html":{"url":"classes/SVController.html","title":"class - SVController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SVController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/svelte-controller.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Controller\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Abstract\n                                initWithComponent\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                    Abstract\n                                viewDidAppear\n                            \n                            \n                                    Abstract\n                                viewDidDisappear\n                            \n                            \n                                    Abstract\n                                viewWillAppear\n                            \n                            \n                                    Abstract\n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-controller.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-controller.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-controller.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    initWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SvelteComponentDev\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \n                    \n                    viewDidAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \n                    \n                    viewDidDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \n                    \n                    viewWillAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \n                    \n                    viewWillDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\nimport type { SvelteComponentDev } from 'svelte/internal';\nimport type { Controller } from './controller';\n\n@injectable()\nexport abstract class SVController implements Controller {\n  private comp: SvelteComponentDev;\n  private _view: HTMLElement;\n  private props: T;\n\n  public view() {\n    return this._view;\n  }\n\n  public async init(props: T) {\n    this.props = props;\n    this._view = this._view || document.createElement('div');\n    this.viewWillAppear();\n    this.comp = this.initWithComponent(this._view);\n    this.viewDidAppear();\n    return this;\n  }\n\n  abstract initWithComponent(target: Element): SvelteComponentDev;\n\n  abstract viewWillAppear(): void;\n  abstract viewDidAppear(): void;\n\n  abstract viewWillDisappear(): void;\n  abstract viewDidDisappear(): void;\n\n  public destroy() {\n    this.viewWillDisappear();\n    this.comp.$destroy();\n    if (this._view.parentNode) {\n      this._view.parentNode.removeChild(this._view);\n    }\n    this.viewDidDisappear();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShapeCanvas.html":{"url":"classes/ShapeCanvas.html","title":"class - ShapeCanvas","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShapeCanvas\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shape-canvas/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SVController\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewWillDisappear\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SVController\n\n                            \n                        \n                    \n                        \n                                Defined in         SVController:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SVController\n\n                            \n                        \n                    \n                        \n                                Defined in         SVController:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SVController\n\n                            \n                        \n                    \n                        \n                                Defined in         SVController:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         SVController\n\n                \n            \n            \n                \n                        Defined in         SVController:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SVController } from '@cosmic/core/parts';\n\nexport default class ShapeCanvas extends SVController {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n\n  viewWillAppear(): void {\n    /** to be completed */\n  }\n  viewDidAppear(): void {\n    /** to be completed */\n  }\n\n  viewWillDisappear(): void {\n    /** to be completed */\n  }\n  viewDidDisappear(): void {\n    /** to be completed */\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardController.html":{"url":"classes/SplitBoardController.html","title":"class - SplitBoardController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeId\n                            \n                            \n                                    Private\n                                expandActive\n                            \n                            \n                                    Private\n                                expandLeaveHandler\n                            \n                            \n                                    Private\n                                expandMouseUpHandler\n                            \n                            \n                                    Private\n                                expandMoveHandler\n                            \n                            \n                                    Private\n                                expandType\n                            \n                            \n                                    Private\n                                startX\n                            \n                            \n                                    Private\n                                startY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeExpand\n                            \n                            \n                                    Public\n                                checkExpandState\n                            \n                            \n                                    Private\n                                liveResize\n                            \n                            \n                                    Public\n                                onMouseDown\n                            \n                            \n                                    Public\n                                setActiveState\n                            \n                            \n                                    Private\n                                unactiveExpand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(view: ISplitBoardView)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        view\n                                                  \n                                                        \n                                                                        ISplitBoardView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandLeaveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMouseUpHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMoveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        activeExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    activeExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkExpandState\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkExpandState(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        liveResize\n                        \n                    \n                \n            \n            \n                \n                    \n                    liveResize(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onMouseDown\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseDown(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setActiveState\n                        \n                    \n                \n            \n            \n                \n                    \n                    setActiveState(index: number, startX: number, startY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        unactiveExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    unactiveExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { directionType } from './type';\nimport type { ISplitBoardView } from './type';\n\nexport default class SplitBoardController {\n  private expandMoveHandler!: (event: MouseEvent) => void;\n  private expandLeaveHandler!: (event: MouseEvent) => void;\n  private expandMouseUpHandler!: (event: MouseEvent) => void;\n\n  private startX = 0;\n  private startY = 0;\n  private activeId = -1;\n\n  private expandActive = false;\n  private expandType = 0; // 是否超过偏移值 0 / 1 expand hor | 2 expand ver | 3 merge hor | 4 merge ver\n\n  constructor(private view: ISplitBoardView) {\n    this.expandMoveHandler = (event: MouseEvent) => {\n      this.liveResize(event.clientX, event.clientY);\n      this.checkExpandState(event.clientX, event.clientY);\n    };\n    this.expandLeaveHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.expandMouseUpHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.view.root.addEventListener('mousedown', (event: MouseEvent) => {\n      this.onMouseDown(event);\n    });\n  }\n  public onMouseDown(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    let index = -1;\n    this.view.items.forEach((item, i) => {\n      if (target && item.root === target.parentElement && target.classList.contains('split-expand')) index = i;\n    });\n    if (index === -1) {\n      return;\n    }\n    if (index > -1) {\n      this.setActiveState(index, event.clientX, event.clientY);\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  public setActiveState(index: number, startX: number, startY: number) {\n    // 锚点mousedown\n    this.startX = startX;\n    this.startY = startY;\n    this.activeExpand();\n    this.activeId = index;\n  }\n  private activeExpand() {\n    this.view.root.addEventListener('mousemove', this.expandMoveHandler);\n    this.view.root.addEventListener('mouseleave', this.expandLeaveHandler);\n    this.view.root.addEventListener('mouseup', this.expandMouseUpHandler);\n    this.expandActive = true;\n    this.expandType = 0;\n    this.view.setCursor('crosshair');\n  }\n  private unactiveExpand() {\n    if (this.expandActive) {\n      this.view.root.removeEventListener('mousemove', this.expandMoveHandler);\n      this.view.root.removeEventListener('mouseleave', this.expandLeaveHandler);\n      this.view.root.removeEventListener('mouseup', this.expandMouseUpHandler);\n      this.view.cancelForMerge();\n      this.expandActive = false;\n      this.expandType = 0;\n      this.view.setCursor('');\n    }\n  }\n  private liveResize(clientX: number, clientY: number) {\n    const item = this.view.items[this.activeId];\n    if (this.expandType === 1 && this.view.direction === directionType.col) {\n      // horizontal expand column\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n    } else if (this.expandType === 2 && this.view.direction === directionType.row) {\n      // vertical expand row\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n    }\n  }\n  public checkExpandState(clientX: number, clientY: number) {\n    const offsetX = this.startX - clientX;\n    const offsetY = this.startY - clientY;\n    /** expand mode */\n    if (this.expandType === 0 && offsetX > 0 && offsetY > 0 && (offsetX > 5 || offsetY > 5)) {\n      if (offsetX > offsetY) {\n        this.view.setCursor('col-resize');\n      } else {\n        this.view.setCursor('row-resize');\n      }\n    }\n    /** merge mode */\n    if (offsetX  5) {\n      this.view.setCursor('w-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'w');\n      return;\n    }\n\n    if (offsetY  5) {\n      this.view.setCursor('n-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'n');\n      return;\n    }\n\n    if (this.expandType) return;\n    /** do expand */\n    if (offsetX > 30) {\n      this.expandType = 1;\n      this.view.setCursor('col-resize');\n      this.view.splitColumnAt(this.activeId, clientX, clientY);\n      return;\n    }\n    if (offsetY > 30) {\n      this.expandType = 2;\n      this.view.setCursor('row-resize');\n      this.view.splitRowAt(this.activeId, clientX, clientY);\n    }\n    if (\n      (this.expandType === 1 && this.view.direction === directionType.row) ||\n      (this.expandType === 2 && this.view.direction === directionType.col)\n    ) {\n      this.unactiveExpand();\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitItemView.html":{"url":"classes/SplitItemView.html","title":"class - SplitItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-item.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitExpand\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:67\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view';\nimport SplitExpand from './split-expand.svelte';\n\nenum directionStyles {\n  'w' = 'merge-w',\n  'e' = 'merge-e',\n  's' = 'merge-s',\n  'n' = 'merge-n',\n}\n\nexport default class SplitItemView extends View {\n  private _growClassName = '';\n  private _shrinkClassName = '';\n  private _bgColorClassName: string[] = ['bg-cgray-100', 'dark:bg-cgray-800'];\n\n  public contentView!: HTMLElement;\n  private expand!: SplitExpand;\n\n  constructor() {\n    super();\n    this.addExpandButton();\n    this.setDefaultClass();\n  }\n\n  public setContent(contentView: HTMLElement): SplitItemView {\n    this.contentView = contentView;\n    this.root.classList.add('split-item', 'flex');\n    contentView.classList.add('flex', 'flex-1');\n    return this.prepend(contentView);\n  }\n\n  public replaceContent(contentView: HTMLElement): SplitItemView {\n    this.root.replaceChild(contentView, this.contentView);\n    this.contentView = contentView;\n    contentView.classList.add('flex', 'flex-1');\n    return this;\n  }\n\n  public setGrow(className = 'flex-grow'): void {\n    this.root.classList.remove(this._shrinkClassName);\n    this._shrinkClassName = '';\n    this._growClassName = className;\n    this.root.classList.add(this._growClassName);\n  }\n\n  public setShrink(className = 'flex-shrink'): void {\n    this.root.classList.remove(this._growClassName);\n    this._growClassName = '';\n    this._shrinkClassName = className;\n    this.root.classList.add(this._shrinkClassName);\n  }\n\n  public isShrink(): boolean {\n    return !!this._growClassName;\n  }\n\n  private setDefaultClass() {\n    this.root.classList.add('flex-grow', 'rounded-xl');\n    this.root.classList.add('relative');\n    this.root.classList.add(...this._bgColorClassName);\n  }\n\n  private addExpandButton() {\n    this.expand = new SplitExpand({ target: this.root });\n  }\n  /** To hide expand button */\n  public hideExpandButton(): void {\n    this.expand.expandHidden = true;\n  }\n\n  public waitForMerge(direction: 'w' | 'e' | 's' | 'n'): void {\n    this.cancelWaitForMerge();\n    this.root.classList.add('wait-for-merge');\n    this.expand.mergeDirection = directionStyles[direction];\n  }\n\n  public cancelWaitForMerge(): void {\n    this.root.classList.remove('wait-for-merge');\n    this.expand.mergeDirection = '';\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/View.html":{"url":"classes/View.html","title":"class - View","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  View\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/view.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root?: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/view.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/view.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        type FlowValue = '1' | 'auto' | 'initial' | 'none';\n\nexport default class View {\n  public root: HTMLElement;\n  constructor(root?: HTMLElement) {\n    this.root = root || document.createElement('div');\n  }\n  setFlow(type: FlowValue) {\n    this.root.classList.remove('flex-1', 'flex-auto', 'flex-initial', 'flex-none');\n    this.root.classList.add(`flex-${type}`);\n    return this;\n  }\n  append(child: HTMLElement) {\n    this.root.appendChild(child);\n    return this;\n  }\n  prepend(...childs: HTMLElement[]) {\n    this.root.prepend(...childs);\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeightMap.html":{"url":"interfaces/WeightMap.html","title":"interface - WeightMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WeightMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [index: string]:        number\n\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:11\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Workbench.html":{"url":"classes/Workbench.html","title":"class - Workbench","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Workbench\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Controller\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                moduleFactory\n                            \n                            \n                                    Private\n                                splitBoard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                view\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleFactory: ModuleFactory)\n                    \n                \n                        \n                            \n                                Defined in src/modules/workbench/index.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleFactory\n                                                  \n                                                        \n                                                                        ModuleFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        moduleFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModuleFactory\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        splitBoard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SplitBoardView\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: WorkbenchProps)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                WorkbenchProps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n            \n                \nview()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Controller, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { SplitBoardView, SplitItemView, directionType } from '@cosmic/core/browser';\n\ninterface WorkbenchProps {\n  type: 'col' | 'row';\n  minWidth: number;\n  scale: number[];\n  modules?: ModuleConfig[];\n}\n\n@injectable()\nexport default class Workbench implements Controller {\n  private splitBoard: SplitBoardView;\n  private moduleFactory: ModuleFactory;\n  constructor(@inject('ModuleFactory') moduleFactory: ModuleFactory) {\n    this.splitBoard = new SplitBoardView().setFlow('1');\n    this.moduleFactory = moduleFactory;\n  }\n  view() {\n    return this.splitBoard.root;\n  }\n  async init(props: WorkbenchProps) {\n    this.splitBoard.direction = directionType[props.type];\n    for (const p of props.modules || []) {\n      const module = await this.moduleFactory.load(p.id, p);\n      const view = new SplitItemView().setContent(module.view());\n      this.splitBoard.addItem(view);\n    }\n    this.splitBoard.applySplit(\n      this.splitBoard.direction === directionType.col ? 'horizontal' : 'vertical',\n      props.scale || []\n    );\n    return this;\n  }\n\n  viewWillAppear(): void {\n    /** to be completed */\n  }\n  viewDidAppear(): void {\n    /** to be completed */\n  }\n\n  viewWillDisappear(): void {\n    /** to be completed */\n  }\n  viewDidDisappear(): void {\n    /** to be completed */\n  }\n\n  public destroy() {\n    const view = this.view();\n    this.viewWillDisappear();\n    if (view.parentNode) {\n      view.parentNode.removeChild(view);\n    }\n    this.viewDidDisappear();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkbenchProps.html":{"url":"interfaces/WorkbenchProps.html","title":"interface - WorkbenchProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkbenchProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            minWidth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            modules\n                                        \n                                \n                                \n                                        \n                                            scale\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        minWidth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minWidth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modules\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modules:         ModuleConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ModuleConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scale:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"col\" | \"row\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"col\" | \"row\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Controller, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { SplitBoardView, SplitItemView, directionType } from '@cosmic/core/browser';\n\ninterface WorkbenchProps {\n  type: 'col' | 'row';\n  minWidth: number;\n  scale: number[];\n  modules?: ModuleConfig[];\n}\n\n@injectable()\nexport default class Workbench implements Controller {\n  private splitBoard: SplitBoardView;\n  private moduleFactory: ModuleFactory;\n  constructor(@inject('ModuleFactory') moduleFactory: ModuleFactory) {\n    this.splitBoard = new SplitBoardView().setFlow('1');\n    this.moduleFactory = moduleFactory;\n  }\n  view() {\n    return this.splitBoard.root;\n  }\n  async init(props: WorkbenchProps) {\n    this.splitBoard.direction = directionType[props.type];\n    for (const p of props.modules || []) {\n      const module = await this.moduleFactory.load(p.id, p);\n      const view = new SplitItemView().setContent(module.view());\n      this.splitBoard.addItem(view);\n    }\n    this.splitBoard.applySplit(\n      this.splitBoard.direction === directionType.col ? 'horizontal' : 'vertical',\n      props.scale || []\n    );\n    return this;\n  }\n\n  viewWillAppear(): void {\n    /** to be completed */\n  }\n  viewDidAppear(): void {\n    /** to be completed */\n  }\n\n  viewWillDisappear(): void {\n    /** to be completed */\n  }\n  viewDidDisappear(): void {\n    /** to be completed */\n  }\n\n  public destroy() {\n    const view = this.view();\n    this.viewWillDisappear();\n    if (view.parentNode) {\n      view.parentNode.removeChild(view);\n    }\n    this.viewDidDisappear();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/classBuilder.html":{"url":"classes/classBuilder.html","title":"class - classBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  classBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                orderedConfigs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addConfig\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Private\n                                insertConfig\n                            \n                            \n                                    Private\n                                normalizeWeight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configs: stateConfig[], weightMap: WeightMap)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                        stateConfig[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weightMap\n                                                  \n                                                        \n                                                                        WeightMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orderedConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         stateConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/class-builder.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    addConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        normalizeWeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    normalizeWeight(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         stateConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/classConfig.html":{"url":"interfaces/classConfig.html","title":"interface - classConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  classConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            createWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            mainWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            notification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            interface\n            ISettings\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            variable\n            settings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            class\n            classBuilder\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            classConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            stateConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            WeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            variable\n            defaultWeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.controller.ts\n            \n            class\n            SplitBoardController\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            class\n            SplitBoardView\n            \n                3 %\n                (1/27)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            variable\n            lowBoardRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-item.view.ts\n            \n            class\n            SplitItemView\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/core/browser/layout/type.ts\n            \n            interface\n            ISplitBoardView\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            function\n            makeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BgColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BorderColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlAccentColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlBackgroundColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlDisabledColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlForbiddenColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlHighlightColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            FourthBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            GridBackgroundColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            LabelColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemBlueColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemGrayColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemOrangeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemPinkColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemRedColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemYellowColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TextFieldBackground\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/view.ts\n            \n            class\n            View\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/color-ref.ts\n            \n            class\n            ColorRef\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/parts/ioc/inject.ts\n            \n            function\n            inject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/modules/controller.ts\n            \n            interface\n            Controller\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module-factory.ts\n            \n            class\n            ModuleFactory\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module-factory.ts\n            \n            interface\n            ModuleConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/parts/modules/svelte-controller.ts\n            \n            class\n            SVController\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/property-panel/index.ts\n            \n            class\n            PropertyPanel\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/index.ts\n            \n            class\n            ResourceExplorer\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/shape-canvas/index.ts\n            \n            class\n            ShapeCanvas\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/workbench/index.ts\n            \n            class\n            Workbench\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/workbench/index.ts\n            \n            interface\n            WorkbenchProps\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/workbench/desktop/app.ts\n            \n            class\n            App\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/workbench/desktop/base-menu/base-menu.ts\n            \n            class\n            BaseMenu\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/workbench/desktop/base-menu/config.ts\n            \n            variable\n            applicationMenus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/desktop/main.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu-item.ts\n            \n            class\n            MenuItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu-item.ts\n            \n            interface\n            MenuItemConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu.ts\n            \n            class\n            Menu\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/workbench/desktop/utils/utils.ts\n            \n            variable\n            uuid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/services/appearance-service.ts\n            \n            class\n            AppearanceService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/workbench/services/menu-group-service.ts\n            \n            class\n            MenuGroupService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @types/color : ^3.0.1\n        \n            color : ^3.1.3\n        \n            electron-log : ^4.3.1\n        \n            electron-store : ^7.0.2\n        \n            electron-updater : ^4.3.5\n        \n            eventemitter2 : ^6.4.4\n        \n            inversify : ^5.1.1\n        \n            keycode : ^2.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            smelte : ^1.1.5\n        \n            split.js : ^1.6.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppearanceType   (src/.../appearance.ts)\n                        \n                        \n                            directionStyles   (src/.../split-item.view.ts)\n                        \n                        \n                            directionType   (src/.../type.ts)\n                        \n                        \n                            MenuItemType   (src/.../menu-item.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/common/appearance.ts\n    \n        \n            \n                \n                    \n                        \n                        AppearanceType\n                    \n                \n                    \n                        \n                            模式类型\n\n                        \n                    \n                        \n                            \n                                 any\n                            \n                        \n                        \n                            \n                                 light\n                            \n                        \n                        \n                            \n                                 dark\n                            \n                        \n            \n        \n\n    src/core/browser/layout/split-item.view.ts\n    \n        \n            \n                \n                    \n                        \n                        directionStyles\n                    \n                \n                        \n                            \n                                 w\n                            \n                        \n                        \n                            \n                                Value : merge-w\n                            \n                        \n                        \n                            \n                                 e\n                            \n                        \n                        \n                            \n                                Value : merge-e\n                            \n                        \n                        \n                            \n                                 s\n                            \n                        \n                        \n                            \n                                Value : merge-s\n                            \n                        \n                        \n                            \n                                 n\n                            \n                        \n                        \n                            \n                                Value : merge-n\n                            \n                        \n            \n        \n\n    src/core/browser/layout/type.ts\n    \n        \n            \n                \n                    \n                        \n                        directionType\n                    \n                \n                        \n                            \n                                 col\n                            \n                        \n                        \n                            \n                                 row\n                            \n                        \n            \n        \n\n    src/workbench/desktop/menu/menu-item.ts\n    \n        \n            \n                \n                    \n                        \n                        MenuItemType\n                    \n                \n                        \n                            \n                                 group\n                            \n                        \n                        \n                            \n                                 item\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            inject   (src/.../inject.ts)\n                        \n                        \n                            makeColor   (src/.../ui-color.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/parts/ioc/inject.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inject\n                        \n                    \n                \n            \n            \n                \ninject(token)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        makeColor\n                        \n                    \n                \n            \n            \n                \nmakeColor(anyColorHex, lightColorHex?, darkColorHex?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anyColorHex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    darkColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCosmic Design\n\n\n\n\n\n\n🚧 ing...\n\nThe Repository\nCosmic design is a concrete practice of D2R.\nThis repository is where we develop it together with the community. Not only do we work on code and issues here, we also publish our roadmap , development guide. This source code is available to everyone under the standard MIT license.\nAbout Cosmic Design\n\n🚧 ing...\n\nHow it works\nThe template required a minimum dependencies. Only Vite is used for building, nothing more.\nProject Structure\nThe structure of this template is very similar to the structure of a monorepo.\nThe entire source code of the program is divided into three modules (packages) that are bundled each independently:\n\nsrc/core\nInclude common dependencies, such as components, utils, ipc.\nsrc/app\nElectron main script.\nsrc/modules\nModules of tools\nsrc/workbench\nElectron web page.\n\nCosmic Components\n\nComponents StoryBook\nsrc/core/components\n\nCompile App\nNext step is run packaging and compilation a ready for distribution Electron app for macOS, Windows and Linux with \"auto update\" support out of the box.\nTo do this, using the electron-builder:\n\nIn npm script compile: This script is configured to compile the application as quickly as possible. It is not ready for distribution, is compiled only for the current platform and is used for debugging.\nIn GitHub Action: The application is compiled for any platform and ready-to-distribute files are automatically added to the draft GitHub release.\n\nContribution\nSee Wiki Contributing\n\nSource Code Organization\nUser Interface\nColor Set\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 qiansc\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/stateConfig.html":{"url":"interfaces/stateConfig.html","title":"interface - stateConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  stateConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:         classConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         classConfig[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationMenusType   (src/.../config.ts)\n                        \n                        \n                            FlowValue   (src/.../view.ts)\n                        \n                        \n                            MenuCommonFunction   (src/.../menu-item.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/base-menu/config.ts\n    \n    \n        \n            \n                \n                    \n                    ApplicationMenusType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/core/browser/view.ts\n    \n    \n        \n            \n                \n                    \n                    FlowValue\n                \n            \n            \n                \n                        \"1\" | \"auto\" | \"initial\" | \"none\"\n\n                \n            \n        \n    \n    src/workbench/desktop/menu/menu-item.ts\n    \n    \n        \n            \n                \n                    \n                    MenuCommonFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (src/.../main.ts)\n                        \n                        \n                            applicationMenus   (src/.../config.ts)\n                        \n                        \n                            BgColor   (src/.../ui-color.ts)\n                        \n                        \n                            BorderColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlAccentColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlDisabledColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlForbiddenColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlHighlightColor   (src/.../ui-color.ts)\n                        \n                        \n                            createWindow   (src/.../index.ts)\n                        \n                        \n                            defaultWeightMap   (src/.../class-builder.ts)\n                        \n                        \n                            FourthBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            GridBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            isProd   (src/.../index.ts)\n                        \n                        \n                            isProd   (src/.../logger.ts)\n                        \n                        \n                            LabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            logger   (src/.../logger.ts)\n                        \n                        \n                            lowBoardRoot   (src/.../split-board.view.ts)\n                        \n                        \n                            mainWindow   (src/.../index.ts)\n                        \n                        \n                            notification   (src/.../index.ts)\n                        \n                        \n                            SecondaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            SecondaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            settings   (src/.../settings.ts)\n                        \n                        \n                            SystemBlueColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemGrayColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemOrangeColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemPinkColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemRedColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemYellowColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            TextFieldBackground   (src/.../ui-color.ts)\n                        \n                        \n                            uuid   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new App(document.body)\n                    \n                \n\n\n        \n    \n\n    src/workbench/desktop/base-menu/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applicationMenus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationMenusType[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    title: '文件',\n    items: [\n      {\n        title: '打开文件',\n        type: MenuItemType.group,\n        /* eslint no-console: \"off\" */\n        callback: (item, context) => console.log(item, context),\n      },\n      {\n        title: '保存',\n        type: MenuItemType.group,\n        /* eslint no-console: \"off\" */\n        callback: (item, context) => console.log(item, context),\n      },\n\n      {\n        title: '另存为',\n        type: MenuItemType.group,\n        /* eslint no-console: \"off\" */\n        callback: (item, context) => console.log(item, context),\n      },\n    ],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#E0E0E0', '#E0E0E0', '#1F1F1F')\n                    \n                \n\n            \n                \n                    三级背景色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BorderColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D9D9D9', '#D9D9D9', '#D9D9D9')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlAccentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#5580c0', '#5580c0', '#5580c0')\n                    \n                \n\n            \n                \n                    高亮色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#FFFFFF', '#5D5F61')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlDisabledColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F9F9F9', '#F9F9F9', '#464749')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlForbiddenColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlHighlightColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#ffae2b', '#ffae2b', '#ffae2b')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FourthBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#BABABA', '#BABABA', '#454545')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GridBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F2F2F2', '#F2F2F2', '#2E2F30')\n                    \n                \n\n            \n                \n                    组件色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#E0E0E0')\n                    \n                \n\n            \n                \n                    三级标签色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D7D7D7', '#D7D7D7', '#272728')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#808080')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemBlueColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#729cd4', '#729cd4', '#729cd4')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemGrayColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c0c0c1', '#c0c0c1', '#c0c0c1')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemOrangeColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemPinkColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c4666f', '#c4666f', '#c4666f')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemRedColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemYellowColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n            \n                \n                    辅助色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#C6C6C6', '#C6C6C6', '#393939')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#3F3F3F', '#3F3F3F', '#3F3F3F')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TextFieldBackground\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#F2F2F2', '#454545')\n                    \n                \n\n\n        \n    \n\n    src/app/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createWindow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  mainWindow = new BrowserWindow({\n    width: 900,\n    height: 680,\n    webPreferences: {\n      devTools: isProd ? false : true,\n      contextIsolation: true,\n      enableRemoteModule: false,\n      // preload: join(__dirname, 'preload.js'),\n    },\n  });\n\n  const url =\n    // process.env.NODE_ENV === \"production\"\n    isProd\n      ? // in production, use the statically build version of our application\n        `file://${join(__dirname, 'dist/workbench/desktop/', 'index.html')}`\n      : // in dev, target the host and port of the local rollup web server\n        'http://localhost:5000/workbench/desktop/';\n\n  mainWindow.loadURL(url).catch((err: any) => {\n    logger.error(JSON.stringify(err));\n    app.quit();\n  });\n\n  if (!isProd) mainWindow.webContents.openDevTools();\n\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BrowserWindow | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Notification | null\n\n                    \n                \n\n\n        \n    \n\n    src/core/browser/class-builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultWeightMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WeightMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/utils/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log\n                    \n                \n\n\n        \n    \n\n    src/core/browser/layout/split-board.view.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lowBoardRoot\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('FlowTableRoot')\n                    \n                \n\n\n        \n    \n\n    src/app/utils/settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ElectronStore({\n  defaults: {\n    check: false,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/workbench/desktop/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): string => {\n  const s: string[] | number[] = [];\n  const hexDigits = '0123456789abcdef';\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
