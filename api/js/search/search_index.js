var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/App.html",[0,0.08,1,1.742]],["body/classes/App.html",[0,0.055,1,1.797,2,0.362,3,0.322,4,0.284,5,0.284,6,1.756,7,0.151,8,0.61,9,1.025,10,3.915,11,2.823,12,0.91,13,4.293,14,4.293,15,4.293,16,4.293,17,4.293,18,4.293,19,3.201,20,3.201,21,4.293,22,4.293,23,3.201,24,4.293,25,0.663,26,1.756,27,2.465,28,1.34,29,3.201,30,1.005,31,0.037,32,1.005,33,0.589,34,0.817,35,2.014,36,2.122,37,0.749,38,0.799,39,2.066,40,2.649,41,2.122,42,1.579,43,1.269,44,2.122,45,2.122,46,2.122,47,2.122,48,2.122,49,3.201,50,2.122,51,3.201,52,2.122,53,2.122,54,2.122,55,3.201,56,2.898,57,2.122,58,2.122,59,1.558,60,1.191,61,1.756,62,1.335,63,2.122,64,2.649,65,1.191,66,1.756,67,0.879,68,2.285,69,2.122,70,2.122,71,3.201,72,2.122,73,3.201,74,3.201,75,2.122,76,3.201,77,2.122,78,3.201,79,2.122,80,1.191,81,3.201,82,1.515,83,1.071,84,1.515,85,0.322,86,1.515,87,2.285,88,2.122,89,2.122,90,2.122,91,2.122,92,2.122,93,2.122,94,2.122,95,2.122,96,2.122,97,2.122,98,2.122,99,1.394,100,3.201,101,2.122,102,2.122,103,2.122,104,2.122,105,2.122,106,2.122,107,2.122,108,2.122,109,2.122,110,1.515,111,2.122,112,2.649,113,2.122,114,3.553,115,2.122,116,2.168,117,2.285,118,4.293,119,3.553,120,2.122,121,3.201,122,2.122,123,2.122,124,2.122,125,2.122,126,0.879,127,2.122,128,2.122,129,2.122,130,1.756,131,2.122,132,3.19,133,2.122,134,2.122,135,2.122,136,2.122,137,2.122,138,2.122,139,3.201,140,2.122,141,2.122,142,2.122,143,2.122,144,0.012,145,0.019,146,0.012]],["title/classes/AppearanceService.html",[0,0.08,62,1.952]],["body/classes/AppearanceService.html",[0,0.086,2,0.568,3,0.505,4,0.446,5,0.446,7,0.236,8,0.839,9,1.189,12,1.252,28,1.28,30,1.032,31,0.037,32,1.032,33,0.711,34,0.839,37,1.032,38,1.661,39,1.661,42,1.404,43,1.112,56,3.661,59,1.404,60,1.869,61,2.756,62,2.773,85,0.505,110,3.147,144,0.02,145,0.026,146,0.02,147,4.651,148,2.378,149,4.941,150,4.941,151,1.121,152,4.408,153,4.408,154,3.33,155,4.352,156,3.33,157,4.408,158,3.33,159,4.408,160,2.095,161,3.33,162,4.408,163,2.756,164,3.147,165,2.095,166,3.33,167,4.941,168,3.33,169,3.33,170,1.38]],["title/classes/BaseMenu.html",[0,0.08,171,2.215]],["body/classes/BaseMenu.html",[0,0.098,2,0.649,3,0.577,4,0.51,5,0.51,7,0.27,8,0.914,9,1.113,12,1.365,25,1.188,28,1.232,30,1.124,31,0.037,32,1.124,33,0.668,34,0.914,42,1.081,43,1.016,59,1.365,64,3.147,65,3.104,66,3.147,67,1.576,85,0.577,86,2.715,126,2.291,144,0.022,145,0.028,146,0.022,151,1.002,171,3.429,172,3.479,173,4.576,174,3.147,175,5.264,176,4.803,177,3.803,178,4.803,179,4.803,180,4.803,181,2.792,182,3.803,183,3.975,184,3.803,185,3.803,186,3.803]],["title/classes/ColorRef.html",[0,0.08,187,2.215]],["body/classes/ColorRef.html",[0,0.086,2,0.571,3,0.509,4,0.449,5,0.449,7,0.238,8,0.843,9,1.247,12,1.258,25,1.047,28,1.283,30,1.036,31,0.037,32,1.036,33,0.659,34,0.843,37,1.036,42,0.952,56,3.542,59,1.258,85,0.509,110,2.393,144,0.02,145,0.026,146,0.02,151,0.944,170,2.184,187,3.16,188,4.659,189,2.773,190,5.741,191,5.741,192,5.741,193,4.432,194,4.426,195,4.426,196,2.484,197,3.351,198,3.351,199,4.426,200,3.351,201,3.351,202,4.956,203,4.426,204,4.426,205,3.351,206,4.956,207,3.351,208,3.351]],["title/interfaces/ISettings.html",[209,0.726,210,2.215]],["body/interfaces/ISettings.html",[3,0.665,4,0.587,5,0.587,7,0.311,8,0.998,31,0.036,33,0.513,37,1.026,39,1.652,59,1.246,85,0.665,99,1.132,144,0.026,145,0.031,146,0.026,209,1.026,210,3.742,211,2.213,212,3.13,213,4.914,214,4.003,215,4.337,216,3.13,217,3.628,218,3.742,219,3.628,220,2.758]],["title/classes/Menu.html",[0,0.08,126,1.286]],["body/classes/Menu.html",[0,0.061,2,0.402,3,0.357,4,0.316,5,0.316,7,0.357,8,0.659,9,1.271,10,3.437,11,2.537,12,0.983,25,0.735,27,2.198,28,1.354,30,1.058,31,0.037,32,1.275,33,0.649,34,0.861,37,1.058,38,1.545,39,1.703,40,2.863,42,1.368,43,1.129,59,1.284,67,1.699,85,0.357,87,2.47,99,0.893,116,1.189,119,1.949,126,1.873,144,0.014,145,0.02,146,0.014,151,1.13,170,1.699,181,2.627,183,3.393,196,1.322,221,1.949,222,4.162,223,2.156,224,4.814,225,4.101,226,4.101,227,4.519,228,4.519,229,2.863,230,3.459,231,3.459,232,3.459,233,1.791,234,3.459,235,2.355,236,2.355,237,2.355,238,2.996,239,2.355,240,2.355,241,4.814,242,2.355,243,2.355,244,2.355,245,2.355,246,3.459,247,3.029,248,2.355,249,3.459,250,2.086,251,2.355,252,3.459,253,2.355,254,2.355,255,1.433,256,2.355,257,1.681,258,2.355,259,2.355,260,2.355,261,2.355,262,2.355,263,2.355,264,2.355,265,2.355,266,2.355,267,2.355,268,2.355,269,2.355,270,0.887,271,2.355,272,2.355,273,2.355,274,2.355,275,2.355,276,2.355,277,2.355,278,2.355]],["title/classes/MenuGroupService.html",[0,0.08,65,1.742]],["body/classes/MenuGroupService.html",[0,0.082,2,0.545,3,0.485,4,0.429,5,0.429,7,0.227,8,0.817,9,1.175,10,3.853,12,1.219,25,1.512,27,2.464,28,1.3,30,1.004,31,0.037,32,1.004,33,0.606,34,0.817,39,1.205,42,1.376,43,1.094,59,1.219,60,1.795,65,2.408,67,2.351,85,0.485,87,3.063,99,1.25,126,2.467,144,0.019,145,0.025,146,0.019,148,2.283,151,1.112,163,2.646,164,3.063,170,1.778,223,1.778,279,4.696,280,4.842,281,5.174,282,4.29,283,4.29,284,4.29,285,3.198,286,3.198,287,4.29,288,4.29,289,3.198,290,3.198,291,4.29,292,3.198,293,2.646,294,3.198,295,3.198,296,3.198,297,3.198,298,3.198,299,4.29,300,3.198,301,3.198,302,3.198]],["title/classes/MenuItem.html",[0,0.08,238,1.742]],["body/classes/MenuItem.html",[0,0.084,2,0.555,3,0.494,4,0.436,5,0.436,7,0.231,8,0.827,9,1.272,11,1.828,25,1.017,28,1.307,30,0.762,31,0.037,32,0.762,33,0.712,34,0.62,43,0.689,59,0.925,67,1.349,85,0.791,99,0.841,126,1.349,144,0.019,145,0.025,146,0.019,151,0.93,181,2.631,209,0.762,222,3.488,223,2.024,233,1.744,238,3.047,247,2.732,255,1.349,257,2.325,303,3.2,304,1.828,305,3.987,306,4.043,307,3.987,308,3.593,309,4.342,310,3.721,311,3.256,312,3.256,313,3.256,314,3.721,315,3.256,316,2.732,317,2.325,318,2.325,319,2.695,320,2.695,321,2.048,322,2.695,323,2.325,324,2.695,325,2.695,326,2.695,327,2.695]],["title/interfaces/MenuItemConfig.html",[181,1.567,209,0.726]],["body/interfaces/MenuItemConfig.html",[0,0.09,3,0.532,4,0.47,5,0.47,7,0.249,8,0.868,9,1.134,11,1.967,31,0.037,33,0.716,34,0.868,43,0.741,59,0.996,67,1.452,85,0.814,99,0.905,126,1.452,144,0.021,145,0.027,146,0.021,151,0.667,181,2.558,209,0.82,211,1.77,222,2.502,223,1.452,233,1.838,238,2.843,247,2.205,255,1.452,257,2.502,303,1.967,304,1.967,305,4.143,306,2.9,307,4.143,308,2.9,310,3.97,314,3.97,316,2.867,317,2.502,318,2.502,319,2.9,320,2.9,321,2.205,322,4.439,323,2.502,324,2.9,325,2.9,326,2.9,327,2.9]],["title/classes/SplitBoardController.html",[0,0.08,328,1.952]],["body/classes/SplitBoardController.html",[0,0.044,2,0.288,3,0.256,4,0.226,5,0.226,7,0.328,8,0.51,9,1.268,12,0.762,25,0.527,27,0.771,28,1.281,30,0.97,31,0.038,32,0.97,33,0.625,34,0.789,37,1.033,38,1.562,42,1.254,43,1.072,59,0.948,80,2.132,82,1.914,83,0.852,84,1.205,85,0.256,86,1.205,99,0.981,116,1.354,144,0.01,145,0.016,146,0.01,151,0.941,160,2.098,170,1.717,220,2.098,250,2.412,255,0.699,270,1.982,328,1.686,329,2.791,330,1.396,331,3.335,332,3.335,333,3.335,334,3.335,335,3.335,336,3.335,337,4.625,338,4.625,339,3.799,340,2.681,341,2.681,342,2.681,343,2.681,344,3.799,345,1.688,346,2.681,347,1.354,348,2.775,349,1.688,350,1.688,351,1.688,352,1.688,353,1.688,354,1.688,355,1.688,356,1.688,357,2.681,358,4.193,359,1.688,360,3.651,361,2.681,362,1.688,363,2.681,364,5.066,365,1.688,366,3.972,367,2.681,368,1.688,369,1.688,370,1.062,371,2.381,372,3.828,373,2.681,374,3.799,375,2.681,376,1.396,377,2.098,378,1.396,379,3.335,380,1.688,381,3.335,382,1.688,383,3.335,384,3.335,385,3.335,386,1.688,387,1.688,388,1.688,389,1.688,390,1.688,391,1.688,392,1.688,393,1.688,394,1.688,395,1.688,396,1.688,397,1.688,398,2.681,399,2.681,400,1.688,401,1.688,402,1.688,403,1.688,404,1.688,405,3.335,406,1.062,407,5.066,408,1.688,409,1.688,410,1.688,411,1.688,412,1.688,413,1.688,414,1.688,415,3.799,416,2.218,417,1.396,418,1.688,419,2.681,420,1.396,421,1.396,422,2.218,423,1.396,424,1.205,425,1.396,426,1.396,427,4.412,428,4.412,429,2.681,430,3.144,431,2.681,432,3.651,433,2.681,434,1.688,435,2.681,436,1.062,437,1.688,438,1.062,439,2.218,440,1.688,441,1.688]],["title/classes/SplitBoardView.html",[0,0.08,80,1.742]],["body/classes/SplitBoardView.html",[0,0.027,2,0.181,3,0.161,4,0.142,5,0.142,7,0.338,8,0.347,9,1.107,12,0.518,25,0.749,27,1.465,28,1.264,30,1.135,31,0.038,32,1.135,33,0.641,34,0.924,35,1.146,37,0.878,38,1.321,39,1.494,42,1.439,43,1.126,59,0.912,60,0.595,80,1.023,83,2.489,84,0.756,85,0.364,99,1.323,114,1.508,130,1.508,132,1.985,144,0.006,145,0.011,146,0.006,151,1.108,164,1.301,165,0.666,170,1.889,196,1.023,214,0.756,220,0.666,229,2.357,233,0.569,250,2.502,255,1.839,270,1.209,321,0.666,328,1.509,329,2.666,347,2.092,348,1.968,358,3.672,360,3.429,370,2.206,371,2.033,406,0.666,416,2.656,417,2.901,420,0.877,421,0.877,422,0.877,423,2.656,424,2.68,425,0.877,426,0.877,432,4.288,436,2.494,438,2.206,439,0.877,442,0.666,443,1.508,444,2.398,445,2.398,446,3.429,447,1.985,448,2.398,449,1.822,450,1.822,451,1.822,452,2.848,453,1.822,454,2.848,455,1.822,456,1.822,457,1.822,458,2.398,459,1.822,460,1.822,461,1.822,462,1.822,463,1.301,464,1.301,465,1.301,466,1.822,467,3.559,468,1.059,469,1.059,470,1.059,471,1.822,472,1.059,473,2.357,474,0.877,475,1.822,476,1.059,477,1.822,478,1.059,479,1.822,480,3.21,481,1.059,482,1.059,483,1.822,484,1.059,485,1.059,486,1.822,487,4.667,488,4.559,489,4.667,490,1.059,491,1.059,492,1.822,493,3.754,494,1.059,495,1.822,496,1.059,497,1.822,498,1.822,499,1.059,500,3.106,501,2.398,502,2.503,503,2.206,504,1.059,505,1.822,506,1.059,507,1.822,508,1.059,509,1.822,510,1.059,511,1.822,512,1.059,513,0.756,514,0.877,515,0.756,516,0.756,517,0.877,518,0.756,519,0.756,520,1.146,521,0.877,522,1.059,523,0.877,524,0.756,525,0.877,526,1.822,527,0.877,528,1.059,529,1.059,530,1.059,531,0.877,532,1.301,533,1.059,534,1.059,535,1.059,536,1.059,537,1.059,538,1.822,539,1.822,540,1.822,541,1.508,542,2.398,543,1.508,544,1.508,545,1.822,546,1.059,547,1.822,548,1.059,549,0.535,550,1.822,551,1.059,552,1.059,553,1.059,554,1.059,555,1.059,556,2.848,557,3.964,558,1.059,559,1.059,560,1.059,561,1.059,562,1.059,563,1.822,564,3.21,565,1.059,566,1.059,567,1.059,568,1.059,569,1.059,570,1.059,571,0.877,572,1.822,573,0.877,574,1.059,575,1.822,576,1.508,577,1.822,578,1.822,579,1.822,580,1.822,581,1.822,582,1.822,583,1.059,584,1.059,585,1.822,586,1.822,587,1.822,588,1.059,589,1.059,590,3.21,591,1.059,592,1.059,593,1.059,594,1.059,595,2.398,596,1.059,597,1.059,598,1.059,599,3.21,600,1.822,601,2.848,602,2.398,603,1.822,604,1.059,605,1.059,606,1.822,607,1.059,608,1.059]],["title/classes/SplitItemView.html",[0,0.08,83,1.567]],["body/classes/SplitItemView.html",[0,0.049,2,0.322,3,0.286,4,0.253,5,0.253,7,0.134,8,0.557,9,1.213,12,0.832,25,1.12,27,2.503,28,1.358,30,1.167,31,0.037,32,1.167,33,0.656,34,0.95,35,1.841,37,1.083,38,1.647,39,0.711,42,1.558,43,1.144,59,1.019,82,1.348,83,2.336,85,0.286,116,0.953,117,1.348,144,0.011,145,0.017,146,0.011,151,1.144,170,1.486,214,2.09,233,1.558,255,0.782,321,1.187,329,2.875,347,2.518,348,1.643,370,1.187,371,2.09,372,3.618,377,2.91,406,1.187,436,2.75,438,2.75,443,2.422,446,1.562,463,2.09,464,2.09,465,2.09,473,3.343,474,1.562,502,3.121,503,2.75,513,1.348,514,1.562,515,1.348,516,1.348,517,1.562,518,1.348,519,1.348,520,1.841,521,1.562,527,1.562,531,1.562,532,3.445,544,1.562,576,3.993,609,1.348,610,3.585,611,3.585,612,3.585,613,4.04,614,4.04,615,4.04,616,4.04,617,2.927,618,2.927,619,4.04,620,2.927,621,2.927,622,2.927,623,2.927,624,2.927,625,4.04,626,1.337,627,2.927,628,1.478,629,1.888,630,1.888,631,1.888,632,1.888,633,4.04,634,1.888,635,1.888,636,1.888,637,2.927,638,2.927,639,1.888,640,2.927,641,1.888,642,2.927,643,1.888,644,1.888,645,2.927,646,1.888,647,4.04,648,3.585,649,2.927,650,1.888,651,2.927,652,2.927,653,1.888,654,1.888,655,1.562,656,1.888,657,1.888,658,3.585,659,2.927,660,1.888,661,1.888,662,1.888,663,2.927,664,3.585,665,1.888,666,1.888,667,1.888,668,1.888,669,1.888,670,1.888,671,1.888,672,1.888,673,1.888,674,1.888,675,1.888,676,2.927,677,1.888,678,1.888]],["title/classes/Test.html",[0,0.08,679,2.215]],["body/classes/Test.html",[0,0.113,2,0.748,3,0.665,4,0.587,5,0.587,7,0.311,12,1.489,28,1.026,30,1.026,31,0.036,32,1.026,33,0.513,34,0.835,42,1.246,43,0.927,85,0.665,116,2.646,144,0.026,145,0.031,146,0.026,151,1.068,233,1.751,679,3.742,680,3.628,681,5.241,682,5.241,683,4.384,684,4.384,685,4.384]],["title/classes/View.html",[0,0.08,347,1.567]],["body/classes/View.html",[0,0.09,2,0.596,3,0.531,4,0.469,5,0.469,7,0.248,8,0.867,12,1.293,25,1.092,26,3.766,27,2.759,28,1.3,30,1.254,31,0.037,32,1.254,33,0.689,34,1.02,35,3.496,37,0.818,42,1.438,85,0.531,117,2.497,144,0.021,145,0.027,146,0.021,151,0.963,170,2.097,196,1.963,293,2.894,347,2.298,348,2.555,463,3.249,464,3.249,465,3.249,513,3.249,515,2.497,516,3.249,518,2.497,519,3.249,520,3.371,532,3.612,543,2.894,686,2.497,687,4.551,688,3.497,689,3.497,690,3.497,691,3.249,692,3.766,693,3.766,694,3.497,695,3.497,696,3.497]],["title/interfaces/WeightMap.html",[209,0.726,697,1.417]],["body/interfaces/WeightMap.html",[0,0.121,2,0.628,3,0.559,4,0.493,5,0.493,7,0.334,9,1.097,28,0.861,31,0.037,37,0.861,43,0.995,85,0.559,99,1.214,144,0.022,145,0.028,146,0.022,151,0.896,209,1.213,211,1.859,223,1.949,233,1.763,250,2.148,270,1.387,549,1.859,626,1.681,628,1.859,697,2.578,698,2.375,699,1.859,700,3.681,701,3.681,702,2.375,703,2.916,704,2.316,705,2.375,706,2.066,707,2.066,708,2.066,709,2.066,710,2.066,711,2.066,712,2.066,713,2.066,714,1.859,715,2.316,716,2.316,717,2.316,718,2.959,719,2.316,720,2.316,721,2.316,722,2.316,723,2.066,724,2.316,725,2.316,726,2.316,727,2.316]],["title/classes/classBuilder.html",[0,0.08,714,1.567]],["body/classes/classBuilder.html",[0,0.106,2,0.703,3,0.457,4,0.404,5,0.404,7,0.293,8,0.784,9,1.22,12,1.171,25,0.941,28,1.277,30,1.181,31,0.037,32,1.181,33,0.619,34,0.961,37,0.964,38,1.135,42,1.434,43,1.118,85,0.457,99,1.064,144,0.018,145,0.024,146,0.018,151,1.039,209,1.099,223,1.707,233,1.576,247,2.954,250,1.707,270,1.135,549,1.521,626,1.375,628,1.521,697,2.598,698,2.821,699,1.521,702,2.08,703,3.067,704,1.895,705,2.08,706,1.691,707,1.691,708,1.691,709,1.691,710,1.691,711,1.691,712,1.691,713,1.691,714,2.08,715,2.954,716,2.592,717,1.895,718,2.592,719,3.176,720,1.895,721,2.592,722,2.592,723,1.691,724,1.895,725,1.895,726,1.895,727,1.895,728,4.12,729,4.12,730,4.12,731,4.12,732,3.012,733,3.012,734,3.012,735,3.012,736,3.012,737,3.012]],["title/interfaces/classConfig.html",[209,0.726,702,1.567]],["body/interfaces/classConfig.html",[0,0.145,2,0.614,3,0.546,4,0.482,5,0.482,7,0.329,8,0.883,9,1.085,31,0.037,33,0.543,37,0.842,43,0.981,85,0.546,99,1.197,144,0.021,145,0.027,146,0.021,151,0.883,209,1.201,211,1.817,223,2.323,233,1.848,250,1.921,270,1.356,549,1.817,626,1.643,628,1.817,697,2.474,698,1.817,699,1.817,702,2.59,703,2.898,704,2.264,705,2.341,706,2.02,707,2.02,708,2.02,709,2.02,710,2.02,711,2.02,712,2.02,713,2.02,714,1.817,715,2.264,716,2.264,717,2.264,718,2.917,719,2.264,720,2.264,721,2.264,722,2.264,723,2.02,724,2.264,725,2.264,726,2.264,727,2.264]],["title/coverage.html",[738,3.479]],["body/coverage.html",[0,0.147,1,1.919,5,0.311,6,1.918,31,0.037,33,0.271,39,0.873,62,1.458,65,1.301,67,0.96,68,1.655,80,1.301,83,1.17,126,0.96,144,0.014,145,0.02,146,0.014,147,1.918,148,2.441,160,2.151,165,1.458,171,1.655,172,2.151,173,1.918,174,1.918,181,1.17,187,1.655,188,1.918,189,1.918,209,1.119,210,1.655,212,2.441,218,1.655,221,1.918,238,1.301,270,2.362,279,1.918,303,1.919,304,1.919,316,1.458,328,1.458,329,2.264,330,1.918,347,1.17,376,1.918,378,1.918,442,2.151,524,1.655,609,1.655,626,2.184,679,1.655,680,1.918,686,1.655,697,1.058,698,2.415,699,2.415,702,1.17,703,1.17,705,1.17,714,1.17,738,1.918,739,1.918,740,2.317,741,2.317,742,3.711,743,6.177,744,1.918,745,6.156,746,2.829,747,1.918,748,1.918,749,2.829,750,1.918,751,3.419,752,4.063,753,2.317,754,3.419,755,3.419,756,2.317,757,2.317,758,4.298,759,4.298,760,1.918,761,1.918,762,4.783,763,1.918,764,1.918,765,1.918,766,1.918,767,1.918,768,1.918,769,1.918,770,1.918,771,1.918,772,1.918,773,1.918,774,1.918,775,1.918,776,1.918,777,1.918,778,1.918,779,1.918,780,1.918,781,1.918,782,1.918,783,4.063,784,1.918,785,1.655,786,1.918,787,2.317,788,2.317,789,1.918,790,2.317,791,2.317]],["title/dependencies.html",[792,2.606,793,2.658]],["body/dependencies.html",[31,0.037,60,2.474,144,0.026,145,0.031,146,0.026,155,3.648,193,3.147,216,4.012,217,3.648,523,3.648,793,3.147,794,4.408,795,4.408,796,4.408,797,3.648,798,4.408,799,4.408,800,4.408,801,4.408,802,4.408,803,4.408,804,4.408,805,4.408,806,4.408,807,4.408,808,4.408,809,4.408,810,4.408,811,4.408]],["title/miscellaneous/enumerations.html",[812,1.08,813,3.081]],["body/miscellaneous/enumerations.html",[7,0.301,31,0.036,38,2.166,56,3.234,67,1.759,112,3.513,144,0.025,145,0.03,146,0.025,255,1.759,303,2.383,304,2.886,314,3.67,329,2.596,370,3.234,377,3.615,424,3.03,436,3.234,438,3.234,442,3.234,500,3.513,502,3.67,503,3.234,609,3.67,655,4.254,812,1.759,813,3.513,814,4.245,815,4.254,816,3.513,817,4.245,818,4.245]],["title/miscellaneous/functions.html",[812,1.08,819,3.081]],["body/miscellaneous/functions.html",[7,0.319,30,1.245,31,0.034,32,1.245,34,1.013,144,0.026,145,0.031,146,0.026,165,3.346,196,2.986,758,3.208,759,3.798,760,4.402,784,3.719,812,1.862,819,3.719,820,4.494,821,3.719,822,4.494,823,4.494,824,4.494,825,5.319,826,5.319,827,4.494]],["title/index.html",[7,0.185,828,2.157,829,2.157]],["body/index.html",[1,2.505,4,0.668,31,0.032,144,0.02,145,0.026,146,0.02,193,2.423,209,0.794,216,3.782,317,2.423,541,2.808,691,2.423,793,3.186,830,5.298,831,4.987,832,4.463,833,4.463,834,3.394,835,3.394,836,3.394,837,3.394,838,3.394,839,3.394,840,3.394,841,5.298,842,3.394,843,3.394,844,2.808,845,3.394,846,3.394,847,3.394,848,3.394,849,3.394,850,3.394,851,3.394,852,2.808,853,2.423,854,3.394,855,4.463,856,3.394,857,3.394,858,3.394,859,4.463,860,3.394,861,3.394,862,3.394,863,3.394,864,4.987,865,3.394,866,3.394,867,3.394,868,3.394,869,3.394,870,3.394,871,3.394,872,2.423,873,3.394,874,3.394,875,3.394,876,3.394,877,3.394,878,3.394,879,3.394,880,3.394,881,4.987,882,3.394,883,3.394,884,3.394,885,4.987,886,3.394,887,2.808,888,3.394,889,3.394,890,3.394,891,4.987,892,3.394,893,3.394,894,3.394,895,3.394,896,3.394,897,4.987,898,4.463,899,3.394,900,3.394,901,3.394,902,3.394,903,3.394,904,2.808,905,3.394,906,3.394,907,3.394,908,3.394,909,3.394,910,3.693,911,3.394,912,3.394,913,4.463,914,3.394,915,4.463,916,3.394,917,4.463,918,2.808,919,2.808,920,2.808,921,3.394,922,3.394,923,3.394,924,3.394,925,3.394,926,3.394,927,3.394,928,3.394,929,3.394,930,3.394]],["title/license.html",[828,2.157,829,2.157,853,1.861]],["body/license.html",[31,0.028,144,0.023,145,0.028,146,0.023,366,3.177,377,2.415,723,2.155,739,3.177,844,3.177,852,3.177,853,2.741,904,3.177,918,3.177,919,3.177,920,3.177,931,5.287,932,3.839,933,3.839,934,4.832,935,3.839,936,3.839,937,3.839,938,3.839,939,3.839,940,3.839,941,4.832,942,6.048,943,3.839,944,3.839,945,5.287,946,3.839,947,4.832,948,3.839,949,3.839,950,3.998,951,3.839,952,3.839,953,3.839,954,3.839,955,4.832,956,3.839,957,3.839,958,3.839,959,3.839,960,3.839,961,3.839,962,3.839,963,4.832,964,4.832,965,3.839,966,3.839,967,3.839,968,3.839,969,3.839,970,3.839,971,3.839,972,3.839,973,3.839,974,3.839,975,3.839,976,3.839,977,3.839,978,3.839,979,3.839,980,3.839,981,3.839,982,3.839,983,3.839,984,3.839,985,3.839,986,3.839,987,3.839,988,3.839,989,3.839,990,3.839,991,3.839,992,3.839]],["title/modules.html",[872,3.001]],["body/modules.html",[31,0.033,144,0.029,145,0.033,146,0.029,872,3.502]],["title/overview.html",[993,3.479]],["body/overview.html",[2,0.826,31,0.033,144,0.028,145,0.033,146,0.028,211,2.447,430,4.01,993,4.01,994,4.846]],["title/interfaces/stateConfig.html",[209,0.726,703,1.567]],["body/interfaces/stateConfig.html",[0,0.118,2,0.917,3,0.535,4,0.473,5,0.473,7,0.325,8,0.872,9,1.075,31,0.037,33,0.595,34,0.872,37,0.826,43,0.968,85,0.535,99,1.182,144,0.021,145,0.027,146,0.021,151,0.872,209,1.189,211,1.781,223,2.309,233,1.783,250,2.228,270,1.329,549,1.781,626,1.611,628,1.781,697,2.455,698,1.781,699,1.781,702,2.715,703,2.935,704,3.383,705,2.311,706,1.98,707,1.98,708,1.98,709,1.98,710,1.98,711,1.98,712,1.98,713,1.98,714,1.781,715,2.219,716,2.219,717,2.219,718,2.879,719,2.219,720,2.219,721,2.219,722,2.219,723,1.98,724,2.219,725,2.219,726,2.219,727,2.219]],["title/miscellaneous/typealiases.html",[812,1.08,995,3.723]],["body/miscellaneous/typealiases.html",[7,0.321,31,0.035,33,0.625,144,0.027,145,0.031,146,0.027,160,2.843,172,2.843,303,2.537,304,2.996,310,3.81,348,2.537,520,3.357,686,3.226,691,3.226,692,3.74,693,3.74,785,3.226,812,1.873,816,3.74,996,4.519,997,4.417,998,3.74,999,4.519,1000,4.519]],["title/miscellaneous/variables.html",[812,1.08,1001,3.081]],["body/miscellaneous/variables.html",[1,1.681,7,0.138,11,2.628,31,0.037,33,0.571,37,1.421,38,2.282,39,1.377,68,2.138,99,0.943,116,0.982,144,0.011,145,0.018,146,0.011,172,1.223,212,1.388,213,1.609,215,1.609,218,2.138,219,1.609,220,2.298,233,0.935,250,0.806,255,1.514,270,0.733,305,2.608,307,2.93,316,1.884,318,2.608,323,2.608,329,0.982,406,1.884,442,1.884,447,1.609,467,3.023,503,1.223,524,2.138,525,1.609,549,0.982,571,1.609,573,1.609,626,0.888,628,0.982,697,0.888,698,0.982,699,1.512,705,1.512,706,1.092,707,1.092,708,1.092,709,1.092,710,1.092,711,1.092,712,1.092,713,1.092,742,1.609,744,2.479,746,4.037,747,3.396,748,3.023,749,1.609,750,2.479,758,1.388,759,4.203,761,2.479,763,2.479,764,2.479,765,2.479,766,2.479,767,2.479,768,2.479,769,2.479,770,2.479,771,2.479,772,2.479,773,2.479,774,2.479,775,2.479,776,2.479,777,2.479,778,2.479,779,2.479,780,2.479,781,2.479,782,2.479,785,1.388,786,1.609,789,1.609,797,1.609,812,0.806,815,1.609,821,4.849,887,1.609,910,1.609,950,1.609,997,1.609,998,1.609,1001,1.609,1002,1.945,1003,4.104,1004,1.945,1005,2.995,1006,1.945,1007,1.945,1008,1.945,1009,3.653,1010,3.653,1011,1.945,1012,2.995,1013,1.945,1014,1.945,1015,2.995,1016,1.945,1017,2.995,1018,2.995,1019,1.945,1020,1.945,1021,1.945,1022,1.945,1023,1.945,1024,2.995,1025,4.104,1026,1.945,1027,2.995,1028,1.945,1029,1.945,1030,2.995,1031,1.945,1032,2.995,1033,1.945,1034,2.995,1035,2.995,1036,1.945,1037,1.945,1038,1.945,1039,1.945,1040,1.945,1041,2.995,1042,1.945,1043,2.995,1044,2.995,1045,4.104,1046,1.945,1047,2.995,1048,1.945,1049,1.945,1050,1.945,1051,1.945,1052,2.995,1053,2.995,1054,1.945,1055,1.945,1056,1.945,1057,1.945,1058,1.945,1059,1.945,1060,1.945,1061,1.945,1062,1.945,1063,1.945,1064,3.653,1065,4.104,1066,1.945,1067,1.945,1068,1.945,1069,1.945,1070,1.945,1071,1.945,1072,1.945,1073,1.945,1074,1.945,1075,1.945,1076,1.945,1077,1.945,1078,1.945,1079,1.945,1080,1.945,1081,1.945,1082,1.945,1083,1.945,1084,2.995,1085,1.945,1086,1.945]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":270,"title":{},"body":{"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":745,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":788,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":787,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0123456789abcdef",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":348,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["1.1.5",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["1.6.4",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["1/21",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["1/26",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":626,"title":{},"body":{"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["13",{"_index":994,"title":{},"body":{"overview.html":{}}}],["15",{"_index":568,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1].root.after(item.root",{"_index":554,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1].root[this.direction",{"_index":596,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1f1f1f",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":374,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["2.2.0",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":139,"title":{},"body":{"classes/App.html":{}}}],["200",{"_index":706,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["2020",{"_index":932,"title":{},"body":{"license.html":{}}}],["272728",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e2f30",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":376,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["3.0.1",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["3.1.3",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":439,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["300",{"_index":708,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["393939",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3f3f3f",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3px",{"_index":572,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["4",{"_index":378,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["4.3.1",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["4.3.5",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":710,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["454545",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["464749",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4px",{"_index":537,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["5",{"_index":430,"title":{},"body":{"classes/SplitBoardController.html":{},"overview.html":{}}}],["5.1.1",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["5580c0",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5d5f61",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.4",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":140,"title":{},"body":{"classes/App.html":{}}}],["600",{"_index":712,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["680",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.2",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":566,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["729cd4",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["800",{"_index":628,"title":{},"body":{"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["808080",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["900",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_bgcolorclassname",{"_index":610,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_growclassname",{"_index":611,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_shrinkclassname",{"_index":612,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_type",{"_index":149,"title":{},"body":{"classes/AppearanceService.html":{}}}],["_waitformergeitem",{"_index":444,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["above",{"_index":962,"title":{},"body":{"license.html":{}}}],["action",{"_index":918,"title":{},"body":{"index.html":{},"license.html":{}}}],["active",{"_index":711,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["activeexpand",{"_index":339,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["activeid",{"_index":331,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["addcolumn",{"_index":449,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addcolumn(item",{"_index":475,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addconfig",{"_index":728,"title":{},"body":{"classes/classBuilder.html":{}}}],["addconfig(config",{"_index":721,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["added",{"_index":541,"title":{},"body":{"classes/SplitBoardView.html":{},"index.html":{}}}],["addexpandbutton",{"_index":613,"title":{},"body":{"classes/SplitItemView.html":{}}}],["addrow",{"_index":450,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addrow(item",{"_index":477,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["aliases",{"_index":996,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":953,"title":{},"body":{"license.html":{}}}],["anycolor",{"_index":190,"title":{},"body":{"classes/ColorRef.html":{}}}],["anycolorhex",{"_index":827,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":1,"title":{"classes/App.html":{}},"body":{"classes/App.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app(document.body",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.quit",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appearance",{"_index":201,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearanceservice",{"_index":62,"title":{"classes/AppearanceService.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"coverage.html":{}}}],["appearancetype",{"_index":56,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"miscellaneous/enumerations.html":{}}}],["appearancetype.any",{"_index":207,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearancetype.dark",{"_index":110,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{}}}],["appearancetype.light",{"_index":208,"title":{},"body":{"classes/ColorRef.html":{}}}],["append",{"_index":463,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["append(child",{"_index":513,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["application",{"_index":910,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["applicationmenus",{"_index":68,"title":{},"body":{"classes/App.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationmenustype",{"_index":997,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["applysplit",{"_index":451,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["applysplit(direction",{"_index":479,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["aps",{"_index":105,"title":{},"body":{"classes/App.html":{}}}],["aps.onmodechanged((type",{"_index":107,"title":{},"body":{"classes/App.html":{}}}],["arising",{"_index":990,"title":{},"body":{"license.html":{}}}],["associated",{"_index":943,"title":{},"body":{"license.html":{}}}],["authors",{"_index":980,"title":{},"body":{"license.html":{}}}],["auto",{"_index":691,"title":{},"body":{"classes/View.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["automatically",{"_index":921,"title":{},"body":{"index.html":{}}}],["available",{"_index":848,"title":{},"body":{"index.html":{}}}],["bababa",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar.svelte",{"_index":73,"title":{},"body":{"classes/App.html":{}}}],["base",{"_index":69,"title":{},"body":{"classes/App.html":{}}}],["basemenu",{"_index":171,"title":{"classes/BaseMenu.html":{}},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["bg",{"_index":624,"title":{},"body":{"classes/SplitItemView.html":{}}}],["bgcolor",{"_index":761,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["board",{"_index":526,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.controller",{"_index":522,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.controller.ts",{"_index":330,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["board.controller.ts:10",{"_index":354,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:11",{"_index":355,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:12",{"_index":349,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:14",{"_index":350,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:15",{"_index":346,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:32",{"_index":365,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:47",{"_index":368,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:54",{"_index":356,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:6",{"_index":353,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:62",{"_index":369,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:7",{"_index":351,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:73",{"_index":362,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:8",{"_index":352,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:83",{"_index":359,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.view",{"_index":82,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{}}}],["board.view.ts",{"_index":442,"title":{},"body":{"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["board.view.ts:108",{"_index":485,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:113",{"_index":506,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:133",{"_index":508,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:153",{"_index":510,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:162",{"_index":496,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:17",{"_index":470,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:18",{"_index":469,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:19",{"_index":472,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:194",{"_index":490,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:20",{"_index":468,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:21",{"_index":466,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:27",{"_index":491,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:31",{"_index":478,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:42",{"_index":476,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:53",{"_index":494,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:63",{"_index":504,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:68",{"_index":512,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:78",{"_index":482,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:84",{"_index":484,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:96",{"_index":481,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["boolean",{"_index":214,"title":{},"body":{"interfaces/ISettings.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["bootstrap",{"_index":13,"title":{},"body":{"classes/App.html":{}}}],["bordercolor",{"_index":763,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":905,"title":{},"body":{"index.html":{}}}],["browserwindow",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder",{"_index":907,"title":{},"body":{"index.html":{}}}],["builder.ts",{"_index":699,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["builder.ts:11",{"_index":701,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["builder.ts:24",{"_index":731,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:30",{"_index":734,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:33",{"_index":733,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:36",{"_index":735,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:44",{"_index":737,"title":{},"body":{"classes/classBuilder.html":{}}}],["building",{"_index":860,"title":{},"body":{"index.html":{}}}],["bundled",{"_index":874,"title":{},"body":{"index.html":{}}}],["button",{"_index":638,"title":{},"body":{"classes/SplitItemView.html":{}}}],["c",{"_index":723,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"license.html":{},"interfaces/stateConfig.html":{}}}],["c0c0c1",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c4666f",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c6c6c6",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback",{"_index":305,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["cancelformerge",{"_index":452,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["cancelwaitformerge",{"_index":614,"title":{},"body":{"classes/SplitItemView.html":{}}}],["case",{"_index":206,"title":{},"body":{"classes/ColorRef.html":{}}}],["cgray",{"_index":625,"title":{},"body":{"classes/SplitItemView.html":{}}}],["charge",{"_index":938,"title":{},"body":{"license.html":{}}}],["check",{"_index":213,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["checkdirection",{"_index":453,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["checkdirection(type",{"_index":483,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["checkexpandstate",{"_index":340,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["checkexpandstate(clientx",{"_index":357,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["child",{"_index":515,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["children",{"_index":306,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["childs",{"_index":518,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["claim",{"_index":983,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classbuilder",{"_index":714,"title":{"classes/classBuilder.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classconfig",{"_index":702,"title":{"interfaces/classConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["classname",{"_index":647,"title":{},"body":{"classes/SplitItemView.html":{}}}],["clear",{"_index":719,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["clientheight",{"_index":598,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["clientwidth",{"_index":597,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["clientx",{"_index":360,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["clienty",{"_index":358,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["code",{"_index":841,"title":{},"body":{"index.html":{}}}],["col",{"_index":500,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":193,"title":{},"body":{"classes/ColorRef.html":{},"dependencies.html":{},"index.html":{}}}],["color(appearancetype",{"_index":199,"title":{},"body":{"classes/ColorRef.html":{}}}],["color.ts",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["colorref",{"_index":187,"title":{"classes/ColorRef.html":{}},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["colorsetroot",{"_index":100,"title":{},"body":{"classes/App.html":{}}}],["column",{"_index":418,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["command",{"_index":322,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["common",{"_index":879,"title":{},"body":{"index.html":{}}}],["community",{"_index":839,"title":{},"body":{"index.html":{}}}],["compilation",{"_index":896,"title":{},"body":{"index.html":{}}}],["compile",{"_index":891,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":913,"title":{},"body":{"index.html":{}}}],["components",{"_index":881,"title":{},"body":{"index.html":{}}}],["concrete",{"_index":834,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":961,"title":{},"body":{"license.html":{}}}],["config",{"_index":247,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/classBuilder.html":{}}}],["configs",{"_index":732,"title":{},"body":{"classes/classBuilder.html":{}}}],["configs.foreach((config",{"_index":717,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["configured",{"_index":909,"title":{},"body":{"index.html":{}}}],["connection",{"_index":991,"title":{},"body":{"license.html":{}}}],["console",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(`test",{"_index":684,"title":{},"body":{"classes/Test.html":{}}}],["console.log(item",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.warn('direction",{"_index":539,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["const",{"_index":99,"title":{},"body":{"classes/App.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{}}}],["constructor(anycolor",{"_index":194,"title":{},"body":{"classes/ColorRef.html":{}}}],["constructor(config",{"_index":308,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["constructor(configs",{"_index":716,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["constructor(container",{"_index":232,"title":{},"body":{"classes/Menu.html":{}}}],["constructor(groupmenuservice",{"_index":177,"title":{},"body":{"classes/BaseMenu.html":{}}}],["constructor(private",{"_index":86,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/SplitBoardController.html":{}}}],["constructor(root",{"_index":26,"title":{},"body":{"classes/App.html":{},"classes/View.html":{}}}],["constructor(view",{"_index":345,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["container",{"_index":10,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{}}}],["containermodule",{"_index":166,"title":{},"body":{"classes/AppearanceService.html":{}}}],["contentview",{"_index":576,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["contentview.classlist.add('flex",{"_index":659,"title":{},"body":{"classes/SplitItemView.html":{}}}],["context",{"_index":11,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["contextisolation",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":987,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":927,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":924,"title":{},"body":{"index.html":{}}}],["controlaccentcolor",{"_index":764,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlbackgroundcolor",{"_index":765,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controldisabledcolor",{"_index":766,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlforbiddencolor",{"_index":767,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlhighlightcolor",{"_index":768,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":445,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["copies",{"_index":955,"title":{},"body":{"license.html":{}}}],["copy",{"_index":941,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":931,"title":{},"body":{"license.html":{}}}],["cosmic",{"_index":830,"title":{},"body":{"index.html":{}}}],["cosmic/core/browser/layout/split",{"_index":81,"title":{},"body":{"classes/App.html":{}}}],["cosmic/core/common/appearance",{"_index":61,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{}}}],["cosmic/workbench/services/appearance",{"_index":63,"title":{},"body":{"classes/App.html":{}}}],["cosmic/workbench/services/menu",{"_index":66,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["coverage",{"_index":738,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createmenu",{"_index":227,"title":{},"body":{"classes/Menu.html":{}}}],["createwindow",{"_index":744,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["crosshair",{"_index":501,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["current",{"_index":914,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":725,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["d00000",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d1905d",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d2r",{"_index":836,"title":{},"body":{"index.html":{}}}],["d7d7d7",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d9d9d9",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":984,"title":{},"body":{"license.html":{}}}],["dark",{"_index":112,"title":{},"body":{"classes/App.html":{},"miscellaneous/enumerations.html":{}}}],["dark:bg",{"_index":627,"title":{},"body":{"classes/SplitItemView.html":{}}}],["darkcolor",{"_index":191,"title":{},"body":{"classes/ColorRef.html":{}}}],["darkcolorhex",{"_index":826,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date.now",{"_index":294,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["deal",{"_index":944,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":992,"title":{},"body":{"license.html":{}}}],["debugging",{"_index":916,"title":{},"body":{"index.html":{}}}],["default",{"_index":37,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":219,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["defaultscope",{"_index":88,"title":{},"body":{"classes/App.html":{}}}],["defaultweightmap",{"_index":705,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{}}}],["dependencies",{"_index":793,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["design",{"_index":831,"title":{},"body":{"index.html":{}}}],["desktop/menu",{"_index":290,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["destorysplit",{"_index":454,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["destroy",{"_index":228,"title":{},"body":{"classes/Menu.html":{}}}],["dev",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["develop",{"_index":837,"title":{},"body":{"index.html":{}}}],["development",{"_index":846,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":446,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["directionstyles",{"_index":655,"title":{},"body":{"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["directionstyles[direction",{"_index":677,"title":{},"body":{"classes/SplitItemView.html":{}}}],["directiontype",{"_index":370,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["directiontype.col",{"_index":416,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["directiontype.row",{"_index":422,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["disable",{"_index":319,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["disabled",{"_index":713,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["dist/workbench/desktop",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":919,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribution",{"_index":898,"title":{},"body":{"index.html":{}}}],["divided",{"_index":870,"title":{},"body":{"index.html":{}}}],["document.body.classlist.add('mode",{"_index":111,"title":{},"body":{"classes/App.html":{}}}],["document.body.classlist.remove('mode",{"_index":113,"title":{},"body":{"classes/App.html":{}}}],["document.createelement('div",{"_index":293,"title":{},"body":{"classes/MenuGroupService.html":{},"classes/View.html":{}}}],["document.createelement('style",{"_index":101,"title":{},"body":{"classes/App.html":{}}}],["document.queryselector('#main",{"_index":122,"title":{},"body":{"classes/App.html":{}}}],["documentation",{"_index":739,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["draft",{"_index":922,"title":{},"body":{"index.html":{}}}],["e",{"_index":502,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["e0e0e0",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":875,"title":{},"body":{"index.html":{}}}],["electron",{"_index":216,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{},"index.html":{}}}],["electron/.exec(process.execpath",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["electronstore",{"_index":215,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["enableremotemodule",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entire",{"_index":868,"title":{},"body":{"index.html":{}}}],["enum",{"_index":321,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["enumerations",{"_index":813,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eslint",{"_index":318,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":366,"title":{},"body":{"classes/SplitBoardController.html":{},"license.html":{}}}],["event.clientx",{"_index":394,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.clienty",{"_index":381,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.preventdefault",{"_index":395,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.stoppropagation",{"_index":396,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.target",{"_index":388,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["eventemitter2",{"_index":155,"title":{},"body":{"classes/AppearanceService.html":{},"dependencies.html":{}}}],["everyone",{"_index":849,"title":{},"body":{"index.html":{}}}],["evt",{"_index":150,"title":{},"body":{"classes/AppearanceService.html":{}}}],["expand",{"_index":372,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{}}}],["expand.svelte",{"_index":654,"title":{},"body":{"classes/SplitItemView.html":{}}}],["expandactive",{"_index":332,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expanded",{"_index":498,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["expandleavehandler",{"_index":333,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmouseuphandler",{"_index":334,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmovehandler",{"_index":335,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandtype",{"_index":336,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["export",{"_index":85,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["express",{"_index":971,"title":{},"body":{"license.html":{}}}],["extends",{"_index":443,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["f2f2f2",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f9f9f9",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":220,"title":{},"body":{"interfaces/ISettings.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["ffae2b",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["file://${join(__dirname",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":920,"title":{},"body":{"index.html":{},"license.html":{}}}],["fitness",{"_index":976,"title":{},"body":{"license.html":{}}}],["flex",{"_index":532,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["flowvalue",{"_index":520,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["fn",{"_index":159,"title":{},"body":{"classes/AppearanceService.html":{}}}],["focus",{"_index":707,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":960,"title":{},"body":{"license.html":{}}}],["fourthbgcolor",{"_index":769,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":937,"title":{},"body":{"license.html":{}}}],["function",{"_index":160,"title":{},"body":{"classes/AppearanceService.html":{},"classes/SplitBoardController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":819,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":958,"title":{},"body":{"license.html":{}}}],["getexpandresizes",{"_index":455,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["getexpandresizes(index",{"_index":486,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["getmenuinsatance",{"_index":281,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["getting",{"_index":828,"title":{"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":917,"title":{},"body":{"index.html":{}}}],["granted",{"_index":936,"title":{},"body":{"license.html":{}}}],["gridbackgroundcolor",{"_index":770,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":67,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["groupmenu",{"_index":123,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.getmenuinsatance().init(menu.title",{"_index":127,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.initcontainer(header",{"_index":125,"title":{},"body":{"classes/App.html":{}}}],["groupmenuservice",{"_index":179,"title":{},"body":{"classes/BaseMenu.html":{}}}],["grow",{"_index":648,"title":{},"body":{"classes/SplitItemView.html":{}}}],["guide",{"_index":847,"title":{},"body":{"index.html":{}}}],["gutterstyle",{"_index":570,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["header",{"_index":121,"title":{},"body":{"classes/App.html":{}}}],["height",{"_index":571,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":843,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":935,"title":{},"body":{"license.html":{}}}],["hexdigits",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hidden",{"_index":535,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["hide",{"_index":637,"title":{},"body":{"classes/SplitItemView.html":{}}}],["hideexpandbutton",{"_index":615,"title":{},"body":{"classes/SplitItemView.html":{}}}],["holders",{"_index":981,"title":{},"body":{"license.html":{}}}],["hor",{"_index":373,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["horizontal",{"_index":417,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["host",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hover",{"_index":709,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["htmlelement",{"_index":27,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["http://localhost:5000",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":223,"title":{},"body":{"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["identifier",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["implied",{"_index":972,"title":{},"body":{"license.html":{}}}],["import",{"_index":59,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["include",{"_index":878,"title":{},"body":{"index.html":{}}}],["included",{"_index":965,"title":{},"body":{"license.html":{}}}],["including",{"_index":947,"title":{},"body":{"license.html":{}}}],["independently",{"_index":876,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indexable",{"_index":700,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["ing",{"_index":832,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":473,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["init",{"_index":229,"title":{},"body":{"classes/Menu.html":{},"classes/SplitBoardView.html":{}}}],["init(name",{"_index":246,"title":{},"body":{"classes/Menu.html":{}}}],["initcontainer",{"_index":282,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["initcontainer(container",{"_index":287,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["initflowtable",{"_index":14,"title":{},"body":{"classes/App.html":{}}}],["initframe",{"_index":15,"title":{},"body":{"classes/App.html":{}}}],["initial",{"_index":692,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["initmenu",{"_index":176,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenu(menuitems",{"_index":180,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenus",{"_index":16,"title":{},"body":{"classes/App.html":{}}}],["initnavigationbar",{"_index":17,"title":{},"body":{"classes/App.html":{}}}],["initpreferences",{"_index":18,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel",{"_index":19,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel(container",{"_index":49,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel",{"_index":20,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel(container",{"_index":51,"title":{},"body":{"classes/App.html":{}}}],["initstatusbar",{"_index":21,"title":{},"body":{"classes/App.html":{}}}],["initstyle",{"_index":22,"title":{},"body":{"classes/App.html":{}}}],["initstylemode",{"_index":23,"title":{},"body":{"classes/App.html":{}}}],["initstylemode(type",{"_index":55,"title":{},"body":{"classes/App.html":{}}}],["initworkarea",{"_index":24,"title":{},"body":{"classes/App.html":{}}}],["inject",{"_index":165,"title":{},"body":{"classes/AppearanceService.html":{},"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject(token",{"_index":822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":164,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardView.html":{}}}],["insertconfig",{"_index":729,"title":{},"body":{"classes/classBuilder.html":{}}}],["insertconfig(config",{"_index":722,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["insertitemat",{"_index":456,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["insertitemat(item",{"_index":492,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["interface",{"_index":209,"title":{"interfaces/ISettings.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}},"body":{"interfaces/ISettings.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["interfaces",{"_index":211,"title":{},"body":{"interfaces/ISettings.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["inversify",{"_index":60,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardView.html":{},"dependencies.html":{}}}],["ipc",{"_index":882,"title":{},"body":{"index.html":{}}}],["isettings",{"_index":210,"title":{"interfaces/ISettings.html":{}},"body":{"interfaces/ISettings.html":{},"coverage.html":{}}}],["isprod",{"_index":746,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isshrink",{"_index":616,"title":{},"body":{"classes/SplitItemView.html":{}}}],["issues",{"_index":842,"title":{},"body":{"index.html":{}}}],["item",{"_index":255,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["item.contentview",{"_index":577,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.hideexpandbutton",{"_index":582,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.id",{"_index":301,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["item.replacecontent(newboard.root",{"_index":578,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.root",{"_index":390,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientheight",{"_index":426,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.clientwidth",{"_index":421,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.getboundingclientrect().left",{"_index":420,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.getboundingclientrect().top",{"_index":425,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.ts",{"_index":304,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["item.ts:18",{"_index":312,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:19",{"_index":313,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:20",{"_index":315,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:21",{"_index":311,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:22",{"_index":309,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.view",{"_index":84,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.view.ts",{"_index":609,"title":{},"body":{"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["item.view.ts:13",{"_index":630,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:14",{"_index":631,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:15",{"_index":629,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:17",{"_index":632,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:18",{"_index":623,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:26",{"_index":643,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:33",{"_index":641,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:40",{"_index":646,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:47",{"_index":650,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:54",{"_index":639,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:58",{"_index":644,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:64",{"_index":634,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:68",{"_index":636,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:72",{"_index":653,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:78",{"_index":635,"title":{},"body":{"classes/SplitItemView.html":{}}}],["items",{"_index":447,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["join(__dirname",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keycode",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["kind",{"_index":970,"title":{},"body":{"license.html":{}}}],["labelcolor",{"_index":771,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["length",{"_index":488,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["liability",{"_index":985,"title":{},"body":{"license.html":{}}}],["liable",{"_index":982,"title":{},"body":{"license.html":{}}}],["license",{"_index":853,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["light",{"_index":818,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lightcolor",{"_index":192,"title":{},"body":{"classes/ColorRef.html":{}}}],["lightcolorhex",{"_index":825,"title":{},"body":{"miscellaneous/functions.html":{}}}],["limitation",{"_index":948,"title":{},"body":{"license.html":{}}}],["limited",{"_index":973,"title":{},"body":{"license.html":{}}}],["linux",{"_index":901,"title":{},"body":{"index.html":{}}}],["literal",{"_index":1000,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["live",{"_index":497,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["liveresize",{"_index":341,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["liveresize(clientx",{"_index":361,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["local",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":797,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":750,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error(json.stringify(err",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lowboardroot",{"_index":524,"title":{},"body":{"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["macos",{"_index":899,"title":{},"body":{"index.html":{}}}],["main",{"_index":884,"title":{},"body":{"index.html":{}}}],["mainwindow",{"_index":747,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mainwindow.loadurl(url).catch((err",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.on('closed",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.webcontents.opendevtools",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makecolor('#000000",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#3f3f3f",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#5580c0",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#729cd4",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#bababa",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c0c0c1",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c4666f",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c6c6c6",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d00000",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d1905d",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d7d7d7",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d9d9d9",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#e0e0e0",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f2f2f2",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f9f9f9",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffae2b",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffffff",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor(anycolorhex",{"_index":824,"title":{},"body":{"miscellaneous/functions.html":{}}}],["map",{"_index":40,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{}}}],["matching",{"_index":145,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":595,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["menu",{"_index":126,"title":{"classes/Menu.html":{}},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menu(menucontainer",{"_index":297,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menu.id",{"_index":302,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menu.items",{"_index":128,"title":{},"body":{"classes/App.html":{}}}],["menu.svelte",{"_index":254,"title":{},"body":{"classes/Menu.html":{}}}],["menu.ts",{"_index":174,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["menu.ts:5",{"_index":178,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu.ts:8",{"_index":182,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu/base",{"_index":173,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["menu/config",{"_index":70,"title":{},"body":{"classes/App.html":{}}}],["menu/config.ts",{"_index":785,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menucommonfunction",{"_index":310,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/typealiases.html":{}}}],["menucontainer",{"_index":292,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menugroupservice",{"_index":65,"title":{"classes/MenuGroupService.html":{}},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/MenuGroupService.html":{},"coverage.html":{}}}],["menuinstance",{"_index":175,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuitem",{"_index":238,"title":{"classes/MenuItem.html":{}},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menuitem(config",{"_index":271,"title":{},"body":{"classes/Menu.html":{}}}],["menuitem(menuitem",{"_index":265,"title":{},"body":{"classes/Menu.html":{}}}],["menuitemconfig",{"_index":181,"title":{"interfaces/MenuItemConfig.html":{}},"body":{"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menuitems",{"_index":183,"title":{},"body":{"classes/BaseMenu.html":{},"classes/Menu.html":{}}}],["menuitemtype",{"_index":314,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/enumerations.html":{}}}],["menuitemtype.group",{"_index":323,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["menusvelte",{"_index":224,"title":{},"body":{"classes/Menu.html":{}}}],["merchantability",{"_index":975,"title":{},"body":{"license.html":{}}}],["merge",{"_index":377,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["metadata",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":12,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{}}}],["meuns",{"_index":280,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["meunswritable",{"_index":225,"title":{},"body":{"classes/Menu.html":{}}}],["minimum",{"_index":857,"title":{},"body":{"index.html":{}}}],["minsize",{"_index":567,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["miscellaneous",{"_index":812,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":852,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":429,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["modify",{"_index":951,"title":{},"body":{"license.html":{}}}],["modules",{"_index":872,"title":{"modules.html":{}},"body":{"index.html":{},"modules.html":{}}}],["monorepo",{"_index":867,"title":{},"body":{"index.html":{}}}],["more",{"_index":862,"title":{},"body":{"index.html":{}}}],["mousedown",{"_index":397,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["mouseevent",{"_index":364,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["n",{"_index":438,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":32,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["namewritable",{"_index":226,"title":{},"body":{"classes/Menu.html":{}}}],["navigation",{"_index":71,"title":{},"body":{"classes/App.html":{}}}],["navigationbar",{"_index":115,"title":{},"body":{"classes/App.html":{}}}],["new",{"_index":39,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newboard",{"_index":575,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addcolumn(newemptyview",{"_index":584,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addcolumn(newitemview",{"_index":583,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addrow(newemptyview",{"_index":589,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addrow(newitemview",{"_index":588,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.controller.checkexpandstate(clientx",{"_index":586,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.controller.setactivestate(0",{"_index":585,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newemptyview",{"_index":581,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newitem",{"_index":592,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newitemview",{"_index":579,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsize",{"_index":602,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes",{"_index":590,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(newsize",{"_index":604,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(size",{"_index":606,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(sum",{"_index":605,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(w",{"_index":608,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["next",{"_index":892,"title":{},"body":{"index.html":{}}}],["none",{"_index":693,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["noninfringement",{"_index":979,"title":{},"body":{"license.html":{}}}],["normalizeweight",{"_index":730,"title":{},"body":{"classes/classBuilder.html":{}}}],["normalizeweight(config",{"_index":736,"title":{},"body":{"classes/classBuilder.html":{}}}],["nothing",{"_index":861,"title":{},"body":{"index.html":{}}}],["notice",{"_index":963,"title":{},"body":{"license.html":{}}}],["notification",{"_index":748,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nowrap",{"_index":533,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["npm",{"_index":908,"title":{},"body":{"index.html":{}}}],["null",{"_index":467,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":250,"title":{},"body":{"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":940,"title":{},"body":{"license.html":{}}}],["offsetx",{"_index":427,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["offsety",{"_index":428,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["ok",{"_index":685,"title":{},"body":{"classes/Test.html":{}}}],["onmodechanged",{"_index":152,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmodechanged(fn",{"_index":157,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmousedown",{"_index":342,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["onmousedown(event",{"_index":363,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["optional",{"_index":34,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{}}}],["orderedconfigs",{"_index":715,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["organization",{"_index":928,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":989,"title":{},"body":{"license.html":{}}}],["out",{"_index":904,"title":{},"body":{"index.html":{},"license.html":{}}}],["overflow",{"_index":534,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["overview",{"_index":993,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":792,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":873,"title":{},"body":{"index.html":{}}}],["packaging",{"_index":895,"title":{},"body":{"index.html":{}}}],["page",{"_index":888,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":30,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":977,"title":{},"body":{"license.html":{}}}],["permission",{"_index":934,"title":{},"body":{"license.html":{}}}],["permit",{"_index":956,"title":{},"body":{"license.html":{}}}],["person",{"_index":939,"title":{},"body":{"license.html":{}}}],["persons",{"_index":957,"title":{},"body":{"license.html":{}}}],["platform",{"_index":915,"title":{},"body":{"index.html":{}}}],["port",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":967,"title":{},"body":{"license.html":{}}}],["pos",{"_index":493,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["position",{"_index":489,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["possible",{"_index":912,"title":{},"body":{"index.html":{}}}],["practice",{"_index":835,"title":{},"body":{"index.html":{}}}],["preload",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preload.js",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepend",{"_index":464,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["prepend(...childs",{"_index":516,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["print",{"_index":681,"title":{},"body":{"classes/Test.html":{}}}],["print(target",{"_index":682,"title":{},"body":{"classes/Test.html":{}}}],["private",{"_index":9,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["process.env.node_env",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":869,"title":{},"body":{"index.html":{}}}],["project",{"_index":863,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["propertypanel",{"_index":78,"title":{},"body":{"classes/App.html":{}}}],["props",{"_index":118,"title":{},"body":{"classes/App.html":{}}}],["provided",{"_index":968,"title":{},"body":{"license.html":{}}}],["public",{"_index":151,"title":{},"body":{"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["publish",{"_index":844,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":978,"title":{},"body":{"license.html":{}}}],["qiansc",{"_index":933,"title":{},"body":{"license.html":{}}}],["quickly",{"_index":911,"title":{},"body":{"index.html":{}}}],["r",{"_index":599,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["readonly",{"_index":222,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["ready",{"_index":897,"title":{},"body":{"index.html":{}}}],["ref.ts",{"_index":189,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["ref.ts:15",{"_index":200,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:5",{"_index":197,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:6",{"_index":198,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:7",{"_index":195,"title":{},"body":{"classes/ColorRef.html":{}}}],["reflect",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["registeritem",{"_index":230,"title":{},"body":{"classes/Menu.html":{}}}],["registeritem(config",{"_index":249,"title":{},"body":{"classes/Menu.html":{}}}],["release",{"_index":923,"title":{},"body":{"index.html":{}}}],["removecolumn(item",{"_index":561,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["removeitem",{"_index":231,"title":{},"body":{"classes/Menu.html":{}}}],["removeitem(index",{"_index":252,"title":{},"body":{"classes/Menu.html":{}}}],["removemenuinstances",{"_index":283,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["removemenuinstances(menu",{"_index":288,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["removerow(item",{"_index":562,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["replacecontent",{"_index":617,"title":{},"body":{"classes/SplitItemView.html":{}}}],["replacecontent(contentview",{"_index":640,"title":{},"body":{"classes/SplitItemView.html":{}}}],["repository",{"_index":833,"title":{},"body":{"index.html":{}}}],["required",{"_index":856,"title":{},"body":{"index.html":{}}}],["resize",{"_index":432,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["resizeat",{"_index":457,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["resizeat(index",{"_index":495,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["resourcepage",{"_index":76,"title":{},"body":{"classes/App.html":{}}}],["restriction",{"_index":946,"title":{},"body":{"license.html":{}}}],["result",{"_index":144,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":146,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":170,"title":{},"body":{"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["returns",{"_index":42,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{}}}],["right",{"_index":540,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["rights",{"_index":949,"title":{},"body":{"license.html":{}}}],["roadmap",{"_index":845,"title":{},"body":{"index.html":{}}}],["rollup",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":35,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["rounded",{"_index":668,"title":{},"body":{"classes/SplitItemView.html":{}}}],["row",{"_index":424,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":894,"title":{},"body":{"index.html":{}}}],["s",{"_index":503,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["script",{"_index":885,"title":{},"body":{"index.html":{}}}],["secondarybgcolor",{"_index":772,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["secondarylabelcolor",{"_index":773,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":925,"title":{},"body":{"index.html":{}}}],["sell",{"_index":954,"title":{},"body":{"license.html":{}}}],["server",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":64,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["service.ts",{"_index":148,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":156,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:12",{"_index":163,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{}}}],["service.ts:18",{"_index":158,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:19",{"_index":286,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:21",{"_index":161,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:28",{"_index":289,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:6",{"_index":285,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:7",{"_index":284,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:9",{"_index":154,"title":{},"body":{"classes/AppearanceService.html":{}}}],["set",{"_index":930,"title":{},"body":{"index.html":{}}}],["setactivestate",{"_index":343,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setactivestate(index",{"_index":367,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setcontent",{"_index":618,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setcontent(contentview",{"_index":642,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setcursor",{"_index":458,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["setcursor(type",{"_index":499,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["setdefaultclass",{"_index":619,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setflow",{"_index":465,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setflow(type",{"_index":519,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setgrow",{"_index":620,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setgrow(classname",{"_index":645,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setshrink",{"_index":621,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setshrink(classname",{"_index":649,"title":{},"body":{"classes/SplitItemView.html":{}}}],["settings",{"_index":218,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shadow",{"_index":320,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["shall",{"_index":964,"title":{},"body":{"license.html":{}}}],["shrink",{"_index":651,"title":{},"body":{"classes/SplitItemView.html":{}}}],["similar",{"_index":866,"title":{},"body":{"index.html":{}}}],["singleton",{"_index":89,"title":{},"body":{"classes/App.html":{}}}],["size",{"_index":601,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["sizes",{"_index":480,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["smelte",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["snapoffset",{"_index":569,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["software",{"_index":942,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["split",{"_index":371,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["split(array.prototype.slice.call(this.root.children",{"_index":565,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["split.instance",{"_index":471,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["split.js",{"_index":523,"title":{},"body":{"classes/SplitBoardView.html":{},"dependencies.html":{}}}],["splitboard",{"_index":129,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view0",{"_index":135,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view1",{"_index":136,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view2",{"_index":137,"title":{},"body":{"classes/App.html":{}}}],["splitboard.applysplit('horizontal",{"_index":138,"title":{},"body":{"classes/App.html":{}}}],["splitboardcontroller",{"_index":328,"title":{"classes/SplitBoardController.html":{}},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"coverage.html":{}}}],["splitboardcontroller(this",{"_index":530,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitboardview",{"_index":80,"title":{"classes/SplitBoardView.html":{}},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"coverage.html":{}}}],["splitboardview().setflow('1",{"_index":130,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["splitcolumnat",{"_index":459,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitcolumnat(index",{"_index":505,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitexpand",{"_index":633,"title":{},"body":{"classes/SplitItemView.html":{}}}],["splitinstance",{"_index":448,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splititemview",{"_index":83,"title":{"classes/SplitItemView.html":{}},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{}}}],["splititemview().setcontent(contentview",{"_index":580,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splititemview().setcontent(document.createelement('div",{"_index":132,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["splitrowat",{"_index":460,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitrowat(index",{"_index":507,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["src/.../appearance.ts",{"_index":814,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../class",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.ts",{"_index":998,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inject.ts",{"_index":820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.ts",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu",{"_index":816,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../settings.ts",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../split",{"_index":815,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../ui",{"_index":821,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../view.ts",{"_index":999,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app",{"_index":883,"title":{},"body":{"index.html":{}}}],["src/app/index.ts",{"_index":742,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/logger.ts",{"_index":749,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/settings.ts",{"_index":212,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core",{"_index":877,"title":{},"body":{"index.html":{}}}],["src/core/browser/class",{"_index":698,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/layout/split",{"_index":329,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/style/ui",{"_index":758,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/view.ts",{"_index":686,"title":{},"body":{"classes/View.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/browser/view.ts:13",{"_index":688,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:17",{"_index":689,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:4",{"_index":687,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:8",{"_index":690,"title":{},"body":{"classes/View.html":{}}}],["src/core/common/appearance.ts",{"_index":817,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/common/color",{"_index":188,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["src/core/components",{"_index":890,"title":{},"body":{"index.html":{}}}],["src/core/parts/ioc/inject.ts",{"_index":784,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/core/parts/test.ts",{"_index":680,"title":{},"body":{"classes/Test.html":{},"coverage.html":{}}}],["src/core/parts/test.ts:2",{"_index":683,"title":{},"body":{"classes/Test.html":{}}}],["src/workbench",{"_index":886,"title":{},"body":{"index.html":{}}}],["src/workbench/desktop/app.ts",{"_index":6,"title":{},"body":{"classes/App.html":{},"coverage.html":{}}}],["src/workbench/desktop/app.ts:104",{"_index":58,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:108",{"_index":53,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:13",{"_index":36,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:14",{"_index":29,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:21",{"_index":41,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:27",{"_index":48,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:32",{"_index":54,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:42",{"_index":57,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:50",{"_index":45,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:54",{"_index":47,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:64",{"_index":46,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:73",{"_index":44,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:88",{"_index":52,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:96",{"_index":50,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/base",{"_index":172,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/desktop/main.ts",{"_index":786,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/desktop/menu/menu",{"_index":303,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/workbench/desktop/menu/menu.ts",{"_index":221,"title":{},"body":{"classes/Menu.html":{},"coverage.html":{}}}],["src/workbench/desktop/menu/menu.ts:10",{"_index":239,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:11",{"_index":240,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:12",{"_index":236,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:13",{"_index":242,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:14",{"_index":234,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:23",{"_index":248,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:31",{"_index":245,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:38",{"_index":251,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:43",{"_index":253,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:49",{"_index":244,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:7",{"_index":235,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:8",{"_index":237,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:9",{"_index":243,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/utils/utils.ts",{"_index":789,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/services/appearance",{"_index":147,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["src/workbench/services/menu",{"_index":279,"title":{},"body":{"classes/MenuGroupService.html":{},"coverage.html":{}}}],["standard",{"_index":851,"title":{},"body":{"index.html":{}}}],["start",{"_index":487,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["started",{"_index":829,"title":{"index.html":{},"license.html":{}},"body":{}}],["starttoexpand",{"_index":461,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["starttoexpand(index",{"_index":509,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["startx",{"_index":337,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["starty",{"_index":338,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["stateconfig",{"_index":703,"title":{"interfaces/stateConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["statements",{"_index":741,"title":{},"body":{"coverage.html":{}}}],["statically",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statusbar",{"_index":74,"title":{},"body":{"classes/App.html":{}}}],["step",{"_index":893,"title":{},"body":{"index.html":{}}}],["sth",{"_index":114,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["store",{"_index":217,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{}}}],["storybook",{"_index":889,"title":{},"body":{"index.html":{}}}],["string",{"_index":233,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":864,"title":{},"body":{"index.html":{}}}],["subject",{"_index":959,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":952,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":966,"title":{},"body":{"license.html":{}}}],["such",{"_index":880,"title":{},"body":{"index.html":{}}}],["sum",{"_index":600,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["super",{"_index":527,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["support",{"_index":903,"title":{},"body":{"index.html":{}}}],["svelte/store",{"_index":256,"title":{},"body":{"classes/Menu.html":{}}}],["switch",{"_index":205,"title":{},"body":{"classes/ColorRef.html":{}}}],["symbol.for('flowtableroot",{"_index":525,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["systembluecolor",{"_index":774,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemgraycolor",{"_index":775,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemorangecolor",{"_index":776,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systempinkcolor",{"_index":777,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemredcolor",{"_index":778,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemyellowcolor",{"_index":779,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":116,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"miscellaneous/variables.html":{}}}],["target.classlist.contains('split",{"_index":392,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["target.parentelement",{"_index":391,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["template",{"_index":855,"title":{},"body":{"index.html":{}}}],["tertiarybgcolor",{"_index":780,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tertiarylabelcolor",{"_index":781,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":679,"title":{"classes/Test.html":{}},"body":{"classes/Test.html":{},"coverage.html":{}}}],["textfieldbackground",{"_index":782,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["this._growclassname",{"_index":664,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._shrinkclassname",{"_index":663,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._type",{"_index":167,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this._waitformergeitem",{"_index":556,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this._waitformergeitem.cancelwaitformerge",{"_index":560,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.activeexpand",{"_index":400,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.activeid",{"_index":401,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.addexpandbutton",{"_index":656,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.anycolor",{"_index":202,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.applysplit",{"_index":548,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.applysplit('vertical",{"_index":546,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.applysplit(this.direction",{"_index":594,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.callback",{"_index":327,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.cancelformerge",{"_index":558,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.cancelwaitformerge",{"_index":674,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.checkdirection(directiontype.col",{"_index":547,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.checkdirection(directiontype.row",{"_index":538,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.checkexpandstate(event.clientx",{"_index":382,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.children",{"_index":324,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.container",{"_index":87,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{}}}],["this.container.append(menucontainer",{"_index":296,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.container.bind(appearanceservice).to(appearanceservice",{"_index":96,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(colorset).to(colorset",{"_index":98,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(colorsetroot).todynamicvalue",{"_index":102,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(menugroupservice).to(menugroupservice",{"_index":97,"title":{},"body":{"classes/App.html":{}}}],["this.container.firstchild",{"_index":267,"title":{},"body":{"classes/Menu.html":{}}}],["this.container.get(appearanceservice",{"_index":106,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(colorset",{"_index":104,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(menugroupservice",{"_index":124,"title":{},"body":{"classes/App.html":{}}}],["this.container.removechild(menu.container",{"_index":299,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.container.removechild(this.container.firstchild",{"_index":268,"title":{},"body":{"classes/Menu.html":{}}}],["this.contentview",{"_index":658,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.context",{"_index":119,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{}}}],["this.context.set('container",{"_index":90,"title":{},"body":{"classes/App.html":{}}}],["this.context.set('menus",{"_index":259,"title":{},"body":{"classes/Menu.html":{}}}],["this.context.set('name",{"_index":261,"title":{},"body":{"classes/Menu.html":{}}}],["this.controller",{"_index":529,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.createmenu",{"_index":266,"title":{},"body":{"classes/Menu.html":{}}}],["this.darkcolor",{"_index":204,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.destorysplit",{"_index":563,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.direction",{"_index":542,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.evt.emit('onmodechanged",{"_index":168,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.evt.on('onmodechanged",{"_index":169,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.expand",{"_index":672,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.expandhidden",{"_index":673,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.mergedirection",{"_index":676,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expandactive",{"_index":405,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandleavehandler",{"_index":383,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmouseuphandler",{"_index":385,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmovehandler",{"_index":379,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandtype",{"_index":407,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.getexpandresizes(index",{"_index":591,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.groupmenuservice.getmenuinsatance",{"_index":185,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.id",{"_index":257,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.init",{"_index":528,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.initflowtable",{"_index":94,"title":{},"body":{"classes/App.html":{}}}],["this.initmenus",{"_index":120,"title":{},"body":{"classes/App.html":{}}}],["this.initnavigationbar",{"_index":93,"title":{},"body":{"classes/App.html":{}}}],["this.initpreferences",{"_index":91,"title":{},"body":{"classes/App.html":{}}}],["this.initpropertypanel(view2.contentview",{"_index":143,"title":{},"body":{"classes/App.html":{}}}],["this.initresourcepanel(view0.contentview",{"_index":142,"title":{},"body":{"classes/App.html":{}}}],["this.initstatusbar",{"_index":95,"title":{},"body":{"classes/App.html":{}}}],["this.initstyle",{"_index":92,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(appearancetype.dark",{"_index":109,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(type",{"_index":108,"title":{},"body":{"classes/App.html":{}}}],["this.insertconfig(config",{"_index":718,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.insertitemat(item",{"_index":545,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.insertitemat(newitem",{"_index":593,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items.length",{"_index":550,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items.splice(pos",{"_index":551,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[index",{"_index":557,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[index].waitformerge(direction",{"_index":559,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[pos",{"_index":553,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.lightcolor",{"_index":203,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.liveresize(event.clientx",{"_index":380,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.menuinstance",{"_index":184,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.menuinstance.init",{"_index":186,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.menuitems",{"_index":258,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.filter((_",{"_index":275,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.push(new",{"_index":264,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.splice(index",{"_index":269,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems[index",{"_index":273,"title":{},"body":{"classes/Menu.html":{}}}],["this.menusvelte",{"_index":276,"title":{},"body":{"classes/Menu.html":{}}}],["this.meuns",{"_index":291,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meuns.filter((item",{"_index":300,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meuns.length",{"_index":295,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meuns.push(menu",{"_index":298,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meunswritable",{"_index":260,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set((this.menuitems",{"_index":274,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set([...this.menuitems",{"_index":272,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set(this.menuitems",{"_index":278,"title":{},"body":{"classes/Menu.html":{}}}],["this.name",{"_index":263,"title":{},"body":{"classes/Menu.html":{}}}],["this.namewritable",{"_index":262,"title":{},"body":{"classes/Menu.html":{}}}],["this.namewritable.set(this.name",{"_index":277,"title":{},"body":{"classes/Menu.html":{}}}],["this.normalizeweight(config",{"_index":724,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.onmousedown(event",{"_index":387,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.orderedconfigs",{"_index":720,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor",{"_index":726,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor].weight",{"_index":727,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.prepend(contentview",{"_index":660,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root",{"_index":117,"title":{},"body":{"classes/App.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["this.root.appendchild(child",{"_index":695,"title":{},"body":{"classes/View.html":{}}}],["this.root.appendchild(colorsetroot",{"_index":103,"title":{},"body":{"classes/App.html":{}}}],["this.root.appendchild(item.root",{"_index":552,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.root.appendchild(splitboard.root",{"_index":141,"title":{},"body":{"classes/App.html":{}}}],["this.root.classlist.add('flex",{"_index":544,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["this.root.classlist.add('relative",{"_index":670,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('split",{"_index":531,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["this.root.classlist.add('wait",{"_index":675,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(...this._bgcolorclassname",{"_index":671,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(`flex",{"_index":694,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.add(this._growclassname",{"_index":665,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(this._shrinkclassname",{"_index":667,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove('flex",{"_index":543,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/View.html":{}}}],["this.root.classlist.remove('wait",{"_index":678,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._growclassname",{"_index":666,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._shrinkclassname",{"_index":662,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.prepend(...childs",{"_index":696,"title":{},"body":{"classes/View.html":{}}}],["this.root.replacechild(contentview",{"_index":661,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.style.cursor",{"_index":555,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.root.style.margin",{"_index":536,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.setactivestate(index",{"_index":393,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.setdefaultclass",{"_index":657,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.splitinstance",{"_index":564,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.destroy",{"_index":574,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.getsizes().foreach((size",{"_index":603,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.setsizes(newsizes",{"_index":607,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.starttoexpand(index",{"_index":587,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.startx",{"_index":398,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.starty",{"_index":399,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.title",{"_index":325,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.type",{"_index":326,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.unactiveexpand",{"_index":384,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.cancelformerge",{"_index":412,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.direction",{"_index":415,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items.foreach((item",{"_index":389,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items[this.activeid",{"_index":414,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.resizeat(this.activeid",{"_index":419,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousedown",{"_index":386,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseleave",{"_index":403,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousemove",{"_index":402,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseup",{"_index":404,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseleave",{"_index":410,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mousemove",{"_index":409,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseup",{"_index":411,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor",{"_index":413,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('col",{"_index":431,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('crosshair",{"_index":408,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('n",{"_index":437,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('row",{"_index":433,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('w",{"_index":434,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitcolumnat(this.activeid",{"_index":440,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitrowat(this.activeid",{"_index":441,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.waitformergeatitem(this.activeid",{"_index":435,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["three",{"_index":871,"title":{},"body":{"index.html":{}}}],["title",{"_index":307,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["together",{"_index":838,"title":{},"body":{"index.html":{}}}],["token",{"_index":823,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tort",{"_index":988,"title":{},"body":{"license.html":{}}}],["true",{"_index":406,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":33,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":995,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/color",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["ui/components/navigation/navigation",{"_index":72,"title":{},"body":{"classes/App.html":{}}}],["ui/components/property/proterty.svelte",{"_index":79,"title":{},"body":{"classes/App.html":{}}}],["ui/components/resource/resource.svelte",{"_index":77,"title":{},"body":{"classes/App.html":{}}}],["ui/components/status/status",{"_index":75,"title":{},"body":{"classes/App.html":{}}}],["unactiveexpand",{"_index":344,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["undefined",{"_index":549,"title":{},"body":{"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":850,"title":{},"body":{"index.html":{}}}],["update",{"_index":902,"title":{},"body":{"index.html":{}}}],["updatemode",{"_index":153,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updatemode(type",{"_index":162,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updater",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["url",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":950,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":859,"title":{},"body":{"index.html":{}}}],["user",{"_index":929,"title":{},"body":{"index.html":{}}}],["using",{"_index":906,"title":{},"body":{"index.html":{}}}],["utils",{"_index":317,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"index.html":{}}}],["uuid",{"_index":316,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":38,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/classBuilder.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":743,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1001,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":375,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["version",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":423,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["very",{"_index":865,"title":{},"body":{"index.html":{}}}],["view",{"_index":347,"title":{"classes/View.html":{}},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"coverage.html":{}}}],["view0",{"_index":131,"title":{},"body":{"classes/App.html":{}}}],["view1",{"_index":133,"title":{},"body":{"classes/App.html":{}}}],["view2",{"_index":134,"title":{},"body":{"classes/App.html":{}}}],["view:13",{"_index":514,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:17",{"_index":517,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:4",{"_index":474,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:8",{"_index":521,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["vite",{"_index":858,"title":{},"body":{"index.html":{}}}],["void",{"_index":43,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["w",{"_index":436,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["waitformerge",{"_index":622,"title":{},"body":{"classes/SplitItemView.html":{}}}],["waitformerge(direction",{"_index":652,"title":{},"body":{"classes/SplitItemView.html":{}}}],["waitformergeatitem",{"_index":462,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["waitformergeatitem(index",{"_index":511,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["warranties",{"_index":974,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":969,"title":{},"body":{"license.html":{}}}],["web",{"_index":887,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["webpreferences",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":704,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["weightmap",{"_index":697,"title":{"interfaces/WeightMap.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["whether",{"_index":986,"title":{},"body":{"license.html":{}}}],["width",{"_index":573,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["wiki",{"_index":926,"title":{},"body":{"index.html":{}}}],["windows",{"_index":900,"title":{},"body":{"index.html":{}}}],["without",{"_index":945,"title":{},"body":{"license.html":{}}}],["work",{"_index":840,"title":{},"body":{"index.html":{}}}],["works",{"_index":854,"title":{},"body":{"index.html":{}}}],["writable",{"_index":241,"title":{},"body":{"classes/Menu.html":{}}}],["xl",{"_index":669,"title":{},"body":{"classes/SplitItemView.html":{}}}],["yes",{"_index":196,"title":{},"body":{"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/SplitBoardView.html":{},"classes/View.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/App.html":{"url":"classes/App.html","title":"class - App","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/app.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                context\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bootstrap\n                            \n                            \n                                initFlowTable\n                            \n                            \n                                initFrame\n                            \n                            \n                                initMenus\n                            \n                            \n                                initNavigationBar\n                            \n                            \n                                initPreferences\n                            \n                            \n                                initPropertyPanel\n                            \n                            \n                                initResourcePanel\n                            \n                            \n                                initStatusBar\n                            \n                            \n                                initStyle\n                            \n                            \n                                initStyleMode\n                            \n                            \n                                initWorkArea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/app.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Container\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFlowTable\n                        \n                    \n                \n            \n            \n                \ninitFlowTable()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFrame\n                        \n                    \n                \n            \n            \n                \ninitFrame()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initMenus\n                        \n                    \n                \n            \n            \n                \ninitMenus()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNavigationBar\n                        \n                    \n                \n            \n            \n                \ninitNavigationBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPreferences\n                        \n                    \n                \n            \n            \n                \ninitPreferences()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPropertyPanel\n                        \n                    \n                \n            \n            \n                \ninitPropertyPanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initResourcePanel\n                        \n                    \n                \n            \n            \n                \ninitResourcePanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStatusBar\n                        \n                    \n                \n            \n            \n                \ninitStatusBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyle\n                        \n                    \n                \n            \n            \n                \ninitStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyleMode\n                        \n                    \n                \n            \n            \n                \ninitStyleMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initWorkArea\n                        \n                    \n                \n            \n            \n                \ninitWorkArea()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Container } from 'inversify';\nimport { AppearanceType } from '@cosmic/core/common/appearance';\nimport { AppearanceService } from '@cosmic/workbench/services/appearance-service';\nimport { MenuGroupService } from '@cosmic/workbench/services/menu-group-service';\nimport { applicationMenus } from './base-menu/config';\nimport Navigation from '../ui/components/navigation/navigation-bar.svelte';\nimport StatusBar from '../ui/components/status/status-bar.svelte';\nimport ResourcePage from '../ui/components/resource/resource.svelte';\nimport PropertyPanel from '../ui/components/property/proterty.svelte';\nimport SplitBoardView from '@cosmic/core/browser/layout/split-board.view';\nimport SplitItemView from '@cosmic/core/browser/layout/split-item.view';\nexport default class App {\n  private container: Container;\n  private context = new Map();\n  constructor(private root: HTMLElement) {\n    this.container = new Container({ defaultScope: 'Singleton' });\n    this.context.set('container', this.container);\n    this.initPreferences();\n    this.initStyle();\n  }\n  bootstrap(): void {\n    this.initNavigationBar();\n    this.initFlowTable();\n    this.initStatusBar();\n  }\n\n  initPreferences(): void {\n    this.container.bind(AppearanceService).to(AppearanceService);\n    this.container.bind(MenuGroupService).to(MenuGroupService);\n  }\n\n  initStyle(): void {\n    // this.container.bind(ColorSet).to(ColorSet);\n    // const colorSetRoot = document.createElement('style');\n    // this.container.bind(ColorSetRoot).toDynamicValue(() => colorSetRoot);\n    // this.root.appendChild(colorSetRoot);\n    // this.container.get(ColorSet);\n    const aps = this.container.get(AppearanceService);\n    aps.onModeChanged((type: AppearanceType) => this.initStyleMode(type));\n    this.initStyleMode(AppearanceType.dark);\n  }\n  initStyleMode(type: AppearanceType): void {\n    if (type === AppearanceType.dark) {\n      document.body.classList.add('mode-dark');\n    } else {\n      document.body.classList.remove('mode-dark');\n    }\n  }\n\n  initFrame(): void {\n    // to do sth.\n  }\n\n  initNavigationBar(): void {\n    // to do sth.\n    const navigationBar = new Navigation({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    this.initMenus();\n  }\n\n  initMenus(): void {\n    const header = document.querySelector('#main-header');\n    const groupMenu = this.container.get(MenuGroupService);\n    groupMenu.initContainer(header as HTMLElement);\n    for (const menu of applicationMenus) {\n      groupMenu.getMenuInsatance().init(menu.title, menu.items);\n    }\n  }\n\n  initFlowTable(): void {\n    const splitBoard = new SplitBoardView().setFlow('1');\n    const view0 = new SplitItemView().setContent(document.createElement('div'));\n    const view1 = new SplitItemView().setContent(document.createElement('div'));\n    const view2 = new SplitItemView().setContent(document.createElement('div'));\n    splitBoard.addColumn(view0);\n    splitBoard.addColumn(view1);\n    splitBoard.addColumn(view2);\n    splitBoard.applySplit('horizontal', [20, 60, 20]);\n\n    this.root.appendChild(splitBoard.root);\n    this.initResourcePanel(view0.contentView);\n    this.initPropertyPanel(view2.contentView);\n  }\n\n  initResourcePanel(container: HTMLElement): void {\n    new ResourcePage({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initPropertyPanel(container: HTMLElement): void {\n    new PropertyPanel({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initWorkArea(): void {\n    // to do sth.\n  }\n\n  initStatusBar(): void {\n    new StatusBar({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    // to do sth.\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppearanceService.html":{"url":"classes/AppearanceService.html","title":"class - AppearanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppearanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/appearance-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Private\n                                evt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onModeChanged\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                updateMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppearanceType\n\n                    \n                \n                \n                    \n                        Default value : AppearanceType.dark\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        evt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter2()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onModeChanged\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModeChanged(fn: (type: AppearanceType) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        type\n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject, ContainerModule } from 'inversify';\nimport { EventEmitter2 } from 'eventemitter2';\n\nimport { AppearanceType } from '@cosmic/core/common/appearance';\n\n@injectable()\n/** 外观设置服务 */\nexport class AppearanceService {\n  private _type: AppearanceType = AppearanceType.dark;\n  private evt = new EventEmitter2();\n\n  public updateMode(type: AppearanceType) {\n    if (this._type !== type) {\n      this._type = type;\n      this.evt.emit('onModeChanged', type);\n    }\n  }\n  public onModeChanged(fn: (type: AppearanceType) => void) {\n    this.evt.on('onModeChanged', fn);\n  }\n  public type() {\n    return this._type;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseMenu.html":{"url":"classes/BaseMenu.html","title":"class - BaseMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/base-menu/base-menu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                menuInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(groupMenuService: MenuGroupService)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/base-menu/base-menu.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupMenuService\n                                                  \n                                                        \n                                                                        MenuGroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/base-menu/base-menu.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    initMenu(menuItems: MenuItemConfig[])\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/base-menu/base-menu.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuItems\n                                    \n                                                MenuItemConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { MenuGroupService } from '@cosmic/workbench/services/menu-group-service';\nimport type { Menu, MenuItemConfig } from '../menu';\n\nexport class BaseMenu {\n  private menuInstance!: Menu;\n  constructor(private groupMenuService: MenuGroupService) {}\n\n  public initMenu(menuItems: MenuItemConfig[]): void {\n    this.menuInstance = this.groupMenuService.getMenuInsatance();\n    this.menuInstance.init('文件', menuItems);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColorRef.html":{"url":"classes/ColorRef.html","title":"class - ColorRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColorRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/common/color-ref.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                anyColor\n                            \n                            \n                                    Private\n                                darkColor\n                            \n                            \n                                    Private\n                                lightColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                color\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(anyColor: Color, lightColor?: Color, darkColor?: Color)\n                    \n                \n                        \n                            \n                                Defined in src/core/common/color-ref.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        anyColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lightColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        darkColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        anyColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        darkColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lightColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        color\n                        \n                    \n                \n            \n            \n                \n                    \n                    color(appearanceType: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/common/color-ref.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appearanceType\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type * as Color from 'color';\nimport { AppearanceType } from './appearance';\n\nexport default class ColorRef {\n  private anyColor: Color;\n  private lightColor: Color;\n  private darkColor: Color;\n\n  constructor(anyColor: Color, lightColor?: Color, darkColor?: Color) {\n    this.anyColor = anyColor;\n    this.lightColor = lightColor || anyColor;\n    this.darkColor = darkColor || anyColor;\n  }\n\n  public color(appearanceType: AppearanceType) {\n    switch (appearanceType) {\n      case AppearanceType.any:\n        return this.anyColor;\n      case AppearanceType.light:\n        return this.lightColor;\n      case AppearanceType.dark:\n        return this.darkColor;\n      default:\n        return this.anyColor;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISettings.html":{"url":"interfaces/ISettings.html","title":"interface - ISettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/settings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            check\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import ElectronStore from 'electron-store';\n\ninterface ISettings {\n  check: boolean;\n}\n\nconst settings = new ElectronStore({\n  defaults: {\n    check: false,\n  },\n});\n\nexport default settings;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Menu.html":{"url":"classes/Menu.html","title":"class - Menu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Menu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                container\n                            \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                menuItems\n                            \n                            \n                                    Private\n                                menuSvelte\n                            \n                            \n                                    Private\n                                    Readonly\n                                meunsWritable\n                            \n                            \n                                    Private\n                                name\n                            \n                            \n                                    Private\n                                    Readonly\n                                nameWritable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMenu\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                registerItem\n                            \n                            \n                                    Public\n                                removeItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: HTMLElement, id: string)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/menu/menu.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuSvelte\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        meunsWritable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : writable([])\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        nameWritable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : writable('')\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(name: string, config: MenuItemConfig[])\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                MenuItemConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerItem(config: MenuItemConfig, index: number, group?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                MenuItemConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItem(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MenuItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import MenuSvelte from './menu.svelte';\nimport type { MenuItemConfig } from './menu-item';\nimport { MenuItem } from './menu-item';\nimport { writable } from 'svelte/store';\n\nexport default class Menu {\n  public readonly container!: HTMLElement;\n  public readonly id!: string;\n  private name!: string;\n  private menuItems!: MenuItem[];\n  private menuSvelte: any;\n  private readonly context = new Map();\n  private readonly meunsWritable = writable([]);\n  private readonly nameWritable = writable('');\n  constructor(container: HTMLElement, id: string) {\n    this.container = container;\n    this.id = id;\n    this.menuItems = [];\n    this.context.set('menus', this.meunsWritable);\n    this.context.set('name', this.nameWritable);\n  }\n\n  public init(name: string, config: MenuItemConfig[]): void {\n    this.name = name;\n    for (const menuItem of config) {\n      this.menuItems.push(new MenuItem(menuItem));\n    }\n    return this.createMenu();\n  }\n\n  public destroy(): void {\n    while (this.container.firstChild) {\n      this.container.removeChild(this.container.firstChild);\n    }\n    return;\n  }\n\n  public registerItem(config: MenuItemConfig, index: number, group?: string): void {\n    this.menuItems.splice(index, 0, new MenuItem(config));\n    this.meunsWritable.set([...this.menuItems]);\n  }\n\n  public removeItem(index: number): MenuItem {\n    const menuItem = this.menuItems[index];\n    this.meunsWritable.set((this.menuItems = this.menuItems.filter((_, i) => index !== i)));\n    return menuItem;\n  }\n\n  private createMenu(): void {\n    this.menuSvelte = new MenuSvelte({\n      target: this.container,\n      context: this.context,\n    });\n    this.nameWritable.set(this.name);\n    this.meunsWritable.set(this.menuItems);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuGroupService.html":{"url":"classes/MenuGroupService.html","title":"class - MenuGroupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuGroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/menu-group-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                meuns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMenuInsatance\n                            \n                            \n                                    Public\n                                initContainer\n                            \n                            \n                                    Public\n                                removeMenuInstances\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/workbench/services/menu-group-service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/menu-group-service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        meuns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/menu-group-service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getMenuInsatance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenuInsatance()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/menu-group-service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Menu\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initContainer\n                        \n                    \n                \n            \n            \n                \n                    \n                    initContainer(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/menu-group-service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeMenuInstances\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeMenuInstances(menu: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/menu-group-service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\nimport { Menu } from '../desktop/menu';\n\n@injectable()\nexport class MenuGroupService {\n  private container!: HTMLElement;\n  private meuns!: Menu[];\n  constructor() {\n    this.meuns = [];\n  }\n\n  public initContainer(container: HTMLElement): void {\n    if (this.container) {\n      return;\n    }\n    this.container = container;\n  }\n\n  public getMenuInsatance(): Menu {\n    const menuContainer = document.createElement('div');\n    const id = Date.now() + '' + this.meuns.length;\n    this.container.append(menuContainer);\n    const menu = new Menu(menuContainer, id);\n    this.meuns.push(menu);\n    return menu;\n  }\n\n  public removeMenuInstances(menu: Menu): void {\n    this.container.removeChild(menu.container);\n    this.meuns = this.meuns.filter((item) => item.id === menu.id);\n    this.container.removeChild(menu.container);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItem.html":{"url":"classes/MenuItem.html","title":"class - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu-item.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                callback\n                            \n                            \n                                    Private\n                                children\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                title\n                            \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MenuItemConfig)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/menu/menu-item.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MenuItemConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        callback\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuCommonFunction\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItemType\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { uuid } from '../utils';\n/* eslint-disable no-shadow */\nexport enum MenuItemType {\n  group,\n  item,\n}\n\nexport type MenuCommonFunction = (menu: MenuItem, context: any) => void;\n\nexport interface MenuItemConfig {\n  title: string;\n  type: MenuItemType;\n  callback: MenuCommonFunction;\n  command?: string;\n}\n\nexport class MenuItem {\n  public readonly id!: string;\n  private title!: string;\n  private type!: MenuItemType;\n  private callback: MenuCommonFunction;\n  private children!: MenuItem[];\n  constructor(config: MenuItemConfig) {\n    this.id = uuid();\n    const { title, type, callback } = config;\n    if (type === MenuItemType.group) {\n      this.children = [];\n    }\n    this.title = title;\n    this.type = type;\n    this.callback = callback;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemConfig.html":{"url":"interfaces/MenuItemConfig.html","title":"interface - MenuItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu-item.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            command\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         MenuCommonFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuCommonFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         MenuItemType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItemType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { uuid } from '../utils';\n/* eslint-disable no-shadow */\nexport enum MenuItemType {\n  group,\n  item,\n}\n\nexport type MenuCommonFunction = (menu: MenuItem, context: any) => void;\n\nexport interface MenuItemConfig {\n  title: string;\n  type: MenuItemType;\n  callback: MenuCommonFunction;\n  command?: string;\n}\n\nexport class MenuItem {\n  public readonly id!: string;\n  private title!: string;\n  private type!: MenuItemType;\n  private callback: MenuCommonFunction;\n  private children!: MenuItem[];\n  constructor(config: MenuItemConfig) {\n    this.id = uuid();\n    const { title, type, callback } = config;\n    if (type === MenuItemType.group) {\n      this.children = [];\n    }\n    this.title = title;\n    this.type = type;\n    this.callback = callback;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardController.html":{"url":"classes/SplitBoardController.html","title":"class - SplitBoardController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeId\n                            \n                            \n                                    Private\n                                expandActive\n                            \n                            \n                                    Private\n                                expandLeaveHandler\n                            \n                            \n                                    Private\n                                expandMouseUpHandler\n                            \n                            \n                                    Private\n                                expandMoveHandler\n                            \n                            \n                                    Private\n                                expandType\n                            \n                            \n                                    Private\n                                startX\n                            \n                            \n                                    Private\n                                startY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeExpand\n                            \n                            \n                                    Public\n                                checkExpandState\n                            \n                            \n                                    Private\n                                liveResize\n                            \n                            \n                                    Public\n                                onMouseDown\n                            \n                            \n                                    Public\n                                setActiveState\n                            \n                            \n                                    Private\n                                unactiveExpand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(view: SplitBoardView)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.controller.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        view\n                                                  \n                                                        \n                                                                        SplitBoardView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandLeaveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMouseUpHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMoveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        activeExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    activeExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkExpandState\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkExpandState(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        liveResize\n                        \n                    \n                \n            \n            \n                \n                    \n                    liveResize(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onMouseDown\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseDown(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setActiveState\n                        \n                    \n                \n            \n            \n                \n                    \n                    setActiveState(index: number, startX: number, startY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        unactiveExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    unactiveExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { directionType } from './split-board.view';\nimport type SplitBoardView from './split-board.view';\nimport type SplitItemView from './split-item.view';\n\nexport default class SplitBoardController {\n  private expandMoveHandler!: (event: MouseEvent) => void;\n  private expandLeaveHandler!: (event: MouseEvent) => void;\n  private expandMouseUpHandler!: (event: MouseEvent) => void;\n\n  private startX = 0;\n  private startY = 0;\n  private activeId = -1;\n\n  private expandActive = false;\n  private expandType = 0; // 是否超过偏移值 0 / 1 expand hor | 2 expand ver | 3 merge hor | 4 merge ver\n\n  constructor(private view: SplitBoardView) {\n    this.expandMoveHandler = (event: MouseEvent) => {\n      this.liveResize(event.clientX, event.clientY);\n      this.checkExpandState(event.clientX, event.clientY);\n    };\n    this.expandLeaveHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.expandMouseUpHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.view.root.addEventListener('mousedown', (event: MouseEvent) => {\n      this.onMouseDown(event);\n    });\n  }\n  public onMouseDown(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    let index = -1;\n    this.view.items.forEach((item, i) => {\n      if (target && item.root == target.parentElement && target.classList.contains('split-expand')) index = i;\n    });\n    if (index === -1) {\n      return;\n    }\n    if (index > -1) {\n      this.setActiveState(index, event.clientX, event.clientY);\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  public setActiveState(index: number, startX: number, startY: number) {\n    // 锚点mousedown\n    this.startX = startX;\n    this.startY = startY;\n    this.activeExpand();\n    this.activeId = index;\n  }\n  private activeExpand() {\n    this.view.root.addEventListener('mousemove', this.expandMoveHandler);\n    this.view.root.addEventListener('mouseleave', this.expandLeaveHandler);\n    this.view.root.addEventListener('mouseup', this.expandMouseUpHandler);\n    this.expandActive = true;\n    this.expandType = 0;\n    this.view.setCursor('crosshair');\n  }\n  private unactiveExpand() {\n    if (this.expandActive) {\n      this.view.root.removeEventListener('mousemove', this.expandMoveHandler);\n      this.view.root.removeEventListener('mouseleave', this.expandLeaveHandler);\n      this.view.root.removeEventListener('mouseup', this.expandMouseUpHandler);\n      this.view.cancelForMerge();\n      this.expandActive = false;\n      this.expandType = 0;\n      this.view.setCursor('');\n    }\n  }\n  private liveResize(clientX: number, clientY: number) {\n    const item = this.view.items[this.activeId];\n    if (this.expandType == 1 && this.view.direction == directionType.col) {\n      // horizontal expand column\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n    } else if (this.expandType == 2 && this.view.direction == directionType.row) {\n      // vertical expand row\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n    }\n  }\n  public checkExpandState(clientX: number, clientY: number) {\n    const offsetX = this.startX - clientX;\n    const offsetY = this.startY - clientY;\n    /** expand mode */\n    if (this.expandType == 0 && offsetX > 0 && offsetY > 0 && (offsetX > 5 || offsetY > 5)) {\n      if (offsetX > offsetY) {\n        this.view.setCursor('col-resize');\n      } else {\n        this.view.setCursor('row-resize');\n      }\n    }\n    /** merge mode */\n    if (offsetX  5) {\n      this.view.setCursor('w-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'w');\n      return;\n    }\n\n    if (offsetY  5) {\n      this.view.setCursor('n-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'n');\n      return;\n    }\n\n    if (this.expandType) return;\n    /** do expand */\n    if (offsetX > 30) {\n      this.expandType = 1;\n      this.view.setCursor('col-resize');\n      this.view.splitColumnAt(this.activeId, clientX, clientY);\n      return;\n    }\n    if (offsetY > 30) {\n      this.expandType = 2;\n      this.view.setCursor('row-resize');\n      this.view.splitRowAt(this.activeId, clientX, clientY);\n    }\n    if (\n      (this.expandType == 1 && this.view.direction == directionType.row) ||\n      (this.expandType == 2 && this.view.direction == directionType.col)\n    ) {\n      this.unactiveExpand();\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardView.html":{"url":"classes/SplitBoardView.html","title":"class - SplitBoardView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _waitForMergeItem\n                            \n                            \n                                    Public\n                                controller\n                            \n                            \n                                    Public\n                                direction\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Private\n                                splitInstance\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addColumn\n                            \n                            \n                                    Public\n                                addRow\n                            \n                            \n                                    Public\n                                applySplit\n                            \n                            \n                                    Public\n                                cancelForMerge\n                            \n                            \n                                    Private\n                                checkDirection\n                            \n                            \n                                    Private\n                                destorySplit\n                            \n                            \n                                    Private\n                                getExpandResizes\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Public\n                                insertItemAt\n                            \n                            \n                                    Public\n                                resizeAt\n                            \n                            \n                                    Public\n                                setCursor\n                            \n                            \n                                    Public\n                                splitColumnAt\n                            \n                            \n                                    Public\n                                splitRowAt\n                            \n                            \n                                    Private\n                                startToExpand\n                            \n                            \n                                    Public\n                                waitForMergeAtItem\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.view.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _waitForMergeItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitItemView | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        controller\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SplitBoardController\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        direction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         directionType\n\n                    \n                \n                \n                    \n                        Default value : directionType.col\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitItemView[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        splitInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Split.Instance | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addColumn\n                        \n                    \n                \n            \n            \n                \n                    \n                    addColumn(item: SplitItemView)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addRow\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRow(item: SplitItemView)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applySplit\n                        \n                    \n                \n            \n            \n                \n                    \n                    applySplit(direction: \"vertical\" | \"horizontal\", sizes?: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"vertical\" | \"horizontal\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'horizontal'\n                                    \n\n                                \n                                \n                                    sizes\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkDirection\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkDirection(type: directionType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                directionType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        destorySplit\n                        \n                    \n                \n            \n            \n                \n                    \n                    destorySplit()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getExpandResizes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getExpandResizes(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        insertItemAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertItemAt(item: SplitItemView, pos?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pos\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resizeAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    resizeAt(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:162\n                \n            \n\n\n            \n                \n                    live resize after expanded\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCursor\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCursor(type: string | \"row-resize\" | \"col-resize\" | \"crosshair\" | \"e-resize\" | \"w-resize\" | \"s-resize\" | \"n-resize\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            string | \"row-resize\" | \"col-resize\" | \"crosshair\" | \"e-resize\" | \"w-resize\" | \"s-resize\" | \"n-resize\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        splitColumnAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    splitColumnAt(index: number, clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        splitRowAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    splitRowAt(index: number, clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        startToExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    startToExpand(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMergeAtItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMergeAtItem(index: number, direction: \"w\" | \"e\" | \"n\" | \"s\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"n\" | \"s\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view';\nimport { injectable, inject } from 'inversify';\nimport SplitItemView from './split-item.view';\nimport SplitBoardController from './split-board.controller';\nimport Split from 'split.js';\n\nexport const lowBoardRoot = Symbol.for('FlowTableRoot');\n\nexport enum directionType {\n  'col',\n  'row',\n}\n\n@injectable()\n/** Split Board View */\nexport default class SplitBoardView extends View {\n  public items: SplitItemView[] = [];\n  public direction: directionType = directionType.col;\n  private splitInstance: Split.Instance | null = null;\n  public controller: SplitBoardController;\n  private _waitForMergeItem: SplitItemView | null = null;\n  constructor() {\n    super();\n    this.init();\n    this.controller = new SplitBoardController(this);\n  }\n  private init() {\n    this.root.classList.add('split-board', 'flex', 'flex-nowrap', 'overflow-hidden');\n    // this.root.style.margin = '0 4px';\n  }\n  public addRow(item: SplitItemView): void {\n    if (!this.checkDirection(directionType.row)) {\n      console.warn('direction is not right when added row', item);\n      return;\n    }\n    this.direction = directionType.row;\n    this.root.classList.remove('flex-row');\n    this.root.classList.add('flex-col');\n    this.insertItemAt(item);\n    this.applySplit('vertical');\n  }\n  public addColumn(item: SplitItemView): void {\n    if (!this.checkDirection(directionType.col)) {\n      console.warn('direction is not right when added col', item);\n      return;\n    }\n    this.direction = directionType.col;\n    this.root.classList.remove('flex-col');\n    this.root.classList.add('flex-row');\n    this.insertItemAt(item);\n    this.applySplit();\n  }\n  public insertItemAt(item: SplitItemView, pos?: number): void {\n    pos = pos === undefined ? this.items.length : pos;\n    this.items.splice(pos, 0, item);\n    if (pos == 0) {\n      this.root.appendChild(item.root);\n    } else {\n      this.items[pos - 1].root.after(item.root);\n    }\n  }\n\n  public setCursor(\n    type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize' = ''\n  ): void {\n    this.root.style.cursor = type;\n  }\n  public waitForMergeAtItem(index: number, direction: 'w' | 'e' | 'n' | 's'): void {\n    if (this._waitForMergeItem == this.items[index]) {\n      return;\n    }\n    this.cancelForMerge();\n    if (this.items[index]) {\n      this.items[index].waitForMerge(direction);\n      this._waitForMergeItem = this.items[index];\n    }\n  }\n  public cancelForMerge(): void {\n    if (this._waitForMergeItem) {\n      this._waitForMergeItem.cancelWaitForMerge();\n      this._waitForMergeItem = null;\n    }\n  }\n  private checkDirection(type: directionType) {\n    if (this.items.length > 1 && this.direction !== type) {\n      return false;\n    }\n    return true;\n  }\n  // public removeColumn(item: SplitItemView) {\n  //     // do sth.\n  // }\n  // public removeRow(item: SplitItemView) {\n  //     // do sth.\n  // }\n  public applySplit(direction: 'vertical' | 'horizontal' = 'horizontal', sizes?: number[]): void {\n    this.destorySplit();\n    this.splitInstance = Split(Array.prototype.slice.call(this.root.children), {\n      sizes,\n      // sizes: [30, 70],\n      minSize: 15,\n      direction,\n      snapOffset: 0,\n      gutterStyle: () => (direction == 'vertical' ? { height: '3px' } : { width: '3px' }),\n    });\n  }\n\n  private destorySplit() {\n    this.splitInstance && this.splitInstance.destroy();\n    this.splitInstance = null;\n  }\n  // 切分列\n  public splitColumnAt(index: number, clientX: number, clientY: number): void {\n    const item = this.items[index];\n    if (!this.checkDirection(directionType.col)) {\n      // 列切分行\n      const newBoard = new SplitBoardView().setFlow('1');\n      const contentView = item.contentView;\n      item.replaceContent(newBoard.root);\n      const newItemView = new SplitItemView().setContent(contentView);\n      const newEmptyView = new SplitItemView().setContent(document.createElement('div'));\n      item.hideExpandButton(); // 不再使用该item的拉伸按钮\n      newBoard.addColumn(newItemView);\n      // newBoard.addColumn(newEmptyView);\n      newBoard.controller.setActiveState(0, clientX, clientY);\n      newBoard.controller.checkExpandState(clientX, clientY);\n      return;\n    }\n    // 列扩展列\n    this.startToExpand(index, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n  }\n  // 切分行\n  public splitRowAt(index: number, clientX: number, clientY: number): void {\n    const item = this.items[index];\n    if (!this.checkDirection(directionType.row)) {\n      // 行切分列\n      const newBoard = new SplitBoardView().setFlow('1');\n      const contentView = item.contentView;\n      item.replaceContent(newBoard.root);\n      const newItemView = new SplitItemView().setContent(contentView);\n      const newEmptyView = new SplitItemView().setContent(document.createElement('div'));\n      item.hideExpandButton(); // 不再使用该item的拉伸按钮\n      newBoard.addRow(newItemView);\n      // newBoard.addRow(newEmptyView);\n      newBoard.controller.setActiveState(0, clientX, clientY);\n      newBoard.controller.checkExpandState(clientX, clientY);\n      return;\n    }\n    // 行切分行\n    this.startToExpand(index, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n  }\n\n  private startToExpand(index: number, start: number, length: number, position: number) {\n    const newSizes = this.getExpandResizes(index, start, length, position);\n    const newItem = new SplitItemView().setContent(document.createElement('div'));\n    this.destorySplit();\n    this.insertItemAt(newItem, index + 1);\n    this.applySplit(this.direction == directionType.col ? 'horizontal' : 'vertical', newSizes);\n  }\n\n  /** live resize after expanded  */\n  public resizeAt(index: number, start: number, length: number, position: number): void {\n    if (!this.splitInstance) return;\n    // const item = this.items[index];\n    let max = length;\n    if (this.items[index + 1]) {\n      max += this.items[index + 1].root[this.direction == directionType.col ? 'clientWidth' : 'clientHeight'];\n    }\n    const r = (position - start) / max;\n    if (position - start  {\n      sum += size;\n      if (i == index || i == index + 1) return;\n      other += size;\n    });\n    let newSize = 0;\n    const newSizes: number[] = [];\n    this.splitInstance.getSizes().forEach((size, i) => {\n      if (index == i) {\n        newSize = (sum - other) * r;\n        newSizes.push(newSize);\n      } else if (index + 1 == i) {\n        newSizes.push(sum - other - newSize);\n      } else if (index !== i) {\n        newSizes.push(size);\n      }\n    });\n    this.splitInstance.setSizes(newSizes);\n  }\n\n  private getExpandResizes(index: number, start: number, length: number, position: number) {\n    const r = (position - start) / length;\n    if (r = 1) return;\n    const newSizes: number[] = [];\n    this.splitInstance &&\n      this.splitInstance.getSizes().forEach((size, i) => {\n        if (index !== i) {\n          newSizes.push(size);\n          return;\n        }\n        const w = size * r;\n        newSizes.push(w, size - w);\n      });\n    return newSizes;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitItemView.html":{"url":"classes/SplitItemView.html","title":"class - SplitItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-item.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-item.view.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitExpand\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:68\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view';\nimport { directionType } from './split-board.view';\nimport SplitExpand from './split-expand.svelte';\n\nenum directionStyles {\n  'w' = 'merge-w',\n  'e' = 'merge-e',\n  's' = 'merge-s',\n  'n' = 'merge-n',\n}\n\nexport default class SplitItemView extends View {\n  private _growClassName = '';\n  private _shrinkClassName = '';\n  private _bgColorClassName: string[] = ['bg-cgray-100', 'dark:bg-cgray-800'];\n\n  public contentView!: HTMLElement;\n  private expand!: SplitExpand;\n\n  constructor() {\n    super();\n    this.addExpandButton();\n    this.setDefaultClass();\n  }\n\n  public setContent(contentView: HTMLElement): SplitItemView {\n    this.contentView = contentView;\n    this.root.classList.add('split-item', 'flex');\n    contentView.classList.add('flex', 'flex-1');\n    return this.prepend(contentView);\n  }\n\n  public replaceContent(contentView: HTMLElement): SplitItemView {\n    this.root.replaceChild(contentView, this.contentView);\n    this.contentView = contentView;\n    contentView.classList.add('flex', 'flex-1');\n    return this;\n  }\n\n  public setGrow(className = 'flex-grow'): void {\n    this.root.classList.remove(this._shrinkClassName);\n    this._shrinkClassName = '';\n    this._growClassName = className;\n    this.root.classList.add(this._growClassName);\n  }\n\n  public setShrink(className = 'flex-shrink'): void {\n    this.root.classList.remove(this._growClassName);\n    this._growClassName = '';\n    this._shrinkClassName = className;\n    this.root.classList.add(this._shrinkClassName);\n  }\n\n  public isShrink(): boolean {\n    return !!this._growClassName;\n  }\n\n  private setDefaultClass() {\n    this.root.classList.add('flex-grow', 'rounded-xl');\n    this.root.classList.add('relative');\n    this.root.classList.add(...this._bgColorClassName);\n  }\n\n  private addExpandButton() {\n    this.expand = new SplitExpand({ target: this.root });\n  }\n  /** To hide expand button */\n  public hideExpandButton(): void {\n    this.expand.expandHidden = true;\n  }\n\n  public waitForMerge(direction: 'w' | 'e' | 's' | 'n'): void {\n    this.cancelWaitForMerge();\n    this.root.classList.add('wait-for-merge');\n    this.expand.mergeDirection = directionStyles[direction];\n  }\n\n  public cancelWaitForMerge(): void {\n    this.root.classList.remove('wait-for-merge');\n    this.expand.mergeDirection = '';\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Test.html":{"url":"classes/Test.html","title":"class - Test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Test\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/test.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                print\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        print\n                        \n                    \n                \n            \n            \n                \n                    \n                    print(target: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/test.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Test {\n  public print(target: string) {\n    console.log(`test ok: ${target}`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/View.html":{"url":"classes/View.html","title":"class - View","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  View\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/view.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root?: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/view.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/view.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        type FlowValue = '1' | 'auto' | 'initial' | 'none';\n\nexport default class View {\n  public root: HTMLElement;\n  constructor(root?: HTMLElement) {\n    this.root = root || document.createElement('div');\n  }\n  setFlow(type: FlowValue) {\n    this.root.classList.remove('flex-1', 'flex-auto', 'flex-initial', 'flex-none');\n    this.root.classList.add(`flex-${type}`);\n    return this;\n  }\n  append(child: HTMLElement) {\n    this.root.appendChild(child);\n    return this;\n  }\n  prepend(...childs: HTMLElement[]) {\n    this.root.prepend(...childs);\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeightMap.html":{"url":"interfaces/WeightMap.html","title":"interface - WeightMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WeightMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [index: string]:        number\n\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:11\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/classBuilder.html":{"url":"classes/classBuilder.html","title":"class - classBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  classBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                orderedConfigs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addConfig\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Private\n                                insertConfig\n                            \n                            \n                                    Private\n                                normalizeWeight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configs: stateConfig[], weightMap: WeightMap)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                        stateConfig[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weightMap\n                                                  \n                                                        \n                                                                        WeightMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orderedConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         stateConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/class-builder.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    addConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        normalizeWeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    normalizeWeight(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         stateConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/classConfig.html":{"url":"interfaces/classConfig.html","title":"interface - classConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  classConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            createWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            mainWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            notification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            interface\n            ISettings\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            variable\n            settings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            class\n            classBuilder\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            classConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            stateConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            WeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            variable\n            defaultWeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.controller.ts\n            \n            class\n            SplitBoardController\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            class\n            SplitBoardView\n            \n                3 %\n                (1/26)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            variable\n            lowBoardRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-item.view.ts\n            \n            class\n            SplitItemView\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            function\n            makeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BgColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BorderColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlAccentColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlBackgroundColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlDisabledColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlForbiddenColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlHighlightColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            FourthBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            GridBackgroundColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            LabelColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemBlueColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemGrayColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemOrangeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemPinkColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemRedColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemYellowColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TextFieldBackground\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/view.ts\n            \n            class\n            View\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/color-ref.ts\n            \n            class\n            ColorRef\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/parts/ioc/inject.ts\n            \n            function\n            inject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/test.ts\n            \n            class\n            Test\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/workbench/desktop/app.ts\n            \n            class\n            App\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/workbench/desktop/base-menu/base-menu.ts\n            \n            class\n            BaseMenu\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/workbench/desktop/base-menu/config.ts\n            \n            variable\n            applicationMenus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/desktop/main.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu-item.ts\n            \n            class\n            MenuItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu-item.ts\n            \n            interface\n            MenuItemConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu.ts\n            \n            class\n            Menu\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/workbench/desktop/utils/utils.ts\n            \n            variable\n            uuid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/services/appearance-service.ts\n            \n            class\n            AppearanceService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/workbench/services/menu-group-service.ts\n            \n            class\n            MenuGroupService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @types/color : ^3.0.1\n        \n            color : ^3.1.3\n        \n            electron-log : ^4.3.1\n        \n            electron-store : ^7.0.2\n        \n            electron-updater : ^4.3.5\n        \n            eventemitter2 : ^6.4.4\n        \n            inversify : ^5.1.1\n        \n            keycode : ^2.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            smelte : ^1.1.5\n        \n            split.js : ^1.6.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppearanceType   (src/.../appearance.ts)\n                        \n                        \n                            directionStyles   (src/.../split-item.view.ts)\n                        \n                        \n                            directionType   (src/.../split-board.view.ts)\n                        \n                        \n                            MenuItemType   (src/.../menu-item.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/common/appearance.ts\n    \n        \n            \n                \n                    \n                        \n                        AppearanceType\n                    \n                \n                    \n                        \n                            模式类型\n\n                        \n                    \n                        \n                            \n                                 any\n                            \n                        \n                        \n                            \n                                 light\n                            \n                        \n                        \n                            \n                                 dark\n                            \n                        \n            \n        \n\n    src/core/browser/layout/split-item.view.ts\n    \n        \n            \n                \n                    \n                        \n                        directionStyles\n                    \n                \n                        \n                            \n                                 w\n                            \n                        \n                        \n                            \n                                Value : merge-w\n                            \n                        \n                        \n                            \n                                 e\n                            \n                        \n                        \n                            \n                                Value : merge-e\n                            \n                        \n                        \n                            \n                                 s\n                            \n                        \n                        \n                            \n                                Value : merge-s\n                            \n                        \n                        \n                            \n                                 n\n                            \n                        \n                        \n                            \n                                Value : merge-n\n                            \n                        \n            \n        \n\n    src/core/browser/layout/split-board.view.ts\n    \n        \n            \n                \n                    \n                        \n                        directionType\n                    \n                \n                        \n                            \n                                 col\n                            \n                        \n                        \n                            \n                                 row\n                            \n                        \n            \n        \n\n    src/workbench/desktop/menu/menu-item.ts\n    \n        \n            \n                \n                    \n                        \n                        MenuItemType\n                    \n                \n                        \n                            \n                                 group\n                            \n                        \n                        \n                            \n                                 item\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            inject   (src/.../inject.ts)\n                        \n                        \n                            makeColor   (src/.../ui-color.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/parts/ioc/inject.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inject\n                        \n                    \n                \n            \n            \n                \ninject(token)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        makeColor\n                        \n                    \n                \n            \n            \n                \nmakeColor(anyColorHex, lightColorHex?, darkColorHex?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anyColorHex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    darkColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCosmic Design\n\n\n\n\n\n\n🚧 ing...\n\nThe Repository\nCosmic design is a concrete practice of D2R.\nThis repository is where we develop it together with the community. Not only do we work on code and issues here, we also publish our roadmap , development guide. This source code is available to everyone under the standard MIT license.\nAbout Cosmic Design\n\n🚧 ing...\n\nHow it works\nThe template required a minimum dependencies. Only Vite is used for building, nothing more.\nProject Structure\nThe structure of this template is very similar to the structure of a monorepo.\nThe entire source code of the program is divided into three modules (packages) that are bundled each independently:\n\nsrc/core\nInclude common dependencies, such as components, utils, ipc.\nsrc/app\nElectron main script.\nsrc/workbench\nElectron web page.\n\nCosmic Components\n\nComponents StoryBook\nsrc/core/components\n\nCompile App\nNext step is run packaging and compilation a ready for distribution Electron app for macOS, Windows and Linux with \"auto update\" support out of the box.\nTo do this, using the electron-builder:\n\nIn npm script compile: This script is configured to compile the application as quickly as possible. It is not ready for distribution, is compiled only for the current platform and is used for debugging.\nIn GitHub Action: The application is compiled for any platform and ready-to-distribute files are automatically added to the draft GitHub release.\n\nContribution\nSee Wiki Contributing\n\nSource Code Organization\nUser Interface\nColor Set\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 qiansc\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/stateConfig.html":{"url":"interfaces/stateConfig.html","title":"interface - stateConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  stateConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:         classConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         classConfig[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationMenusType   (src/.../config.ts)\n                        \n                        \n                            FlowValue   (src/.../view.ts)\n                        \n                        \n                            MenuCommonFunction   (src/.../menu-item.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/base-menu/config.ts\n    \n    \n        \n            \n                \n                    \n                    ApplicationMenusType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/core/browser/view.ts\n    \n    \n        \n            \n                \n                    \n                    FlowValue\n                \n            \n            \n                \n                        \"1\" | \"auto\" | \"initial\" | \"none\"\n\n                \n            \n        \n    \n    src/workbench/desktop/menu/menu-item.ts\n    \n    \n        \n            \n                \n                    \n                    MenuCommonFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (src/.../main.ts)\n                        \n                        \n                            applicationMenus   (src/.../config.ts)\n                        \n                        \n                            BgColor   (src/.../ui-color.ts)\n                        \n                        \n                            BorderColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlAccentColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlDisabledColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlForbiddenColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlHighlightColor   (src/.../ui-color.ts)\n                        \n                        \n                            createWindow   (src/.../index.ts)\n                        \n                        \n                            defaultWeightMap   (src/.../class-builder.ts)\n                        \n                        \n                            FourthBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            GridBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            isProd   (src/.../index.ts)\n                        \n                        \n                            isProd   (src/.../logger.ts)\n                        \n                        \n                            LabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            logger   (src/.../logger.ts)\n                        \n                        \n                            lowBoardRoot   (src/.../split-board.view.ts)\n                        \n                        \n                            mainWindow   (src/.../index.ts)\n                        \n                        \n                            notification   (src/.../index.ts)\n                        \n                        \n                            SecondaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            SecondaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            settings   (src/.../settings.ts)\n                        \n                        \n                            SystemBlueColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemGrayColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemOrangeColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemPinkColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemRedColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemYellowColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            TextFieldBackground   (src/.../ui-color.ts)\n                        \n                        \n                            uuid   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new App(document.body)\n                    \n                \n\n\n        \n    \n\n    src/workbench/desktop/base-menu/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applicationMenus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationMenusType[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    title: '文件',\n    items: [\n      {\n        title: '打开文件',\n        type: MenuItemType.group,\n        /* eslint no-console: \"off\" */\n        callback: (item, context) => console.log(item, context),\n      },\n      {\n        title: '保存',\n        type: MenuItemType.group,\n        /* eslint no-console: \"off\" */\n        callback: (item, context) => console.log(item, context),\n      },\n\n      {\n        title: '另存为',\n        type: MenuItemType.group,\n        /* eslint no-console: \"off\" */\n        callback: (item, context) => console.log(item, context),\n      },\n    ],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#E0E0E0', '#E0E0E0', '#1F1F1F')\n                    \n                \n\n            \n                \n                    三级背景色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BorderColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D9D9D9', '#D9D9D9', '#D9D9D9')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlAccentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#5580c0', '#5580c0', '#5580c0')\n                    \n                \n\n            \n                \n                    高亮色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#FFFFFF', '#5D5F61')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlDisabledColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F9F9F9', '#F9F9F9', '#464749')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlForbiddenColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlHighlightColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#ffae2b', '#ffae2b', '#ffae2b')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FourthBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#BABABA', '#BABABA', '#454545')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GridBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F2F2F2', '#F2F2F2', '#2E2F30')\n                    \n                \n\n            \n                \n                    组件色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#E0E0E0')\n                    \n                \n\n            \n                \n                    三级标签色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D7D7D7', '#D7D7D7', '#272728')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#808080')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemBlueColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#729cd4', '#729cd4', '#729cd4')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemGrayColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c0c0c1', '#c0c0c1', '#c0c0c1')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemOrangeColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemPinkColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c4666f', '#c4666f', '#c4666f')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemRedColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemYellowColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n            \n                \n                    辅助色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#C6C6C6', '#C6C6C6', '#393939')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#3F3F3F', '#3F3F3F', '#3F3F3F')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TextFieldBackground\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#F2F2F2', '#454545')\n                    \n                \n\n\n        \n    \n\n    src/app/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createWindow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  mainWindow = new BrowserWindow({\n    width: 900,\n    height: 680,\n    webPreferences: {\n      devTools: isProd ? false : true,\n      contextIsolation: true,\n      enableRemoteModule: false,\n      preload: join(__dirname, 'preload.js'),\n    },\n  });\n\n  const url =\n    // process.env.NODE_ENV === \"production\"\n    isProd\n      ? // in production, use the statically build version of our application\n        `file://${join(__dirname, 'dist/workbench/desktop/', 'index.html')}`\n      : // in dev, target the host and port of the local rollup web server\n        'http://localhost:5000';\n\n  mainWindow.loadURL(url).catch((err: any) => {\n    logger.error(JSON.stringify(err));\n    app.quit();\n  });\n\n  if (!isProd) mainWindow.webContents.openDevTools();\n\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BrowserWindow | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Notification | null\n\n                    \n                \n\n\n        \n    \n\n    src/core/browser/class-builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultWeightMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WeightMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/utils/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log\n                    \n                \n\n\n        \n    \n\n    src/core/browser/layout/split-board.view.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lowBoardRoot\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('FlowTableRoot')\n                    \n                \n\n\n        \n    \n\n    src/app/utils/settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ElectronStore({\n  defaults: {\n    check: false,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/workbench/desktop/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): string => {\n  const s: string[] | number[] = [];\n  const hexDigits = '0123456789abcdef';\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
