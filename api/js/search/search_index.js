var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/App.html",[0,0.188,1,2.189]],["body/classes/App.html",[0,0.119,1,2.142,2,0.291,3,0.17,4,0.151,5,0.151,6,1.905,7,0.1,8,0.35,9,0.994,10,4.665,11,2.983,12,0.866,13,2.188,14,4.735,15,4.735,16,4.735,17,4.735,18,4.735,19,4.735,20,3.453,21,3.453,22,4.735,23,4.735,24,3.453,25,4.735,26,0.907,27,1.905,28,2.319,29,1.121,30,3.453,31,1.118,32,0.024,33,1.118,34,0.426,35,0.989,36,2.345,37,2.24,38,0.677,39,0.907,40,1.547,41,2.598,42,2.24,43,1.398,44,2.24,45,1.225,46,2.24,47,2.24,48,2.24,49,2.24,50,3.453,51,2.24,52,3.453,53,2.24,54,2.24,55,2.24,56,3.453,57,3.473,58,2.24,59,2.24,60,1.014,61,0.907,62,1.905,63,1.941,64,1.032,65,1.314,66,1.187,67,1.521,68,2.24,69,2.937,70,1.905,71,2.24,72,1.905,73,3.453,74,1.39,75,2.24,76,3.453,77,2.24,78,3.453,79,3.453,80,2.24,81,3.453,82,2.24,83,2.345,84,2.24,85,1.905,86,2.24,87,0.17,88,1.39,89,3.453,90,2.24,91,1.685,92,2.24,93,2.24,94,2.24,95,2.24,96,2.24,97,2.598,98,2.24,99,1.59,100,2.24,101,2.24,102,2.142,103,2.24,104,2.24,105,1.685,106,2.24,107,2.24,108,2.24,109,2.24,110,2.24,111,2.24,112,2.24,113,2.24,114,2.24,115,2.24,116,1.685,117,2.24,118,2.937,119,2.24,120,4.735,121,2.24,122,2.335,123,2.598,124,1.802,125,4.028,126,2.24,127,3.453,128,2.24,129,2.24,130,2.24,131,2.24,132,1.521,133,2.24,134,2.24,135,0.007,136,0.011,137,0.007]],["title/classes/AppearanceService.html",[0,0.188,67,2.395]],["body/classes/AppearanceService.html",[0,0.193,2,0.47,3,0.274,4,0.245,5,0.245,7,0.161,8,0.496,9,1.175,12,1.226,29,1.068,31,1.155,32,0.023,33,1.155,34,0.526,35,1.022,38,0.96,39,1.981,40,1.302,43,1.231,45,1.092,57,4.506,60,0.892,61,1.467,62,3.082,67,3.322,87,0.274,116,3.681,135,0.012,136,0.016,137,0.012,138,5.431,139,3.082,140,5.539,141,5.539,142,1.588,143,4.892,144,4.892,145,3.623,146,5.046,147,3.623,148,4.892,149,3.623,150,4.892,151,2.071,152,3.623,153,4.892,154,3.623,155,2.254,156,1.919,157,3.623,158,5.539,159,3.623,160,3.623,161,0.908]],["title/classes/Base.html",[0,0.188,74,2.189]],["body/classes/Base.html",[0,0.266,2,0.649,3,0.378,4,0.338,5,0.338,7,0.222,8,0.61,11,3.721,29,0.861,32,0.022,34,0.455,60,0.805,74,3.728,87,0.378,135,0.016,136,0.019,137,0.016,162,2.433,163,2.433,164,4.252,165,5.481,166,4.998,167,3.761]],["title/classes/BaseMenu.html",[0,0.188,168,2.654]],["body/classes/BaseMenu.html",[0,0.224,2,0.546,3,0.318,4,0.284,5,0.284,7,0.187,8,0.548,9,1.097,12,1.353,26,1.703,29,1.027,31,1.274,32,0.023,33,1.274,34,0.492,35,1.128,43,0.935,45,0.993,60,0.87,69,3.579,70,5.35,72,3.579,87,0.318,88,2.61,132,4.416,135,0.013,136,0.017,137,0.013,142,1.407,168,4.062,169,4.27,170,5.35,171,3.579,172,5.961,173,5.398,174,4.206,175,5.398,176,5.398,177,5.398,178,6.288,179,4.206,180,5.398,181,4.206,182,4.206,183,4.206]],["title/classes/ColorRef.html",[0,0.188,184,2.654]],["body/classes/ColorRef.html",[0,0.194,2,0.473,3,0.276,4,0.247,5,0.247,7,0.162,8,0.499,9,1.239,12,1.232,26,1.477,29,1.07,31,1.16,32,0.023,33,1.16,34,0.484,35,1.027,38,0.964,43,0.811,57,4.343,60,0.792,87,0.276,116,2.745,135,0.012,136,0.016,137,0.012,142,1.312,161,1.491,184,3.699,185,5.442,186,3.104,187,6.537,188,6.537,189,6.537,190,4.843,191,4.915,192,4.915,193,3.699,194,3.648,195,3.648,196,4.915,197,3.648,198,3.648,199,5.559,200,4.915,201,4.915,202,2.745,203,4.183,204,3.648,205,3.648]],["title/classes/Context.html",[0,0.188,11,1.869]],["body/classes/Context.html",[0,0.204,2,0.497,3,0.29,4,0.259,5,0.259,7,0.17,8,0.515,9,1.193,11,2.689,12,1.272,26,1.55,29,1.118,31,0.903,32,0.023,33,0.903,34,0.478,35,0.799,43,1.127,45,0.934,60,0.616,87,0.29,135,0.012,136,0.016,137,0.012,142,1.344,161,0.959,162,2.679,163,2.679,206,3.255,207,6.718,208,6.309,209,7.009,210,5.158,211,6.063,212,5.074,213,4.493,214,5.074,215,3.826,216,3.826,217,3.826,218,3.826,219,2.598,220,3.826,221,3.826,222,5.074,223,3.826,224,3.826]],["title/classes/Controller.html",[0,0.188,65,1.343]],["body/classes/Controller.html",[0,0.223,2,0.544,3,0.318,4,0.283,5,0.283,7,0.187,12,1.351,28,2.051,29,1.12,32,0.023,43,1.444,45,1.156,60,0.676,61,1.699,65,2.051,87,0.318,135,0.013,136,0.017,137,0.013,155,2.483,167,4.727,225,3.569,226,1.774,227,3.099,228,3.099,229,2.895,230,3.099,231,4.195,232,4.195,233,4.195,234,4.195,235,4.195,236,5.953,237,4.195,238,4.195,239,2.603,240,4.195,241,4.195,242,4.195,243,5.389]],["title/classes/CornerMixin.html",[0,0.188,244,2.189]],["body/classes/CornerMixin.html",[0,0.318,2,0.643,3,0.375,4,0.335,5,0.335,7,0.22,8,0.606,29,0.853,32,0.022,34,0.375,87,0.452,135,0.016,136,0.019,137,0.016,162,2.419,163,2.419,244,3.707,245,3.725,246,5.459,247,2.202,248,4.951,249,3.072,250,4.212,251,4.212,252,4.212,253,4.212]],["title/classes/DefaultShapeMixin.html",[0,0.188,254,2.395]],["body/classes/DefaultShapeMixin.html",[0,0.265,2,0.645,3,0.376,4,0.336,5,0.336,32,0.023,60,1.075,87,0.376,135,0.016,136,0.019,137,0.016,162,2.011,163,2.011,244,3.081,249,3.714,254,4.065,255,4.225,256,4.225,257,3.737,258,3.737,259,4.967,260,4.065,261,4.967,262,4.065,263,4.967,264,1.578,265,4.967]],["title/classes/GeometryMixin.html",[0,0.188,262,2.395]],["body/classes/GeometryMixin.html",[0,0.175,2,0.427,3,0.249,4,0.222,5,0.222,7,0.146,8,0.465,9,0.969,11,2.79,29,1.118,31,0.776,32,0.023,33,0.776,34,0.491,35,0.687,38,0.645,39,1.332,40,0.875,43,0.731,45,0.605,60,0.737,74,3.714,87,0.249,99,1.292,135,0.01,136,0.015,137,0.01,161,0.824,162,2.626,163,2.626,165,3.894,190,2.233,213,2.233,219,2.233,247,1.809,262,3.108,264,1.455,266,2.797,267,4.844,268,5.266,269,5.266,270,5.266,271,5.266,272,3.894,273,5.986,274,5.273,275,3.288,276,4.578,277,4.578,278,4.578,279,3.288,280,3.288,281,3.288,282,3.288,283,1.515,284,3.288,285,3.288,286,3.288,287,3.288,288,2.22,289,3.288,290,3.963,291,2.797,292,3.894,293,3.288,294,4.578,295,5.266,296,4.578,297,3.288,298,3.288,299,3.288,300,3.288,301,3.288,302,2.797,303,3.288,304,2.474,305,3.288,306,3.288,307,3.288,308,3.288,309,3.288,310,3.288,311,3.288]],["title/interfaces/ISettings.html",[312,0.568,313,2.654]],["body/interfaces/ISettings.html",[3,0.375,4,0.335,5,0.335,7,0.22,8,0.606,32,0.023,34,0.375,38,0.971,40,1.317,60,0.798,87,0.375,99,1.398,135,0.016,136,0.019,137,0.016,312,0.798,313,4.496,314,2.005,315,3.725,316,5.802,317,4.828,318,5.083,319,3.725,320,4.212,321,4.496,322,4.212,323,3.725]],["title/interfaces/ISplitBoardView.html",[312,0.568,324,2.189]],["body/interfaces/ISplitBoardView.html",[3,0.26,4,0.232,5,0.232,7,0.28,8,0.479,32,0.023,34,0.514,45,1.157,60,0.761,87,0.408,135,0.011,136,0.015,137,0.011,151,3.917,226,1.639,247,2.177,264,1.501,312,0.761,314,1.393,324,2.93,325,2.336,326,4.939,327,4.131,328,4.939,329,4.939,330,4.939,331,4.939,332,4.939,333,4.939,334,2.863,335,3.318,336,2.588,337,2.926,338,2.588,339,2.93,340,2.7,341,1.697,342,2.588,343,2.926,344,2.502,345,4.729,346,2.926,347,2.93,348,2.7,349,2.7,350,2.7,351,2.926,352,2.926,353,2.926,354,3.554,355,3.554]],["title/interfaces/ItemGenerateDelegate.html",[312,0.568,341,1.74]],["body/interfaces/ItemGenerateDelegate.html",[3,0.293,4,0.262,5,0.262,7,0.29,8,0.519,32,0.023,34,0.461,45,1.197,60,0.824,87,0.434,135,0.012,136,0.016,137,0.012,151,2.924,226,1.617,247,2.219,264,1.231,312,0.824,314,1.569,324,2.403,325,2.63,326,3.295,327,3.474,328,3.295,329,3.295,330,3.295,331,3.295,332,3.295,333,3.295,334,2.523,335,2.924,336,2.915,337,3.295,338,2.915,339,3.174,340,2.924,341,2.523,342,4.585,343,3.295,344,2.711,345,4.896,346,3.295,347,3.174,348,2.924,349,2.924,350,2.924,351,3.295,352,3.295,353,3.295,354,3.85,355,3.85]],["title/classes/LayoutMixin.html",[0,0.188,260,2.395]],["body/classes/LayoutMixin.html",[0,0.257,2,0.627,3,0.365,4,0.326,5,0.326,7,0.215,8,0.597,29,1.014,32,0.023,34,0.445,87,0.365,135,0.015,136,0.019,137,0.015,162,2.57,163,2.57,247,2.189,260,3.996,290,3.634,356,4.108,357,6.347,358,6.347,359,4.829,360,4.829,361,4.108,362,3.634,363,3.634]],["title/classes/MenuBar.html",[0,0.188,364,2.395]],["body/classes/MenuBar.html",[0,0.158,2,0.385,3,0.225,4,0.201,5,0.201,7,0.132,8,0.432,9,1.001,12,1.068,13,2.428,28,1.621,29,1.125,31,0.701,32,0.023,33,0.701,34,0.436,35,0.62,38,0.583,40,0.79,43,1.404,45,1.001,60,0.928,61,1.203,63,1.369,64,1.369,65,2.405,66,2.257,87,0.225,99,1.203,124,2.071,132,3.912,135,0.009,136,0.014,137,0.009,142,1.176,155,1.963,156,1.574,161,1.364,169,4.072,226,1.536,227,2.457,228,2.457,229,2.508,230,2.457,264,1.354,283,2.655,288,1.526,312,0.479,334,1.465,341,1.465,364,2.893,365,2.235,366,2.435,367,2.017,368,2.848,369,2.508,370,2.257,371,2.508,372,2.97,373,4.072,374,2.97,375,2.97,376,2.257,377,2.101,378,2.97,379,2.97,380,4.238,381,2.97,382,2.97,383,1.843,384,1.843,385,1.843,386,1.465,387,1.843,388,2.527,389,3.206,390,2.017,391,2.101,392,2.527,393,2.527,394,2.527,395,2.527,396,2.527,397,2.527,398,2.527,399,2.527,400,2.527,401,2.527]],["title/interfaces/MenuProps.html",[312,0.568,373,2.395]],["body/interfaces/MenuProps.html",[0,0.2,3,0.284,4,0.254,5,0.254,7,0.167,8,0.508,9,0.922,13,2.029,28,1.428,32,0.024,34,0.427,38,0.736,40,0.999,60,1.01,61,1.52,63,1.729,64,1.729,65,1.907,66,2.654,87,0.284,99,1.414,124,1.428,132,4.257,135,0.012,136,0.016,137,0.012,142,0.886,155,2.308,156,1.988,161,1.508,169,2.548,226,1.06,229,1.729,264,1.193,288,2.019,312,0.605,314,1.52,334,1.851,341,1.851,364,2.548,365,2.824,366,2.145,367,2.029,368,2.145,369,1.729,371,1.729,373,4.086,377,1.851,380,5.333,386,1.851,387,2.328,388,3.193,389,3.769,390,2.548,391,2.471,392,3.193,393,3.193,394,3.193,395,3.193,396,3.193,397,3.193,398,3.193,399,3.193,400,3.193,401,3.193]],["title/interfaces/Module.html",[312,0.568,367,1.428]],["body/interfaces/Module.html",[3,0.345,4,0.308,5,0.308,7,0.203,8,0.577,32,0.023,34,0.49,87,0.345,124,2.536,135,0.015,136,0.018,137,0.015,151,3.884,312,0.735,314,1.847,344,3.531,367,2.301,369,2.984,370,3.432,371,2.984,402,3.881,403,5.682,404,5.682,405,5.682,406,4.275]],["title/interfaces/ModuleConfig.html",[312,0.568,386,1.74]],["body/interfaces/ModuleConfig.html",[0,0.197,3,0.28,4,0.25,5,0.25,7,0.165,8,0.504,9,0.681,10,4.213,13,1.498,32,0.023,34,0.424,40,1.32,41,3.734,60,0.902,61,2.009,63,1.705,87,0.376,88,2.295,91,3.734,97,3.734,99,1.401,124,1.408,135,0.012,136,0.016,137,0.012,155,2.286,161,1.5,202,2.784,203,4.213,288,2.35,312,0.596,314,1.498,367,2.735,386,2.448,391,2.951,407,2.784,408,2.784,409,3.148,410,3.148,411,3.148,412,2.784,413,3.148,414,2.629,415,3.148,416,4.221,417,5.09,418,4.221,419,4.221,420,3.148,421,3.148,422,3.148,423,3.148,424,4.763,425,3.148,426,3.148,427,3.148,428,3.148,429,3.148,430,3.148,431,3.148,432,3.148,433,3.148,434,3.148,435,3.148,436,3.148,437,3.148]],["title/classes/ModuleFactory.html",[0,0.188,63,1.625]],["body/classes/ModuleFactory.html",[0,0.157,2,0.383,3,0.223,4,0.199,5,0.199,7,0.131,8,0.43,9,0.913,10,4.501,12,1.062,13,2.009,26,1.194,29,1.031,31,1.356,32,0.023,33,1.356,34,0.477,35,1.2,38,0.831,39,1.716,40,1.32,41,4.081,43,1.205,45,0.542,60,0.799,61,1.716,63,1.952,87,0.321,88,1.829,91,4.081,97,3.188,99,1.196,124,1.888,135,0.009,136,0.014,137,0.009,155,1.952,161,1.36,202,2.218,203,3.732,288,2.409,312,0.475,367,2.672,376,1.562,386,1.454,391,1.454,407,4.637,408,2.218,409,2.508,410,2.508,411,2.508,412,2.218,413,2.508,414,2.873,415,3.605,416,4.614,417,5.243,418,4.614,419,3.605,420,2.508,421,2.508,422,2.508,423,2.508,424,4.22,425,2.508,426,2.508,427,3.605,428,2.508,429,3.605,430,2.508,431,3.605,432,2.508,433,2.508,434,2.508,435,2.508,436,2.508,437,2.508,438,4.237,439,4.237,440,4.237,441,2.948,442,2.948,443,2.948,444,2.948,445,4.614,446,2.948,447,2.948,448,2.948]],["title/classes/ModuleItem.html",[0,0.188,449,2.189]],["body/classes/ModuleItem.html",[0,0.121,2,0.295,3,0.172,4,0.154,5,0.154,7,0.101,8,0.354,9,1.162,12,0.875,28,2.328,29,1.179,31,1.379,32,0.023,33,1.379,34,0.508,35,1.22,36,2.371,38,1.01,39,2.085,40,0.605,43,1.436,45,1.042,60,0.562,64,1.047,66,1.204,87,0.172,99,0.641,135,0.007,136,0.011,137,0.007,142,1.658,161,0.57,226,1.347,264,1.109,283,3.093,288,2.145,317,1.71,327,1.543,335,3.859,347,2.166,348,1.996,349,1.996,350,1.996,367,2.201,406,2.627,445,3.617,449,2.96,450,4.38,451,1.933,452,4.251,453,2.97,454,2.97,455,2.97,456,4.059,457,3.199,458,4.771,459,3.617,460,3.617,461,3.617,462,3.617,463,2.97,464,2.97,465,3.617,466,2.97,467,2.97,468,2.97,469,2.627,470,2.627,471,2.627,472,2.272,473,2.272,474,2.272,475,1.933,476,2.97,477,1.121,478,1.933,479,1.204,480,2.272,481,2.272,482,2.272,483,2.272,484,1.933,485,2.272,486,1.933,487,2.272,488,2.272,489,2.272,490,2.272,491,1.933,492,1.933,493,2.272,494,1.933,495,2.272,496,1.933,497,2.272,498,2.272,499,1.933,500,2.272,501,2.97,502,2.627,503,1.933,504,1.933,505,2.272,506,1.933,507,1.933,508,2.272,509,1.71,510,1.933,511,1.71,512,1.71,513,1.933,514,1.71,515,1.71,516,2.371,517,1.933,518,2.166,519,1.71,520,2.272]],["title/classes/PropertyPanel.html",[0,0.188,83,2.395]],["body/classes/PropertyPanel.html",[0,0.178,2,0.435,3,0.254,4,0.226,5,0.226,7,0.149,8,0.471,9,1.057,12,1.163,13,2.325,28,1.276,29,1.176,31,1.095,32,0.023,33,1.095,34,0.456,35,0.969,38,0.658,40,0.892,43,1.47,45,1.057,60,0.747,64,1.544,65,2.294,83,3.15,87,0.254,122,2.288,124,2.025,135,0.011,136,0.015,137,0.011,142,1.538,161,1.163,226,1.502,227,2.624,228,2.624,229,2.451,230,2.624,239,3.301,264,1.474,283,3.143,344,2.819,368,2.652,369,2.451,370,2.458,371,2.645,376,2.458,377,1.653,383,2.079,384,2.079,385,2.079,521,2.851,522,2.851,523,3.828,524,3.15,525,3.15,526,2.522,527,2.276,528,2.522,529,3.49,530,3.15,531,2.522,532,2.522,533,2.522,534,2.276,535,2.276,536,3.49,537,2.522]],["title/classes/Rectangle.html",[0,0.188,538,2.654]],["body/classes/Rectangle.html",[0,0.137,2,0.334,3,0.195,4,0.174,5,0.174,7,0.115,8,0.389,9,1.194,11,3.13,12,0.962,26,1.043,29,1.131,31,1.2,32,0.023,33,1.2,34,0.501,35,1.062,38,0.753,39,1.043,40,0.685,43,1.208,45,1.049,60,0.876,87,0.195,99,1.535,125,2.19,135,0.008,136,0.012,137,0.008,161,1.15,162,2.681,163,2.681,210,4.326,213,1.748,219,1.748,247,2.136,254,1.748,256,3.265,257,1.937,258,1.937,264,0.818,267,2.19,272,3.265,274,2.19,288,0.922,290,2.888,291,2.19,304,3.826,361,3.903,362,4.092,363,4.092,366,2.194,538,3.826,539,2.19,540,4.587,541,4.587,542,4.587,543,4.587,544,5.084,545,5.438,546,3.837,547,3.837,548,2.575,549,4.587,550,2.575,551,2.575,552,2.575,553,2.575,554,2.575,555,2.575,556,2.575,557,2.575,558,2.575,559,2.575,560,2.575,561,2.575,562,2.575,563,2.575,564,2.575,565,2.575,566,2.575,567,2.575,568,2.575,569,1.748,570,4.587,571,2.575,572,4.587,573,4.587,574,2.575,575,5.084,576,2.575,577,2.575,578,3.837,579,3.837,580,3.837,581,3.837,582,3.837,583,2.575,584,2.575,585,2.575,586,2.575,587,1.748,588,1.937,589,2.575,590,2.575,591,2.575,592,2.575]],["title/classes/RectangleCornerMixin.html",[0,0.188,249,2.189]],["body/classes/RectangleCornerMixin.html",[0,0.303,2,0.592,3,0.345,4,0.308,5,0.308,7,0.203,8,0.577,29,1.116,32,0.023,34,0.49,87,0.43,135,0.015,136,0.018,137,0.015,162,2.699,163,2.699,244,2.83,245,3.433,246,3.881,247,2.232,249,3.525,250,5.265,251,5.265,252,5.265,253,5.265,593,4.562,594,4.562,595,4.562,596,4.562]],["title/classes/ResourceExplorer.html",[0,0.188,597,2.654]],["body/classes/ResourceExplorer.html",[0,0.178,2,0.435,3,0.254,4,0.226,5,0.226,7,0.149,8,0.471,9,1.057,12,1.163,13,2.325,28,1.276,29,1.176,31,1.095,32,0.023,33,1.095,34,0.456,35,0.969,38,0.658,40,0.892,43,1.47,45,1.057,60,0.747,64,1.544,65,2.294,87,0.254,122,2.288,124,2.025,135,0.011,136,0.015,137,0.011,142,1.538,161,1.163,226,1.502,227,2.624,228,2.624,229,2.451,230,2.624,239,3.301,264,1.474,283,3.143,344,2.819,368,2.652,369,2.451,370,2.458,371,2.645,376,2.458,377,1.653,383,2.079,384,2.079,385,2.079,523,3.828,524,3.15,525,3.15,526,2.522,527,2.276,528,2.522,529,3.49,530,3.15,531,2.522,532,2.522,533,2.522,534,2.276,535,2.276,536,3.49,537,2.522,597,3.49,598,2.851,599,2.851]],["title/classes/ShapeCanvas.html",[0,0.188,600,2.654]],["body/classes/ShapeCanvas.html",[0,0.178,2,0.435,3,0.254,4,0.226,5,0.226,7,0.149,8,0.471,9,1.057,12,1.163,13,2.325,28,1.276,29,1.176,31,1.095,32,0.023,33,1.095,34,0.456,35,0.969,38,0.658,40,0.892,43,1.47,45,1.057,60,0.747,64,1.544,65,2.294,87,0.254,122,2.288,124,2.025,135,0.011,136,0.015,137,0.011,142,1.538,161,1.163,226,1.502,227,2.624,228,2.624,229,2.451,230,2.624,239,3.301,264,1.474,283,3.143,344,2.819,368,2.652,369,2.451,370,2.458,371,2.645,376,2.458,377,1.653,383,2.079,384,2.079,385,2.079,523,3.828,524,3.15,525,3.15,526,2.522,527,2.276,528,2.522,529,3.49,530,3.15,531,2.522,532,2.522,533,2.522,534,2.276,535,2.276,536,3.49,537,2.522,600,3.49,601,2.851,602,2.851]],["title/classes/SplitBoardController.html",[0,0.188,603,2.654]],["body/classes/SplitBoardController.html",[0,0.093,2,0.227,3,0.132,4,0.118,5,0.118,7,0.227,8,0.288,9,1.259,12,0.711,26,0.707,28,0.664,29,1.063,31,1.069,32,0.024,33,1.069,34,0.461,35,0.946,38,0.952,39,1.834,43,1.078,45,1.041,60,0.457,87,0.132,88,1.083,99,1.163,122,1.398,135,0.006,136,0.009,137,0.006,142,1.3,151,2.045,161,1.135,226,0.8,247,2.103,323,2.692,324,2.555,334,0.861,340,0.998,345,3.65,348,0.998,350,0.998,354,3.65,355,4.256,457,3.846,518,1.083,587,1.185,603,2.133,604,3.871,605,1.485,606,3.578,607,3.578,608,3.578,609,3.578,610,3.578,611,3.578,612,5.111,613,5.111,614,4.118,615,2.834,616,2.834,617,2.834,618,2.834,619,4.118,620,1.746,621,2.834,622,3.738,623,1.746,624,1.746,625,1.746,626,1.746,627,1.746,628,3.127,629,1.746,630,1.746,631,1.746,632,2.834,633,1.746,634,2.834,635,1.746,636,2.834,637,5.656,638,1.746,639,4.53,640,2.834,641,1.746,642,1.746,643,2.834,644,4.118,645,2.834,646,1.485,647,2.43,648,1.485,649,3.578,650,1.746,651,3.578,652,1.746,653,3.578,654,3.578,655,3.578,656,1.746,657,1.746,658,1.746,659,1.746,660,1.746,661,1.746,662,1.746,663,1.746,664,1.746,665,1.746,666,1.746,667,1.746,668,2.834,669,2.834,670,1.746,671,1.746,672,1.746,673,1.746,674,1.746,675,3.578,676,5.656,677,1.746,678,1.746,679,1.746,680,1.746,681,1.746,682,1.746,683,1.746,684,4.118,685,2.133,686,1.313,687,1.746,688,2.834,689,1.746,690,1.746,691,2.834,692,1.313,693,1.746,694,1.746,695,4.851,696,4.851,697,2.834,698,4.118,699,2.834,700,2.834,701,1.746,702,2.834,703,1.746,704,2.834,705,1.746,706,1.746]],["title/classes/SplitItemView.html",[0,0.188,335,2.016]],["body/classes/SplitItemView.html",[0,0.105,2,0.256,3,0.149,4,0.133,5,0.133,7,0.088,8,0.317,9,1.198,12,0.783,26,1.571,28,2.355,29,1.137,31,1.314,32,0.023,33,1.314,34,0.48,35,1.163,36,2.12,38,1.005,39,1.949,40,0.524,43,1.375,45,1.122,60,0.503,87,0.149,122,0.971,123,1.482,135,0.006,136,0.01,137,0.006,142,1.62,161,0.973,226,1.571,264,0.992,283,2.034,288,1.993,317,2.349,327,1.337,335,2.927,336,1.482,338,1.482,347,2.986,348,2.751,349,2.751,350,2.751,453,3.3,454,3.3,455,3.3,456,4.565,457,3.621,459,3.756,460,3.756,461,3.756,462,3.756,463,2.656,464,2.656,465,3.756,466,2.656,467,2.656,468,2.656,469,2.349,470,2.349,471,2.349,475,2.656,476,3.756,477,1.54,478,2.656,479,1.654,484,3.756,486,1.675,491,2.656,492,2.656,494,2.656,496,2.656,499,2.656,501,3.756,502,4.038,503,3.3,504,2.656,506,2.656,507,2.656,509,1.482,510,1.675,511,1.482,512,1.482,513,1.675,514,1.482,515,1.482,516,2.12,517,1.675,518,1.222,569,1.337,587,1.337,604,4.007,622,2.12,647,3.477,707,1.482,708,3.122,709,1.969,710,1.969,711,1.969,712,1.969,713,1.969,714,1.969,715,1.969,716,1.969,717,1.969,718,1.969,719,1.969,720,1.969,721,1.969,722,1.969,723,1.969,724,1.675,725,1.969,726,1.969,727,3.879,728,1.969,729,3.122,730,1.969,731,1.969,732,1.969,733,3.122,734,3.879,735,1.969,736,1.969,737,1.969,738,1.969,739,1.969,740,1.969,741,1.969,742,1.969,743,1.969,744,1.969,745,1.969,746,1.969,747,3.122,748,1.969,749,1.969]],["title/classes/SvelteModule.html",[0,0.188,523,2.016]],["body/classes/SvelteModule.html",[0,0.159,2,0.388,3,0.226,4,0.202,5,0.202,7,0.133,8,0.434,9,1.106,12,1.072,13,2.433,28,1.628,29,1.152,31,1.01,32,0.023,33,1.01,34,0.468,35,0.894,43,1.431,45,1.004,60,0.879,61,1.21,65,2.408,66,1.583,87,0.226,122,1.473,124,2.198,135,0.01,136,0.014,137,0.01,142,1.578,155,1.971,161,1.253,167,4.655,226,1.54,227,2.465,228,2.465,229,2.514,230,2.465,239,3.1,264,1.359,283,2.661,344,3.278,366,2.445,367,2.21,368,2.857,369,2.514,370,2.266,371,2.514,376,2.266,377,2.11,383,1.853,384,1.853,385,1.853,389,3.76,390,2.028,523,2.445,524,3.393,525,2.905,527,3.921,530,2.905,534,2.028,535,2.028,750,5.384,751,2.541,752,2.987,753,2.987,754,2.987,755,2.987,756,2.987,757,2.987,758,2.987,759,2.987,760,2.248,761,2.987,762,2.987,763,2.987,764,2.987,765,2.987]],["title/classes/View.html",[0,0.188,226,0.996]],["body/classes/View.html",[0,0.204,2,0.497,3,0.29,4,0.259,5,0.259,7,0.17,8,0.515,12,1.272,26,1.55,27,4.317,28,2.635,29,1.087,31,1.432,32,0.023,33,1.432,34,0.508,35,1.267,36,4.284,38,0.751,43,1.265,87,0.29,123,2.879,135,0.012,136,0.016,137,0.012,142,1.344,161,1.427,193,2.879,226,1.433,390,2.598,469,3.818,470,3.818,471,3.818,502,4.284,509,3.818,511,2.879,512,3.818,514,2.879,515,3.818,516,4.117,622,3.446,766,2.879,767,5.074,768,3.826,769,3.826,770,3.826,771,3.818,772,4.317,773,4.317,774,3.826,775,3.826,776,3.826,777,3.826]],["title/interfaces/WeightMap.html",[312,0.568,778,1.869]],["body/interfaces/WeightMap.html",[0,0.281,2,0.526,3,0.307,4,0.274,5,0.274,7,0.235,9,1.078,29,0.699,32,0.023,38,0.795,45,0.97,87,0.307,99,1.488,135,0.013,136,0.017,137,0.013,142,1.244,247,1.861,288,2.302,312,0.944,314,1.642,391,2.6,477,2,479,2.148,628,2.148,778,3.406,779,3.013,780,2.317,781,4.054,782,4.054,783,3.013,784,3.767,785,2.753,786,3.013,787,2.515,788,2.515,789,2.515,790,2.515,791,2.515,792,2.515,793,2.515,794,2.515,795,2.515,796,2.317,797,2.753,798,2.753,799,2.753,800,3.579,801,2.753,802,2.753,803,2.753,804,2.753,805,2.515,806,2.753,807,2.753,808,2.753,809,2.753]],["title/classes/Workbench.html",[0,0.188,102,2.189]],["body/classes/Workbench.html",[0,0.12,2,0.293,3,0.171,4,0.153,5,0.153,7,0.229,8,0.353,9,0.998,12,0.871,13,2.196,26,0.915,29,1.1,31,1,32,0.024,33,1,34,0.47,35,0.885,38,0.443,40,0.925,43,1.329,45,1.073,60,0.827,61,0.915,63,2.905,64,1.041,65,2.324,66,1.842,87,0.171,99,1.45,102,2.156,105,2.615,124,1.954,135,0.007,136,0.011,137,0.007,142,1.28,155,1.601,156,1.197,161,1.287,226,1.595,227,2.346,228,2.346,229,2.192,230,2.346,247,1.723,264,1.104,283,2.366,312,0.364,334,1.114,339,2.156,340,1.987,341,2.089,342,2.615,366,1.987,367,2.361,369,2.192,370,1.842,371,2.192,376,1.842,377,1.714,386,1.714,387,2.628,414,2.244,449,3.186,518,2.951,519,1.7,569,1.534,685,1.7,686,1.7,692,1.7,760,1.7,810,1.7,811,3.604,812,2.259,813,3.476,814,3.682,815,2.259,816,2.259,817,2.259,818,2.957,819,2.259,820,2.259,821,2.259,822,3.604,823,3.604,824,2.259,825,2.259,826,2.259,827,2.259,828,2.259,829,1.922,830,1.922,831,1.922,832,1.922,833,1.922,834,1.922,835,2.957,836,1.922,837,2.957,838,1.922,839,2.957,840,1.922,841,1.922,842,1.922,843,1.922,844,1.922,845,1.922,846,1.922,847,2.957,848,1.922,849,1.922,850,2.957,851,2.957,852,4.046,853,1.922,854,1.922,855,1.922,856,1.922,857,1.922,858,1.922,859,1.922,860,1.922,861,1.922,862,1.922,863,1.922,864,1.922,865,1.922]],["title/interfaces/WorkbenchProps.html",[312,0.568,814,2.395]],["body/interfaces/WorkbenchProps.html",[0,0.148,3,0.21,4,0.188,5,0.188,7,0.213,8,0.412,9,0.746,13,1.643,32,0.024,34,0.493,35,0.847,38,0.545,40,1.079,45,0.97,60,0.904,61,1.124,63,2.699,64,1.279,65,2.007,66,2.149,87,0.21,99,1.584,102,1.722,105,3.052,124,1.544,135,0.009,136,0.013,137,0.009,142,0.958,155,1.869,156,1.471,161,1.406,226,1.353,227,1.369,228,1.369,229,1.279,230,1.369,247,1.923,264,0.882,312,0.447,314,1.124,334,1.369,339,2.974,340,2.74,341,2.001,366,1.587,367,2.45,369,1.279,371,1.279,377,1.369,386,2.601,387,2.517,414,2.972,449,2.974,518,3.271,519,2.088,569,1.885,685,2.088,686,2.088,692,2.088,760,2.088,810,2.088,811,2.361,814,3.58,818,2.361,822,4.772,823,4.772,829,2.361,830,2.361,831,2.361,832,2.361,833,2.361,834,2.361,835,3.451,836,2.361,837,3.451,838,2.361,839,3.451,840,2.361,841,2.361,842,2.361,843,2.361,844,2.361,845,2.361,846,2.361,847,3.451,848,2.361,849,2.361,850,3.451,851,3.451,852,4.486,853,2.361,854,2.361,855,2.361,856,2.361,857,2.361,858,2.361,859,2.361,860,2.361,861,2.361,862,2.361,863,2.361,864,2.361,865,2.361]],["title/classes/classBuilder.html",[0,0.188,796,2.016]],["body/classes/classBuilder.html",[0,0.241,2,0.588,3,0.245,4,0.219,5,0.219,7,0.202,8,0.46,9,1.208,12,1.136,26,1.312,29,1.063,31,1.336,32,0.023,33,1.336,34,0.451,35,1.182,38,0.889,39,1.312,43,1.257,45,1.096,85,4.445,87,0.245,99,1.279,135,0.01,136,0.014,137,0.01,142,1.457,247,1.44,288,2.026,312,0.842,391,2.235,477,1.598,479,1.717,628,1.717,778,3.424,779,3.62,780,1.852,783,2.59,784,3.976,785,2.2,786,2.59,787,2.011,788,2.011,789,2.011,790,2.011,791,2.011,792,2.011,793,2.011,794,2.011,795,2.011,796,2.59,797,3.548,798,3.077,799,2.2,800,3.077,801,3.842,802,2.2,803,3.077,804,3.077,805,2.011,806,2.2,807,2.2,808,2.2,809,2.2,866,4.531,867,4.531,868,4.531,869,4.531,870,3.24,871,3.24,872,3.24,873,3.24,874,3.24,875,3.24]],["title/interfaces/classConfig.html",[312,0.568,783,2.016]],["body/interfaces/classConfig.html",[0,0.34,2,0.513,3,0.299,4,0.267,5,0.267,7,0.231,8,0.526,9,1.065,32,0.023,34,0.392,38,0.775,45,0.954,87,0.299,99,1.463,135,0.013,136,0.017,137,0.013,142,1.224,247,1.647,288,2.423,312,0.932,314,1.6,391,3.145,477,1.949,479,2.094,628,2.094,778,3.253,779,2.259,780,2.259,783,3.307,784,3.74,785,2.683,786,2.963,787,2.452,788,2.452,789,2.452,790,2.452,791,2.452,792,2.452,793,2.452,794,2.452,795,2.452,796,2.259,797,2.683,798,2.683,799,2.683,800,3.52,801,2.683,802,2.683,803,2.683,804,2.683,805,2.452,806,2.683,807,2.683,808,2.683,809,2.683]],["title/coverage.html",[876,4.087]],["body/coverage.html",[0,0.363,1,1.961,5,0.135,6,1.701,11,1.059,32,0.023,34,0.151,40,0.532,63,0.921,65,0.761,67,1.358,74,1.241,83,1.358,102,1.241,135,0.006,136,0.01,137,0.006,138,1.701,139,1.701,151,2.24,156,1.059,162,2.389,163,2.389,164,1.701,168,1.505,169,2.661,170,1.701,171,1.701,184,1.505,185,1.701,186,1.701,206,1.701,225,1.701,226,0.565,244,1.241,245,2.378,249,1.241,254,1.358,255,1.701,260,1.358,262,1.358,266,1.701,312,0.95,313,1.505,315,2.378,321,1.505,324,1.241,325,2.146,335,1.143,341,0.986,356,1.701,364,1.358,365,2.378,367,0.81,373,1.358,386,0.986,387,1.241,402,1.701,407,2.378,408,2.378,449,1.241,450,1.701,451,1.701,477,2.392,521,1.701,522,1.701,523,1.143,538,1.505,539,1.701,597,1.505,598,1.701,599,1.701,600,1.505,601,1.701,602,1.701,603,1.505,604,2.762,605,1.701,628,3.822,646,1.701,648,2.689,707,1.505,750,1.701,751,1.701,766,1.505,778,1.059,779,2.772,780,2.772,783,1.143,784,1.143,786,1.143,796,1.143,810,2.378,814,1.358,876,1.701,877,1.701,878,2,879,2,880,3.788,881,6.949,882,1.701,883,6.949,884,2.689,885,1.701,886,1.701,887,2.689,888,1.701,889,5.154,890,4.452,891,3.16,892,3.16,893,4.452,894,3.16,895,2.689,896,2,897,1.701,898,2,899,2,900,5.034,901,5.034,902,1.701,903,1.701,904,4.848,905,1.701,906,1.701,907,1.701,908,1.701,909,1.701,910,1.701,911,1.701,912,1.701,913,1.701,914,1.701,915,1.701,916,1.701,917,1.701,918,1.701,919,1.701,920,1.701,921,1.701,922,1.701,923,1.701,924,1.701,925,1.701,926,1.701,927,1.701,928,2,929,2,930,4.452,931,2.378,932,2.378,933,1.701,934,1.701,935,3.16,936,2,937,2,938,2,939,2,940,1.701,941,2,942,2]],["title/dependencies.html",[943,2.95,944,3.19]],["body/dependencies.html",[32,0.023,61,1.968,135,0.016,136,0.019,137,0.016,146,4.134,190,3.299,213,3.299,219,3.299,257,3.656,258,3.656,319,4.789,320,4.134,944,3.656,945,4.859,946,4.859,947,4.859,948,4.859,949,4.134,950,4.859,951,4.859,952,4.859,953,4.859,954,4.859,955,4.859,956,4.859,957,4.859,958,4.859,959,4.859,960,4.859,961,4.859,962,4.859,963,4.859,964,4.859,965,4.859]],["title/miscellaneous/enumerations.html",[966,1.455,967,3.607]],["body/miscellaneous/enumerations.html",[7,0.219,32,0.022,39,2.693,57,4.041,118,4.186,135,0.016,136,0.019,137,0.016,325,3.341,334,2.936,339,3.052,340,2.812,347,3.693,348,3.402,349,3.402,350,3.402,604,3.052,647,4.515,707,4.478,724,5.063,966,2.427,967,4.186,968,4.92,969,4.186,970,4.92,971,4.92,972,4.92]],["title/miscellaneous/functions.html",[966,1.455,973,3.607]],["body/miscellaneous/functions.html",[7,0.218,31,1.403,32,0.022,33,1.403,35,1.241,43,1.09,135,0.016,136,0.019,137,0.016,156,3.147,162,1.986,163,1.986,193,4.47,406,3.69,900,3.69,901,4.47,902,5.054,927,4.172,931,3.69,932,4.47,933,5.437,966,2.419,973,4.172,974,4.172,975,4.904,976,4.172,977,4.904,978,4.904,979,4.904,980,5.94,981,5.94,982,4.904]],["title/index.html",[7,0.131,983,2.51,984,2.51]],["body/index.html",[1,3.064,4,0.377,32,0.02,135,0.012,136,0.016,137,0.012,190,2.495,292,3.125,302,3.125,304,2.764,312,0.592,319,4.489,412,2.764,414,2.617,771,2.764,944,3.716,985,5.965,986,5.579,987,4.938,988,4.938,989,3.674,990,3.674,991,3.674,992,3.674,993,3.674,994,3.674,995,3.674,996,5.965,997,3.674,998,3.674,999,3.125,1000,3.674,1001,3.674,1002,3.674,1003,3.674,1004,3.674,1005,3.674,1006,3.674,1007,3.125,1008,2.764,1009,3.674,1010,4.938,1011,3.674,1012,3.674,1013,3.674,1014,4.938,1015,3.674,1016,3.674,1017,3.674,1018,5.579,1019,3.674,1020,3.674,1021,3.674,1022,3.674,1023,3.674,1024,3.674,1025,3.674,1026,3.674,1027,3.674,1028,3.674,1029,3.674,1030,3.674,1031,3.674,1032,3.674,1033,3.674,1034,5.579,1035,3.674,1036,3.674,1037,3.674,1038,3.674,1039,5.579,1040,3.674,1041,3.674,1042,3.674,1043,3.125,1044,3.674,1045,3.674,1046,3.674,1047,5.579,1048,3.674,1049,3.674,1050,3.674,1051,3.674,1052,5.579,1053,4.938,1054,3.674,1055,3.674,1056,3.674,1057,3.674,1058,3.125,1059,3.674,1060,3.674,1061,3.674,1062,3.674,1063,3.674,1064,4.201,1065,3.674,1066,3.674,1067,4.938,1068,3.674,1069,4.938,1070,3.674,1071,4.938,1072,3.125,1073,3.125,1074,3.125,1075,3.674,1076,3.674,1077,3.674,1078,3.674,1079,3.674,1080,3.674,1081,3.674,1082,3.674,1083,3.674,1084,3.674]],["title/license.html",[983,2.51,984,2.51,1008,2.22]],["body/license.html",[32,0.017,135,0.014,136,0.017,137,0.014,588,4.09,639,3.618,647,2.887,805,2.638,877,3.618,999,3.618,1007,3.618,1008,3.2,1058,3.618,1072,3.618,1073,3.618,1074,3.618,1085,5.991,1086,4.252,1087,4.252,1088,5.435,1089,4.252,1090,4.252,1091,4.252,1092,4.252,1093,4.252,1094,4.252,1095,5.435,1096,6.937,1097,4.252,1098,4.252,1099,5.991,1100,4.252,1101,5.435,1102,4.252,1103,4.252,1104,4.252,1105,4.252,1106,4.252,1107,4.252,1108,5.435,1109,4.252,1110,4.252,1111,4.252,1112,4.252,1113,4.252,1114,4.252,1115,4.252,1116,5.435,1117,5.435,1118,4.252,1119,4.252,1120,4.252,1121,4.252,1122,4.252,1123,4.252,1124,4.252,1125,4.252,1126,4.252,1127,4.252,1128,4.252,1129,4.252,1130,4.252,1131,4.252,1132,4.252,1133,4.252,1134,4.252,1135,4.252,1136,4.252,1137,4.252,1138,4.252,1139,4.252,1140,4.252,1141,4.252,1142,4.252,1143,4.252,1144,4.252,1145,4.252]],["title/modules.html",[414,2.546]],["body/modules.html",[32,0.021,135,0.018,136,0.021,137,0.018,414,2.992]],["title/overview.html",[1146,4.087]],["body/overview.html",[2,0.722,32,0.02,135,0.018,136,0.02,137,0.018,314,2.254,1146,4.736,1147,5.567,1148,5.567]],["title/interfaces/stateConfig.html",[312,0.568,784,2.016]],["body/interfaces/stateConfig.html",[0,0.272,2,0.79,3,0.292,4,0.261,5,0.261,7,0.227,8,0.518,9,1.053,32,0.023,34,0.433,35,1.067,38,0.758,45,0.94,87,0.292,99,1.442,135,0.012,136,0.016,137,0.012,142,1.206,247,1.934,288,2.329,312,0.922,314,1.565,391,3.122,477,1.906,479,2.047,628,2.047,778,3.225,779,2.209,780,2.209,783,3.48,784,3.791,785,4.133,786,2.92,787,2.397,788,2.397,789,2.397,790,2.397,791,2.397,792,2.397,793,2.397,794,2.397,795,2.397,796,2.209,797,2.624,798,2.624,799,2.624,800,3.468,801,2.624,802,2.624,803,2.624,804,2.624,805,2.397,806,2.624,807,2.624,808,2.624,809,2.624]],["title/miscellaneous/typealiases.html",[966,1.455,1149,4.24]],["body/miscellaneous/typealiases.html",[7,0.239,32,0.022,34,0.407,135,0.017,136,0.02,137,0.017,516,4.26,622,3.65,766,4.045,771,4.045,772,4.573,773,4.573,966,2.652,1150,5.376,1151,5.376]],["title/miscellaneous/variables.html",[966,1.455,1152,3.607]],["body/miscellaneous/variables.html",[1,2.089,7,0.096,32,0.023,34,0.312,38,1.372,39,2.825,40,1.098,99,1.165,122,1.07,135,0.007,136,0.011,137,0.007,162,0.878,163,0.878,247,0.689,288,1.206,315,1.632,316,1.845,318,1.845,321,2.534,322,1.845,323,3.106,349,1.24,362,1.632,363,1.632,477,1.07,479,1.149,587,2.287,588,1.632,604,1.345,628,1.149,778,1.149,779,1.24,780,1.925,786,1.925,787,1.345,788,1.345,789,1.345,790,1.345,791,1.345,792,1.345,793,1.345,794,1.345,795,1.345,880,1.845,882,2.865,884,4.734,885,3.959,886,3.512,887,1.845,888,2.865,895,2.865,897,2.865,900,1.632,901,5.094,903,2.865,905,2.865,906,2.865,907,2.865,908,2.865,909,2.865,910,2.865,911,2.865,912,2.865,913,2.865,914,2.865,915,2.865,916,2.865,917,2.865,918,2.865,919,2.865,920,2.865,921,2.865,922,2.865,923,2.865,924,2.865,925,1.845,926,2.865,931,1.632,932,2.534,934,2.865,940,1.845,949,1.845,966,1.07,969,1.845,974,1.845,976,5.732,1043,1.845,1064,1.845,1152,1.845,1153,2.168,1154,4.654,1155,2.168,1156,3.367,1157,2.168,1158,2.168,1159,2.168,1160,2.168,1161,3.367,1162,2.168,1163,2.168,1164,3.367,1165,2.168,1166,3.367,1167,3.367,1168,2.168,1169,2.168,1170,2.168,1171,2.168,1172,2.168,1173,3.367,1174,4.654,1175,2.168,1176,3.367,1177,2.168,1178,2.168,1179,3.367,1180,2.168,1181,3.367,1182,2.168,1183,3.367,1184,3.367,1185,2.168,1186,2.168,1187,2.168,1188,2.168,1189,2.168,1190,3.367,1191,2.168,1192,3.367,1193,3.367,1194,4.654,1195,2.168,1196,3.367,1197,2.168,1198,2.168,1199,2.168,1200,2.168,1201,3.367,1202,2.168,1203,2.168,1204,3.367,1205,2.168,1206,2.168,1207,2.168,1208,2.168,1209,2.168,1210,2.168,1211,2.168,1212,2.168,1213,2.168,1214,2.168,1215,4.128,1216,4.654,1217,2.168,1218,2.168,1219,2.168,1220,2.168,1221,2.168,1222,2.168,1223,2.168,1224,2.168,1225,2.168,1226,2.168,1227,2.168,1228,2.168,1229,2.168,1230,2.168,1231,2.168,1232,2.168,1233,2.168,1234,2.168,1235,4.128,1236,3.367,1237,2.168,1238,2.168,1239,2.168]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":628,"title":{},"body":{"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["0.28.1",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":930,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":889,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":891,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":890,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0123456789abcdef",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":622,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["1.1.5",{"_index":962,"title":{},"body":{"dependencies.html":{}}}],["1.6.4",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["1/21",{"_index":898,"title":{},"body":{"coverage.html":{}}}],["1/24",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["1/28",{"_index":896,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1148,"title":{},"body":{"overview.html":{}}}],["100",{"_index":477,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["1f1f1f",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":644,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["2.2.0",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":929,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":788,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["2020",{"_index":1086,"title":{},"body":{"license.html":{}}}],["26",{"_index":1147,"title":{},"body":{"overview.html":{}}}],["272728",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e2f30",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":646,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["3.0.1",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["3.1.3",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":704,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["300",{"_index":790,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["393939",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3f3f3f",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":648,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["4.3.1",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["4.3.5",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":792,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["454545",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["464749",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":698,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["5.1.1",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["5580c0",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5d5f61",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["6.4.4",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":794,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["680",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.2",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["729cd4",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["800",{"_index":479,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["808080",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["900",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_bgcolorclassname",{"_index":453,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["_growclassname",{"_index":454,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["_height",{"_index":541,"title":{},"body":{"classes/Rectangle.html":{}}}],["_shrinkclassname",{"_index":455,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["_type",{"_index":140,"title":{},"body":{"classes/AppearanceService.html":{}}}],["_view",{"_index":368,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["_width",{"_index":542,"title":{},"body":{"classes/Rectangle.html":{}}}],["ability",{"_index":410,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["above",{"_index":1115,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":167,"title":{},"body":{"classes/Base.html":{},"classes/Controller.html":{},"classes/SvelteModule.html":{}}}],["accessors",{"_index":272,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{}}}],["action",{"_index":1072,"title":{},"body":{"index.html":{},"license.html":{}}}],["active",{"_index":793,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["activeexpand",{"_index":614,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["activeid",{"_index":606,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["add",{"_index":438,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["add(moduleid",{"_index":415,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["addconfig",{"_index":866,"title":{},"body":{"classes/classBuilder.html":{}}}],["addconfig(config",{"_index":803,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["added",{"_index":1076,"title":{},"body":{"index.html":{}}}],["addexpandbutton",{"_index":459,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["aliases",{"_index":1150,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":1106,"title":{},"body":{"license.html":{}}}],["anycolor",{"_index":187,"title":{},"body":{"classes/ColorRef.html":{}}}],["anycolorhex",{"_index":982,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":1,"title":{"classes/App.html":{}},"body":{"classes/App.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app(document.body",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.quit",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appearance",{"_index":198,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearanceservice",{"_index":67,"title":{"classes/AppearanceService.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"coverage.html":{}}}],["appearancetype",{"_index":57,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"miscellaneous/enumerations.html":{}}}],["appearancetype.any",{"_index":204,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearancetype.dark",{"_index":116,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{}}}],["appearancetype.light",{"_index":205,"title":{},"body":{"classes/ColorRef.html":{}}}],["appeared",{"_index":242,"title":{},"body":{"classes/Controller.html":{}}}],["append",{"_index":469,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["append(child",{"_index":509,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["appending",{"_index":238,"title":{},"body":{"classes/Controller.html":{}}}],["application",{"_index":1064,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["applicationmenus",{"_index":73,"title":{},"body":{"classes/App.html":{}}}],["aps",{"_index":111,"title":{},"body":{"classes/App.html":{}}}],["aps.onmodechanged((type",{"_index":113,"title":{},"body":{"classes/App.html":{}}}],["arising",{"_index":1143,"title":{},"body":{"license.html":{}}}],["array",{"_index":293,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["associated",{"_index":1097,"title":{},"body":{"license.html":{}}}],["async",{"_index":13,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["authors",{"_index":1133,"title":{},"body":{"license.html":{}}}],["auto",{"_index":771,"title":{},"body":{"classes/View.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["automatically",{"_index":1075,"title":{},"body":{"index.html":{}}}],["available",{"_index":1003,"title":{},"body":{"index.html":{}}}],["await",{"_index":97,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["bababa",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["background",{"_index":273,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["background(background",{"_index":305,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["bar.svelte",{"_index":78,"title":{},"body":{"classes/App.html":{}}}],["base",{"_index":74,"title":{"classes/Base.html":{}},"body":{"classes/App.html":{},"classes/Base.html":{},"classes/GeometryMixin.html":{},"coverage.html":{}}}],["base:4",{"_index":284,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["basemenu",{"_index":168,"title":{"classes/BaseMenu.html":{}},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["bg",{"_index":475,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["bgcolor",{"_index":903,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["board.controller.ts",{"_index":605,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["board.controller.ts:10",{"_index":630,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:11",{"_index":623,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:13",{"_index":624,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:14",{"_index":621,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:31",{"_index":638,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:46",{"_index":641,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:5",{"_index":627,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:53",{"_index":631,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:6",{"_index":625,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:61",{"_index":642,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:7",{"_index":626,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:72",{"_index":635,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:82",{"_index":633,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:9",{"_index":629,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.view.ts",{"_index":895,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":317,"title":{},"body":{"interfaces/ISettings.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["bootstrap",{"_index":14,"title":{},"body":{"classes/App.html":{}}}],["bordercolor",{"_index":905,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["borderraidus",{"_index":545,"title":{},"body":{"classes/Rectangle.html":{}}}],["borderraidus(borderraidus",{"_index":576,"title":{},"body":{"classes/Rectangle.html":{}}}],["bottom",{"_index":582,"title":{},"body":{"classes/Rectangle.html":{}}}],["bottomleftradius",{"_index":252,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["bottomrightradius",{"_index":253,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["box",{"_index":1059,"title":{},"body":{"index.html":{}}}],["break",{"_index":424,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["browserwindow",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder",{"_index":1061,"title":{},"body":{"index.html":{}}}],["builder.ts",{"_index":780,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["builder.ts:11",{"_index":782,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["builder.ts:24",{"_index":869,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:30",{"_index":872,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:33",{"_index":871,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:36",{"_index":873,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:44",{"_index":875,"title":{},"body":{"classes/classBuilder.html":{}}}],["building",{"_index":1015,"title":{},"body":{"index.html":{}}}],["bundled",{"_index":1027,"title":{},"body":{"index.html":{}}}],["button",{"_index":492,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["c",{"_index":805,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"license.html":{},"interfaces/stateConfig.html":{}}}],["c0c0c1",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c4666f",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c6c6c6",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":411,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["cancelformerge",{"_index":326,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["cancelwaitformerge",{"_index":460,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["canvas",{"_index":207,"title":{},"body":{"classes/Context.html":{}}}],["canvas/index.ts",{"_index":602,"title":{},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["canvas/skia",{"_index":163,"title":{},"body":{"classes/Base.html":{},"classes/Context.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["canvaskit",{"_index":213,"title":{},"body":{"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/Rectangle.html":{},"dependencies.html":{}}}],["canvaskitinit",{"_index":934,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":203,"title":{},"body":{"classes/ColorRef.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["center",{"_index":276,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["cgray",{"_index":476,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["charge",{"_index":1092,"title":{},"body":{"license.html":{}}}],["check",{"_index":316,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["checkexpandstate",{"_index":615,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["checkexpandstate(clientx",{"_index":632,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["child",{"_index":511,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["childs",{"_index":514,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["ck",{"_index":208,"title":{},"body":{"classes/Context.html":{}}}],["claim",{"_index":1136,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classbuilder",{"_index":796,"title":{"classes/classBuilder.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classconfig",{"_index":783,"title":{"interfaces/classConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["classname",{"_index":501,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["clear",{"_index":801,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["clientx",{"_index":354,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{}}}],["clienty",{"_index":355,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{}}}],["clone",{"_index":458,"title":{},"body":{"classes/ModuleItem.html":{}}}],["code",{"_index":996,"title":{},"body":{"index.html":{}}}],["col",{"_index":339,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":190,"title":{},"body":{"classes/ColorRef.html":{},"classes/GeometryMixin.html":{},"dependencies.html":{},"index.html":{}}}],["color(appearancetype",{"_index":196,"title":{},"body":{"classes/ColorRef.html":{}}}],["color.ts",{"_index":901,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["colorref",{"_index":184,"title":{"classes/ColorRef.html":{}},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["column",{"_index":687,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["common",{"_index":1032,"title":{},"body":{"index.html":{}}}],["community",{"_index":994,"title":{},"body":{"index.html":{}}}],["comp",{"_index":524,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["compilation",{"_index":1051,"title":{},"body":{"index.html":{}}}],["compile",{"_index":1047,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":1067,"title":{},"body":{"index.html":{}}}],["completed",{"_index":852,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["component",{"_index":536,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["components",{"_index":1034,"title":{},"body":{"index.html":{}}}],["concrete",{"_index":989,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1114,"title":{},"body":{"license.html":{}}}],["config",{"_index":85,"title":{},"body":{"classes/App.html":{},"classes/classBuilder.html":{}}}],["config.workbench",{"_index":104,"title":{},"body":{"classes/App.html":{}}}],["configs",{"_index":870,"title":{},"body":{"classes/classBuilder.html":{}}}],["configs.foreach((config",{"_index":799,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["configured",{"_index":1063,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1144,"title":{},"body":{"license.html":{}}}],["const",{"_index":99,"title":{},"body":{"classes/App.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/Rectangle.html":{},"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/ModuleFactory.html":{},"classes/Rectangle.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["constructor(@inject('modulefactory",{"_index":829,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["constructor(anycolor",{"_index":191,"title":{},"body":{"classes/ColorRef.html":{}}}],["constructor(ck",{"_index":212,"title":{},"body":{"classes/Context.html":{}}}],["constructor(configs",{"_index":798,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["constructor(container",{"_index":441,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["constructor(context",{"_index":546,"title":{},"body":{"classes/Rectangle.html":{}}}],["constructor(groupmenuservice",{"_index":174,"title":{},"body":{"classes/BaseMenu.html":{}}}],["constructor(modulefactory",{"_index":812,"title":{},"body":{"classes/Workbench.html":{}}}],["constructor(private",{"_index":88,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SplitBoardController.html":{}}}],["constructor(root",{"_index":27,"title":{},"body":{"classes/App.html":{},"classes/View.html":{}}}],["constructor(view",{"_index":620,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["container",{"_index":10,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["containermodule",{"_index":157,"title":{},"body":{"classes/AppearanceService.html":{}}}],["contentview",{"_index":456,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["contentview.classlist.add('flex",{"_index":729,"title":{},"body":{"classes/SplitItemView.html":{}}}],["context",{"_index":11,"title":{"classes/Context.html":{}},"body":{"classes/App.html":{},"classes/Base.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/Rectangle.html":{},"coverage.html":{}}}],["contextisolation",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":1140,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1082,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":1079,"title":{},"body":{"index.html":{}}}],["controlaccentcolor",{"_index":906,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlbackgroundcolor",{"_index":907,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controldisabledcolor",{"_index":908,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlforbiddencolor",{"_index":909,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlhighlightcolor",{"_index":910,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":65,"title":{"classes/Controller.html":{}},"body":{"classes/App.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["controller:10",{"_index":383,"title":{},"body":{"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:12",{"_index":534,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:14",{"_index":385,"title":{},"body":{"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:16",{"_index":381,"title":{},"body":{"classes/MenuBar.html":{}}}],["controller:17",{"_index":384,"title":{},"body":{"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:23",{"_index":382,"title":{},"body":{"classes/MenuBar.html":{}}}],["controller:24",{"_index":535,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["controller:28",{"_index":824,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:47",{"_index":827,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:61",{"_index":825,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:65",{"_index":828,"title":{},"body":{"classes/Workbench.html":{}}}],["controller:68",{"_index":826,"title":{},"body":{"classes/Workbench.html":{}}}],["copies",{"_index":1108,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1095,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1085,"title":{},"body":{"license.html":{}}}],["corner",{"_index":259,"title":{},"body":{"classes/DefaultShapeMixin.html":{}}}],["cornermixin",{"_index":244,"title":{"classes/CornerMixin.html":{}},"body":{"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{}}}],["cornerradius",{"_index":246,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["cosmic",{"_index":985,"title":{},"body":{"index.html":{}}}],["cosmic/core/browser",{"_index":66,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["cosmic/core/common",{"_index":62,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{}}}],["cosmic/core/parts",{"_index":64,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["cosmic/workbench/services/appearance",{"_index":68,"title":{},"body":{"classes/App.html":{}}}],["cosmic/workbench/services/menu",{"_index":71,"title":{},"body":{"classes/App.html":{}}}],["coverage",{"_index":876,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createwindow",{"_index":882,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["crosshair",{"_index":346,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["current",{"_index":1068,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":807,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["d00000",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d1905d",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d2r",{"_index":991,"title":{},"body":{"index.html":{}}}],["d7d7d7",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d9d9d9",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":1137,"title":{},"body":{"license.html":{}}}],["dark",{"_index":118,"title":{},"body":{"classes/App.html":{},"miscellaneous/enumerations.html":{}}}],["dark:bg",{"_index":478,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["darkcolor",{"_index":188,"title":{},"body":{"classes/ColorRef.html":{}}}],["darkcolorhex",{"_index":981,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dashpattern",{"_index":297,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["date.now",{"_index":392,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["deal",{"_index":1098,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1145,"title":{},"body":{"license.html":{}}}],["debugging",{"_index":1070,"title":{},"body":{"index.html":{}}}],["default",{"_index":38,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":322,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["defaultscope",{"_index":90,"title":{},"body":{"classes/App.html":{}}}],["defaultshapemixin",{"_index":254,"title":{"classes/DefaultShapeMixin.html":{}},"body":{"classes/DefaultShapeMixin.html":{},"classes/Rectangle.html":{},"coverage.html":{}}}],["defaultweightmap",{"_index":786,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["dependencies",{"_index":944,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["design",{"_index":986,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":369,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["dev",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["develop",{"_index":992,"title":{},"body":{"index.html":{}}}],["development",{"_index":1001,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":327,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["directionstyles",{"_index":724,"title":{},"body":{"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["directionstyles[direction",{"_index":748,"title":{},"body":{"classes/SplitItemView.html":{}}}],["directiontype",{"_index":334,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["directiontype.col",{"_index":685,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["directiontype.row",{"_index":691,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["directiontype[props.type",{"_index":836,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["disabled",{"_index":795,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["disappear",{"_index":243,"title":{},"body":{"classes/Controller.html":{}}}],["dist/workbench/desktop",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":1073,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribution",{"_index":1053,"title":{},"body":{"index.html":{}}}],["divided",{"_index":1024,"title":{},"body":{"index.html":{}}}],["document.body.classlist.add('mode",{"_index":117,"title":{},"body":{"classes/App.html":{}}}],["document.body.classlist.remove('mode",{"_index":119,"title":{},"body":{"classes/App.html":{}}}],["document.createelement('div",{"_index":390,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/SvelteModule.html":{},"classes/View.html":{}}}],["document.queryselector('#main",{"_index":128,"title":{},"body":{"classes/App.html":{}}}],["documentation",{"_index":877,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":240,"title":{},"body":{"classes/Controller.html":{}}}],["draft",{"_index":1077,"title":{},"body":{"index.html":{}}}],["draw",{"_index":210,"title":{},"body":{"classes/Context.html":{},"classes/Rectangle.html":{}}}],["e",{"_index":347,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["e0e0e0",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":1028,"title":{},"body":{"index.html":{}}}],["electron",{"_index":319,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{},"index.html":{}}}],["electron/.exec(process.execpath",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["electronstore",{"_index":318,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":239,"title":{},"body":{"classes/Controller.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["enableremotemodule",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entire",{"_index":1022,"title":{},"body":{"index.html":{}}}],["enum",{"_index":338,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitItemView.html":{}}}],["enumerations",{"_index":967,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["es",{"_index":413,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["event",{"_index":639,"title":{},"body":{"classes/SplitBoardController.html":{},"license.html":{}}}],["event.clientx",{"_index":664,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.clienty",{"_index":651,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.preventdefault",{"_index":665,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.stoppropagation",{"_index":666,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.target",{"_index":658,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["eventemitter2",{"_index":146,"title":{},"body":{"classes/AppearanceService.html":{},"dependencies.html":{}}}],["everyone",{"_index":1004,"title":{},"body":{"index.html":{}}}],["evt",{"_index":141,"title":{},"body":{"classes/AppearanceService.html":{}}}],["exist",{"_index":439,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["exist(moduleid",{"_index":429,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["expand",{"_index":457,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{}}}],["expand.svelte",{"_index":723,"title":{},"body":{"classes/SplitItemView.html":{}}}],["expandactive",{"_index":607,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandleavehandler",{"_index":608,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmouseuphandler",{"_index":609,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmovehandler",{"_index":610,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandnewitem",{"_index":342,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/Workbench.html":{}}}],["expandnewitem(view",{"_index":818,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["expandtype",{"_index":611,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["explorer/index.ts",{"_index":599,"title":{},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["export",{"_index":87,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["express",{"_index":1124,"title":{},"body":{"license.html":{}}}],["extends",{"_index":264,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["f2f2f2",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f9f9f9",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factory.ts",{"_index":408,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"coverage.html":{}}}],["factory.ts:11",{"_index":442,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:13",{"_index":443,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:14",{"_index":444,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:30",{"_index":447,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:33",{"_index":446,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["factory.ts:36",{"_index":448,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["false",{"_index":323,"title":{},"body":{"interfaces/ISettings.html":{},"classes/SplitBoardController.html":{},"miscellaneous/variables.html":{}}}],["ffae2b",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["file://${join(__dirname",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":1074,"title":{},"body":{"index.html":{},"license.html":{}}}],["fills",{"_index":267,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{}}}],["fillstyleid",{"_index":299,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["fitness",{"_index":1129,"title":{},"body":{"license.html":{}}}],["flex",{"_index":502,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["flowvalue",{"_index":516,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["fn",{"_index":150,"title":{},"body":{"classes/AppearanceService.html":{}}}],["focus",{"_index":789,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":1113,"title":{},"body":{"license.html":{}}}],["fourthbgcolor",{"_index":911,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":1091,"title":{},"body":{"license.html":{}}}],["function",{"_index":151,"title":{},"body":{"classes/AppearanceService.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/Module.html":{},"classes/SplitBoardController.html":{},"coverage.html":{}}}],["functions",{"_index":973,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1111,"title":{},"body":{"license.html":{}}}],["geometry",{"_index":263,"title":{},"body":{"classes/DefaultShapeMixin.html":{}}}],["geometrymixin",{"_index":262,"title":{"classes/GeometryMixin.html":{}},"body":{"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"coverage.html":{}}}],["get(moduleid",{"_index":427,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["getbackground",{"_index":285,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["getborderraidus",{"_index":562,"title":{},"body":{"classes/Rectangle.html":{}}}],["getcanvas",{"_index":211,"title":{},"body":{"classes/Context.html":{}}}],["getcanvaskit",{"_index":933,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getheight",{"_index":558,"title":{},"body":{"classes/Rectangle.html":{}}}],["getting",{"_index":983,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwidth",{"_index":554,"title":{},"body":{"classes/Rectangle.html":{}}}],["github",{"_index":1071,"title":{},"body":{"index.html":{}}}],["going",{"_index":236,"title":{},"body":{"classes/Controller.html":{}}}],["granted",{"_index":1090,"title":{},"body":{"license.html":{}}}],["gridbackgroundcolor",{"_index":912,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":72,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["group/base",{"_index":170,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["group/index.ts",{"_index":365,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["group/index.ts:13",{"_index":374,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:15",{"_index":372,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:19",{"_index":378,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:28",{"_index":379,"title":{},"body":{"classes/MenuBar.html":{}}}],["group/index.ts:31",{"_index":375,"title":{},"body":{"classes/MenuBar.html":{}}}],["groupmenu",{"_index":129,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.getmenuinsatance().init(menu.title",{"_index":133,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.initcontainer(header",{"_index":131,"title":{},"body":{"classes/App.html":{}}}],["groupmenuservice",{"_index":176,"title":{},"body":{"classes/BaseMenu.html":{}}}],["grow",{"_index":503,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["guide",{"_index":1002,"title":{},"body":{"index.html":{}}}],["handle",{"_index":589,"title":{},"body":{"classes/Rectangle.html":{}}}],["header",{"_index":127,"title":{},"body":{"classes/App.html":{}}}],["height",{"_index":363,"title":{},"body":{"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"miscellaneous/variables.html":{}}}],["height(height",{"_index":574,"title":{},"body":{"classes/Rectangle.html":{}}}],["here",{"_index":998,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1089,"title":{},"body":{"license.html":{}}}],["hexdigits",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hide",{"_index":491,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["hideexpandbutton",{"_index":461,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["holders",{"_index":1134,"title":{},"body":{"license.html":{}}}],["hor",{"_index":643,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["horizontal",{"_index":686,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["host",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hover",{"_index":791,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["htmlelement",{"_index":28,"title":{},"body":{"classes/App.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{}}}],["http://localhost:5000/workbench/desktop",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":391,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["identifier",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":366,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Rectangle.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["implied",{"_index":1125,"title":{},"body":{"license.html":{}}}],["import",{"_index":60,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["import(moduleid).then((modulesource",{"_index":432,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["include",{"_index":1031,"title":{},"body":{"index.html":{}}}],["included",{"_index":1118,"title":{},"body":{"license.html":{}}}],["including",{"_index":1101,"title":{},"body":{"license.html":{}}}],["independently",{"_index":1029,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index.svelte",{"_index":537,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["indexable",{"_index":781,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["ing",{"_index":987,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":283,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{}}}],["init",{"_index":370,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{}}}],["init(props",{"_index":377,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["initframe",{"_index":15,"title":{},"body":{"classes/App.html":{}}}],["initial",{"_index":772,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["initmenu",{"_index":173,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenu(menuitems",{"_index":177,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenus",{"_index":16,"title":{},"body":{"classes/App.html":{}}}],["initmodules",{"_index":17,"title":{},"body":{"classes/App.html":{}}}],["initnavigationbar",{"_index":18,"title":{},"body":{"classes/App.html":{}}}],["initpreferences",{"_index":19,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel",{"_index":20,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel(container",{"_index":50,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel",{"_index":21,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel(container",{"_index":52,"title":{},"body":{"classes/App.html":{}}}],["initstatusbar",{"_index":22,"title":{},"body":{"classes/App.html":{}}}],["initstyle",{"_index":23,"title":{},"body":{"classes/App.html":{}}}],["initstylemode",{"_index":24,"title":{},"body":{"classes/App.html":{}}}],["initstylemode(type",{"_index":56,"title":{},"body":{"classes/App.html":{}}}],["initwithcomponent",{"_index":525,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["initwithcomponent(target",{"_index":530,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["initworkarea",{"_index":25,"title":{},"body":{"classes/App.html":{}}}],["inject",{"_index":156,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject(token",{"_index":977,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":155,"title":{},"body":{"classes/AppearanceService.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["insertconfig",{"_index":867,"title":{},"body":{"classes/classBuilder.html":{}}}],["insertconfig(config",{"_index":804,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["inside",{"_index":277,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["instanceof",{"_index":105,"title":{},"body":{"classes/App.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["interface",{"_index":312,"title":{"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/WorkbenchProps.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}},"body":{"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["interfaces",{"_index":314,"title":{},"body":{"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/WorkbenchProps.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["inversify",{"_index":61,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"dependencies.html":{}}}],["ipc",{"_index":1036,"title":{},"body":{"index.html":{}}}],["isettings",{"_index":313,"title":{"interfaces/ISettings.html":{}},"body":{"interfaces/ISettings.html":{},"coverage.html":{}}}],["isplitboardview",{"_index":324,"title":{"interfaces/ISplitBoardView.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{},"coverage.html":{}}}],["isprod",{"_index":884,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isshrink",{"_index":462,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["issues",{"_index":997,"title":{},"body":{"index.html":{}}}],["item",{"_index":518,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.id",{"_index":400,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["item.loader",{"_index":839,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.loader.then((module",{"_index":847,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.module",{"_index":861,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.moduleid",{"_index":519,"title":{},"body":{"classes/ModuleItem.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.root",{"_index":660,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientheight",{"_index":694,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientwidth",{"_index":690,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.getboundingclientrect().left",{"_index":689,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.getboundingclientrect().top",{"_index":693,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.setcontent(module.view",{"_index":862,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["item.ts",{"_index":451,"title":{},"body":{"classes/ModuleItem.html":{},"coverage.html":{}}}],["item.ts:5",{"_index":472,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.ts:6",{"_index":474,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.ts:7",{"_index":473,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.ts:8",{"_index":487,"title":{},"body":{"classes/ModuleItem.html":{}}}],["item.view",{"_index":337,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["item.view.ts",{"_index":707,"title":{},"body":{"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["item.view.ts:12",{"_index":710,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:13",{"_index":711,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:14",{"_index":709,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:16",{"_index":712,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:17",{"_index":708,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:25",{"_index":718,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:32",{"_index":717,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:39",{"_index":720,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:46",{"_index":721,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:53",{"_index":716,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:57",{"_index":719,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:63",{"_index":713,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:67",{"_index":715,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:71",{"_index":722,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:77",{"_index":714,"title":{},"body":{"classes/SplitItemView.html":{}}}],["itemgeneratedelegate",{"_index":341,"title":{"interfaces/ItemGenerateDelegate.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["items",{"_index":328,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["join(__dirname",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keycode",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["kind",{"_index":1123,"title":{},"body":{"license.html":{}}}],["kit.ts",{"_index":932,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["labelcolor",{"_index":913,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["layout",{"_index":261,"title":{},"body":{"classes/DefaultShapeMixin.html":{}}}],["layoutmixin",{"_index":260,"title":{"classes/LayoutMixin.html":{}},"body":{"classes/DefaultShapeMixin.html":{},"classes/LayoutMixin.html":{},"coverage.html":{}}}],["left",{"_index":577,"title":{},"body":{"classes/Rectangle.html":{}}}],["length",{"_index":352,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["liability",{"_index":1138,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1135,"title":{},"body":{"license.html":{}}}],["license",{"_index":1008,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["light",{"_index":972,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lightcolor",{"_index":189,"title":{},"body":{"classes/ColorRef.html":{}}}],["lightcolorhex",{"_index":980,"title":{},"body":{"miscellaneous/functions.html":{}}}],["limitation",{"_index":1102,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1126,"title":{},"body":{"license.html":{}}}],["linux",{"_index":1056,"title":{},"body":{"index.html":{}}}],["liveresize",{"_index":616,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["liveresize(clientx",{"_index":634,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["load",{"_index":440,"title":{},"body":{"classes/ModuleFactory.html":{}}}],["load(moduleid",{"_index":431,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["loader",{"_index":452,"title":{},"body":{"classes/ModuleItem.html":{}}}],["loading",{"_index":403,"title":{},"body":{"interfaces/Module.html":{}}}],["local",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":949,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":888,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error(json.stringify(err",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lowboardroot",{"_index":897,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":421,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.inrequestscope",{"_index":426,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.insingletonscope",{"_index":423,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["m.intransientscope",{"_index":425,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["macos",{"_index":1054,"title":{},"body":{"index.html":{}}}],["main",{"_index":1038,"title":{},"body":{"index.html":{}}}],["mainwindow",{"_index":885,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mainwindow.loadurl(url).catch((err",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.on('closed",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.webcontents.opendevtools",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor",{"_index":902,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makecolor('#000000",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#3f3f3f",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#5580c0",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#729cd4",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#bababa",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c0c0c1",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c4666f",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c6c6c6",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d00000",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d1905d",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d7d7d7",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d9d9d9",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#e0e0e0",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f2f2f2",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f9f9f9",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffae2b",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffffff",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor(anycolorhex",{"_index":979,"title":{},"body":{"miscellaneous/functions.html":{}}}],["map",{"_index":41,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["matching",{"_index":136,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":132,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["menu(this._view",{"_index":394,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["menu.id",{"_index":401,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["menu.items",{"_index":134,"title":{},"body":{"classes/App.html":{}}}],["menu.ts",{"_index":171,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["menu.ts:5",{"_index":175,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu.ts:8",{"_index":179,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu/config",{"_index":75,"title":{},"body":{"classes/App.html":{}}}],["menubar",{"_index":364,"title":{"classes/MenuBar.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["menugroupservice",{"_index":70,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["menuinstance",{"_index":172,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuitemconfig",{"_index":178,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuitems",{"_index":180,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuprops",{"_index":373,"title":{"interfaces/MenuProps.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["merchantability",{"_index":1128,"title":{},"body":{"license.html":{}}}],["merge",{"_index":647,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["metadata",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":12,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{}}}],["meuns",{"_index":388,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["minimum",{"_index":1012,"title":{},"body":{"index.html":{}}}],["minwidth",{"_index":822,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["miscellaneous",{"_index":966,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1007,"title":{},"body":{"index.html":{},"license.html":{}}}],["mixer",{"_index":258,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"classes/Rectangle.html":{},"dependencies.html":{}}}],["mixin",{"_index":256,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"classes/Rectangle.html":{}}}],["mixin(cornermixin",{"_index":265,"title":{},"body":{"classes/DefaultShapeMixin.html":{}}}],["mixin(defaultshapemixin",{"_index":568,"title":{},"body":{"classes/Rectangle.html":{}}}],["mixin/shape",{"_index":567,"title":{},"body":{"classes/Rectangle.html":{}}}],["mode",{"_index":697,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["modify",{"_index":1104,"title":{},"body":{"license.html":{}}}],["module",{"_index":367,"title":{"interfaces/Module.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["module.init(props",{"_index":437,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["module.ts",{"_index":751,"title":{},"body":{"classes/SvelteModule.html":{},"coverage.html":{}}}],["module.ts:10",{"_index":754,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:16",{"_index":756,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:22",{"_index":757,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:28",{"_index":755,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:36",{"_index":758,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:8",{"_index":753,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.ts:9",{"_index":752,"title":{},"body":{"classes/SvelteModule.html":{}}}],["module.viewdiddisappear",{"_index":851,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["module.viewwillappear",{"_index":850,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["moduleconfig",{"_index":386,"title":{"interfaces/ModuleConfig.html":{}},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modulefactory",{"_index":63,"title":{"classes/ModuleFactory.html":{}},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modulefactory(this.container",{"_index":100,"title":{},"body":{"classes/App.html":{}}}],["modulefactory.load(config.workbench.id",{"_index":103,"title":{},"body":{"classes/App.html":{}}}],["moduleid",{"_index":445,"title":{},"body":{"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{}}}],["moduleitem",{"_index":449,"title":{"classes/ModuleItem.html":{}},"body":{"classes/ModuleItem.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["modules",{"_index":414,"title":{"modules.html":{}},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"index.html":{},"modules.html":{}}}],["modulesource.default",{"_index":434,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["monorepo",{"_index":1021,"title":{},"body":{"index.html":{}}}],["more",{"_index":302,"title":{},"body":{"classes/GeometryMixin.html":{},"index.html":{}}}],["mousedown",{"_index":667,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["mouseevent",{"_index":637,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["n",{"_index":350,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":33,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["navigation",{"_index":76,"title":{},"body":{"classes/App.html":{}}}],["navigationbar",{"_index":121,"title":{},"body":{"classes/App.html":{}}}],["new",{"_index":40,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1048,"title":{},"body":{"index.html":{}}}],["none",{"_index":773,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["noninfringement",{"_index":1132,"title":{},"body":{"license.html":{}}}],["normalizeweight",{"_index":868,"title":{},"body":{"classes/classBuilder.html":{}}}],["normalizeweight(config",{"_index":874,"title":{},"body":{"classes/classBuilder.html":{}}}],["nothing",{"_index":1016,"title":{},"body":{"index.html":{}}}],["notice",{"_index":1116,"title":{},"body":{"license.html":{}}}],["notification",{"_index":886,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":1062,"title":{},"body":{"index.html":{}}}],["null",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":247,"title":{},"body":{"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/SplitBoardController.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":1094,"title":{},"body":{"license.html":{}}}],["offsetx",{"_index":695,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["offsety",{"_index":696,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["olditem",{"_index":343,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["onmodechanged",{"_index":143,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmodechanged(fn",{"_index":148,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmousedown",{"_index":617,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["onmousedown(event",{"_index":636,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["optional",{"_index":35,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{}}}],["options",{"_index":405,"title":{},"body":{"interfaces/Module.html":{}}}],["orderedconfigs",{"_index":797,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["organization",{"_index":1083,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1142,"title":{},"body":{"license.html":{}}}],["out",{"_index":1058,"title":{},"body":{"index.html":{},"license.html":{}}}],["outside",{"_index":278,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["overview",{"_index":1146,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":837,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["p.id",{"_index":841,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["package",{"_index":943,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":1026,"title":{},"body":{"index.html":{}}}],["packaging",{"_index":1050,"title":{},"body":{"index.html":{}}}],["page",{"_index":1044,"title":{},"body":{"index.html":{}}}],["paint",{"_index":274,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{}}}],["paint.setantialias(true",{"_index":310,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["paint.setcolor(color",{"_index":308,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["paint.setstyle(this.context.ck.paintstyle.fill",{"_index":309,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["panel/index.ts",{"_index":522,"title":{},"body":{"classes/PropertyPanel.html":{},"coverage.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":1130,"title":{},"body":{"license.html":{}}}],["path",{"_index":549,"title":{},"body":{"classes/Rectangle.html":{}}}],["permission",{"_index":1088,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1109,"title":{},"body":{"license.html":{}}}],["person",{"_index":1093,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1110,"title":{},"body":{"license.html":{}}}],["platform",{"_index":1069,"title":{},"body":{"index.html":{}}}],["pluginapi['mixed",{"_index":295,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["port",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":1120,"title":{},"body":{"license.html":{}}}],["position",{"_index":353,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["possible",{"_index":1066,"title":{},"body":{"index.html":{}}}],["practice",{"_index":990,"title":{},"body":{"index.html":{}}}],["preload",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preload.js",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepend",{"_index":470,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["prepend(...childs",{"_index":512,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["private",{"_index":9,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["process.env.node_env",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":1023,"title":{},"body":{"index.html":{}}}],["project",{"_index":1017,"title":{},"body":{"index.html":{}}}],["promise",{"_index":406,"title":{},"body":{"interfaces/Module.html":{},"classes/ModuleItem.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["propertypanel",{"_index":83,"title":{"classes/PropertyPanel.html":{}},"body":{"classes/App.html":{},"classes/PropertyPanel.html":{},"coverage.html":{}}}],["props",{"_index":124,"title":{},"body":{"classes/App.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.modules",{"_index":838,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.scale",{"_index":844,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["props.scope",{"_index":435,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["protected",{"_index":165,"title":{},"body":{"classes/Base.html":{},"classes/GeometryMixin.html":{}}}],["provided",{"_index":1121,"title":{},"body":{"license.html":{}}}],["provides",{"_index":409,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["public",{"_index":142,"title":{},"body":{"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["publish",{"_index":999,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":1131,"title":{},"body":{"license.html":{}}}],["qiansc",{"_index":1087,"title":{},"body":{"license.html":{}}}],["quickly",{"_index":1065,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":361,"title":{},"body":{"classes/LayoutMixin.html":{},"classes/Rectangle.html":{}}}],["readonlyarray",{"_index":298,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["ready",{"_index":1052,"title":{},"body":{"index.html":{}}}],["rect",{"_index":543,"title":{},"body":{"classes/Rectangle.html":{}}}],["rectangle",{"_index":538,"title":{"classes/Rectangle.html":{}},"body":{"classes/Rectangle.html":{},"coverage.html":{}}}],["rectanglecornermixin",{"_index":249,"title":{"classes/RectangleCornerMixin.html":{}},"body":{"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{}}}],["rectanglenode",{"_index":540,"title":{},"body":{"classes/Rectangle.html":{}}}],["ref.ts",{"_index":186,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["ref.ts:15",{"_index":197,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:5",{"_index":194,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:6",{"_index":195,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:7",{"_index":192,"title":{},"body":{"classes/ColorRef.html":{}}}],["reflect",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["release",{"_index":1078,"title":{},"body":{"index.html":{}}}],["remove(menu",{"_index":396,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["render",{"_index":237,"title":{},"body":{"classes/Controller.html":{}}}],["replacecontent",{"_index":463,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["replacecontent(contentview",{"_index":494,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["repository",{"_index":988,"title":{},"body":{"index.html":{}}}],["request",{"_index":418,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["require('/node_modules/canvaskit",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1011,"title":{},"body":{"index.html":{}}}],["resize",{"_index":345,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{}}}],["resizeat",{"_index":329,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["resourceexplorer",{"_index":597,"title":{"classes/ResourceExplorer.html":{}},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["resourcepage",{"_index":81,"title":{},"body":{"classes/App.html":{}}}],["resoures",{"_index":404,"title":{},"body":{"interfaces/Module.html":{}}}],["restriction",{"_index":1100,"title":{},"body":{"license.html":{}}}],["result",{"_index":135,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":137,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":161,"title":{},"body":{"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["returns",{"_index":43,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":581,"title":{},"body":{"classes/Rectangle.html":{}}}],["rights",{"_index":1103,"title":{},"body":{"license.html":{}}}],["roadmap",{"_index":1000,"title":{},"body":{"index.html":{}}}],["rollup",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":36,"title":{},"body":{"classes/App.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["rounded",{"_index":739,"title":{},"body":{"classes/SplitItemView.html":{}}}],["row",{"_index":340,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"miscellaneous/enumerations.html":{}}}],["rrect",{"_index":583,"title":{},"body":{"classes/Rectangle.html":{}}}],["run",{"_index":412,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"index.html":{}}}],["s",{"_index":349,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["scale",{"_index":823,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["scope",{"_index":416,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["script",{"_index":1039,"title":{},"body":{"index.html":{}}}],["secondarybgcolor",{"_index":914,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["secondarylabelcolor",{"_index":915,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":1080,"title":{},"body":{"index.html":{}}}],["sell",{"_index":1107,"title":{},"body":{"license.html":{}}}],["serialize",{"_index":371,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["server",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":69,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["service.ts",{"_index":139,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":147,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:12",{"_index":154,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:18",{"_index":149,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:21",{"_index":152,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:9",{"_index":145,"title":{},"body":{"classes/AppearanceService.html":{}}}],["set",{"_index":304,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{},"index.html":{}}}],["setactivestate",{"_index":618,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setactivestate(index",{"_index":640,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setbackground(background",{"_index":287,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["setborderraidus(borderraidus",{"_index":564,"title":{},"body":{"classes/Rectangle.html":{}}}],["setcontent",{"_index":464,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setcontent(contentview",{"_index":496,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setcursor",{"_index":330,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["setdefaultclass",{"_index":465,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setflow",{"_index":471,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setflow(type",{"_index":515,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setgrow",{"_index":466,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setgrow(classname",{"_index":499,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setheight(height",{"_index":560,"title":{},"body":{"classes/Rectangle.html":{}}}],["setshrink",{"_index":467,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["setshrink(classname",{"_index":504,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["settings",{"_index":321,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setwidth(width",{"_index":556,"title":{},"body":{"classes/Rectangle.html":{}}}],["shall",{"_index":1117,"title":{},"body":{"license.html":{}}}],["shapecanvas",{"_index":600,"title":{"classes/ShapeCanvas.html":{}},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["shrink",{"_index":506,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["similar",{"_index":1020,"title":{},"body":{"index.html":{}}}],["singleton",{"_index":91,"title":{},"body":{"classes/App.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["smelte",{"_index":961,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":1096,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["split",{"_index":336,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/SplitItemView.html":{}}}],["split.js",{"_index":963,"title":{},"body":{"dependencies.html":{}}}],["splitboard",{"_index":811,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["splitboardcontroller",{"_index":603,"title":{"classes/SplitBoardController.html":{}},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["splitboardview",{"_index":387,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["splitboardview>().setflow('1",{"_index":831,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["splitcolumnat",{"_index":331,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["splitexpand",{"_index":484,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["splititemview",{"_index":335,"title":{"classes/SplitItemView.html":{}},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitItemView.html":{},"coverage.html":{}}}],["splititemview:12",{"_index":481,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:13",{"_index":482,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:14",{"_index":480,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:16",{"_index":483,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:17",{"_index":485,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:25",{"_index":497,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:32",{"_index":495,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:39",{"_index":500,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:46",{"_index":505,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:53",{"_index":493,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:57",{"_index":498,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:63",{"_index":488,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:67",{"_index":490,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:71",{"_index":508,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splititemview:77",{"_index":489,"title":{},"body":{"classes/ModuleItem.html":{}}}],["splitrowat",{"_index":332,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["src/.../appearance.ts",{"_index":968,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../canvas",{"_index":974,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../class",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inject.ts",{"_index":975,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.ts",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settings.ts",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../split",{"_index":969,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../type.ts",{"_index":970,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../ui",{"_index":976,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../uuid.ts",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../view.ts",{"_index":1151,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app",{"_index":1037,"title":{},"body":{"index.html":{}}}],["src/app/index.ts",{"_index":880,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/logger.ts",{"_index":887,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/settings.ts",{"_index":315,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core",{"_index":1030,"title":{},"body":{"index.html":{}}}],["src/core/browser/class",{"_index":779,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/controller.ts",{"_index":225,"title":{},"body":{"classes/Controller.html":{},"coverage.html":{}}}],["src/core/browser/controller.ts:10",{"_index":232,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:14",{"_index":235,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:17",{"_index":233,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:5",{"_index":231,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/controller.ts:7",{"_index":234,"title":{},"body":{"classes/Controller.html":{}}}],["src/core/browser/layout/split",{"_index":604,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/layout/type.ts",{"_index":325,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/browser/style/ui",{"_index":900,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/view.ts",{"_index":766,"title":{},"body":{"classes/View.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/browser/view.ts:13",{"_index":768,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:17",{"_index":769,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:4",{"_index":767,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:8",{"_index":770,"title":{},"body":{"classes/View.html":{}}}],["src/core/common/appearance.ts",{"_index":971,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/common/color",{"_index":185,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["src/core/common/uuid.ts",{"_index":925,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/components",{"_index":1046,"title":{},"body":{"index.html":{}}}],["src/core/parts/ioc/inject.ts",{"_index":927,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/core/parts/modules/module",{"_index":407,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"coverage.html":{}}}],["src/core/parts/modules/module.ts",{"_index":402,"title":{},"body":{"interfaces/Module.html":{},"coverage.html":{}}}],["src/core/parts/modules/svelte",{"_index":750,"title":{},"body":{"classes/SvelteModule.html":{},"coverage.html":{}}}],["src/modules",{"_index":1040,"title":{},"body":{"index.html":{}}}],["src/modules/draw",{"_index":162,"title":{},"body":{"classes/Base.html":{},"classes/Context.html":{},"classes/CornerMixin.html":{},"classes/DefaultShapeMixin.html":{},"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/modules/menu",{"_index":169,"title":{},"body":{"classes/BaseMenu.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"coverage.html":{}}}],["src/modules/property",{"_index":521,"title":{},"body":{"classes/PropertyPanel.html":{},"coverage.html":{}}}],["src/modules/resource",{"_index":598,"title":{},"body":{"classes/ResourceExplorer.html":{},"coverage.html":{}}}],["src/modules/shape",{"_index":601,"title":{},"body":{"classes/ShapeCanvas.html":{},"coverage.html":{}}}],["src/modules/workbench/index.ts",{"_index":810,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["src/modules/workbench/index.ts:19",{"_index":815,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:20",{"_index":816,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:21",{"_index":813,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:31",{"_index":820,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:72",{"_index":817,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:81",{"_index":819,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/index.ts:95",{"_index":821,"title":{},"body":{"classes/Workbench.html":{}}}],["src/modules/workbench/module",{"_index":450,"title":{},"body":{"classes/ModuleItem.html":{},"coverage.html":{}}}],["src/workbench",{"_index":1042,"title":{},"body":{"index.html":{}}}],["src/workbench/desktop/app.ts",{"_index":6,"title":{},"body":{"classes/App.html":{},"coverage.html":{}}}],["src/workbench/desktop/app.ts:103",{"_index":54,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:16",{"_index":37,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:17",{"_index":30,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:24",{"_index":42,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:30",{"_index":47,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:42",{"_index":49,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:47",{"_index":55,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:52",{"_index":58,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:60",{"_index":44,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:64",{"_index":48,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:74",{"_index":46,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:83",{"_index":53,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:91",{"_index":51,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:99",{"_index":59,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/main.ts",{"_index":940,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/services/appearance",{"_index":138,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["standard",{"_index":1006,"title":{},"body":{"index.html":{}}}],["start",{"_index":351,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["started",{"_index":984,"title":{"index.html":{},"license.html":{}},"body":{}}],["startx",{"_index":612,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["starty",{"_index":613,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["stateconfig",{"_index":784,"title":{"interfaces/stateConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["statements",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["statically",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statusbar",{"_index":79,"title":{},"body":{"classes/App.html":{}}}],["step",{"_index":1049,"title":{},"body":{"index.html":{}}}],["sth",{"_index":120,"title":{},"body":{"classes/App.html":{}}}],["store",{"_index":320,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{}}}],["storybook",{"_index":1045,"title":{},"body":{"index.html":{}}}],["string",{"_index":288,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/Rectangle.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":291,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/Rectangle.html":{}}}],["strokealign",{"_index":268,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokecap",{"_index":294,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokejoin",{"_index":296,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokemiterlimit",{"_index":269,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokes",{"_index":270,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokestyleid",{"_index":300,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["strokeweight",{"_index":271,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["structure",{"_index":1018,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1112,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1105,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1119,"title":{},"body":{"license.html":{}}}],["such",{"_index":1033,"title":{},"body":{"index.html":{}}}],["super",{"_index":569,"title":{},"body":{"classes/Rectangle.html":{},"classes/SplitItemView.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["support",{"_index":292,"title":{},"body":{"classes/GeometryMixin.html":{},"index.html":{}}}],["surface",{"_index":209,"title":{},"body":{"classes/Context.html":{}}}],["svelte/internal",{"_index":759,"title":{},"body":{"classes/SvelteModule.html":{}}}],["sveltecomponentdev",{"_index":527,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["sveltemodule",{"_index":523,"title":{"classes/SvelteModule.html":{}},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"coverage.html":{}}}],["sveltemodule:10",{"_index":529,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:16",{"_index":533,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:28",{"_index":532,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:5",{"_index":531,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:8",{"_index":528,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["sveltemodule:9",{"_index":526,"title":{},"body":{"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{}}}],["switch",{"_index":202,"title":{},"body":{"classes/ColorRef.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["symbol.for('flowtableroot",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["systembluecolor",{"_index":916,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemgraycolor",{"_index":917,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemorangecolor",{"_index":918,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systempinkcolor",{"_index":919,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemredcolor",{"_index":920,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemyellowcolor",{"_index":921,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":344,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"interfaces/Module.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{}}}],["table",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":122,"title":{},"body":{"classes/App.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"miscellaneous/variables.html":{}}}],["target.classlist.contains('split",{"_index":662,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["target.parentelement",{"_index":661,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["template",{"_index":1010,"title":{},"body":{"index.html":{}}}],["tertiarybgcolor",{"_index":922,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tertiarylabelcolor",{"_index":923,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["textfieldbackground",{"_index":924,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["this._growclassname",{"_index":734,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._height",{"_index":573,"title":{},"body":{"classes/Rectangle.html":{}}}],["this._shrinkclassname",{"_index":733,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._type",{"_index":158,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this._view",{"_index":389,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/SvelteModule.html":{}}}],["this._view.parentnode",{"_index":764,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this._view.parentnode.removechild(this._view",{"_index":765,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this._view.removechild(menu.container",{"_index":397,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this._width",{"_index":570,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.activeexpand",{"_index":670,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.activeid",{"_index":671,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.add(moduleid",{"_index":433,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.addexpandbutton",{"_index":725,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.anycolor",{"_index":199,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.cancelwaitformerge",{"_index":745,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.canvas",{"_index":222,"title":{},"body":{"classes/Context.html":{}}}],["this.checkexpandstate(event.clientx",{"_index":652,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.ck",{"_index":220,"title":{},"body":{"classes/Context.html":{}}}],["this.comp",{"_index":761,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this.comp.$destroy",{"_index":763,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this.container",{"_index":89,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind('modulefactory').todynamicvalue",{"_index":101,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(appearanceservice).to(appearanceservice",{"_index":109,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(menugroupservice).to(menugroupservice",{"_index":110,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(moduleid).to(module",{"_index":422,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.container.get(appearanceservice",{"_index":112,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(menugroupservice",{"_index":130,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(moduleid",{"_index":436,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.contentview",{"_index":727,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.context",{"_index":125,"title":{},"body":{"classes/App.html":{},"classes/Rectangle.html":{}}}],["this.context.ck.paint",{"_index":306,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.context.ck.parsecolorstring(background",{"_index":307,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.context.ck.path().addrrect(rrect",{"_index":586,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.context.ck.rrectxy([left",{"_index":584,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.context.draw",{"_index":592,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.context.getcanvas().drawpath(this.rect",{"_index":590,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.context.set('container",{"_index":92,"title":{},"body":{"classes/App.html":{}}}],["this.cornerradius",{"_index":575,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.darkcolor",{"_index":201,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.evt.emit('onmodechanged",{"_index":159,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.evt.on('onmodechanged",{"_index":160,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.exist(moduleid",{"_index":419,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.expand",{"_index":743,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.expandhidden",{"_index":744,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.mergedirection",{"_index":747,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expandactive",{"_index":675,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandleavehandler",{"_index":653,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmouseuphandler",{"_index":655,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmovehandler",{"_index":649,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandtype",{"_index":676,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.fills.push(paint",{"_index":311,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.fills.tostring",{"_index":301,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["this.fills[0",{"_index":591,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.groupmenuservice.getmenuinsatance",{"_index":182,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.initmenus",{"_index":126,"title":{},"body":{"classes/App.html":{}}}],["this.initmodules",{"_index":98,"title":{},"body":{"classes/App.html":{}}}],["this.initnavigationbar",{"_index":95,"title":{},"body":{"classes/App.html":{}}}],["this.initpreferences",{"_index":93,"title":{},"body":{"classes/App.html":{}}}],["this.initstatusbar",{"_index":96,"title":{},"body":{"classes/App.html":{}}}],["this.initstyle",{"_index":94,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(appearancetype.dark",{"_index":115,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(type",{"_index":114,"title":{},"body":{"classes/App.html":{}}}],["this.initwithcomponent(this._view",{"_index":762,"title":{},"body":{"classes/SvelteModule.html":{}}}],["this.insertconfig(config",{"_index":800,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.lightcolor",{"_index":200,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.liveresize(event.clientx",{"_index":650,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.menuinstance",{"_index":181,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.menuinstance.init",{"_index":183,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.meuns",{"_index":398,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.meuns.filter((item",{"_index":399,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.meuns.length",{"_index":393,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.meuns.push(menu",{"_index":395,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["this.modulefactory",{"_index":833,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.modulefactory.load(item.moduleid",{"_index":859,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.modulefactory.load(p.id",{"_index":840,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.moduleid",{"_index":520,"title":{},"body":{"classes/ModuleItem.html":{}}}],["this.modules.get(moduleid",{"_index":428,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.modules.has(moduleid",{"_index":430,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.modules.set(moduleid",{"_index":420,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["this.normalizeweight(config",{"_index":806,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.onmousedown(event",{"_index":657,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.orderedconfigs",{"_index":802,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor",{"_index":808,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor].weight",{"_index":809,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.prepend(contentview",{"_index":730,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.props",{"_index":760,"title":{},"body":{"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.props.minwidth",{"_index":864,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.props.scale",{"_index":865,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.props.type",{"_index":863,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.rect",{"_index":585,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.root",{"_index":123,"title":{},"body":{"classes/App.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["this.root.appendchild(child",{"_index":776,"title":{},"body":{"classes/View.html":{}}}],["this.root.appendchild(workbench.view",{"_index":107,"title":{},"body":{"classes/App.html":{}}}],["this.root.classlist.add('flex",{"_index":738,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('relative",{"_index":741,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('split",{"_index":728,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('wait",{"_index":746,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(...this._bgcolorclassname",{"_index":742,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(`flex",{"_index":775,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.add(this._growclassname",{"_index":735,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(this._shrinkclassname",{"_index":737,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove('flex",{"_index":774,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.remove('wait",{"_index":749,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._growclassname",{"_index":736,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._shrinkclassname",{"_index":732,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.prepend(...childs",{"_index":777,"title":{},"body":{"classes/View.html":{}}}],["this.root.replacechild(contentview",{"_index":731,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.setactivestate(index",{"_index":663,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.setdefaultclass",{"_index":726,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.splitboard",{"_index":830,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.additem(item",{"_index":842,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.applysplit",{"_index":843,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.direction",{"_index":835,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.itemgeneratedelegate",{"_index":832,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.items.foreach((item",{"_index":845,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.items[index",{"_index":846,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.splitboard.root",{"_index":834,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.startx",{"_index":668,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.starty",{"_index":669,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.surface",{"_index":221,"title":{},"body":{"classes/Context.html":{}}}],["this.surface.flush",{"_index":224,"title":{},"body":{"classes/Context.html":{}}}],["this.surface.getcanvas",{"_index":223,"title":{},"body":{"classes/Context.html":{}}}],["this.unactiveexpand",{"_index":654,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.updaterect",{"_index":572,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.view",{"_index":853,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.view.cancelformerge",{"_index":681,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.direction",{"_index":684,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items.foreach((item",{"_index":659,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items[this.activeid",{"_index":683,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.resizeat(this.activeid",{"_index":688,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousedown",{"_index":656,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseleave",{"_index":673,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousemove",{"_index":672,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseup",{"_index":674,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseleave",{"_index":679,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mousemove",{"_index":678,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseup",{"_index":680,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor",{"_index":682,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('col",{"_index":699,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('crosshair",{"_index":677,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('n",{"_index":703,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('row",{"_index":700,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('w",{"_index":701,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitcolumnat(this.activeid",{"_index":705,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitrowat(this.activeid",{"_index":706,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.waitformergeatitem(this.activeid",{"_index":702,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.viewdiddisappear",{"_index":857,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.viewwilldisappear",{"_index":854,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["this.x",{"_index":578,"title":{},"body":{"classes/Rectangle.html":{}}}],["this.y",{"_index":580,"title":{},"body":{"classes/Rectangle.html":{}}}],["three",{"_index":1025,"title":{},"body":{"index.html":{}}}],["title",{"_index":380,"title":{},"body":{"classes/MenuBar.html":{},"interfaces/MenuProps.html":{}}}],["todo",{"_index":290,"title":{},"body":{"classes/GeometryMixin.html":{},"classes/LayoutMixin.html":{},"classes/Rectangle.html":{}}}],["together",{"_index":993,"title":{},"body":{"index.html":{}}}],["token",{"_index":978,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tools",{"_index":1041,"title":{},"body":{"index.html":{}}}],["top",{"_index":579,"title":{},"body":{"classes/Rectangle.html":{}}}],["topleftradius",{"_index":250,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["toprightradius",{"_index":251,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{}}}],["tort",{"_index":1141,"title":{},"body":{"license.html":{}}}],["transient",{"_index":417,"title":{},"body":{"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{}}}],["tree",{"_index":241,"title":{},"body":{"classes/Controller.html":{}}}],["true",{"_index":587,"title":{},"body":{"classes/Rectangle.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":257,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"classes/Rectangle.html":{},"dependencies.html":{}}}],["type",{"_index":34,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Base.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Context.html":{},"classes/CornerMixin.html":{},"classes/GeometryMixin.html":{},"interfaces/ISettings.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/LayoutMixin.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"interfaces/Module.html":{},"interfaces/ModuleConfig.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/RectangleCornerMixin.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1149,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":303,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["types/color",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["types/shape",{"_index":566,"title":{},"body":{"classes/Rectangle.html":{}}}],["ui/components/navigation/navigation",{"_index":77,"title":{},"body":{"classes/App.html":{}}}],["ui/components/property/proterty.svelte",{"_index":84,"title":{},"body":{"classes/App.html":{}}}],["ui/components/resource/resource.svelte",{"_index":82,"title":{},"body":{"classes/App.html":{}}}],["ui/components/status/status",{"_index":80,"title":{},"body":{"classes/App.html":{}}}],["unactiveexpand",{"_index":619,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["undefined",{"_index":787,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1005,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":376,"title":{},"body":{"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{}}}],["update",{"_index":1057,"title":{},"body":{"index.html":{}}}],["updatemode",{"_index":144,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updatemode(type",{"_index":153,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updater",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["updaterect",{"_index":544,"title":{},"body":{"classes/Rectangle.html":{}}}],["url",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":588,"title":{},"body":{"classes/Rectangle.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":1014,"title":{},"body":{"index.html":{}}}],["user",{"_index":1084,"title":{},"body":{"index.html":{}}}],["using",{"_index":1060,"title":{},"body":{"index.html":{}}}],["utils",{"_index":1035,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":926,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":39,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/GeometryMixin.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/Rectangle.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/classBuilder.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1152,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":645,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["version",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":692,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["very",{"_index":1019,"title":{},"body":{"index.html":{}}}],["view",{"_index":226,"title":{"classes/View.html":{}},"body":{"classes/Controller.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"classes/View.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["view.clone",{"_index":858,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.module",{"_index":849,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.module.serialize",{"_index":860,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.parentnode",{"_index":855,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.parentnode.removechild(view",{"_index":856,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view.setcontent(module.view",{"_index":848,"title":{},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["view:13",{"_index":510,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["view:17",{"_index":513,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["view:4",{"_index":486,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["view:8",{"_index":517,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["viewdidappear",{"_index":227,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewdiddisappear",{"_index":228,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewwillappear",{"_index":229,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"interfaces/MenuProps.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["viewwilldisappear",{"_index":230,"title":{},"body":{"classes/Controller.html":{},"classes/MenuBar.html":{},"classes/PropertyPanel.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SvelteModule.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{}}}],["vite",{"_index":1013,"title":{},"body":{"index.html":{}}}],["void",{"_index":45,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/Context.html":{},"classes/Controller.html":{},"classes/GeometryMixin.html":{},"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/MenuBar.html":{},"classes/ModuleFactory.html":{},"classes/ModuleItem.html":{},"classes/PropertyPanel.html":{},"classes/Rectangle.html":{},"classes/ResourceExplorer.html":{},"classes/ShapeCanvas.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/SvelteModule.html":{},"interfaces/WeightMap.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["w",{"_index":348,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{},"classes/ModuleItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["waitformerge",{"_index":468,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["waitformerge(direction",{"_index":507,"title":{},"body":{"classes/ModuleItem.html":{},"classes/SplitItemView.html":{}}}],["waitformergeatitem",{"_index":333,"title":{},"body":{"interfaces/ISplitBoardView.html":{},"interfaces/ItemGenerateDelegate.html":{}}}],["warranties",{"_index":1127,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1122,"title":{},"body":{"license.html":{}}}],["wasm",{"_index":219,"title":{},"body":{"classes/Context.html":{},"classes/GeometryMixin.html":{},"classes/Rectangle.html":{},"dependencies.html":{}}}],["wasm/bin/canvaskit.js",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wasm/canvas",{"_index":931,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wasm/context.ts",{"_index":206,"title":{},"body":{"classes/Context.html":{},"coverage.html":{}}}],["wasm/context.ts:13",{"_index":218,"title":{},"body":{"classes/Context.html":{}}}],["wasm/context.ts:17",{"_index":217,"title":{},"body":{"classes/Context.html":{}}}],["wasm/context.ts:4",{"_index":215,"title":{},"body":{"classes/Context.html":{}}}],["wasm/context.ts:5",{"_index":216,"title":{},"body":{"classes/Context.html":{}}}],["wasm/context.ts:6",{"_index":214,"title":{},"body":{"classes/Context.html":{}}}],["wasm/mixin/base.ts",{"_index":164,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["wasm/mixin/base.ts:4",{"_index":166,"title":{},"body":{"classes/Base.html":{}}}],["wasm/mixin/corner.ts",{"_index":245,"title":{},"body":{"classes/CornerMixin.html":{},"classes/RectangleCornerMixin.html":{},"coverage.html":{}}}],["wasm/mixin/corner.ts:10",{"_index":594,"title":{},"body":{"classes/RectangleCornerMixin.html":{}}}],["wasm/mixin/corner.ts:3",{"_index":248,"title":{},"body":{"classes/CornerMixin.html":{}}}],["wasm/mixin/corner.ts:7",{"_index":595,"title":{},"body":{"classes/RectangleCornerMixin.html":{}}}],["wasm/mixin/corner.ts:8",{"_index":596,"title":{},"body":{"classes/RectangleCornerMixin.html":{}}}],["wasm/mixin/corner.ts:9",{"_index":593,"title":{},"body":{"classes/RectangleCornerMixin.html":{}}}],["wasm/mixin/geometry.ts",{"_index":266,"title":{},"body":{"classes/GeometryMixin.html":{},"coverage.html":{}}}],["wasm/mixin/geometry.ts:10",{"_index":280,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:11",{"_index":279,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:18",{"_index":286,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:23",{"_index":289,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:7",{"_index":275,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:8",{"_index":281,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/geometry.ts:9",{"_index":282,"title":{},"body":{"classes/GeometryMixin.html":{}}}],["wasm/mixin/layout.ts",{"_index":356,"title":{},"body":{"classes/LayoutMixin.html":{},"coverage.html":{}}}],["wasm/mixin/layout.ts:2",{"_index":359,"title":{},"body":{"classes/LayoutMixin.html":{}}}],["wasm/mixin/layout.ts:3",{"_index":360,"title":{},"body":{"classes/LayoutMixin.html":{}}}],["wasm/mixin/shape.ts",{"_index":255,"title":{},"body":{"classes/DefaultShapeMixin.html":{},"coverage.html":{}}}],["wasm/rectangle.ts",{"_index":539,"title":{},"body":{"classes/Rectangle.html":{},"coverage.html":{}}}],["wasm/rectangle.ts:10",{"_index":548,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:11",{"_index":547,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:18",{"_index":555,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:22",{"_index":557,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:27",{"_index":559,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:31",{"_index":561,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:36",{"_index":563,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:40",{"_index":565,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:45",{"_index":553,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:54",{"_index":552,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:8",{"_index":551,"title":{},"body":{"classes/Rectangle.html":{}}}],["wasm/rectangle.ts:9",{"_index":550,"title":{},"body":{"classes/Rectangle.html":{}}}],["web",{"_index":1043,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["webpreferences",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":785,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["weightmap",{"_index":778,"title":{"interfaces/WeightMap.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["whether",{"_index":1139,"title":{},"body":{"license.html":{}}}],["width",{"_index":362,"title":{},"body":{"classes/LayoutMixin.html":{},"classes/Rectangle.html":{},"miscellaneous/variables.html":{}}}],["width(width",{"_index":571,"title":{},"body":{"classes/Rectangle.html":{}}}],["wiki",{"_index":1081,"title":{},"body":{"index.html":{}}}],["windows",{"_index":1055,"title":{},"body":{"index.html":{}}}],["without",{"_index":1099,"title":{},"body":{"license.html":{}}}],["work",{"_index":995,"title":{},"body":{"index.html":{}}}],["workbench",{"_index":102,"title":{"classes/Workbench.html":{}},"body":{"classes/App.html":{},"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["workbench.viewdidappear",{"_index":108,"title":{},"body":{"classes/App.html":{}}}],["workbench.viewwillappear",{"_index":106,"title":{},"body":{"classes/App.html":{}}}],["workbench/desktop/app.config.json",{"_index":86,"title":{},"body":{"classes/App.html":{}}}],["workbenchprops",{"_index":814,"title":{"interfaces/WorkbenchProps.html":{}},"body":{"classes/Workbench.html":{},"interfaces/WorkbenchProps.html":{},"coverage.html":{}}}],["works",{"_index":1009,"title":{},"body":{"index.html":{}}}],["x",{"_index":357,"title":{},"body":{"classes/LayoutMixin.html":{}}}],["xl",{"_index":740,"title":{},"body":{"classes/SplitItemView.html":{}}}],["y",{"_index":358,"title":{},"body":{"classes/LayoutMixin.html":{}}}],["yes",{"_index":193,"title":{},"body":{"classes/ColorRef.html":{},"classes/View.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/App.html":{"url":"classes/App.html","title":"class - App","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/app.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                context\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bootstrap\n                            \n                            \n                                initFrame\n                            \n                            \n                                initMenus\n                            \n                            \n                                    Async\n                                initModules\n                            \n                            \n                                initNavigationBar\n                            \n                            \n                                initPreferences\n                            \n                            \n                                initPropertyPanel\n                            \n                            \n                                initResourcePanel\n                            \n                            \n                                initStatusBar\n                            \n                            \n                                initStyle\n                            \n                            \n                                initStyleMode\n                            \n                            \n                                initWorkArea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/app.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Container\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        bootstrap\n                        \n                    \n                \n            \n            \n                \n                    \n                    bootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFrame\n                        \n                    \n                \n            \n            \n                \ninitFrame()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initMenus\n                        \n                    \n                \n            \n            \n                \ninitMenus()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initModules\n                        \n                    \n                \n            \n            \n                \n                    \n                    initModules()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNavigationBar\n                        \n                    \n                \n            \n            \n                \ninitNavigationBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPreferences\n                        \n                    \n                \n            \n            \n                \ninitPreferences()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPropertyPanel\n                        \n                    \n                \n            \n            \n                \ninitPropertyPanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initResourcePanel\n                        \n                    \n                \n            \n            \n                \ninitResourcePanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStatusBar\n                        \n                    \n                \n            \n            \n                \ninitStatusBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyle\n                        \n                    \n                \n            \n            \n                \ninitStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyleMode\n                        \n                    \n                \n            \n            \n                \ninitStyleMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initWorkArea\n                        \n                    \n                \n            \n            \n                \ninitWorkArea()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Container } from 'inversify';\nimport { AppearanceType } from '@cosmic/core/common';\nimport { ModuleFactory } from '@cosmic/core/parts';\nimport { Controller } from '@cosmic/core/browser';\nimport { AppearanceService } from '@cosmic/workbench/services/appearance-service';\n// import { MenuGroupService } from '@cosmic/workbench/services/menu-group-service';\n// import { applicationMenus } from './base-menu/config';\nimport Navigation from '../ui/components/navigation/navigation-bar.svelte';\nimport StatusBar from '../ui/components/status/status-bar.svelte';\nimport ResourcePage from '../ui/components/resource/resource.svelte';\nimport PropertyPanel from '../ui/components/property/proterty.svelte';\n\nimport config from 'workbench/desktop/app.config.json';\n\nexport default class App {\n  private container: Container;\n  private context = new Map();\n  constructor(private root: HTMLElement) {\n    this.container = new Container({ defaultScope: 'Singleton' });\n    this.context.set('container', this.container);\n    this.initPreferences();\n    this.initStyle();\n  }\n  async bootstrap() {\n    this.initNavigationBar();\n    this.initStatusBar();\n    await this.initModules();\n  }\n\n  async initModules() {\n    const moduleFactory = new ModuleFactory(this.container);\n    this.container.bind('ModuleFactory').toDynamicValue(() => moduleFactory);\n\n    const workbench = await moduleFactory.load(config.workbench.id, config.workbench);\n    if (workbench instanceof Controller) {\n      workbench.viewWillAppear();\n      this.root.appendChild(workbench.view());\n      workbench.viewDidAppear();\n    }\n  }\n\n  initPreferences() {\n    this.container.bind(AppearanceService).to(AppearanceService);\n    // this.container.bind(MenuGroupService).to(MenuGroupService);\n  }\n\n  initStyle() {\n    const aps = this.container.get(AppearanceService);\n    aps.onModeChanged((type: AppearanceType) => this.initStyleMode(type));\n    this.initStyleMode(AppearanceType.dark);\n  }\n  initStyleMode(type: AppearanceType): void {\n    if (type === AppearanceType.dark) {\n      document.body.classList.add('mode-dark');\n    } else {\n      document.body.classList.remove('mode-dark');\n    }\n  }\n\n  initFrame(): void {\n    // to do sth.\n  }\n\n  initNavigationBar(): void {\n    // to do sth.\n    const navigationBar = new Navigation({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    this.initMenus();\n  }\n\n  initMenus(): void {\n    // const header = document.querySelector('#main-header');\n    // const groupMenu = this.container.get(MenuGroupService);\n    // groupMenu.initContainer(header as HTMLElement);\n    // for (const menu of applicationMenus) {\n    //   groupMenu.getMenuInsatance().init(menu.title, menu.items);\n    // }\n  }\n\n  initResourcePanel(container: HTMLElement): void {\n    new ResourcePage({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initPropertyPanel(container: HTMLElement): void {\n    new PropertyPanel({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initWorkArea(): void {\n    // to do sth.\n  }\n\n  initStatusBar(): void {\n    new StatusBar({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    // to do sth.\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppearanceService.html":{"url":"classes/AppearanceService.html","title":"class - AppearanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppearanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/appearance-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Private\n                                evt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onModeChanged\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                updateMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppearanceType\n\n                    \n                \n                \n                    \n                        Default value : AppearanceType.dark\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        evt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter2()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onModeChanged\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModeChanged(fn: (type: AppearanceType) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        type\n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject, ContainerModule } from 'inversify';\nimport { EventEmitter2 } from 'eventemitter2';\n\nimport { AppearanceType } from '@cosmic/core/common';\n\n@injectable()\n/** 外观设置服务 */\nexport class AppearanceService {\n  private _type: AppearanceType = AppearanceType.dark;\n  private evt = new EventEmitter2();\n\n  public updateMode(type: AppearanceType) {\n    if (this._type !== type) {\n      this._type = type;\n      this.evt.emit('onModeChanged', type);\n    }\n  }\n  public onModeChanged(fn: (type: AppearanceType) => void) {\n    this.evt.on('onModeChanged', fn);\n  }\n  public type() {\n    return this._type;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/base.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                context\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Context\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/base.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { Context } from '../context';\n\nexport abstract class Base {\n  protected context: Context;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseMenu.html":{"url":"classes/BaseMenu.html","title":"class - BaseMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-group/base-menu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                menuInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(groupMenuService: MenuGroupService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/menu-group/base-menu.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupMenuService\n                                                  \n                                                        \n                                                                    MenuGroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Menu\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-group/base-menu.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    initMenu(menuItems: MenuItemConfig[])\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-group/base-menu.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuItems\n                                    \n                                            MenuItemConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { MenuGroupService } from './menu-group-service';\nimport type { Menu, MenuItemConfig } from './menu';\n\nexport class BaseMenu {\n  private menuInstance!: Menu;\n  constructor(private groupMenuService: MenuGroupService) {}\n\n  public initMenu(menuItems: MenuItemConfig[]): void {\n    this.menuInstance = this.groupMenuService.getMenuInsatance();\n    this.menuInstance.init('文件', menuItems);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColorRef.html":{"url":"classes/ColorRef.html","title":"class - ColorRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColorRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/common/color-ref.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                anyColor\n                            \n                            \n                                    Private\n                                darkColor\n                            \n                            \n                                    Private\n                                lightColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                color\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(anyColor: Color, lightColor?: Color, darkColor?: Color)\n                    \n                \n                        \n                            \n                                Defined in src/core/common/color-ref.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        anyColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lightColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        darkColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        anyColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        darkColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lightColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        color\n                        \n                    \n                \n            \n            \n                \n                    \n                    color(appearanceType: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/common/color-ref.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appearanceType\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type * as Color from 'color';\nimport { AppearanceType } from './appearance';\n\nexport default class ColorRef {\n  private anyColor: Color;\n  private lightColor: Color;\n  private darkColor: Color;\n\n  constructor(anyColor: Color, lightColor?: Color, darkColor?: Color) {\n    this.anyColor = anyColor;\n    this.lightColor = lightColor || anyColor;\n    this.darkColor = darkColor || anyColor;\n  }\n\n  public color(appearanceType: AppearanceType) {\n    switch (appearanceType) {\n      case AppearanceType.any:\n        return this.anyColor;\n      case AppearanceType.light:\n        return this.lightColor;\n      case AppearanceType.dark:\n        return this.darkColor;\n      default:\n        return this.anyColor;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Context.html":{"url":"classes/Context.html","title":"class - Context","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Context\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/context.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canvas\n                            \n                            \n                                    Public\n                                ck\n                            \n                            \n                                    Private\n                                surface\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                draw\n                            \n                            \n                                getCanvas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ck: CanvasKit, surface: Surface)\n                    \n                \n                        \n                            \n                                Defined in src/modules/draw-canvas/skia-wasm/context.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ck\n                                                  \n                                                        \n                                                                    CanvasKit\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        surface\n                                                  \n                                                        \n                                                                    Surface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Canvas\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/context.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ck\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanvasKit\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/context.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        surface\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Surface\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/context.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        draw\n                        \n                    \n                \n            \n            \n                \ndraw()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/draw-canvas/skia-wasm/context.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCanvas\n                        \n                    \n                \n            \n            \n                \ngetCanvas()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/draw-canvas/skia-wasm/context.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Canvas\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Canvas, Surface, CanvasKit } from 'canvaskit-wasm';\n\nexport class Context {\n  private canvas: Canvas;\n  private surface: Surface;\n  public ck: CanvasKit;\n  constructor(ck: CanvasKit, surface: Surface) {\n    this.ck = ck;\n    this.surface = surface;\n    this.canvas = this.surface.getCanvas();\n  }\n\n  getCanvas(): Canvas {\n    return this.canvas;\n  }\n\n  draw(): void {\n    this.surface.flush();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Controller.html":{"url":"classes/Controller.html","title":"class - Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Controller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                view\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\n\n@injectable()\nexport abstract class Controller {\n  abstract view(): HTMLElement;\n\n  viewWillAppear() {\n    /** going to render, appending element to dom tree  */\n  }\n  viewDidAppear() {\n    /** after appeared */\n  }\n\n  viewWillDisappear() {\n    /** going to disappear */\n  }\n  viewDidDisappear() {\n    /** going to disappear */\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CornerMixin.html":{"url":"classes/CornerMixin.html","title":"class - CornerMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CornerMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/corner.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cornerRadius\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cornerRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CornerMixin {\n  cornerRadius: number;\n}\n\nexport class RectangleCornerMixin {\n  topLeftRadius: number;\n  topRightRadius: number;\n  bottomLeftRadius: number;\n  bottomRightRadius: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultShapeMixin.html":{"url":"classes/DefaultShapeMixin.html","title":"class - DefaultShapeMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultShapeMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/shape.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Mixin } from 'ts-mixer';\nimport { CornerMixin, RectangleCornerMixin } from './corner';\nimport { LayoutMixin } from './layout';\nimport { GeometryMixin } from './geometry';\n\nexport class DefaultShapeMixin extends Mixin(CornerMixin, RectangleCornerMixin, LayoutMixin, GeometryMixin) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeometryMixin.html":{"url":"classes/GeometryMixin.html","title":"class - GeometryMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeometryMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/geometry.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fills\n                            \n                            \n                                strokeAlign\n                            \n                            \n                                strokeMiterLimit\n                            \n                            \n                                    Private\n                                strokes\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                    Protected\n                                context\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    background\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Paint[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strokeAlign\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"CENTER\" | \"INSIDE\" | \"OUTSIDE\"\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strokeMiterLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        strokes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Paint[]\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strokeWeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Context\n\n                    \n                \n                        \n                            \n                                Inherited from         Base\n\n                            \n                        \n                    \n                        \n                                Defined in         Base:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n\n                \n                    \n                        getbackground()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:18\n                                \n                            \n\n                \n                    \n                        setbackground(background: string)\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/mixin/geometry.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            background\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import type { Paint } from 'canvaskit-wasm';\nimport { Base } from './base';\n\n// TODO: fills and stroke support array\nexport class GeometryMixin extends Base {\n  // TODO 确认完更新策略好设置正确的类型\n  fills: Paint[] = [];\n  private strokes: Paint[];\n  strokeWeight: number;\n  strokeMiterLimit: number;\n  strokeAlign: 'CENTER' | 'INSIDE' | 'OUTSIDE';\n  // strokeCap: StrokeCap | PluginAPI['mixed']\n  // strokeJoin: StrokeJoin | PluginAPI['mixed']\n  // dashPattern: ReadonlyArray\n  // fillStyleId: string | PluginAPI['mixed']\n  // strokeStyleId: string\n\n  get background(): string {\n    return this.fills.toString();\n  }\n\n  // TODO: support more typeof background\n  set background(background: string) {\n    const paint = new this.context.ck.Paint();\n    const color = this.context.ck.parseColorString(background);\n    paint.setColor(color);\n    paint.setStyle(this.context.ck.PaintStyle.Fill);\n    paint.setAntiAlias(true);\n    this.fills.push(paint);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISettings.html":{"url":"interfaces/ISettings.html","title":"interface - ISettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/settings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            check\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import ElectronStore from 'electron-store';\n\ninterface ISettings {\n  check: boolean;\n}\n\nconst settings = new ElectronStore({\n  defaults: {\n    check: false,\n  },\n});\n\nexport default settings;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISplitBoardView.html":{"url":"interfaces/ISplitBoardView.html","title":"interface - ISplitBoardView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISplitBoardView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/type.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cancelForMerge\n                                        \n                                \n                                \n                                        \n                                            direction\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            resizeAt\n                                        \n                                \n                                \n                                        \n                                            setCursor\n                                        \n                                \n                                \n                                        \n                                            splitColumnAt\n                                        \n                                \n                                \n                                        \n                                            splitRowAt\n                                        \n                                \n                                \n                                        \n                                            waitForMergeAtItem\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancelForMerge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelForMerge:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:         directionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         directionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     SplitItemView[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SplitItemView[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizeAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resizeAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setCursor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setCursor:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitColumnAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitColumnAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitRowAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitRowAt:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        waitForMergeAtItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        waitForMergeAtItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type View from '../view';\nimport type SplitItemView from './split-item.view';\n\nexport enum directionType {\n  'col',\n  'row',\n}\n\nexport interface ItemGenerateDelegate {\n  expandNewItem: (oldItem: T, index: number) => T;\n}\n\nexport interface ISplitBoardView extends View {\n  items: SplitItemView[];\n  direction: directionType;\n  setCursor: (\n    type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize'\n  ) => void;\n  cancelForMerge: () => void;\n  resizeAt: (index: number, start: number, length: number, position: number) => void;\n  waitForMergeAtItem: (index: number, direction: 'w' | 'e' | 'n' | 's') => void;\n  splitColumnAt: (index: number, clientX: number, clientY: number) => void;\n  splitRowAt: (index: number, clientX: number, clientY: number) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemGenerateDelegate.html":{"url":"interfaces/ItemGenerateDelegate.html","title":"interface - ItemGenerateDelegate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ItemGenerateDelegate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/type.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expandNewItem\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expandNewItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expandNewItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type View from '../view';\nimport type SplitItemView from './split-item.view';\n\nexport enum directionType {\n  'col',\n  'row',\n}\n\nexport interface ItemGenerateDelegate {\n  expandNewItem: (oldItem: T, index: number) => T;\n}\n\nexport interface ISplitBoardView extends View {\n  items: SplitItemView[];\n  direction: directionType;\n  setCursor: (\n    type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize'\n  ) => void;\n  cancelForMerge: () => void;\n  resizeAt: (index: number, start: number, length: number, position: number) => void;\n  waitForMergeAtItem: (index: number, direction: 'w' | 'e' | 'n' | 's') => void;\n  splitColumnAt: (index: number, clientX: number, clientY: number) => void;\n  splitRowAt: (index: number, clientX: number, clientY: number) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LayoutMixin.html":{"url":"classes/LayoutMixin.html","title":"class - LayoutMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LayoutMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/layout.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/layout.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/layout.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LayoutMixin {\n  x: number;\n  y: number;\n  /** TODO: should it be readonly? */\n  // width: number\n  // height: number\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuBar.html":{"url":"classes/MenuBar.html","title":"class - MenuBar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuBar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-group/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Controller\n            \n\n            \n                Implements\n            \n            \n                            Module\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                serialize\n                            \n                            \n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-group/index.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuProps\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/menu-group/index.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-group/index.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: MenuProps)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-group/index.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                MenuProps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/menu-group/index.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { title: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n            \n                \nview()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\n// import { Menu } from './menu';\n\ninterface MenuProps {\n  title: string;\n}\n\n@injectable()\nexport default class MenuBar extends Controller implements Module {\n  props: MenuProps;\n  // private meuns!: Menu[];\n  private _view: HTMLElement;\n  view() {\n    return this._view;\n  }\n  public async init(props: MenuProps) {\n    this._view = document.createElement('div');\n    return this;\n  }\n  viewWillAppear() {\n    // const id = Date.now() + '' + this.meuns.length;\n    // const menu = new Menu(this._view, id);\n    // this.meuns.push(menu);\n  }\n  serialize() {\n    return { title: '' };\n  }\n  async destroy() {\n    return this;\n  }\n  // remove(menu: Menu) {\n  //   this._view.removeChild(menu.container);\n  //   this.meuns = this.meuns.filter((item) => item.id === menu.id);\n  // }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuProps.html":{"url":"interfaces/MenuProps.html","title":"interface - MenuProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu-group/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\n// import { Menu } from './menu';\n\ninterface MenuProps {\n  title: string;\n}\n\n@injectable()\nexport default class MenuBar extends Controller implements Module {\n  props: MenuProps;\n  // private meuns!: Menu[];\n  private _view: HTMLElement;\n  view() {\n    return this._view;\n  }\n  public async init(props: MenuProps) {\n    this._view = document.createElement('div');\n    return this;\n  }\n  viewWillAppear() {\n    // const id = Date.now() + '' + this.meuns.length;\n    // const menu = new Menu(this._view, id);\n    // this.meuns.push(menu);\n  }\n  serialize() {\n    return { title: '' };\n  }\n  async destroy() {\n    return this;\n  }\n  // remove(menu: Menu) {\n  //   this._view.removeChild(menu.container);\n  //   this.meuns = this.meuns.filter((item) => item.id === menu.id);\n  // }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Module.html":{"url":"interfaces/Module.html","title":"interface - Module","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Module\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destroy\n                                        \n                                \n                                \n                                        \n                                            init\n                                        \n                                \n                                \n                                        \n                                            props\n                                        \n                                \n                                \n                                        \n                                            serialize\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destroy:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        init\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        init:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    loading resoures\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        props\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        props:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serialize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serialize:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    to Options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Module {\n  props: T;\n  /** loading resoures */\n  init: (props: T) => Promise>;\n\n  /** to Options */\n  serialize: () => T;\n\n  destroy: () => Promise>;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModuleConfig.html":{"url":"interfaces/ModuleConfig.html","title":"interface - ModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module-factory.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Module } from './module';\nimport { injectable } from 'inversify';\nimport type { Container } from 'inversify';\n\nexport interface ModuleConfig {\n  id: string;\n}\n\n@injectable()\n/** Provides the ability to cache and run ES Modules */\nexport class ModuleFactory {\n  constructor(private container: Container) {}\n  private modules: Map Module> = new Map();\n  add(moduleId: string, module: new () => Module, scope: 'Singleton' | 'Transient' | 'Request' = 'Transient') {\n    if (this.exist(moduleId)) return;\n    this.modules.set(moduleId, module);\n    const m = this.container.bind(moduleId).to(module);\n    switch (scope) {\n      case 'Singleton':\n        m.inSingletonScope();\n        break;\n      case 'Transient':\n        m.inTransientScope();\n        break;\n      case 'Request':\n        m.inRequestScope();\n        break;\n    }\n  }\n  get(moduleId: string) {\n    return this.modules.get(moduleId);\n  }\n  exist(moduleId: string) {\n    return this.modules.has(moduleId);\n  }\n  async load(moduleId: string, props: any) {\n    if (!this.exist(moduleId)) {\n      await import(moduleId).then((ModuleSource) => {\n        this.add(moduleId, ModuleSource.default, props.scope || 'Transient');\n      });\n    }\n    const module = this.container.get(moduleId) as Module;\n    await module.init(props);\n    return module;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModuleFactory.html":{"url":"classes/ModuleFactory.html","title":"class - ModuleFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModuleFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/module-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                modules\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                exist\n                            \n                            \n                                get\n                            \n                            \n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: Container)\n                    \n                \n                        \n                            \n                                Defined in src/core/parts/modules/module-factory.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    Container\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/module-factory.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(moduleId: string, module, scope: \"Singleton\" | \"Transient\" | \"Request\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    module\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    scope\n                                    \n                                            \"Singleton\" | \"Transient\" | \"Request\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Transient'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exist\n                        \n                    \n                \n            \n            \n                \nexist(moduleId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(moduleId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load(moduleId: string, props: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/module-factory.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moduleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Module } from './module';\nimport { injectable } from 'inversify';\nimport type { Container } from 'inversify';\n\nexport interface ModuleConfig {\n  id: string;\n}\n\n@injectable()\n/** Provides the ability to cache and run ES Modules */\nexport class ModuleFactory {\n  constructor(private container: Container) {}\n  private modules: Map Module> = new Map();\n  add(moduleId: string, module: new () => Module, scope: 'Singleton' | 'Transient' | 'Request' = 'Transient') {\n    if (this.exist(moduleId)) return;\n    this.modules.set(moduleId, module);\n    const m = this.container.bind(moduleId).to(module);\n    switch (scope) {\n      case 'Singleton':\n        m.inSingletonScope();\n        break;\n      case 'Transient':\n        m.inTransientScope();\n        break;\n      case 'Request':\n        m.inRequestScope();\n        break;\n    }\n  }\n  get(moduleId: string) {\n    return this.modules.get(moduleId);\n  }\n  exist(moduleId: string) {\n    return this.modules.has(moduleId);\n  }\n  async load(moduleId: string, props: any) {\n    if (!this.exist(moduleId)) {\n      await import(moduleId).then((ModuleSource) => {\n        this.add(moduleId, ModuleSource.default, props.scope || 'Transient');\n      });\n    }\n    const module = this.container.get(moduleId) as Module;\n    await module.init(props);\n    return module;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModuleItem.html":{"url":"classes/ModuleItem.html","title":"class - ModuleItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModuleItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/module-item.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SplitItemView\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loader\n                            \n                            \n                                    Public\n                                module\n                            \n                            \n                                    Public\n                                moduleId\n                            \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clone\n                            \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Promise>\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/module-item.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Module\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/module-item.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        moduleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/module-item.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitExpand\n\n                    \n                \n                        \n                            \n                                Inherited from         SplitItemView\n\n                            \n                        \n                    \n                        \n                                Defined in         SplitItemView:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/module-item.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleItem\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:67\n\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Inherited from         SplitItemView\n\n                \n            \n            \n                \n                        Defined in         SplitItemView:71\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SplitItemView } from '@cosmic/core/browser';\nimport type { Module } from '@cosmic/core/parts';\n\nexport class ModuleItem extends SplitItemView {\n  public loader: Promise>;\n  public moduleId: string;\n  public module: Module;\n  public clone() {\n    const item = new ModuleItem();\n    item.moduleId = this.moduleId;\n    return item;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyPanel.html":{"url":"classes/PropertyPanel.html","title":"class - PropertyPanel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyPanel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/property-panel/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvelteModule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                serialize\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SvelteModule } from '@cosmic/core/parts';\n\nexport default class PropertyPanel extends SvelteModule {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n  serialize() {\n    return {};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rectangle.html":{"url":"classes/Rectangle.html","title":"class - Rectangle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rectangle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/rectangle.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RectangleNode\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _height\n                            \n                            \n                                    Private\n                                _width\n                            \n                            \n                                    Private\n                                rect\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                draw\n                            \n                            \n                                    Private\n                                updateRect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                                \n                                    borderRaidus\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(context: Context)\n                    \n                \n                        \n                            \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        Context\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        rect\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Path\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RECTANGLE'\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        draw\n                        \n                    \n                \n            \n            \n                \ndraw()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateRect\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRect()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:18\n                                \n                            \n\n                \n                    \n                        setwidth(width: number)\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            width\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:27\n                                \n                            \n\n                \n                    \n                        setheight(height: number)\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            height\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        borderRaidus\n                    \n                \n\n                \n                    \n                        getborderRaidus()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:36\n                                \n                            \n\n                \n                    \n                        setborderRaidus(borderRaidus: number)\n                    \n                \n                            \n                                \n                                    Defined in src/modules/draw-canvas/skia-wasm/rectangle.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            borderRaidus\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import type { RectangleNode } from '../types/shape';\nimport type { Path } from 'canvaskit-wasm';\nimport { Mixin } from 'ts-mixer';\nimport { DefaultShapeMixin } from './mixin/shape';\nimport type { Context } from './context';\n\nexport class Rectangle extends Mixin(DefaultShapeMixin) implements RectangleNode {\n  readonly type = 'RECTANGLE';\n  private rect: Path;\n  private _width: number;\n  private _height: number;\n\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  get width(): number {\n    return this._width;\n  }\n\n  set width(width: number) {\n    this._width = width;\n    this.updateRect();\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  set height(height: number) {\n    this._height = height;\n    this.updateRect();\n  }\n\n  get borderRaidus(): number {\n    return this.cornerRadius;\n  }\n\n  set borderRaidus(borderRaidus: number) {\n    this.cornerRadius = borderRaidus;\n    this.updateRect();\n  }\n\n  private updateRect() {\n    const left = this.x;\n    const top = this.y;\n    const right = this._width + this.x;\n    const bottom = this._height + this.y;\n    const rrect = this.context.ck.RRectXY([left, top, right, bottom], this.cornerRadius, this.cornerRadius);\n    this.rect = new this.context.ck.Path().addRRect(rrect, true);\n  }\n\n  draw(): void {\n    // TODO: use mixin to handle paint and stroke\n    // TODO: set default fills\n    this.context.getCanvas().drawPath(this.rect, this.fills[0]);\n    this.context.draw();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RectangleCornerMixin.html":{"url":"classes/RectangleCornerMixin.html","title":"class - RectangleCornerMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RectangleCornerMixin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/draw-canvas/skia-wasm/mixin/corner.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bottomLeftRadius\n                            \n                            \n                                bottomRightRadius\n                            \n                            \n                                topLeftRadius\n                            \n                            \n                                topRightRadius\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bottomLeftRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bottomRightRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topLeftRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topRightRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/draw-canvas/skia-wasm/mixin/corner.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CornerMixin {\n  cornerRadius: number;\n}\n\nexport class RectangleCornerMixin {\n  topLeftRadius: number;\n  topRightRadius: number;\n  bottomLeftRadius: number;\n  bottomRightRadius: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceExplorer.html":{"url":"classes/ResourceExplorer.html","title":"class - ResourceExplorer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceExplorer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/resource-explorer/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvelteModule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                serialize\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SvelteModule } from '@cosmic/core/parts';\n\nexport default class ResourceExplorer extends SvelteModule {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n  serialize() {\n    return {};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShapeCanvas.html":{"url":"classes/ShapeCanvas.html","title":"class - ShapeCanvas","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShapeCanvas\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shape-canvas/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvelteModule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initWithComponent\n                            \n                            \n                                serialize\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         SvelteModule\n\n                            \n                        \n                    \n                        \n                                Defined in         SvelteModule:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \ninitWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Inherited from         SvelteModule\n\n                \n            \n            \n                \n                        Defined in         SvelteModule:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Component from './index.svelte';\nimport { SvelteModule } from '@cosmic/core/parts';\n\nexport default class ShapeCanvas extends SvelteModule {\n  initWithComponent(target: Element) {\n    return new Component({\n      target,\n    });\n  }\n  serialize() {\n    return {};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardController.html":{"url":"classes/SplitBoardController.html","title":"class - SplitBoardController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeId\n                            \n                            \n                                    Private\n                                expandActive\n                            \n                            \n                                    Private\n                                expandLeaveHandler\n                            \n                            \n                                    Private\n                                expandMouseUpHandler\n                            \n                            \n                                    Private\n                                expandMoveHandler\n                            \n                            \n                                    Private\n                                expandType\n                            \n                            \n                                    Private\n                                startX\n                            \n                            \n                                    Private\n                                startY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeExpand\n                            \n                            \n                                    Public\n                                checkExpandState\n                            \n                            \n                                    Private\n                                liveResize\n                            \n                            \n                                    Public\n                                onMouseDown\n                            \n                            \n                                    Public\n                                setActiveState\n                            \n                            \n                                    Private\n                                unactiveExpand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(view: ISplitBoardView)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        view\n                                                  \n                                                        \n                                                                        ISplitBoardView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandLeaveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMouseUpHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMoveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        activeExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    activeExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkExpandState\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkExpandState(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        liveResize\n                        \n                    \n                \n            \n            \n                \n                    \n                    liveResize(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onMouseDown\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseDown(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setActiveState\n                        \n                    \n                \n            \n            \n                \n                    \n                    setActiveState(index: number, startX: number, startY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        unactiveExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    unactiveExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { directionType } from './type';\nimport type { ISplitBoardView } from './type';\n\nexport default class SplitBoardController {\n  private expandMoveHandler!: (event: MouseEvent) => void;\n  private expandLeaveHandler!: (event: MouseEvent) => void;\n  private expandMouseUpHandler!: (event: MouseEvent) => void;\n\n  private startX = 0;\n  private startY = 0;\n  private activeId = -1;\n\n  private expandActive = false;\n  private expandType = 0; // 是否超过偏移值 0 / 1 expand hor | 2 expand ver | 3 merge hor | 4 merge ver\n\n  constructor(private view: ISplitBoardView) {\n    this.expandMoveHandler = (event: MouseEvent) => {\n      this.liveResize(event.clientX, event.clientY);\n      this.checkExpandState(event.clientX, event.clientY);\n    };\n    this.expandLeaveHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.expandMouseUpHandler = (event: MouseEvent) => {\n      this.unactiveExpand();\n    };\n    this.view.root.addEventListener('mousedown', (event: MouseEvent) => {\n      this.onMouseDown(event);\n    });\n  }\n  public onMouseDown(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    let index = -1;\n    this.view.items.forEach((item, i) => {\n      if (target && item.root === target.parentElement && target.classList.contains('split-expand')) index = i;\n    });\n    if (index === -1) {\n      return;\n    }\n    if (index > -1) {\n      this.setActiveState(index, event.clientX, event.clientY);\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  public setActiveState(index: number, startX: number, startY: number) {\n    // 锚点mousedown\n    this.startX = startX;\n    this.startY = startY;\n    this.activeExpand();\n    this.activeId = index;\n  }\n  private activeExpand() {\n    this.view.root.addEventListener('mousemove', this.expandMoveHandler);\n    this.view.root.addEventListener('mouseleave', this.expandLeaveHandler);\n    this.view.root.addEventListener('mouseup', this.expandMouseUpHandler);\n    this.expandActive = true;\n    this.expandType = 0;\n    this.view.setCursor('crosshair');\n  }\n  private unactiveExpand() {\n    if (this.expandActive) {\n      this.view.root.removeEventListener('mousemove', this.expandMoveHandler);\n      this.view.root.removeEventListener('mouseleave', this.expandLeaveHandler);\n      this.view.root.removeEventListener('mouseup', this.expandMouseUpHandler);\n      this.view.cancelForMerge();\n      this.expandActive = false;\n      this.expandType = 0;\n      this.view.setCursor('');\n    }\n  }\n  private liveResize(clientX: number, clientY: number) {\n    const item = this.view.items[this.activeId];\n    if (this.expandType === 1 && this.view.direction === directionType.col) {\n      // horizontal expand column\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n    } else if (this.expandType === 2 && this.view.direction === directionType.row) {\n      // vertical expand row\n      this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n    }\n  }\n  public checkExpandState(clientX: number, clientY: number) {\n    const offsetX = this.startX - clientX;\n    const offsetY = this.startY - clientY;\n    /** expand mode */\n    if (this.expandType === 0 && offsetX > 0 && offsetY > 0 && (offsetX > 5 || offsetY > 5)) {\n      if (offsetX > offsetY) {\n        this.view.setCursor('col-resize');\n      } else {\n        this.view.setCursor('row-resize');\n      }\n    }\n    /** merge mode */\n    if (offsetX  5) {\n      this.view.setCursor('w-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'w');\n      return;\n    }\n\n    if (offsetY  5) {\n      this.view.setCursor('n-resize');\n      this.view.waitForMergeAtItem(this.activeId, 'n');\n      return;\n    }\n\n    if (this.expandType) return;\n    /** do expand */\n    if (offsetX > 30) {\n      this.expandType = 1;\n      this.view.setCursor('col-resize');\n      this.view.splitColumnAt(this.activeId, clientX, clientY);\n      return;\n    }\n    if (offsetY > 30) {\n      this.expandType = 2;\n      this.view.setCursor('row-resize');\n      this.view.splitRowAt(this.activeId, clientX, clientY);\n    }\n    if (\n      (this.expandType === 1 && this.view.direction === directionType.row) ||\n      (this.expandType === 2 && this.view.direction === directionType.col)\n    ) {\n      this.unactiveExpand();\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitItemView.html":{"url":"classes/SplitItemView.html","title":"class - SplitItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-item.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitExpand\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:67\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view';\nimport SplitExpand from './split-expand.svelte';\n\nenum directionStyles {\n  'w' = 'merge-w',\n  'e' = 'merge-e',\n  's' = 'merge-s',\n  'n' = 'merge-n',\n}\n\nexport default class SplitItemView extends View {\n  private _growClassName = '';\n  private _shrinkClassName = '';\n  private _bgColorClassName: string[] = ['bg-cgray-100', 'dark:bg-cgray-800'];\n\n  public contentView!: HTMLElement;\n  private expand!: SplitExpand;\n\n  constructor() {\n    super();\n    this.addExpandButton();\n    this.setDefaultClass();\n  }\n\n  public setContent(contentView: HTMLElement): SplitItemView {\n    this.contentView = contentView;\n    this.root.classList.add('split-item', 'flex');\n    contentView.classList.add('flex', 'flex-1');\n    return this.prepend(contentView);\n  }\n\n  public replaceContent(contentView: HTMLElement): SplitItemView {\n    this.root.replaceChild(contentView, this.contentView);\n    this.contentView = contentView;\n    contentView.classList.add('flex', 'flex-1');\n    return this;\n  }\n\n  public setGrow(className = 'flex-grow'): void {\n    this.root.classList.remove(this._shrinkClassName);\n    this._shrinkClassName = '';\n    this._growClassName = className;\n    this.root.classList.add(this._growClassName);\n  }\n\n  public setShrink(className = 'flex-shrink'): void {\n    this.root.classList.remove(this._growClassName);\n    this._growClassName = '';\n    this._shrinkClassName = className;\n    this.root.classList.add(this._shrinkClassName);\n  }\n\n  public isShrink(): boolean {\n    return !!this._growClassName;\n  }\n\n  private setDefaultClass() {\n    this.root.classList.add('flex-grow', 'rounded-xl');\n    this.root.classList.add('relative');\n    this.root.classList.add(...this._bgColorClassName);\n  }\n\n  private addExpandButton() {\n    this.expand = new SplitExpand({ target: this.root });\n  }\n  /** To hide expand button */\n  public hideExpandButton(): void {\n    this.expand.expandHidden = true;\n  }\n\n  public waitForMerge(direction: 'w' | 'e' | 's' | 'n'): void {\n    this.cancelWaitForMerge();\n    this.root.classList.add('wait-for-merge');\n    this.expand.mergeDirection = directionStyles[direction];\n  }\n\n  public cancelWaitForMerge(): void {\n    this.root.classList.remove('wait-for-merge');\n    this.expand.mergeDirection = '';\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SvelteModule.html":{"url":"classes/SvelteModule.html","title":"class - SvelteModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SvelteModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/modules/svelte-module.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Controller\n            \n\n            \n                Implements\n            \n            \n                            Module\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _view\n                            \n                            \n                                    Private\n                                comp\n                            \n                            \n                                    Public\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Abstract\n                                initWithComponent\n                            \n                            \n                                    Abstract\n                                serialize\n                            \n                            \n                                    Public\n                                view\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-module.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SvelteComponentDev\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-module.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/core/parts/modules/svelte-module.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: T)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        initWithComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    initWithComponent(target: Element)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SvelteComponentDev\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        serialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    serialize()\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/modules/svelte-module.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        view\n                        \n                    \n                \n            \n            \n                \n                    \n                    view()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\nimport type { SvelteComponentDev } from 'svelte/internal';\nimport { Controller } from '@cosmic/core/browser';\nimport type { Module } from './module';\n\n@injectable()\nexport abstract class SvelteModule extends Controller implements Module {\n  private comp: SvelteComponentDev;\n  private _view: HTMLElement;\n  public props: T;\n\n  public view() {\n    return this._view;\n  }\n\n  public async init(props: T) {\n    this.props = props;\n    this._view = this._view || document.createElement('div');\n    return this;\n  }\n\n  abstract initWithComponent(target: Element): SvelteComponentDev;\n\n  viewWillAppear() {\n    this.comp = this.initWithComponent(this._view);\n  }\n\n  public async destroy() {\n    this.comp.$destroy();\n    if (this._view.parentNode) {\n      this._view.parentNode.removeChild(this._view);\n    }\n    return this;\n  }\n\n  abstract serialize(): T;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/View.html":{"url":"classes/View.html","title":"class - View","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  View\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/view.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root?: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/view.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/view.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        type FlowValue = '1' | 'auto' | 'initial' | 'none';\n\nexport default class View {\n  public root: HTMLElement;\n  constructor(root?: HTMLElement) {\n    this.root = root || document.createElement('div');\n  }\n  setFlow(type: FlowValue) {\n    this.root.classList.remove('flex-1', 'flex-auto', 'flex-initial', 'flex-none');\n    this.root.classList.add(`flex-${type}`);\n    return this;\n  }\n  append(child: HTMLElement) {\n    this.root.appendChild(child);\n    return this;\n  }\n  prepend(...childs: HTMLElement[]) {\n    this.root.prepend(...childs);\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeightMap.html":{"url":"interfaces/WeightMap.html","title":"interface - WeightMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WeightMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [index: string]:        number\n\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:11\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Workbench.html":{"url":"classes/Workbench.html","title":"class - Workbench","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Workbench\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Controller\n            \n\n            \n                Implements\n            \n            \n                            Module\n                            ItemGenerateDelegate\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                moduleFactory\n                            \n                            \n                                    Public\n                                props\n                            \n                            \n                                    Private\n                                splitBoard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                expandNewItem\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                serialize\n                            \n                            \n                                view\n                            \n                            \n                                viewDidAppear\n                            \n                            \n                                viewDidDisappear\n                            \n                            \n                                viewWillAppear\n                            \n                            \n                                viewWillDisappear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleFactory: ModuleFactory)\n                    \n                \n                        \n                            \n                                Defined in src/modules/workbench/index.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleFactory\n                                                  \n                                                        \n                                                                        ModuleFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        moduleFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModuleFactory\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkbenchProps\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        splitBoard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SplitBoardView>\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/workbench/index.ts:20\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expandNewItem\n                        \n                    \n                \n            \n            \n                \nexpandNewItem(view: ModuleItem, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    view\n                                    \n                                                ModuleItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(props: WorkbenchProps)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                WorkbenchProps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/workbench/index.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { type: \"col\" | \"row\"; minWidth: number; scale: {}; modules: {}; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n            \n                \nview()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidAppear\n                        \n                    \n                \n            \n            \n                \nviewDidAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDidDisappear\n                        \n                    \n                \n            \n            \n                \nviewDidDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillAppear\n                        \n                    \n                \n            \n            \n                \nviewWillAppear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewWillDisappear\n                        \n                    \n                \n            \n            \n                \nviewWillDisappear()\n                \n            \n\n\n            \n                \n                    Inherited from         Controller\n\n                \n            \n            \n                \n                        Defined in         Controller:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\nimport { ModuleItem } from './module-item';\n\ninterface WorkbenchProps {\n  type: 'col' | 'row';\n  minWidth: number;\n  scale: number[];\n  modules?: ModuleConfig[];\n}\n\n@injectable()\nexport default class Workbench\n  extends Controller\n  implements Module, ItemGenerateDelegate>\n{\n  public props: WorkbenchProps;\n  private splitBoard: SplitBoardView>;\n  private moduleFactory: ModuleFactory;\n  constructor(@inject('ModuleFactory') moduleFactory: ModuleFactory) {\n    super();\n    this.splitBoard = new SplitBoardView>().setFlow('1');\n    this.splitBoard.itemGenerateDelegate = this;\n    this.moduleFactory = moduleFactory;\n  }\n  view() {\n    return this.splitBoard.root;\n  }\n  async init(props: WorkbenchProps) {\n    this.props = props;\n    this.splitBoard.direction = directionType[props.type];\n    for (const p of props.modules || []) {\n      const item = new ModuleItem();\n      item.loader = this.moduleFactory.load(p.id, p);\n      item.moduleId = p.id;\n      this.splitBoard.addItem(item);\n    }\n    this.splitBoard.applySplit(\n      this.splitBoard.direction === directionType.col ? 'horizontal' : 'vertical',\n      props.scale || []\n    );\n    return this;\n  }\n\n  viewWillAppear(): void {\n    this.splitBoard.items.forEach((item, index) => {\n      const view = this.splitBoard.items[index];\n      item.loader.then((module) => {\n        if (module instanceof Controller) {\n          view.setContent(module.view());\n          view.module = module;\n          module.viewWillAppear();\n          module.viewDidDisappear();\n        }\n      });\n    });\n    /** to be completed */\n  }\n  viewDidAppear(): void {\n    /** to be completed */\n  }\n\n  viewWillDisappear(): void {\n    /** to be completed */\n  }\n  viewDidDisappear(): void {\n    /** to be completed */\n  }\n\n  public async destroy() {\n    const view = this.view();\n    this.viewWillDisappear();\n    if (view.parentNode) {\n      view.parentNode.removeChild(view);\n    }\n    this.viewDidDisappear();\n    return this;\n  }\n  expandNewItem(view: ModuleItem, index: number) {\n    const item = view.clone();\n    item.loader = this.moduleFactory.load(item.moduleId, view.module.serialize());\n    item.loader.then((module) => {\n      if (module instanceof Controller) {\n        item.module = module;\n        item.setContent(module.view());\n        module.viewWillAppear();\n        module.viewDidDisappear();\n      }\n    });\n    return item;\n  }\n\n  serialize() {\n    return {\n      type: this.props.type,\n      minWidth: this.props.minWidth,\n      scale: this.props.scale,\n      modules: [],\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkbenchProps.html":{"url":"interfaces/WorkbenchProps.html","title":"interface - WorkbenchProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkbenchProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workbench/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            minWidth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            modules\n                                        \n                                \n                                \n                                        \n                                            scale\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        minWidth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minWidth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modules\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modules:     ModuleConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scale:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"col\" | \"row\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"col\" | \"row\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { injectable, inject } from 'inversify';\nimport type { Module, ModuleFactory, ModuleConfig } from '@cosmic/core/parts';\nimport { Controller, SplitBoardView, directionType } from '@cosmic/core/browser';\nimport type { ItemGenerateDelegate } from '@cosmic/core/browser';\nimport { ModuleItem } from './module-item';\n\ninterface WorkbenchProps {\n  type: 'col' | 'row';\n  minWidth: number;\n  scale: number[];\n  modules?: ModuleConfig[];\n}\n\n@injectable()\nexport default class Workbench\n  extends Controller\n  implements Module, ItemGenerateDelegate>\n{\n  public props: WorkbenchProps;\n  private splitBoard: SplitBoardView>;\n  private moduleFactory: ModuleFactory;\n  constructor(@inject('ModuleFactory') moduleFactory: ModuleFactory) {\n    super();\n    this.splitBoard = new SplitBoardView>().setFlow('1');\n    this.splitBoard.itemGenerateDelegate = this;\n    this.moduleFactory = moduleFactory;\n  }\n  view() {\n    return this.splitBoard.root;\n  }\n  async init(props: WorkbenchProps) {\n    this.props = props;\n    this.splitBoard.direction = directionType[props.type];\n    for (const p of props.modules || []) {\n      const item = new ModuleItem();\n      item.loader = this.moduleFactory.load(p.id, p);\n      item.moduleId = p.id;\n      this.splitBoard.addItem(item);\n    }\n    this.splitBoard.applySplit(\n      this.splitBoard.direction === directionType.col ? 'horizontal' : 'vertical',\n      props.scale || []\n    );\n    return this;\n  }\n\n  viewWillAppear(): void {\n    this.splitBoard.items.forEach((item, index) => {\n      const view = this.splitBoard.items[index];\n      item.loader.then((module) => {\n        if (module instanceof Controller) {\n          view.setContent(module.view());\n          view.module = module;\n          module.viewWillAppear();\n          module.viewDidDisappear();\n        }\n      });\n    });\n    /** to be completed */\n  }\n  viewDidAppear(): void {\n    /** to be completed */\n  }\n\n  viewWillDisappear(): void {\n    /** to be completed */\n  }\n  viewDidDisappear(): void {\n    /** to be completed */\n  }\n\n  public async destroy() {\n    const view = this.view();\n    this.viewWillDisappear();\n    if (view.parentNode) {\n      view.parentNode.removeChild(view);\n    }\n    this.viewDidDisappear();\n    return this;\n  }\n  expandNewItem(view: ModuleItem, index: number) {\n    const item = view.clone();\n    item.loader = this.moduleFactory.load(item.moduleId, view.module.serialize());\n    item.loader.then((module) => {\n      if (module instanceof Controller) {\n        item.module = module;\n        item.setContent(module.view());\n        module.viewWillAppear();\n        module.viewDidDisappear();\n      }\n    });\n    return item;\n  }\n\n  serialize() {\n    return {\n      type: this.props.type,\n      minWidth: this.props.minWidth,\n      scale: this.props.scale,\n      modules: [],\n    };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/classBuilder.html":{"url":"classes/classBuilder.html","title":"class - classBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  classBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                orderedConfigs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addConfig\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Private\n                                insertConfig\n                            \n                            \n                                    Private\n                                normalizeWeight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configs: stateConfig[], weightMap: WeightMap)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                        stateConfig[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weightMap\n                                                  \n                                                        \n                                                                        WeightMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orderedConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         stateConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/class-builder.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    addConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        normalizeWeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    normalizeWeight(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         stateConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/classConfig.html":{"url":"interfaces/classConfig.html","title":"interface - classConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  classConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            createWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            mainWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            notification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            interface\n            ISettings\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            variable\n            settings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            class\n            classBuilder\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            classConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            stateConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            WeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            variable\n            defaultWeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/controller.ts\n            \n            class\n            Controller\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.controller.ts\n            \n            class\n            SplitBoardController\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            class\n            SplitBoardView\n            \n                3 %\n                (1/28)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            variable\n            lowBoardRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-item.view.ts\n            \n            class\n            SplitItemView\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/core/browser/layout/type.ts\n            \n            interface\n            ISplitBoardView\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/core/browser/layout/type.ts\n            \n            interface\n            ItemGenerateDelegate\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            function\n            makeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BgColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BorderColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlAccentColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlBackgroundColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlDisabledColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlForbiddenColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlHighlightColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            FourthBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            GridBackgroundColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            LabelColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemBlueColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemGrayColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemOrangeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemPinkColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemRedColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemYellowColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TextFieldBackground\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/view.ts\n            \n            class\n            View\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/color-ref.ts\n            \n            class\n            ColorRef\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/uuid.ts\n            \n            variable\n            uuid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/ioc/inject.ts\n            \n            function\n            inject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module-factory.ts\n            \n            class\n            ModuleFactory\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module-factory.ts\n            \n            interface\n            ModuleConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/parts/modules/module.ts\n            \n            interface\n            Module\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/core/parts/modules/svelte-module.ts\n            \n            class\n            SvelteModule\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/canvas-kit.ts\n            \n            function\n            getCanvasKit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/canvas-kit.ts\n            \n            variable\n            CanvasKitInit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/context.ts\n            \n            class\n            Context\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/base.ts\n            \n            class\n            Base\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/corner.ts\n            \n            class\n            CornerMixin\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/corner.ts\n            \n            class\n            RectangleCornerMixin\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/geometry.ts\n            \n            class\n            GeometryMixin\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/layout.ts\n            \n            class\n            LayoutMixin\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/mixin/shape.ts\n            \n            class\n            DefaultShapeMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/draw-canvas/skia-wasm/rectangle.ts\n            \n            class\n            Rectangle\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/menu-group/base-menu.ts\n            \n            class\n            BaseMenu\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/menu-group/index.ts\n            \n            class\n            MenuBar\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/menu-group/index.ts\n            \n            interface\n            MenuProps\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/property-panel/index.ts\n            \n            class\n            PropertyPanel\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/resource-explorer/index.ts\n            \n            class\n            ResourceExplorer\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/shape-canvas/index.ts\n            \n            class\n            ShapeCanvas\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/workbench/index.ts\n            \n            class\n            Workbench\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/workbench/index.ts\n            \n            interface\n            WorkbenchProps\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/workbench/module-item.ts\n            \n            class\n            ModuleItem\n            \n                4 %\n                (1/24)\n            \n        \n        \n            \n                \n                src/workbench/desktop/app.ts\n            \n            class\n            App\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/workbench/desktop/main.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/services/appearance-service.ts\n            \n            class\n            AppearanceService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @types/color : ^3.0.1\n        \n            canvaskit-wasm : ~0.28.1\n        \n            color : ^3.1.3\n        \n            electron-log : ^4.3.1\n        \n            electron-store : ^7.0.2\n        \n            electron-updater : ^4.3.5\n        \n            eventemitter2 : ^6.4.4\n        \n            inversify : ^5.1.1\n        \n            keycode : ^2.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            smelte : ^1.1.5\n        \n            split.js : ^1.6.4\n        \n            ts-mixer : ~6.0.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppearanceType   (src/.../appearance.ts)\n                        \n                        \n                            directionStyles   (src/.../split-item.view.ts)\n                        \n                        \n                            directionType   (src/.../type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/common/appearance.ts\n    \n        \n            \n                \n                    \n                        \n                        AppearanceType\n                    \n                \n                    \n                        \n                            模式类型\n\n                        \n                    \n                        \n                            \n                                 any\n                            \n                        \n                        \n                            \n                                 light\n                            \n                        \n                        \n                            \n                                 dark\n                            \n                        \n            \n        \n\n    src/core/browser/layout/split-item.view.ts\n    \n        \n            \n                \n                    \n                        \n                        directionStyles\n                    \n                \n                        \n                            \n                                 w\n                            \n                        \n                        \n                            \n                                Value : merge-w\n                            \n                        \n                        \n                            \n                                 e\n                            \n                        \n                        \n                            \n                                Value : merge-e\n                            \n                        \n                        \n                            \n                                 s\n                            \n                        \n                        \n                            \n                                Value : merge-s\n                            \n                        \n                        \n                            \n                                 n\n                            \n                        \n                        \n                            \n                                Value : merge-n\n                            \n                        \n            \n        \n\n    src/core/browser/layout/type.ts\n    \n        \n            \n                \n                    \n                        \n                        directionType\n                    \n                \n                        \n                            \n                                 col\n                            \n                        \n                        \n                            \n                                 row\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getCanvasKit   (src/.../canvas-kit.ts)\n                        \n                        \n                            inject   (src/.../inject.ts)\n                        \n                        \n                            makeColor   (src/.../ui-color.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/draw-canvas/skia-wasm/canvas-kit.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCanvasKit\n                        \n                    \n                \n            \n            \n                \ngetCanvasKit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    src/core/parts/ioc/inject.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inject\n                        \n                    \n                \n            \n            \n                \ninject(token)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        makeColor\n                        \n                    \n                \n            \n            \n                \nmakeColor(anyColorHex, lightColorHex?, darkColorHex?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anyColorHex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    darkColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCosmic Design\n\n\n\n\n\n\n🚧 ing...\n\nThe Repository\nCosmic design is a concrete practice of D2R.\nThis repository is where we develop it together with the community. Not only do we work on code and issues here, we also publish our roadmap , development guide. This source code is available to everyone under the standard MIT license.\nAbout Cosmic Design\n\n🚧 ing...\n\nHow it works\nThe template required a minimum dependencies. Only Vite is used for building, nothing more.\nProject Structure\nThe structure of this template is very similar to the structure of a monorepo.\nThe entire source code of the program is divided into three modules (packages) that are bundled each independently:\n\nsrc/core\nInclude common dependencies, such as components, utils, ipc.\nsrc/app\nElectron main script.\nsrc/modules\nModules of tools\nsrc/workbench\nElectron web page.\n\nCosmic Components\n\nComponents StoryBook\nsrc/core/components\n\nCompile App\nNext step is run packaging and compilation a ready for distribution Electron app for macOS, Windows and Linux with \"auto update\" support out of the box.\nTo do this, using the electron-builder:\n\nIn npm script compile: This script is configured to compile the application as quickly as possible. It is not ready for distribution, is compiled only for the current platform and is used for debugging.\nIn GitHub Action: The application is compiled for any platform and ready-to-distribute files are automatically added to the draft GitHub release.\n\nContribution\nSee Wiki Contributing\n\nSource Code Organization\nUser Interface\nColor Set\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 qiansc\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    26 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/stateConfig.html":{"url":"interfaces/stateConfig.html","title":"interface - stateConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  stateConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:         classConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         classConfig[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n  id: string;\n  class: string[];\n}\n\ninterface stateConfig {\n  id: string;\n  classes: classConfig[];\n  weight?: number;\n}\ninterface WeightMap {\n  [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n};\nexport class classBuilder {\n  private orderedConfigs: stateConfig[] = [];\n  constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n    configs.forEach((config: stateConfig) => {\n      this.insertConfig(config);\n    });\n  }\n  public clear(): void {\n    this.orderedConfigs = [];\n  }\n  public addConfig(config: stateConfig): void {\n    this.insertConfig(config);\n  }\n  private insertConfig(config: stateConfig) {\n    const c = this.normalizeWeight(config);\n    let cursor = 0;\n    while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FlowValue   (src/.../view.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/browser/view.ts\n    \n    \n        \n            \n                \n                    \n                    FlowValue\n                \n            \n            \n                \n                        \"1\" | \"auto\" | \"initial\" | \"none\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (src/.../main.ts)\n                        \n                        \n                            BgColor   (src/.../ui-color.ts)\n                        \n                        \n                            BorderColor   (src/.../ui-color.ts)\n                        \n                        \n                            CanvasKitInit   (src/.../canvas-kit.ts)\n                        \n                        \n                            ControlAccentColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlDisabledColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlForbiddenColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlHighlightColor   (src/.../ui-color.ts)\n                        \n                        \n                            createWindow   (src/.../index.ts)\n                        \n                        \n                            defaultWeightMap   (src/.../class-builder.ts)\n                        \n                        \n                            FourthBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            GridBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            isProd   (src/.../index.ts)\n                        \n                        \n                            isProd   (src/.../logger.ts)\n                        \n                        \n                            LabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            logger   (src/.../logger.ts)\n                        \n                        \n                            lowBoardRoot   (src/.../split-board.view.ts)\n                        \n                        \n                            mainWindow   (src/.../index.ts)\n                        \n                        \n                            notification   (src/.../index.ts)\n                        \n                        \n                            SecondaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            SecondaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            settings   (src/.../settings.ts)\n                        \n                        \n                            SystemBlueColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemGrayColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemOrangeColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemPinkColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemRedColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemYellowColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            TextFieldBackground   (src/.../ui-color.ts)\n                        \n                        \n                            uuid   (src/.../uuid.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new App(document.body)\n                    \n                \n\n\n        \n    \n\n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#E0E0E0', '#E0E0E0', '#1F1F1F')\n                    \n                \n\n            \n                \n                    三级背景色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BorderColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D9D9D9', '#D9D9D9', '#D9D9D9')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlAccentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#5580c0', '#5580c0', '#5580c0')\n                    \n                \n\n            \n                \n                    高亮色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#FFFFFF', '#5D5F61')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlDisabledColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F9F9F9', '#F9F9F9', '#464749')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlForbiddenColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlHighlightColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#ffae2b', '#ffae2b', '#ffae2b')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FourthBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#BABABA', '#BABABA', '#454545')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GridBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F2F2F2', '#F2F2F2', '#2E2F30')\n                    \n                \n\n            \n                \n                    组件色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#E0E0E0')\n                    \n                \n\n            \n                \n                    三级标签色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D7D7D7', '#D7D7D7', '#272728')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#808080')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemBlueColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#729cd4', '#729cd4', '#729cd4')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemGrayColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c0c0c1', '#c0c0c1', '#c0c0c1')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemOrangeColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemPinkColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c4666f', '#c4666f', '#c4666f')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemRedColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemYellowColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n            \n                \n                    辅助色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#C6C6C6', '#C6C6C6', '#393939')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#3F3F3F', '#3F3F3F', '#3F3F3F')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TextFieldBackground\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#F2F2F2', '#454545')\n                    \n                \n\n\n        \n    \n\n    src/modules/draw-canvas/skia-wasm/canvas-kit.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CanvasKitInit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('/node_modules/canvaskit-wasm/bin/canvaskit.js')\n                    \n                \n\n\n        \n    \n\n    src/app/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createWindow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  mainWindow = new BrowserWindow({\n    width: 900,\n    height: 680,\n    webPreferences: {\n      devTools: isProd ? false : true,\n      contextIsolation: true,\n      enableRemoteModule: false,\n      // preload: join(__dirname, 'preload.js'),\n    },\n  });\n\n  const url =\n    // process.env.NODE_ENV === \"production\"\n    isProd\n      ? // in production, use the statically build version of our application\n        `file://${join(__dirname, 'dist/workbench/desktop/', 'index.html')}`\n      : // in dev, target the host and port of the local rollup web server\n        'http://localhost:5000/workbench/desktop/';\n\n  mainWindow.loadURL(url).catch((err: any) => {\n    logger.error(JSON.stringify(err));\n    app.quit();\n  });\n\n  if (!isProd) mainWindow.webContents.openDevTools();\n\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BrowserWindow | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Notification | null\n\n                    \n                \n\n\n        \n    \n\n    src/core/browser/class-builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultWeightMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WeightMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  undefined: 100,\n  default: 200,\n  focus: 300,\n  hover: 400,\n  active: 600,\n  disabled: 800,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/utils/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log\n                    \n                \n\n\n        \n    \n\n    src/core/browser/layout/split-board.view.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lowBoardRoot\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('FlowTableRoot')\n                    \n                \n\n\n        \n    \n\n    src/app/utils/settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ElectronStore({\n  defaults: {\n    check: false,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/core/common/uuid.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): string => {\n  const s: string[] | number[] = [];\n  const hexDigits = '0123456789abcdef';\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
