var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/App.html",[0,0.08,1,1.742]],["body/classes/App.html",[0,0.054,1,1.783,2,0.358,3,0.319,4,0.281,5,0.281,6,1.738,7,0.149,8,0.605,9,1.021,10,3.906,11,2.813,12,0.903,13,4.271,14,4.271,15,4.271,16,4.271,17,4.271,18,4.271,19,3.177,20,3.177,21,4.271,22,4.271,23,3.177,24,4.271,25,0.656,26,1.738,27,2.458,28,1.337,29,3.177,30,1,31,0.037,32,1,33,0.587,34,0.813,35,1.999,36,2.101,37,0.743,38,0.791,39,2.061,40,2.629,41,2.101,42,1.575,43,1.267,44,2.101,45,2.101,46,2.101,47,2.101,48,2.101,49,3.177,50,2.101,51,3.177,52,2.101,53,2.101,54,2.101,55,3.177,56,2.886,57,2.101,58,2.101,59,1.575,60,1.179,61,1.738,62,1.321,63,2.101,64,2.629,65,1.179,66,1.738,67,0.87,68,1.321,69,3.177,70,1.5,71,1.316,72,2.268,73,2.101,74,3.177,75,2.101,76,3.177,77,3.177,78,2.101,79,3.177,80,2.101,81,3.177,82,2.101,83,1.179,84,3.177,85,1.5,86,1.061,87,1.5,88,0.319,89,1.5,90,2.268,91,2.101,92,2.101,93,2.101,94,2.101,95,2.101,96,2.101,97,2.101,98,2.101,99,2.101,100,2.101,101,2.101,102,1.39,103,3.177,104,2.101,105,2.101,106,2.101,107,2.101,108,2.101,109,2.101,110,2.101,111,2.101,112,2.101,113,1.5,114,2.101,115,2.629,116,2.101,117,3.535,118,2.101,119,2.157,120,2.268,121,4.271,122,3.535,123,2.101,124,3.177,125,2.101,126,2.101,127,2.101,128,2.101,129,2.101,130,2.101,131,2.101,132,1.738,133,2.101,134,3.171,135,2.101,136,2.101,137,2.101,138,2.101,139,2.101,140,2.101,141,3.177,142,2.101,143,2.101,144,2.101,145,2.101,146,0.012,147,0.019,148,0.012]],["title/classes/AppearanceService.html",[0,0.08,62,1.952]],["body/classes/AppearanceService.html",[0,0.086,2,0.567,3,0.504,4,0.445,5,0.445,7,0.236,8,0.838,9,1.188,12,1.251,28,1.279,30,1.03,31,0.037,32,1.03,33,0.711,34,0.838,37,1.03,38,1.659,39,1.659,42,1.402,43,1.111,56,3.66,59,1.402,60,1.866,61,2.75,62,2.769,88,0.504,113,3.143,146,0.02,147,0.026,148,0.02,149,4.648,150,2.373,151,4.936,152,4.936,153,1.121,154,4.402,155,4.402,156,3.324,157,4.348,158,3.324,159,4.402,160,2.75,161,4.402,162,2.091,163,3.324,164,4.402,165,3.324,166,3.143,167,2.091,168,3.324,169,4.936,170,3.324,171,3.324,172,1.377]],["title/classes/BaseMenu.html",[0,0.08,68,1.952]],["body/classes/BaseMenu.html",[0,0.096,2,0.634,3,0.564,4,0.498,5,0.498,7,0.264,8,0.901,9,1.102,12,1.345,25,1.161,28,1.219,30,1.108,31,0.037,32,1.108,33,0.663,34,0.901,42,1.056,43,0.786,59,1.345,64,3.077,65,3.078,66,3.077,67,1.541,68,2.978,70,3.915,71,2.272,88,0.564,89,2.654,146,0.022,147,0.028,148,0.022,153,0.992,173,3.915,174,3.077,175,5.209,176,4.735,177,3.718,178,4.687,179,4.687,180,4.735,181,5.209,182,4.735,183,3.718,184,1.877,185,3.718,186,3.718,187,3.718,188,3.718,189,3.718]],["title/classes/ColorRef.html",[0,0.08,190,2.215]],["body/classes/ColorRef.html",[0,0.086,2,0.572,3,0.509,4,0.449,5,0.449,7,0.238,8,0.843,9,1.247,12,1.258,25,1.047,28,1.283,30,1.036,31,0.037,32,1.036,33,0.659,34,0.843,37,1.036,42,0.952,56,3.448,59,1.258,88,0.509,113,2.393,146,0.02,147,0.026,148,0.02,153,0.944,172,2.184,190,3.16,191,4.659,192,2.774,193,5.742,194,5.742,195,5.742,196,4.432,197,4.426,198,4.426,199,2.485,200,3.352,201,3.352,202,4.426,203,3.352,204,3.352,205,4.956,206,4.426,207,4.426,208,3.352,209,4.956,210,3.352,211,3.352]],["title/interfaces/ISettings.html",[212,0.726,213,2.215]],["body/interfaces/ISettings.html",[3,0.665,4,0.587,5,0.587,7,0.311,8,0.997,31,0.036,33,0.513,37,1.025,39,1.651,59,1.245,88,0.665,102,1.131,146,0.026,147,0.031,148,0.026,212,1.025,213,3.74,214,2.212,215,3.127,216,4.913,217,4.002,218,4.335,219,3.127,220,3.625,221,3.74,222,3.625,223,2.756]],["title/classes/Menu.html",[0,0.08,71,1.286]],["body/classes/Menu.html",[0,0.061,2,0.4,3,0.356,4,0.315,5,0.315,7,0.357,8,0.657,9,1.271,10,3.433,11,2.533,12,0.981,25,0.733,27,2.195,28,1.353,30,1.056,31,0.037,32,1.274,33,0.648,34,0.859,37,1.056,38,1.542,39,1.7,40,2.856,42,1.366,43,1.128,59,1.282,67,1.696,71,1.87,88,0.356,90,2.464,102,0.891,119,1.185,122,1.943,146,0.014,147,0.02,148,0.014,153,1.129,172,1.696,178,3.387,184,2.624,199,1.318,224,1.943,225,4.16,226,2.154,227,4.808,228,4.093,229,4.093,230,4.513,231,4.513,232,2.856,233,3.451,234,3.451,235,3.451,236,1.79,237,3.451,238,2.347,239,2.347,240,2.347,241,2.993,242,2.347,243,2.347,244,4.808,245,2.347,246,2.347,247,2.347,248,2.347,249,3.451,250,3.025,251,2.347,252,3.451,253,2.083,254,2.347,255,3.451,256,2.347,257,2.347,258,1.43,259,2.347,260,1.676,261,2.347,262,2.347,263,2.347,264,2.347,265,2.347,266,2.347,267,2.347,268,2.347,269,2.347,270,2.347,271,2.347,272,2.347,273,0.884,274,2.347,275,2.347,276,2.347,277,3.451,278,2.347,279,2.347,280,2.347]],["title/classes/MenuGroupService.html",[0,0.08,65,1.742]],["body/classes/MenuGroupService.html",[0,0.082,2,0.544,3,0.484,4,0.428,5,0.428,7,0.227,8,0.816,9,1.174,10,3.85,12,1.217,25,1.51,27,2.462,28,1.299,30,1.003,31,0.037,32,1.003,33,0.605,34,0.816,39,1.202,42,1.374,43,1.093,59,1.217,60,1.791,65,2.405,67,2.35,71,2.466,88,0.484,90,3.058,102,1.248,146,0.019,147,0.025,148,0.019,150,2.278,153,1.112,160,2.641,166,3.058,172,1.775,226,1.775,281,4.694,282,4.836,283,5.169,284,4.284,285,4.284,286,4.284,287,3.191,288,4.284,289,3.191,290,4.284,291,3.191,292,3.191,293,4.284,294,3.191,295,2.641,296,3.191,297,3.191,298,3.191,299,3.191,300,3.191,301,4.284,302,3.191,303,3.191,304,3.191]],["title/classes/MenuItem.html",[0,0.08,241,1.742]],["body/classes/MenuItem.html",[0,0.085,2,0.56,3,0.498,4,0.44,5,0.44,7,0.233,8,0.831,9,1.274,11,1.843,25,1.025,28,1.31,30,0.768,31,0.037,32,0.768,33,0.713,34,0.625,43,0.694,59,0.933,67,1.36,71,1.36,88,0.794,102,0.847,146,0.019,147,0.026,148,0.019,153,0.934,184,2.64,212,0.768,225,3.502,226,2.033,236,1.7,241,3.056,250,2.747,258,1.36,260,2.344,305,3.206,306,1.843,307,3.996,308,4.059,309,3.886,310,3.613,311,4.366,312,3.733,313,3.283,314,3.283,315,3.283,316,3.733,317,3.283,318,2.747,319,2.344,320,2.717,321,2.717,322,2.717,323,2.065,324,2.717,325,2.717,326,2.344,327,2.717,328,2.717,329,2.717,330,2.717]],["title/interfaces/MenuItemConfig.html",[184,1.567,212,0.726]],["body/interfaces/MenuItemConfig.html",[0,0.091,3,0.537,4,0.474,5,0.474,7,0.251,8,0.873,9,1.138,11,1.985,31,0.037,33,0.717,34,0.873,43,0.748,59,1.005,67,1.466,71,1.466,88,0.817,102,0.913,146,0.021,147,0.027,148,0.021,153,0.673,184,2.569,212,0.828,214,1.786,225,2.525,226,1.466,236,1.816,241,2.856,250,2.225,258,1.466,260,2.525,305,1.985,306,1.985,307,4.152,308,2.927,309,4.079,310,2.927,312,3.981,316,3.981,318,2.884,319,2.525,320,2.927,321,2.927,322,2.927,323,2.225,324,4.454,325,2.927,326,2.525,327,2.927,328,2.927,329,2.927,330,2.927]],["title/classes/SplitBoardController.html",[0,0.08,331,1.952]],["body/classes/SplitBoardController.html",[0,0.043,2,0.287,3,0.255,4,0.225,5,0.225,7,0.328,8,0.509,9,1.268,12,0.759,25,0.525,27,0.767,28,1.28,30,0.968,31,0.038,32,0.968,33,0.625,34,0.788,37,1.031,38,1.559,42,1.251,43,1.07,59,0.945,83,2.128,85,1.908,86,0.849,87,1.2,88,0.255,89,1.2,102,0.978,119,1.349,146,0.01,147,0.016,148,0.01,153,0.94,162,2.093,172,1.714,223,2.093,253,2.411,258,0.696,273,1.98,331,1.681,332,2.789,333,1.391,334,3.326,335,3.326,336,3.326,337,3.326,338,3.326,339,3.326,340,4.618,341,4.618,342,3.79,343,2.672,344,2.672,345,2.672,346,2.672,347,3.79,348,1.681,349,2.672,350,1.349,351,2.772,352,1.681,353,1.681,354,1.681,355,1.681,356,1.681,357,1.681,358,1.681,359,1.681,360,2.672,361,4.188,362,1.681,363,3.645,364,2.672,365,1.681,366,2.672,367,5.06,368,1.681,369,3.966,370,2.672,371,1.681,372,1.681,373,1.057,374,2.375,375,3.822,376,2.672,377,3.79,378,2.672,379,1.391,380,2.093,381,1.391,382,3.326,383,1.681,384,3.326,385,1.681,386,3.326,387,3.326,388,3.326,389,1.681,390,1.681,391,1.681,392,1.681,393,1.681,394,1.681,395,1.681,396,1.681,397,1.681,398,1.681,399,1.681,400,1.681,401,2.672,402,2.672,403,1.681,404,1.681,405,1.681,406,1.681,407,1.681,408,3.326,409,1.057,410,5.06,411,1.681,412,1.681,413,1.681,414,1.681,415,1.681,416,1.681,417,1.681,418,3.79,419,2.211,420,1.391,421,1.681,422,2.672,423,1.391,424,1.391,425,2.211,426,1.391,427,1.2,428,1.391,429,1.391,430,4.404,431,4.404,432,2.672,433,3.137,434,2.672,435,3.645,436,2.672,437,1.681,438,2.672,439,1.057,440,1.681,441,1.057,442,2.211,443,1.681,444,1.681]],["title/classes/SplitBoardView.html",[0,0.08,83,1.742]],["body/classes/SplitBoardView.html",[0,0.028,2,0.182,3,0.162,4,0.143,5,0.143,7,0.339,8,0.349,9,1.109,12,0.521,25,0.753,27,1.472,28,1.266,30,1.138,31,0.038,32,1.138,33,0.638,34,0.926,35,1.154,37,0.882,38,1.326,39,1.499,42,1.442,43,1.028,59,0.916,60,0.599,83,1.029,86,2.454,87,0.762,88,0.366,102,1.326,117,1.517,132,1.517,134,1.995,146,0.006,147,0.011,148,0.006,153,1.109,166,1.309,167,0.671,172,1.894,199,1.029,217,0.762,223,0.671,232,2.368,236,0.573,253,2.488,258,1.844,273,1.215,323,0.671,331,1.517,332,2.67,350,2.099,351,1.976,361,3.683,363,3.44,373,2.214,374,2.043,409,0.671,419,2.668,420,2.913,423,0.883,424,0.883,425,0.883,426,2.668,427,2.69,428,0.883,429,0.883,435,4.295,439,2.502,441,2.214,442,0.883,445,0.671,446,1.517,447,2.411,448,2.411,449,3.44,450,1.995,451,2.411,452,1.834,453,1.834,454,1.834,455,2.411,456,1.834,457,2.862,458,1.834,459,1.834,460,1.834,461,1.834,462,1.834,463,1.834,464,1.834,465,1.834,466,1.309,467,1.309,468,1.309,469,1.834,470,3.569,471,1.067,472,1.067,473,1.067,474,1.834,475,1.067,476,2.368,477,0.883,478,1.834,479,1.067,480,1.834,481,1.067,482,1.834,483,3.224,484,1.067,485,1.067,486,1.834,487,1.067,488,1.067,489,1.834,490,4.678,491,4.571,492,4.678,493,1.067,494,1.067,495,1.834,496,3.52,497,1.067,498,1.834,499,1.067,500,1.834,501,1.834,502,1.834,503,3.118,504,2.411,505,2.513,506,2.028,507,1.067,508,1.834,509,1.067,510,1.834,511,1.067,512,1.834,513,1.067,514,1.834,515,1.067,516,0.762,517,0.883,518,0.762,519,0.762,520,0.883,521,0.762,522,0.762,523,1.154,524,0.883,525,1.067,526,0.883,527,0.762,528,0.883,529,1.834,530,0.883,531,1.067,532,1.067,533,1.067,534,0.883,535,1.309,536,1.067,537,1.067,538,1.067,539,1.067,540,1.067,541,1.067,542,1.834,543,1.834,544,1.834,545,1.517,546,2.862,547,1.517,548,1.517,549,1.834,550,1.067,551,1.834,552,1.067,553,2.862,554,0.539,555,1.834,556,1.067,557,1.067,558,1.067,559,1.067,560,1.067,561,1.067,562,1.067,563,2.862,564,3.977,565,1.067,566,1.067,567,1.067,568,1.067,569,1.067,570,1.067,571,1.067,572,1.834,573,3.224,574,1.067,575,1.067,576,1.067,577,1.067,578,1.067,579,1.067,580,0.883,581,1.834,582,0.883,583,1.067,584,1.834,585,1.517,586,1.834,587,1.834,588,1.834,589,1.834,590,1.834,591,1.834,592,1.067,593,1.067,594,1.834,595,1.834,596,1.834,597,1.067,598,1.067,599,3.224,600,1.067,601,1.067,602,1.067,603,1.067,604,2.411,605,1.067,606,1.067,607,1.067,608,3.224,609,1.834,610,2.862,611,2.411,612,1.834,613,1.067,614,1.067,615,1.834,616,1.067,617,1.067]],["title/classes/SplitItemView.html",[0,0.08,86,1.567]],["body/classes/SplitItemView.html",[0,0.048,2,0.321,3,0.285,4,0.252,5,0.252,7,0.134,8,0.556,9,1.212,12,0.829,25,1.117,27,2.501,28,1.358,30,1.166,31,0.037,32,1.166,33,0.655,34,0.948,35,1.836,37,1.081,38,1.645,39,0.709,42,1.556,43,1.143,59,1.016,85,1.343,86,2.332,88,0.285,119,0.95,120,1.343,146,0.011,147,0.017,148,0.011,153,1.143,172,1.482,217,2.084,236,1.556,258,0.779,323,1.183,332,2.873,350,2.515,351,1.638,373,1.183,374,2.084,375,3.612,380,2.905,409,1.183,439,2.746,441,2.746,446,2.415,449,1.556,466,2.084,467,2.084,468,2.084,476,3.336,477,1.556,505,3.116,506,2.746,516,1.343,517,1.556,518,1.343,519,1.343,520,1.556,521,1.343,522,1.343,523,1.836,524,1.556,530,1.556,534,1.556,535,3.44,548,1.556,585,3.988,618,1.343,619,3.577,620,3.577,621,3.577,622,4.032,623,4.032,624,4.032,625,4.032,626,2.919,627,2.919,628,4.032,629,2.919,630,2.919,631,2.919,632,2.919,633,2.919,634,4.032,635,1.333,636,2.919,637,1.474,638,1.881,639,1.881,640,1.881,641,1.881,642,4.032,643,1.881,644,1.881,645,1.881,646,2.919,647,2.919,648,1.881,649,2.919,650,1.881,651,2.919,652,1.881,653,1.881,654,2.919,655,1.881,656,4.032,657,3.577,658,2.919,659,1.881,660,2.919,661,2.919,662,1.881,663,1.881,664,1.556,665,1.881,666,1.881,667,3.577,668,2.919,669,1.881,670,1.881,671,1.881,672,2.919,673,3.577,674,1.881,675,1.881,676,1.881,677,1.881,678,1.881,679,1.881,680,1.881,681,1.881,682,1.881,683,1.881,684,1.881,685,2.919,686,1.881,687,1.881]],["title/classes/Test.html",[0,0.08,688,2.215]],["body/classes/Test.html",[0,0.113,2,0.747,3,0.665,4,0.587,5,0.587,7,0.311,12,1.489,28,1.025,30,1.025,31,0.036,32,1.025,33,0.513,34,0.834,42,1.245,43,0.926,88,0.665,119,2.645,146,0.026,147,0.031,148,0.026,153,1.067,236,1.75,688,3.74,689,3.625,690,5.239,691,5.239,692,4.38,693,4.38,694,4.38]],["title/classes/View.html",[0,0.08,350,1.567]],["body/classes/View.html",[0,0.09,2,0.595,3,0.53,4,0.468,5,0.468,7,0.248,8,0.866,12,1.292,25,1.09,26,3.762,27,2.758,28,1.3,30,1.253,31,0.037,32,1.253,33,0.689,34,1.02,35,3.494,37,0.817,42,1.436,88,0.53,120,2.492,146,0.02,147,0.027,148,0.02,153,0.963,172,2.095,199,1.959,295,2.889,350,2.295,351,2.552,466,3.246,467,3.246,468,3.246,516,3.246,518,2.492,519,3.246,521,2.492,522,3.246,523,3.369,535,3.609,547,2.889,695,2.492,696,4.546,697,3.491,698,3.491,699,3.491,700,3.246,701,3.762,702,3.762,703,3.491,704,3.491,705,3.491]],["title/interfaces/WeightMap.html",[212,0.726,706,1.417]],["body/interfaces/WeightMap.html",[0,0.121,2,0.627,3,0.558,4,0.492,5,0.492,7,0.334,9,1.096,28,0.86,31,0.037,37,0.86,43,0.994,88,0.558,102,1.213,146,0.022,147,0.028,148,0.022,153,0.895,212,1.213,214,1.856,226,1.947,236,1.762,253,2.147,273,1.385,554,1.856,635,1.678,637,1.856,706,2.577,707,2.373,708,1.856,709,3.675,710,3.675,711,2.373,712,2.915,713,2.312,714,2.373,715,2.063,716,2.063,717,2.063,718,2.063,719,2.063,720,2.063,721,2.063,722,2.063,723,1.856,724,2.312,725,2.312,726,2.312,727,2.956,728,2.312,729,2.312,730,2.312,731,2.312,732,2.063,733,2.312,734,2.312,735,2.312,736,2.312]],["title/classes/classBuilder.html",[0,0.08,723,1.567]],["body/classes/classBuilder.html",[0,0.106,2,0.701,3,0.456,4,0.403,5,0.403,7,0.292,8,0.783,9,1.22,12,1.169,25,0.938,28,1.276,30,1.18,31,0.037,32,1.18,33,0.619,34,0.96,37,0.963,38,1.132,42,1.433,43,1.117,88,0.456,102,1.062,146,0.018,147,0.024,148,0.018,153,1.038,212,1.097,226,1.704,236,1.575,250,2.95,253,1.704,273,1.132,554,1.517,635,1.372,637,1.517,706,2.596,707,2.819,708,1.517,711,2.077,712,3.066,713,1.89,714,2.077,715,1.687,716,1.687,717,1.687,718,1.687,719,1.687,720,1.687,721,1.687,722,1.687,723,2.077,724,2.95,725,2.587,726,1.89,727,2.587,728,3.172,729,1.89,730,2.587,731,2.587,732,1.687,733,1.89,734,1.89,735,1.89,736,1.89,737,4.113,738,4.113,739,4.113,740,4.113,741,3.005,742,3.005,743,3.005,744,3.005,745,3.005,746,3.005]],["title/interfaces/classConfig.html",[212,0.726,711,1.567]],["body/interfaces/classConfig.html",[0,0.145,2,0.613,3,0.545,4,0.481,5,0.481,7,0.329,8,0.882,9,1.084,31,0.037,33,0.542,37,0.841,43,0.98,88,0.545,102,1.196,146,0.021,147,0.027,148,0.021,153,0.882,212,1.2,214,1.814,226,2.322,236,1.847,253,1.919,273,1.354,554,1.814,635,1.64,637,1.814,706,2.472,707,1.814,708,1.814,711,2.588,712,2.897,713,2.26,714,2.339,715,2.017,716,2.017,717,2.017,718,2.017,719,2.017,720,2.017,721,2.017,722,2.017,723,1.814,724,2.26,725,2.26,726,2.26,727,2.914,728,2.26,729,2.26,730,2.26,731,2.26,732,2.017,733,2.26,734,2.26,735,2.26,736,2.26]],["title/coverage.html",[747,3.479]],["body/coverage.html",[0,0.147,1,1.915,5,0.31,6,1.912,31,0.037,33,0.271,39,0.87,62,1.453,65,1.297,67,0.957,68,1.453,70,1.649,71,0.957,72,1.649,83,1.297,86,1.166,146,0.014,147,0.02,148,0.014,149,1.912,150,2.435,162,2.146,167,1.453,173,2.435,174,1.912,184,1.166,190,1.649,191,1.912,192,1.912,212,1.118,213,1.649,215,2.435,221,1.649,224,1.912,241,1.297,273,2.362,281,1.912,305,1.915,306,1.915,318,1.453,331,1.453,332,2.261,333,1.912,350,1.166,379,1.912,381,1.912,445,2.146,527,1.649,618,1.649,635,2.181,688,1.649,689,1.912,695,1.649,706,1.055,707,2.412,708,2.412,711,1.166,712,1.166,714,1.166,723,1.166,747,1.912,748,1.912,749,2.31,750,2.31,751,3.706,752,6.175,753,1.912,754,6.155,755,2.823,756,1.912,757,1.912,758,2.823,759,1.912,760,3.411,761,4.055,762,2.31,763,3.411,764,3.411,765,2.31,766,2.31,767,4.296,768,4.296,769,1.912,770,1.912,771,4.777,772,1.912,773,1.912,774,1.912,775,1.912,776,1.912,777,1.912,778,1.912,779,1.912,780,1.912,781,1.912,782,1.912,783,1.912,784,1.912,785,1.912,786,1.912,787,1.912,788,1.912,789,1.912,790,1.912,791,1.912,792,4.055,793,1.912,794,1.912,795,1.912,796,2.31,797,2.31,798,1.912,799,2.31,800,2.31]],["title/dependencies.html",[801,2.606,802,2.658]],["body/dependencies.html",[31,0.037,60,2.472,146,0.026,147,0.031,148,0.026,157,3.645,196,3.145,219,4.011,220,3.645,526,3.645,802,3.145,803,4.405,804,4.405,805,4.405,806,3.645,807,4.405,808,4.405,809,4.405,810,4.405,811,4.405,812,4.405,813,4.405,814,4.405,815,4.405,816,4.405,817,4.405,818,4.405,819,4.405,820,4.405]],["title/miscellaneous/enumerations.html",[821,1.08,822,3.081]],["body/miscellaneous/enumerations.html",[7,0.301,31,0.036,38,2.165,56,3.232,67,1.757,115,3.509,146,0.025,147,0.03,148,0.025,258,1.757,305,2.381,306,2.884,316,3.668,332,2.594,373,3.232,380,3.614,427,3.028,439,3.232,441,3.232,445,3.232,503,3.509,505,3.668,506,3.232,618,3.668,664,4.252,821,1.757,822,3.509,823,4.241,824,4.252,825,3.509,826,4.241,827,4.241]],["title/miscellaneous/functions.html",[821,1.08,828,3.081]],["body/miscellaneous/functions.html",[7,0.319,30,1.244,31,0.034,32,1.244,34,1.012,146,0.026,147,0.031,148,0.026,167,3.345,199,2.985,767,3.206,768,3.796,769,4.4,793,3.717,821,1.861,828,3.717,829,4.491,830,3.717,831,4.491,832,4.491,833,4.491,834,5.317,835,5.317,836,4.491]],["title/index.html",[7,0.185,837,2.157,838,2.157]],["body/index.html",[1,2.502,4,0.668,31,0.032,146,0.02,147,0.026,148,0.02,196,2.418,212,0.793,219,3.779,319,2.418,545,2.803,700,2.418,802,3.182,839,5.294,840,4.982,841,4.457,842,4.457,843,3.387,844,3.387,845,3.387,846,3.387,847,3.387,848,3.387,849,3.387,850,5.294,851,3.387,852,3.387,853,2.803,854,3.387,855,3.387,856,3.387,857,3.387,858,3.387,859,3.387,860,3.387,861,2.803,862,2.418,863,3.387,864,4.457,865,3.387,866,3.387,867,3.387,868,4.457,869,3.387,870,3.387,871,3.387,872,3.387,873,4.982,874,3.387,875,3.387,876,3.387,877,3.387,878,3.387,879,3.387,880,3.387,881,2.418,882,3.387,883,3.387,884,3.387,885,3.387,886,3.387,887,3.387,888,3.387,889,3.387,890,4.982,891,3.387,892,3.387,893,3.387,894,4.982,895,3.387,896,2.803,897,3.387,898,3.387,899,3.387,900,4.982,901,3.387,902,3.387,903,3.387,904,3.387,905,3.387,906,4.982,907,4.457,908,3.387,909,3.387,910,3.387,911,3.387,912,3.387,913,2.803,914,3.387,915,3.387,916,3.387,917,3.387,918,3.387,919,3.689,920,3.387,921,3.387,922,4.457,923,3.387,924,4.457,925,3.387,926,4.457,927,2.803,928,2.803,929,2.803,930,3.387,931,3.387,932,3.387,933,3.387,934,3.387,935,3.387,936,3.387,937,3.387,938,3.387,939,3.387]],["title/license.html",[837,2.157,838,2.157,862,1.861]],["body/license.html",[31,0.028,146,0.023,147,0.028,148,0.023,369,3.173,380,2.412,732,2.152,748,3.173,853,3.173,861,3.173,862,2.737,913,3.173,927,3.173,928,3.173,929,3.173,940,5.284,941,3.834,942,3.834,943,4.827,944,3.834,945,3.834,946,3.834,947,3.834,948,3.834,949,3.834,950,4.827,951,6.046,952,3.834,953,3.834,954,5.284,955,3.834,956,4.827,957,3.834,958,3.834,959,3.995,960,3.834,961,3.834,962,3.834,963,3.834,964,4.827,965,3.834,966,3.834,967,3.834,968,3.834,969,3.834,970,3.834,971,3.834,972,4.827,973,4.827,974,3.834,975,3.834,976,3.834,977,3.834,978,3.834,979,3.834,980,3.834,981,3.834,982,3.834,983,3.834,984,3.834,985,3.834,986,3.834,987,3.834,988,3.834,989,3.834,990,3.834,991,3.834,992,3.834,993,3.834,994,3.834,995,3.834,996,3.834,997,3.834,998,3.834,999,3.834,1000,3.834,1001,3.834]],["title/modules.html",[881,3.001]],["body/modules.html",[31,0.033,146,0.029,147,0.033,148,0.029,881,3.502]],["title/overview.html",[1002,3.479]],["body/overview.html",[2,0.826,31,0.033,146,0.028,147,0.033,148,0.028,214,2.446,433,4.01,1002,4.01,1003,4.845]],["title/interfaces/stateConfig.html",[212,0.726,712,1.567]],["body/interfaces/stateConfig.html",[0,0.118,2,0.916,3,0.534,4,0.472,5,0.472,7,0.325,8,0.871,9,1.074,31,0.037,33,0.595,34,0.871,37,0.824,43,0.967,88,0.534,102,1.18,146,0.021,147,0.027,148,0.021,153,0.871,212,1.188,214,1.778,226,2.307,236,1.782,253,2.227,273,1.327,554,1.778,635,1.608,637,1.778,706,2.454,707,1.778,708,1.778,711,2.713,712,2.934,713,3.38,714,2.309,715,1.977,716,1.977,717,1.977,718,1.977,719,1.977,720,1.977,721,1.977,722,1.977,723,1.778,724,2.215,725,2.215,726,2.215,727,2.876,728,2.215,729,2.215,730,2.215,731,2.215,732,1.977,733,2.215,734,2.215,735,2.215,736,2.215]],["title/miscellaneous/typealiases.html",[821,1.08,1004,3.723]],["body/miscellaneous/typealiases.html",[7,0.327,31,0.035,33,0.54,146,0.027,147,0.032,148,0.027,162,2.899,305,2.586,306,3.03,312,3.854,351,2.586,523,3.396,695,3.29,700,3.29,701,3.813,702,3.813,821,1.909,825,3.813,1005,4.608,1006,4.608]],["title/miscellaneous/variables.html",[821,1.08,1007,3.081]],["body/miscellaneous/variables.html",[1,1.7,7,0.14,11,2.07,31,0.037,33,0.574,37,1.423,38,2.286,39,1.389,72,2.163,102,0.952,119,0.996,146,0.012,147,0.018,148,0.012,173,1.409,179,1.633,215,1.409,216,1.633,218,1.633,221,2.163,222,1.633,223,2.319,236,0.946,253,0.818,258,1.528,273,0.744,307,2.632,309,2.953,318,1.906,326,2.632,332,0.996,409,1.906,445,1.906,450,1.633,470,3.051,506,1.241,527,2.163,528,1.633,554,0.996,580,1.633,582,1.633,635,0.901,637,0.996,706,0.901,707,0.996,708,1.53,714,1.53,715,1.108,716,1.108,717,1.108,718,1.108,719,1.108,720,1.108,721,1.108,722,1.108,751,1.633,753,2.507,755,4.058,756,3.423,757,3.051,758,1.633,759,2.507,767,1.409,768,4.211,770,2.507,772,2.507,773,2.507,774,2.507,775,2.507,776,2.507,777,2.507,778,2.507,779,2.507,780,2.507,781,2.507,782,2.507,783,2.507,784,2.507,785,2.507,786,2.507,787,2.507,788,2.507,789,2.507,790,2.507,791,2.507,794,1.633,795,1.633,798,1.633,806,1.633,821,0.818,824,1.633,830,4.86,896,1.633,919,1.633,959,1.633,1007,1.633,1008,1.973,1009,1.973,1010,4.136,1011,1.973,1012,3.029,1013,1.973,1014,1.973,1015,1.973,1016,3.687,1017,1.973,1018,3.029,1019,1.973,1020,1.973,1021,3.029,1022,1.973,1023,3.029,1024,3.029,1025,1.973,1026,1.973,1027,1.973,1028,1.973,1029,1.973,1030,3.029,1031,4.136,1032,1.973,1033,3.029,1034,1.973,1035,1.973,1036,3.029,1037,1.973,1038,3.029,1039,1.973,1040,3.029,1041,3.029,1042,1.973,1043,1.973,1044,1.973,1045,1.973,1046,1.973,1047,3.029,1048,1.973,1049,3.029,1050,3.029,1051,4.136,1052,1.973,1053,3.029,1054,1.973,1055,1.973,1056,1.973,1057,1.973,1058,3.029,1059,3.029,1060,1.973,1061,1.973,1062,1.973,1063,1.973,1064,1.973,1065,1.973,1066,1.973,1067,1.973,1068,1.973,1069,1.973,1070,3.687,1071,4.136,1072,1.973,1073,1.973,1074,1.973,1075,1.973,1076,1.973,1077,1.973,1078,1.973,1079,1.973,1080,1.973,1081,1.973,1082,1.973,1083,1.973,1084,1.973,1085,1.973,1086,1.973,1087,1.973,1088,1.973,1089,1.973,1090,3.029,1091,1.973,1092,1.973]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":273,"title":{},"body":{"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":760,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0123456789abcdef",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":351,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["1.1.5",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["1.6.4",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":771,"title":{},"body":{"coverage.html":{}}}],["1/21",{"_index":766,"title":{},"body":{"coverage.html":{}}}],["1/26",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":635,"title":{},"body":{"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["13",{"_index":1003,"title":{},"body":{"overview.html":{}}}],["15",{"_index":577,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1].root",{"_index":605,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1].root.after(item.root",{"_index":560,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["1f1f1f",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":377,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["2.2.0",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":141,"title":{},"body":{"classes/App.html":{}}}],["200",{"_index":715,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["2020",{"_index":941,"title":{},"body":{"license.html":{}}}],["272728",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e2f30",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":379,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["3.0.1",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["3.1.3",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":442,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["300",{"_index":717,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["393939",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3f3f3f",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3px",{"_index":581,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["4",{"_index":381,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["4.3.1",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["4.3.5",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":719,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["454545",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["464749",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4px",{"_index":540,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["5",{"_index":433,"title":{},"body":{"classes/SplitBoardController.html":{},"overview.html":{}}}],["5.1.1",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["5580c0",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5d5f61",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.4",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":142,"title":{},"body":{"classes/App.html":{}}}],["600",{"_index":721,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["680",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.2",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":575,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["729cd4",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["800",{"_index":637,"title":{},"body":{"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["808080",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["900",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_bgcolorclassname",{"_index":619,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_growclassname",{"_index":620,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_shrinkclassname",{"_index":621,"title":{},"body":{"classes/SplitItemView.html":{}}}],["_type",{"_index":151,"title":{},"body":{"classes/AppearanceService.html":{}}}],["_waitformergeitem",{"_index":447,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["above",{"_index":971,"title":{},"body":{"license.html":{}}}],["action",{"_index":927,"title":{},"body":{"index.html":{},"license.html":{}}}],["active",{"_index":720,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["activeexpand",{"_index":342,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["activeid",{"_index":334,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["addcolumn",{"_index":452,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addcolumn(item",{"_index":478,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addconfig",{"_index":737,"title":{},"body":{"classes/classBuilder.html":{}}}],["addconfig(config",{"_index":730,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["added",{"_index":545,"title":{},"body":{"classes/SplitBoardView.html":{},"index.html":{}}}],["addexpandbutton",{"_index":622,"title":{},"body":{"classes/SplitItemView.html":{}}}],["addrow",{"_index":453,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["addrow(item",{"_index":480,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["aliases",{"_index":1005,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":962,"title":{},"body":{"license.html":{}}}],["anycolor",{"_index":193,"title":{},"body":{"classes/ColorRef.html":{}}}],["anycolorhex",{"_index":836,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":1,"title":{"classes/App.html":{}},"body":{"classes/App.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app(document.body",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.quit",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appearance",{"_index":204,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearanceservice",{"_index":62,"title":{"classes/AppearanceService.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"coverage.html":{}}}],["appearancetype",{"_index":56,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"miscellaneous/enumerations.html":{}}}],["appearancetype.any",{"_index":210,"title":{},"body":{"classes/ColorRef.html":{}}}],["appearancetype.dark",{"_index":113,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{}}}],["appearancetype.light",{"_index":211,"title":{},"body":{"classes/ColorRef.html":{}}}],["append",{"_index":466,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["append(child",{"_index":516,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["application",{"_index":919,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["applicationmenus",{"_index":72,"title":{},"body":{"classes/App.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applysplit",{"_index":454,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["applysplit(direction",{"_index":482,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["aps",{"_index":108,"title":{},"body":{"classes/App.html":{}}}],["aps.onmodechanged((type",{"_index":110,"title":{},"body":{"classes/App.html":{}}}],["arising",{"_index":999,"title":{},"body":{"license.html":{}}}],["array",{"_index":179,"title":{},"body":{"classes/BaseMenu.html":{},"miscellaneous/variables.html":{}}}],["array):void",{"_index":186,"title":{},"body":{"classes/BaseMenu.html":{}}}],["associated",{"_index":952,"title":{},"body":{"license.html":{}}}],["authors",{"_index":989,"title":{},"body":{"license.html":{}}}],["auto",{"_index":700,"title":{},"body":{"classes/View.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["automatically",{"_index":930,"title":{},"body":{"index.html":{}}}],["available",{"_index":857,"title":{},"body":{"index.html":{}}}],["bababa",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar.svelte",{"_index":76,"title":{},"body":{"classes/App.html":{}}}],["base",{"_index":69,"title":{},"body":{"classes/App.html":{}}}],["basemenu",{"_index":68,"title":{"classes/BaseMenu.html":{}},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"coverage.html":{}}}],["bg",{"_index":633,"title":{},"body":{"classes/SplitItemView.html":{}}}],["bgcolor",{"_index":770,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["board",{"_index":529,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.controller",{"_index":525,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.controller.ts",{"_index":333,"title":{},"body":{"classes/SplitBoardController.html":{},"coverage.html":{}}}],["board.controller.ts:10",{"_index":357,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:11",{"_index":358,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:12",{"_index":352,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:14",{"_index":353,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:15",{"_index":349,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:28",{"_index":368,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:43",{"_index":371,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:50",{"_index":359,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:58",{"_index":372,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:6",{"_index":356,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:69",{"_index":365,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:7",{"_index":354,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:8",{"_index":355,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.controller.ts:80",{"_index":362,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["board.view",{"_index":85,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{}}}],["board.view.ts",{"_index":445,"title":{},"body":{"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["board.view.ts:107",{"_index":488,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:112",{"_index":509,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:131",{"_index":511,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:150",{"_index":513,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:159",{"_index":499,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:17",{"_index":473,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:18",{"_index":472,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:19",{"_index":475,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:193",{"_index":493,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:20",{"_index":471,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:21",{"_index":469,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:27",{"_index":494,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:31",{"_index":481,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:42",{"_index":479,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:54",{"_index":497,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:64",{"_index":507,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:67",{"_index":515,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:77",{"_index":485,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:83",{"_index":487,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["board.view.ts:95",{"_index":484,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["boolean",{"_index":217,"title":{},"body":{"interfaces/ISettings.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["bootstrap",{"_index":13,"title":{},"body":{"classes/App.html":{}}}],["bordercolor",{"_index":772,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":914,"title":{},"body":{"index.html":{}}}],["browserwindow",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder",{"_index":916,"title":{},"body":{"index.html":{}}}],["builder.ts",{"_index":708,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["builder.ts:11",{"_index":710,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["builder.ts:24",{"_index":740,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:30",{"_index":743,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:33",{"_index":742,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:36",{"_index":744,"title":{},"body":{"classes/classBuilder.html":{}}}],["builder.ts:44",{"_index":746,"title":{},"body":{"classes/classBuilder.html":{}}}],["building",{"_index":869,"title":{},"body":{"index.html":{}}}],["bundled",{"_index":883,"title":{},"body":{"index.html":{}}}],["button",{"_index":647,"title":{},"body":{"classes/SplitItemView.html":{}}}],["c",{"_index":732,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"license.html":{},"interfaces/stateConfig.html":{}}}],["c0c0c1",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c4666f",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c6c6c6",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback",{"_index":307,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["cancelformerge",{"_index":455,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["cancelformerge():void",{"_index":567,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["cancelwaitformerge",{"_index":623,"title":{},"body":{"classes/SplitItemView.html":{}}}],["case",{"_index":209,"title":{},"body":{"classes/ColorRef.html":{}}}],["cgray",{"_index":634,"title":{},"body":{"classes/SplitItemView.html":{}}}],["charge",{"_index":947,"title":{},"body":{"license.html":{}}}],["check",{"_index":216,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["checkdirection",{"_index":456,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["checkdirection(type",{"_index":486,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["checkexpandstate",{"_index":343,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["checkexpandstate(clientx",{"_index":360,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["child",{"_index":518,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["children",{"_index":308,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["childs",{"_index":521,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["claim",{"_index":992,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classbuilder",{"_index":723,"title":{"classes/classBuilder.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classconfig",{"_index":711,"title":{"interfaces/classConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["classname",{"_index":656,"title":{},"body":{"classes/SplitItemView.html":{}}}],["clear",{"_index":728,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["clientheight",{"_index":607,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["clientwidth",{"_index":606,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["clientx",{"_index":363,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["clienty",{"_index":361,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["code",{"_index":850,"title":{},"body":{"index.html":{}}}],["col",{"_index":503,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":196,"title":{},"body":{"classes/ColorRef.html":{},"dependencies.html":{},"index.html":{}}}],["color(appearancetype",{"_index":202,"title":{},"body":{"classes/ColorRef.html":{}}}],["color.ts",{"_index":768,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["colorref",{"_index":190,"title":{"classes/ColorRef.html":{}},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["colorsetroot",{"_index":103,"title":{},"body":{"classes/App.html":{}}}],["column",{"_index":421,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["command",{"_index":324,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["common",{"_index":888,"title":{},"body":{"index.html":{}}}],["community",{"_index":848,"title":{},"body":{"index.html":{}}}],["compilation",{"_index":905,"title":{},"body":{"index.html":{}}}],["compile",{"_index":900,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":922,"title":{},"body":{"index.html":{}}}],["components",{"_index":890,"title":{},"body":{"index.html":{}}}],["concrete",{"_index":843,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":970,"title":{},"body":{"license.html":{}}}],["config",{"_index":250,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/classBuilder.html":{}}}],["configs",{"_index":741,"title":{},"body":{"classes/classBuilder.html":{}}}],["configs.foreach((config",{"_index":726,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["configured",{"_index":918,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1000,"title":{},"body":{"license.html":{}}}],["console.log(`test",{"_index":693,"title":{},"body":{"classes/Test.html":{}}}],["console.log(item",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.warn('direction",{"_index":543,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["const",{"_index":102,"title":{},"body":{"classes/App.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{}}}],["constructor(anycolor",{"_index":197,"title":{},"body":{"classes/ColorRef.html":{}}}],["constructor(config",{"_index":310,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["constructor(configs",{"_index":725,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["constructor(container",{"_index":235,"title":{},"body":{"classes/Menu.html":{}}}],["constructor(groupmenuservice",{"_index":177,"title":{},"body":{"classes/BaseMenu.html":{}}}],["constructor(private",{"_index":89,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/SplitBoardController.html":{}}}],["constructor(root",{"_index":26,"title":{},"body":{"classes/App.html":{},"classes/View.html":{}}}],["constructor(view",{"_index":348,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["container",{"_index":10,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{}}}],["containermodule",{"_index":168,"title":{},"body":{"classes/AppearanceService.html":{}}}],["contentview",{"_index":585,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["contentview.classlist.add('flex",{"_index":668,"title":{},"body":{"classes/SplitItemView.html":{}}}],["context",{"_index":11,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["contextisolation",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":996,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":936,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":933,"title":{},"body":{"index.html":{}}}],["controlaccentcolor",{"_index":773,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlbackgroundcolor",{"_index":774,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controldisabledcolor",{"_index":775,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlforbiddencolor",{"_index":776,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlhighlightcolor",{"_index":777,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":448,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["copies",{"_index":964,"title":{},"body":{"license.html":{}}}],["copy",{"_index":950,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":940,"title":{},"body":{"license.html":{}}}],["cosmic",{"_index":839,"title":{},"body":{"index.html":{}}}],["cosmic/core/browser/layout/split",{"_index":84,"title":{},"body":{"classes/App.html":{}}}],["cosmic/core/common/appearance",{"_index":61,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{}}}],["cosmic/workbench/services/appearance",{"_index":63,"title":{},"body":{"classes/App.html":{}}}],["cosmic/workbench/services/menu",{"_index":66,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["coverage",{"_index":747,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createmenu",{"_index":230,"title":{},"body":{"classes/Menu.html":{}}}],["createwindow",{"_index":753,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["crosshair",{"_index":504,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["current",{"_index":923,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":734,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["d00000",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d1905d",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d2r",{"_index":845,"title":{},"body":{"index.html":{}}}],["d7d7d7",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d9d9d9",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":993,"title":{},"body":{"license.html":{}}}],["dark",{"_index":115,"title":{},"body":{"classes/App.html":{},"miscellaneous/enumerations.html":{}}}],["dark:bg",{"_index":636,"title":{},"body":{"classes/SplitItemView.html":{}}}],["darkcolor",{"_index":194,"title":{},"body":{"classes/ColorRef.html":{}}}],["darkcolorhex",{"_index":835,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date.now",{"_index":296,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["deal",{"_index":953,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1001,"title":{},"body":{"license.html":{}}}],["debugging",{"_index":925,"title":{},"body":{"index.html":{}}}],["default",{"_index":37,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":222,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["defaultscope",{"_index":91,"title":{},"body":{"classes/App.html":{}}}],["defaultweightmap",{"_index":714,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{}}}],["dependencies",{"_index":802,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["design",{"_index":840,"title":{},"body":{"index.html":{}}}],["desktop/menu",{"_index":292,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["destorysplit",{"_index":457,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["destroy",{"_index":231,"title":{},"body":{"classes/Menu.html":{}}}],["dev",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["develop",{"_index":846,"title":{},"body":{"index.html":{}}}],["development",{"_index":855,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":449,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["directionstyles",{"_index":664,"title":{},"body":{"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["directionstyles[direction",{"_index":686,"title":{},"body":{"classes/SplitItemView.html":{}}}],["directiontype",{"_index":373,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["directiontype.col",{"_index":419,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["directiontype.row",{"_index":425,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["disable",{"_index":321,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["disabled",{"_index":722,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["dist/workbench/desktop",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":928,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribution",{"_index":907,"title":{},"body":{"index.html":{}}}],["divided",{"_index":879,"title":{},"body":{"index.html":{}}}],["document.body.classlist.add('mode",{"_index":114,"title":{},"body":{"classes/App.html":{}}}],["document.body.classlist.remove('mode",{"_index":116,"title":{},"body":{"classes/App.html":{}}}],["document.createelement('div",{"_index":295,"title":{},"body":{"classes/MenuGroupService.html":{},"classes/View.html":{}}}],["document.createelement('style",{"_index":104,"title":{},"body":{"classes/App.html":{}}}],["document.queryselector('#main",{"_index":125,"title":{},"body":{"classes/App.html":{}}}],["documentation",{"_index":748,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["draft",{"_index":931,"title":{},"body":{"index.html":{}}}],["e",{"_index":505,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["e0e0e0",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":884,"title":{},"body":{"index.html":{}}}],["electron",{"_index":219,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{},"index.html":{}}}],["electron/.exec(process.execpath",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["electronstore",{"_index":218,"title":{},"body":{"interfaces/ISettings.html":{},"miscellaneous/variables.html":{}}}],["enableremotemodule",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entire",{"_index":877,"title":{},"body":{"index.html":{}}}],["enum",{"_index":323,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["enumerations",{"_index":822,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eslint",{"_index":320,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["event",{"_index":369,"title":{},"body":{"classes/SplitBoardController.html":{},"license.html":{}}}],["event.clientx",{"_index":397,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.clienty",{"_index":384,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.preventdefault",{"_index":398,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.stoppropagation",{"_index":399,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["event.target",{"_index":391,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["eventemitter2",{"_index":157,"title":{},"body":{"classes/AppearanceService.html":{},"dependencies.html":{}}}],["everyone",{"_index":858,"title":{},"body":{"index.html":{}}}],["evt",{"_index":152,"title":{},"body":{"classes/AppearanceService.html":{}}}],["expand",{"_index":375,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{}}}],["expand.svelte",{"_index":663,"title":{},"body":{"classes/SplitItemView.html":{}}}],["expandactive",{"_index":335,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expanded",{"_index":501,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["expandleavehandler",{"_index":336,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmouseuphandler",{"_index":337,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandmovehandler",{"_index":338,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["expandtype",{"_index":339,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["export",{"_index":88,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["express",{"_index":980,"title":{},"body":{"license.html":{}}}],["extends",{"_index":446,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["f2f2f2",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f9f9f9",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":223,"title":{},"body":{"interfaces/ISettings.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["ffae2b",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["file://${join(__dirname",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":929,"title":{},"body":{"index.html":{},"license.html":{}}}],["fitness",{"_index":985,"title":{},"body":{"license.html":{}}}],["flex",{"_index":535,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["flowvalue",{"_index":523,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["fn",{"_index":161,"title":{},"body":{"classes/AppearanceService.html":{}}}],["focus",{"_index":716,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":969,"title":{},"body":{"license.html":{}}}],["fourthbgcolor",{"_index":778,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":946,"title":{},"body":{"license.html":{}}}],["function",{"_index":162,"title":{},"body":{"classes/AppearanceService.html":{},"classes/SplitBoardController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":828,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":967,"title":{},"body":{"license.html":{}}}],["getexpandresizes",{"_index":458,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["getexpandresizes(index",{"_index":489,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["getmenuinsatance",{"_index":283,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["getting",{"_index":837,"title":{"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":926,"title":{},"body":{"index.html":{}}}],["granted",{"_index":945,"title":{},"body":{"license.html":{}}}],["gridbackgroundcolor",{"_index":779,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":67,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["groupmenu",{"_index":126,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.getmenuinsatance().init(menu.title",{"_index":129,"title":{},"body":{"classes/App.html":{}}}],["groupmenu.initcontainer(header",{"_index":128,"title":{},"body":{"classes/App.html":{}}}],["groupmenuservice",{"_index":181,"title":{},"body":{"classes/BaseMenu.html":{}}}],["grow",{"_index":657,"title":{},"body":{"classes/SplitItemView.html":{}}}],["guide",{"_index":856,"title":{},"body":{"index.html":{}}}],["gutterstyle",{"_index":579,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["header",{"_index":124,"title":{},"body":{"classes/App.html":{}}}],["height",{"_index":580,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":852,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":944,"title":{},"body":{"license.html":{}}}],["hexdigits",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hidden",{"_index":538,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["hide",{"_index":646,"title":{},"body":{"classes/SplitItemView.html":{}}}],["hideexpandbutton",{"_index":624,"title":{},"body":{"classes/SplitItemView.html":{}}}],["holders",{"_index":990,"title":{},"body":{"license.html":{}}}],["hor",{"_index":376,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["horizontal",{"_index":420,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["host",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hover",{"_index":718,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["htmlelement",{"_index":27,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["http://localhost:5000",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":226,"title":{},"body":{"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["identifier",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["if(pos",{"_index":557,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["implied",{"_index":981,"title":{},"body":{"license.html":{}}}],["import",{"_index":59,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["include",{"_index":887,"title":{},"body":{"index.html":{}}}],["included",{"_index":974,"title":{},"body":{"license.html":{}}}],["including",{"_index":956,"title":{},"body":{"license.html":{}}}],["independently",{"_index":885,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indexable",{"_index":709,"title":{},"body":{"interfaces/WeightMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["ing",{"_index":841,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":476,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["init",{"_index":232,"title":{},"body":{"classes/Menu.html":{},"classes/SplitBoardView.html":{}}}],["init(name",{"_index":249,"title":{},"body":{"classes/Menu.html":{}}}],["initcontainer",{"_index":284,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["initcontainer(container",{"_index":288,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["initflowtable",{"_index":14,"title":{},"body":{"classes/App.html":{}}}],["initframe",{"_index":15,"title":{},"body":{"classes/App.html":{}}}],["initial",{"_index":701,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["initmenu",{"_index":176,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenu(menuitems",{"_index":182,"title":{},"body":{"classes/BaseMenu.html":{}}}],["initmenus",{"_index":16,"title":{},"body":{"classes/App.html":{}}}],["initnavigationbar",{"_index":17,"title":{},"body":{"classes/App.html":{}}}],["initpreferences",{"_index":18,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel",{"_index":19,"title":{},"body":{"classes/App.html":{}}}],["initpropertypanel(container",{"_index":49,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel",{"_index":20,"title":{},"body":{"classes/App.html":{}}}],["initresourcepanel(container",{"_index":51,"title":{},"body":{"classes/App.html":{}}}],["initstatusbar",{"_index":21,"title":{},"body":{"classes/App.html":{}}}],["initstyle",{"_index":22,"title":{},"body":{"classes/App.html":{}}}],["initstylemode",{"_index":23,"title":{},"body":{"classes/App.html":{}}}],["initstylemode(type",{"_index":55,"title":{},"body":{"classes/App.html":{}}}],["initworkarea",{"_index":24,"title":{},"body":{"classes/App.html":{}}}],["inject",{"_index":167,"title":{},"body":{"classes/AppearanceService.html":{},"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject(token",{"_index":831,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":166,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardView.html":{}}}],["insertconfig",{"_index":738,"title":{},"body":{"classes/classBuilder.html":{}}}],["insertconfig(config",{"_index":731,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["insertitemat",{"_index":459,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["insertitemat(item",{"_index":495,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["interface",{"_index":212,"title":{"interfaces/ISettings.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}},"body":{"interfaces/ISettings.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["interfaces",{"_index":214,"title":{},"body":{"interfaces/ISettings.html":{},"interfaces/MenuItemConfig.html":{},"interfaces/WeightMap.html":{},"interfaces/classConfig.html":{},"overview.html":{},"interfaces/stateConfig.html":{}}}],["inversify",{"_index":60,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardView.html":{},"dependencies.html":{}}}],["ipc",{"_index":891,"title":{},"body":{"index.html":{}}}],["isettings",{"_index":213,"title":{"interfaces/ISettings.html":{}},"body":{"interfaces/ISettings.html":{},"coverage.html":{}}}],["isprod",{"_index":755,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isshrink",{"_index":625,"title":{},"body":{"classes/SplitItemView.html":{}}}],["issues",{"_index":851,"title":{},"body":{"index.html":{}}}],["item",{"_index":258,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["item.contentview",{"_index":586,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.hideexpandbutton",{"_index":591,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.id",{"_index":303,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["item.replacecontent(newboard.root",{"_index":587,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["item.root",{"_index":393,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["item.root.clientheight",{"_index":429,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.clientwidth",{"_index":424,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.getboundingclientrect().left",{"_index":423,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.root.getboundingclientrect().top",{"_index":428,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.ts",{"_index":306,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["item.ts:18",{"_index":314,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:19",{"_index":315,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:20",{"_index":317,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:21",{"_index":313,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:22",{"_index":311,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.view",{"_index":87,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["item.view.ts",{"_index":618,"title":{},"body":{"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["item.view.ts:13",{"_index":639,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:14",{"_index":640,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:15",{"_index":638,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:17",{"_index":641,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:18",{"_index":632,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:27",{"_index":652,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:34",{"_index":650,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:41",{"_index":655,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:48",{"_index":659,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:55",{"_index":648,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:59",{"_index":653,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:66",{"_index":643,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:70",{"_index":645,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:74",{"_index":662,"title":{},"body":{"classes/SplitItemView.html":{}}}],["item.view.ts:80",{"_index":644,"title":{},"body":{"classes/SplitItemView.html":{}}}],["items",{"_index":450,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["join(__dirname",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keycode",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["kind",{"_index":979,"title":{},"body":{"license.html":{}}}],["labelcolor",{"_index":780,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["length",{"_index":491,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["liability",{"_index":994,"title":{},"body":{"license.html":{}}}],["liable",{"_index":991,"title":{},"body":{"license.html":{}}}],["license",{"_index":862,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["light",{"_index":827,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lightcolor",{"_index":195,"title":{},"body":{"classes/ColorRef.html":{}}}],["lightcolorhex",{"_index":834,"title":{},"body":{"miscellaneous/functions.html":{}}}],["limitation",{"_index":957,"title":{},"body":{"license.html":{}}}],["limited",{"_index":982,"title":{},"body":{"license.html":{}}}],["linux",{"_index":910,"title":{},"body":{"index.html":{}}}],["live",{"_index":500,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["liveresize",{"_index":344,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["liveresize(clientx",{"_index":364,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["local",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":806,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error(json.stringify(err",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lowboardroot",{"_index":527,"title":{},"body":{"classes/SplitBoardView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["macos",{"_index":908,"title":{},"body":{"index.html":{}}}],["main",{"_index":893,"title":{},"body":{"index.html":{}}}],["mainwindow",{"_index":756,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mainwindow.loadurl(url).catch((err",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.on('closed",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainwindow.webcontents.opendevtools",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor",{"_index":769,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makecolor('#000000",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#3f3f3f",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#5580c0",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#729cd4",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#bababa",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c0c0c1",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c4666f",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#c6c6c6",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d00000",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d1905d",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d7d7d7",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#d9d9d9",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#e0e0e0",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f2f2f2",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#f9f9f9",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffae2b",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor('#ffffff",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makecolor(anycolorhex",{"_index":833,"title":{},"body":{"miscellaneous/functions.html":{}}}],["map",{"_index":40,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{}}}],["matching",{"_index":147,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":604,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["menu",{"_index":71,"title":{"classes/Menu.html":{}},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menu(menucontainer",{"_index":299,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menu.id",{"_index":304,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menu.items",{"_index":130,"title":{},"body":{"classes/App.html":{}}}],["menu.svelte",{"_index":257,"title":{},"body":{"classes/Menu.html":{}}}],["menu.ts",{"_index":174,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{}}}],["menu.ts:11",{"_index":183,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu.ts:5",{"_index":180,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menu/base",{"_index":70,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"coverage.html":{}}}],["menu/config",{"_index":73,"title":{},"body":{"classes/App.html":{}}}],["menu/config.ts",{"_index":794,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["menucommonfunction",{"_index":312,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/typealiases.html":{}}}],["menucontainer",{"_index":294,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["menugroupservice",{"_index":65,"title":{"classes/MenuGroupService.html":{}},"body":{"classes/App.html":{},"classes/BaseMenu.html":{},"classes/MenuGroupService.html":{},"coverage.html":{}}}],["menuinstance",{"_index":175,"title":{},"body":{"classes/BaseMenu.html":{}}}],["menuitem",{"_index":241,"title":{"classes/MenuItem.html":{}},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menuitem(config",{"_index":274,"title":{},"body":{"classes/Menu.html":{}}}],["menuitem(menuitem",{"_index":268,"title":{},"body":{"classes/Menu.html":{}}}],["menuitemconfig",{"_index":184,"title":{"interfaces/MenuItemConfig.html":{}},"body":{"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{}}}],["menuitems",{"_index":178,"title":{},"body":{"classes/BaseMenu.html":{},"classes/Menu.html":{}}}],["menuitemtype",{"_index":316,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/enumerations.html":{}}}],["menuitemtype.group",{"_index":326,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["menusvelte",{"_index":227,"title":{},"body":{"classes/Menu.html":{}}}],["merchantability",{"_index":984,"title":{},"body":{"license.html":{}}}],["merge",{"_index":380,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["metadata",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":12,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{}}}],["meuns",{"_index":282,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["meunswritable",{"_index":228,"title":{},"body":{"classes/Menu.html":{}}}],["minimum",{"_index":866,"title":{},"body":{"index.html":{}}}],["minsize",{"_index":576,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["miscellaneous",{"_index":821,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":861,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":432,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["modify",{"_index":960,"title":{},"body":{"license.html":{}}}],["modules",{"_index":881,"title":{"modules.html":{}},"body":{"index.html":{},"modules.html":{}}}],["monorepo",{"_index":876,"title":{},"body":{"index.html":{}}}],["more",{"_index":871,"title":{},"body":{"index.html":{}}}],["mousedown",{"_index":400,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["mouseevent",{"_index":367,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["n",{"_index":441,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":32,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["namewritable",{"_index":229,"title":{},"body":{"classes/Menu.html":{}}}],["navigation",{"_index":74,"title":{},"body":{"classes/App.html":{}}}],["navigationbar",{"_index":118,"title":{},"body":{"classes/App.html":{}}}],["new",{"_index":39,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newboard",{"_index":584,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addcolumn(newemptyview",{"_index":593,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addcolumn(newitemview",{"_index":592,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addrow(newemptyview",{"_index":598,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.addrow(newitemview",{"_index":597,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.controller.checkexpandstate(clientx",{"_index":595,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newboard.controller.setactivestate(0",{"_index":594,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newemptyview",{"_index":590,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newitem",{"_index":601,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newitemview",{"_index":588,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsize",{"_index":611,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes",{"_index":599,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(newsize",{"_index":613,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(size",{"_index":615,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(sum",{"_index":614,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["newsizes.push(w",{"_index":617,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["next",{"_index":901,"title":{},"body":{"index.html":{}}}],["none",{"_index":702,"title":{},"body":{"classes/View.html":{},"miscellaneous/typealiases.html":{}}}],["noninfringement",{"_index":988,"title":{},"body":{"license.html":{}}}],["normalizeweight",{"_index":739,"title":{},"body":{"classes/classBuilder.html":{}}}],["normalizeweight(config",{"_index":745,"title":{},"body":{"classes/classBuilder.html":{}}}],["nothing",{"_index":870,"title":{},"body":{"index.html":{}}}],["notice",{"_index":972,"title":{},"body":{"license.html":{}}}],["notification",{"_index":757,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nowrap",{"_index":536,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["npm",{"_index":917,"title":{},"body":{"index.html":{}}}],["null",{"_index":470,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":253,"title":{},"body":{"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["number):void",{"_index":553,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["number[]):void",{"_index":571,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["obtaining",{"_index":949,"title":{},"body":{"license.html":{}}}],["offsetx",{"_index":430,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["offsety",{"_index":431,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["ok",{"_index":694,"title":{},"body":{"classes/Test.html":{}}}],["onmodechanged",{"_index":154,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmodechanged(fn",{"_index":159,"title":{},"body":{"classes/AppearanceService.html":{}}}],["onmousedown",{"_index":345,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["onmousedown(event",{"_index":366,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["optional",{"_index":34,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{},"interfaces/stateConfig.html":{}}}],["orderedconfigs",{"_index":724,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["organization",{"_index":937,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":998,"title":{},"body":{"license.html":{}}}],["out",{"_index":913,"title":{},"body":{"index.html":{},"license.html":{}}}],["overflow",{"_index":537,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["overview",{"_index":1002,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":801,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":882,"title":{},"body":{"index.html":{}}}],["packaging",{"_index":904,"title":{},"body":{"index.html":{}}}],["page",{"_index":897,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":30,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":986,"title":{},"body":{"license.html":{}}}],["permission",{"_index":943,"title":{},"body":{"license.html":{}}}],["permit",{"_index":965,"title":{},"body":{"license.html":{}}}],["person",{"_index":948,"title":{},"body":{"license.html":{}}}],["persons",{"_index":966,"title":{},"body":{"license.html":{}}}],["platform",{"_index":924,"title":{},"body":{"index.html":{}}}],["port",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":976,"title":{},"body":{"license.html":{}}}],["pos",{"_index":496,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["position",{"_index":492,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["possible",{"_index":921,"title":{},"body":{"index.html":{}}}],["practice",{"_index":844,"title":{},"body":{"index.html":{}}}],["preload",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preload.js",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepend",{"_index":467,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["prepend(...childs",{"_index":519,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["print",{"_index":690,"title":{},"body":{"classes/Test.html":{}}}],["print(target",{"_index":691,"title":{},"body":{"classes/Test.html":{}}}],["private",{"_index":9,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["process.env.node_env",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":878,"title":{},"body":{"index.html":{}}}],["project",{"_index":872,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["propertypanel",{"_index":81,"title":{},"body":{"classes/App.html":{}}}],["props",{"_index":121,"title":{},"body":{"classes/App.html":{}}}],["provided",{"_index":977,"title":{},"body":{"license.html":{}}}],["public",{"_index":153,"title":{},"body":{"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["publish",{"_index":853,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":987,"title":{},"body":{"license.html":{}}}],["qiansc",{"_index":942,"title":{},"body":{"license.html":{}}}],["quickly",{"_index":920,"title":{},"body":{"index.html":{}}}],["r",{"_index":608,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["readonly",{"_index":225,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["ready",{"_index":906,"title":{},"body":{"index.html":{}}}],["ref.ts",{"_index":192,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["ref.ts:15",{"_index":203,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:5",{"_index":200,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:6",{"_index":201,"title":{},"body":{"classes/ColorRef.html":{}}}],["ref.ts:7",{"_index":198,"title":{},"body":{"classes/ColorRef.html":{}}}],["reflect",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["registeritem",{"_index":233,"title":{},"body":{"classes/Menu.html":{}}}],["registeritem(config",{"_index":252,"title":{},"body":{"classes/Menu.html":{}}}],["release",{"_index":932,"title":{},"body":{"index.html":{}}}],["removecolumn(item",{"_index":569,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["removeitem",{"_index":234,"title":{},"body":{"classes/Menu.html":{}}}],["removeitem(index",{"_index":255,"title":{},"body":{"classes/Menu.html":{}}}],["removemenuinstances",{"_index":285,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["removemenuinstances(menu",{"_index":290,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["removerow(item",{"_index":570,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["replacecontent",{"_index":626,"title":{},"body":{"classes/SplitItemView.html":{}}}],["replacecontent(contentview",{"_index":649,"title":{},"body":{"classes/SplitItemView.html":{}}}],["repository",{"_index":842,"title":{},"body":{"index.html":{}}}],["required",{"_index":865,"title":{},"body":{"index.html":{}}}],["resize",{"_index":435,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["resizeat",{"_index":460,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["resizeat(index",{"_index":498,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["resourcepage",{"_index":79,"title":{},"body":{"classes/App.html":{}}}],["restriction",{"_index":955,"title":{},"body":{"license.html":{}}}],["result",{"_index":146,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":148,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":172,"title":{},"body":{"classes/AppearanceService.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["returns",{"_index":42,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{}}}],["right",{"_index":544,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["rights",{"_index":958,"title":{},"body":{"license.html":{}}}],["roadmap",{"_index":854,"title":{},"body":{"index.html":{}}}],["rollup",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":35,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["rounded",{"_index":677,"title":{},"body":{"classes/SplitItemView.html":{}}}],["row",{"_index":427,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":903,"title":{},"body":{"index.html":{}}}],["s",{"_index":506,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["s'):void",{"_index":562,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["script",{"_index":894,"title":{},"body":{"index.html":{}}}],["secondarybgcolor",{"_index":781,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["secondarylabelcolor",{"_index":782,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":934,"title":{},"body":{"index.html":{}}}],["sell",{"_index":963,"title":{},"body":{"license.html":{}}}],["server",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":64,"title":{},"body":{"classes/App.html":{},"classes/BaseMenu.html":{}}}],["service.ts",{"_index":150,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":156,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:11",{"_index":158,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:12",{"_index":289,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:13",{"_index":165,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:19",{"_index":160,"title":{},"body":{"classes/AppearanceService.html":{},"classes/MenuGroupService.html":{}}}],["service.ts:23",{"_index":163,"title":{},"body":{"classes/AppearanceService.html":{}}}],["service.ts:28",{"_index":291,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:6",{"_index":287,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["service.ts:7",{"_index":286,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["set",{"_index":939,"title":{},"body":{"index.html":{}}}],["setactivestate",{"_index":346,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setactivestate(index",{"_index":370,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["setcontent",{"_index":627,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setcontent(contentview",{"_index":651,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setcursor",{"_index":461,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["setcursor(type",{"_index":502,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["setdefaultclass",{"_index":628,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setflow",{"_index":468,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setflow(type",{"_index":522,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["setgrow",{"_index":629,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setgrow(classname",{"_index":654,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setshrink",{"_index":630,"title":{},"body":{"classes/SplitItemView.html":{}}}],["setshrink(classname",{"_index":658,"title":{},"body":{"classes/SplitItemView.html":{}}}],["settings",{"_index":221,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shadow",{"_index":322,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["shall",{"_index":973,"title":{},"body":{"license.html":{}}}],["shrink",{"_index":660,"title":{},"body":{"classes/SplitItemView.html":{}}}],["similar",{"_index":875,"title":{},"body":{"index.html":{}}}],["singleton",{"_index":92,"title":{},"body":{"classes/App.html":{}}}],["size",{"_index":610,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["sizes",{"_index":483,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["smelte",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["snapoffset",{"_index":578,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["software",{"_index":951,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"index.html":{},"interfaces/stateConfig.html":{}}}],["split",{"_index":374,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["split(array.prototype.slice.call(this.root.children",{"_index":574,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["split.instance",{"_index":474,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["split.js",{"_index":526,"title":{},"body":{"classes/SplitBoardView.html":{},"dependencies.html":{}}}],["splitboard",{"_index":131,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view0",{"_index":137,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view1",{"_index":138,"title":{},"body":{"classes/App.html":{}}}],["splitboard.addcolumn(view2",{"_index":139,"title":{},"body":{"classes/App.html":{}}}],["splitboard.applysplit('horizontal",{"_index":140,"title":{},"body":{"classes/App.html":{}}}],["splitboardcontroller",{"_index":331,"title":{"classes/SplitBoardController.html":{}},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"coverage.html":{}}}],["splitboardcontroller(this",{"_index":533,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitboardview",{"_index":83,"title":{"classes/SplitBoardView.html":{}},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"coverage.html":{}}}],["splitboardview().setflow('1",{"_index":132,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["splitcolumnat",{"_index":462,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitcolumnat(index",{"_index":508,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitexpand",{"_index":642,"title":{},"body":{"classes/SplitItemView.html":{}}}],["splitinstance",{"_index":451,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splititemview",{"_index":86,"title":{"classes/SplitItemView.html":{}},"body":{"classes/App.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{}}}],["splititemview().setcontent(contentview",{"_index":589,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splititemview().setcontent(document.createelement('div",{"_index":134,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["splititemview):void",{"_index":541,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitrowat",{"_index":463,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["splitrowat(index",{"_index":510,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["src/.../appearance.ts",{"_index":823,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../class",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.ts",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inject.ts",{"_index":829,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.ts",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu",{"_index":825,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../settings.ts",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../split",{"_index":824,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../ui",{"_index":830,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../view.ts",{"_index":1006,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app",{"_index":892,"title":{},"body":{"index.html":{}}}],["src/app/index.ts",{"_index":751,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/logger.ts",{"_index":758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/settings.ts",{"_index":215,"title":{},"body":{"interfaces/ISettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core",{"_index":886,"title":{},"body":{"index.html":{}}}],["src/core/browser/class",{"_index":707,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/layout/split",{"_index":332,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/style/ui",{"_index":767,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/core/browser/view.ts",{"_index":695,"title":{},"body":{"classes/View.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/browser/view.ts:13",{"_index":697,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:17",{"_index":698,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:4",{"_index":696,"title":{},"body":{"classes/View.html":{}}}],["src/core/browser/view.ts:8",{"_index":699,"title":{},"body":{"classes/View.html":{}}}],["src/core/common/appearance.ts",{"_index":826,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/common/color",{"_index":191,"title":{},"body":{"classes/ColorRef.html":{},"coverage.html":{}}}],["src/core/components",{"_index":899,"title":{},"body":{"index.html":{}}}],["src/core/parts/ioc/inject.ts",{"_index":793,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/core/parts/test.ts",{"_index":689,"title":{},"body":{"classes/Test.html":{},"coverage.html":{}}}],["src/core/parts/test.ts:2",{"_index":692,"title":{},"body":{"classes/Test.html":{}}}],["src/workbench",{"_index":895,"title":{},"body":{"index.html":{}}}],["src/workbench/desktop/app.ts",{"_index":6,"title":{},"body":{"classes/App.html":{},"coverage.html":{}}}],["src/workbench/desktop/app.ts:106",{"_index":58,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:110",{"_index":53,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:14",{"_index":36,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:15",{"_index":29,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:22",{"_index":41,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:28",{"_index":48,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:33",{"_index":54,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:43",{"_index":57,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:51",{"_index":45,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:56",{"_index":47,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:66",{"_index":46,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:75",{"_index":44,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:90",{"_index":52,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/app.ts:98",{"_index":50,"title":{},"body":{"classes/App.html":{}}}],["src/workbench/desktop/base",{"_index":173,"title":{},"body":{"classes/BaseMenu.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/desktop/main.ts",{"_index":795,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/desktop/menu/menu",{"_index":305,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/workbench/desktop/menu/menu.ts",{"_index":224,"title":{},"body":{"classes/Menu.html":{},"coverage.html":{}}}],["src/workbench/desktop/menu/menu.ts:10",{"_index":242,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:11",{"_index":243,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:12",{"_index":239,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:13",{"_index":245,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:14",{"_index":237,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:23",{"_index":251,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:31",{"_index":248,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:38",{"_index":254,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:43",{"_index":256,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:49",{"_index":247,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:7",{"_index":238,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:8",{"_index":240,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/menu/menu.ts:9",{"_index":246,"title":{},"body":{"classes/Menu.html":{}}}],["src/workbench/desktop/utils/utils.ts",{"_index":798,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/workbench/services/appearance",{"_index":149,"title":{},"body":{"classes/AppearanceService.html":{},"coverage.html":{}}}],["src/workbench/services/menu",{"_index":281,"title":{},"body":{"classes/MenuGroupService.html":{},"coverage.html":{}}}],["standard",{"_index":860,"title":{},"body":{"index.html":{}}}],["start",{"_index":490,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["started",{"_index":838,"title":{"index.html":{},"license.html":{}},"body":{}}],["starttoexpand",{"_index":464,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["starttoexpand(index",{"_index":512,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["startx",{"_index":340,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["starty",{"_index":341,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["stateconfig",{"_index":712,"title":{"interfaces/stateConfig.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{}}}],["statements",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["statically",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statusbar",{"_index":77,"title":{},"body":{"classes/App.html":{}}}],["step",{"_index":902,"title":{},"body":{"index.html":{}}}],["sth",{"_index":117,"title":{},"body":{"classes/App.html":{},"classes/SplitBoardView.html":{}}}],["store",{"_index":220,"title":{},"body":{"interfaces/ISettings.html":{},"dependencies.html":{}}}],["storybook",{"_index":898,"title":{},"body":{"index.html":{}}}],["string",{"_index":236,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":873,"title":{},"body":{"index.html":{}}}],["subject",{"_index":968,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":961,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":975,"title":{},"body":{"license.html":{}}}],["such",{"_index":889,"title":{},"body":{"index.html":{}}}],["sum",{"_index":609,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["super",{"_index":530,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["support",{"_index":912,"title":{},"body":{"index.html":{}}}],["svelte/store",{"_index":259,"title":{},"body":{"classes/Menu.html":{}}}],["switch(appearancetype",{"_index":208,"title":{},"body":{"classes/ColorRef.html":{}}}],["symbol.for('flowtableroot",{"_index":528,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["systembluecolor",{"_index":783,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemgraycolor",{"_index":784,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemorangecolor",{"_index":785,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systempinkcolor",{"_index":786,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemredcolor",{"_index":787,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["systemyellowcolor",{"_index":788,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":119,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"miscellaneous/variables.html":{}}}],["target.classlist.contains('split",{"_index":395,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["target.parentelement",{"_index":394,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["template",{"_index":864,"title":{},"body":{"index.html":{}}}],["tertiarybgcolor",{"_index":789,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tertiarylabelcolor",{"_index":790,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":688,"title":{"classes/Test.html":{}},"body":{"classes/Test.html":{},"coverage.html":{}}}],["textfieldbackground",{"_index":791,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["this._growclassname",{"_index":673,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._shrinkclassname",{"_index":672,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this._type",{"_index":169,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this._waitformergeitem",{"_index":563,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this._waitformergeitem.cancelwaitformerge",{"_index":568,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.activeexpand",{"_index":403,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.activeid",{"_index":404,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.addexpandbutton",{"_index":665,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.anycolor",{"_index":205,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.applysplit",{"_index":552,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.applysplit('vertical",{"_index":550,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.applysplit(this.direction",{"_index":603,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.callback",{"_index":330,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.cancelformerge",{"_index":565,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.cancelwaitformerge",{"_index":683,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.checkdirection(directiontype.col",{"_index":551,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.checkdirection(directiontype.row",{"_index":542,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.checkexpandstate(event.clientx",{"_index":385,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.children",{"_index":327,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.container",{"_index":90,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{}}}],["this.container.append(menucontainer",{"_index":298,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.container.bind(appearanceservice).to(appearanceservice",{"_index":99,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(colorset).to(colorset",{"_index":101,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(colorsetroot).todynamicvalue",{"_index":105,"title":{},"body":{"classes/App.html":{}}}],["this.container.bind(menugroupservice).to(menugroupservice",{"_index":100,"title":{},"body":{"classes/App.html":{}}}],["this.container.firstchild",{"_index":270,"title":{},"body":{"classes/Menu.html":{}}}],["this.container.get(appearanceservice",{"_index":109,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(colorset",{"_index":107,"title":{},"body":{"classes/App.html":{}}}],["this.container.get(menugroupservice",{"_index":127,"title":{},"body":{"classes/App.html":{}}}],["this.container.removechild(menu.container",{"_index":301,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.container.removechild(this.container.firstchild",{"_index":271,"title":{},"body":{"classes/Menu.html":{}}}],["this.contentview",{"_index":667,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.context",{"_index":122,"title":{},"body":{"classes/App.html":{},"classes/Menu.html":{}}}],["this.context.set('container",{"_index":93,"title":{},"body":{"classes/App.html":{}}}],["this.context.set('menus",{"_index":262,"title":{},"body":{"classes/Menu.html":{}}}],["this.context.set('name",{"_index":264,"title":{},"body":{"classes/Menu.html":{}}}],["this.controller",{"_index":532,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.createmenu",{"_index":269,"title":{},"body":{"classes/Menu.html":{}}}],["this.darkcolor",{"_index":207,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.destorysplit",{"_index":572,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.direction",{"_index":546,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.evt.emit('onmodechanged",{"_index":170,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.evt.on('onmodechanged",{"_index":171,"title":{},"body":{"classes/AppearanceService.html":{}}}],["this.expand",{"_index":681,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.expandhidden",{"_index":682,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expand.mergedirection",{"_index":685,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.expandactive",{"_index":408,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandleavehandler",{"_index":386,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmouseuphandler",{"_index":388,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandmovehandler",{"_index":382,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.expandtype",{"_index":410,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.getexpandresizes(index",{"_index":600,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.groupmenuservice",{"_index":185,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.groupmenuservice.getmenuinsatance",{"_index":188,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.id",{"_index":260,"title":{},"body":{"classes/Menu.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.init",{"_index":531,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.initflowtable",{"_index":97,"title":{},"body":{"classes/App.html":{}}}],["this.initmenus",{"_index":123,"title":{},"body":{"classes/App.html":{}}}],["this.initnavigationbar",{"_index":96,"title":{},"body":{"classes/App.html":{}}}],["this.initpreferences",{"_index":94,"title":{},"body":{"classes/App.html":{}}}],["this.initpropertypanel(view2.contentview",{"_index":145,"title":{},"body":{"classes/App.html":{}}}],["this.initresourcepanel(view0.contentview",{"_index":144,"title":{},"body":{"classes/App.html":{}}}],["this.initstatusbar",{"_index":98,"title":{},"body":{"classes/App.html":{}}}],["this.initstyle",{"_index":95,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(appearancetype.dark",{"_index":112,"title":{},"body":{"classes/App.html":{}}}],["this.initstylemode(type",{"_index":111,"title":{},"body":{"classes/App.html":{}}}],["this.insertconfig(config",{"_index":727,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.insertitemat(item",{"_index":549,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.insertitemat(newitem",{"_index":602,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items.length",{"_index":555,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items.splice(pos",{"_index":556,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[index",{"_index":564,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[index].waitformerge(direction",{"_index":566,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.items[pos",{"_index":559,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.lightcolor",{"_index":206,"title":{},"body":{"classes/ColorRef.html":{}}}],["this.liveresize(event.clientx",{"_index":383,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.menuinstance",{"_index":187,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.menuinstance.init",{"_index":189,"title":{},"body":{"classes/BaseMenu.html":{}}}],["this.menuitems",{"_index":261,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.filter((_",{"_index":278,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.push(new",{"_index":267,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems.splice(index",{"_index":272,"title":{},"body":{"classes/Menu.html":{}}}],["this.menuitems[index",{"_index":276,"title":{},"body":{"classes/Menu.html":{}}}],["this.menusvelte",{"_index":279,"title":{},"body":{"classes/Menu.html":{}}}],["this.meuns",{"_index":293,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meuns.filter(item",{"_index":302,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meuns.length",{"_index":297,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meuns.push(menu",{"_index":300,"title":{},"body":{"classes/MenuGroupService.html":{}}}],["this.meunswritable",{"_index":263,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set([...this.menuitems",{"_index":275,"title":{},"body":{"classes/Menu.html":{}}}],["this.meunswritable.set(this.menuitems",{"_index":277,"title":{},"body":{"classes/Menu.html":{}}}],["this.name",{"_index":266,"title":{},"body":{"classes/Menu.html":{}}}],["this.namewritable",{"_index":265,"title":{},"body":{"classes/Menu.html":{}}}],["this.namewritable.set(this.name",{"_index":280,"title":{},"body":{"classes/Menu.html":{}}}],["this.normalizeweight(config",{"_index":733,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.onmousedown(event",{"_index":390,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.orderedconfigs",{"_index":729,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor",{"_index":735,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.orderedconfigs[cursor].weight",{"_index":736,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["this.prepend(contentview",{"_index":669,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root",{"_index":120,"title":{},"body":{"classes/App.html":{},"classes/SplitItemView.html":{},"classes/View.html":{}}}],["this.root.appendchild(child",{"_index":704,"title":{},"body":{"classes/View.html":{}}}],["this.root.appendchild(colorsetroot",{"_index":106,"title":{},"body":{"classes/App.html":{}}}],["this.root.appendchild(item.root",{"_index":558,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.root.appendchild(splitboard.root",{"_index":143,"title":{},"body":{"classes/App.html":{}}}],["this.root.classlist.add('flex",{"_index":548,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["this.root.classlist.add('relative",{"_index":679,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add('split",{"_index":534,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["this.root.classlist.add('wait",{"_index":684,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(...this._bgcolorclassname",{"_index":680,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(`flex",{"_index":703,"title":{},"body":{"classes/View.html":{}}}],["this.root.classlist.add(this._growclassname",{"_index":674,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.add(this._shrinkclassname",{"_index":676,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove('flex",{"_index":547,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/View.html":{}}}],["this.root.classlist.remove('wait",{"_index":687,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._growclassname",{"_index":675,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.classlist.remove(this._shrinkclassname",{"_index":671,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.prepend(...childs",{"_index":705,"title":{},"body":{"classes/View.html":{}}}],["this.root.replacechild(contentview",{"_index":670,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.root.style.cursor",{"_index":561,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.root.style.margin",{"_index":539,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.setactivestate(index",{"_index":396,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.setdefaultclass",{"_index":666,"title":{},"body":{"classes/SplitItemView.html":{}}}],["this.splitinstance",{"_index":573,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.destroy",{"_index":583,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.getsizes().foreach((size",{"_index":612,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.splitinstance.setsizes(newsizes",{"_index":616,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.starttoexpand(index",{"_index":596,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["this.startx",{"_index":401,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.starty",{"_index":402,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.title",{"_index":328,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.type",{"_index":329,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["this.unactiveexpand",{"_index":387,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.cancelformerge",{"_index":415,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.direction",{"_index":418,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items.foreach((item",{"_index":392,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.items[this.activeid",{"_index":417,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.resizeat(this.activeid",{"_index":422,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousedown",{"_index":389,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseleave",{"_index":406,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mousemove",{"_index":405,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.addeventlistener('mouseup",{"_index":407,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseleave",{"_index":413,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mousemove",{"_index":412,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.root.removeeventlistener('mouseup",{"_index":414,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor",{"_index":416,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('col",{"_index":434,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('crosshair",{"_index":411,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('n",{"_index":440,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('row",{"_index":436,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.setcursor('w",{"_index":437,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitcolumnat(this.activeid",{"_index":443,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.splitrowat(this.activeid",{"_index":444,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["this.view.waitformergeatitem(this.activeid",{"_index":438,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["three",{"_index":880,"title":{},"body":{"index.html":{}}}],["title",{"_index":309,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"miscellaneous/variables.html":{}}}],["title!:string",{"_index":325,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{}}}],["together",{"_index":847,"title":{},"body":{"index.html":{}}}],["token",{"_index":832,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tort",{"_index":997,"title":{},"body":{"license.html":{}}}],["true",{"_index":409,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":33,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/ColorRef.html":{},"interfaces/ISettings.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"classes/View.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1004,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/color",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["ui/components/navigation/navigation",{"_index":75,"title":{},"body":{"classes/App.html":{}}}],["ui/components/property/proterty.svelte",{"_index":82,"title":{},"body":{"classes/App.html":{}}}],["ui/components/resource/resource.svelte",{"_index":80,"title":{},"body":{"classes/App.html":{}}}],["ui/components/status/status",{"_index":78,"title":{},"body":{"classes/App.html":{}}}],["unactiveexpand",{"_index":347,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["undefined",{"_index":554,"title":{},"body":{"classes/SplitBoardView.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":859,"title":{},"body":{"index.html":{}}}],["update",{"_index":911,"title":{},"body":{"index.html":{}}}],["updatemode",{"_index":155,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updatemode(type",{"_index":164,"title":{},"body":{"classes/AppearanceService.html":{}}}],["updater",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["url",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":959,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":868,"title":{},"body":{"index.html":{}}}],["user",{"_index":938,"title":{},"body":{"index.html":{}}}],["using",{"_index":915,"title":{},"body":{"index.html":{}}}],["utils",{"_index":319,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"index.html":{}}}],["uuid",{"_index":318,"title":{},"body":{"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":38,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/Menu.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/classBuilder.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1007,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":378,"title":{},"body":{"classes/SplitBoardController.html":{}}}],["version",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":426,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{}}}],["very",{"_index":874,"title":{},"body":{"index.html":{}}}],["view",{"_index":350,"title":{"classes/View.html":{}},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/View.html":{},"coverage.html":{}}}],["view0",{"_index":133,"title":{},"body":{"classes/App.html":{}}}],["view1",{"_index":135,"title":{},"body":{"classes/App.html":{}}}],["view2",{"_index":136,"title":{},"body":{"classes/App.html":{}}}],["view:13",{"_index":517,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:17",{"_index":520,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:4",{"_index":477,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["view:8",{"_index":524,"title":{},"body":{"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{}}}],["vite",{"_index":867,"title":{},"body":{"index.html":{}}}],["void",{"_index":43,"title":{},"body":{"classes/App.html":{},"classes/AppearanceService.html":{},"classes/BaseMenu.html":{},"classes/Menu.html":{},"classes/MenuGroupService.html":{},"classes/MenuItem.html":{},"interfaces/MenuItemConfig.html":{},"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"classes/Test.html":{},"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["w",{"_index":439,"title":{},"body":{"classes/SplitBoardController.html":{},"classes/SplitBoardView.html":{},"classes/SplitItemView.html":{},"miscellaneous/enumerations.html":{}}}],["waitformerge",{"_index":631,"title":{},"body":{"classes/SplitItemView.html":{}}}],["waitformerge(direction",{"_index":661,"title":{},"body":{"classes/SplitItemView.html":{}}}],["waitformergeatitem",{"_index":465,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["waitformergeatitem(index",{"_index":514,"title":{},"body":{"classes/SplitBoardView.html":{}}}],["warranties",{"_index":983,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":978,"title":{},"body":{"license.html":{}}}],["web",{"_index":896,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["webpreferences",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":713,"title":{},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"interfaces/stateConfig.html":{}}}],["weightmap",{"_index":706,"title":{"interfaces/WeightMap.html":{}},"body":{"interfaces/WeightMap.html":{},"classes/classBuilder.html":{},"interfaces/classConfig.html":{},"coverage.html":{},"interfaces/stateConfig.html":{},"miscellaneous/variables.html":{}}}],["whether",{"_index":995,"title":{},"body":{"license.html":{}}}],["width",{"_index":582,"title":{},"body":{"classes/SplitBoardView.html":{},"miscellaneous/variables.html":{}}}],["wiki",{"_index":935,"title":{},"body":{"index.html":{}}}],["windows",{"_index":909,"title":{},"body":{"index.html":{}}}],["without",{"_index":954,"title":{},"body":{"license.html":{}}}],["work",{"_index":849,"title":{},"body":{"index.html":{}}}],["works",{"_index":863,"title":{},"body":{"index.html":{}}}],["writable",{"_index":244,"title":{},"body":{"classes/Menu.html":{}}}],["xl",{"_index":678,"title":{},"body":{"classes/SplitItemView.html":{}}}],["yes",{"_index":199,"title":{},"body":{"classes/ColorRef.html":{},"classes/Menu.html":{},"classes/SplitBoardView.html":{},"classes/View.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/App.html":{"url":"classes/App.html","title":"class - App","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/app.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                context\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bootstrap\n                            \n                            \n                                initFlowTable\n                            \n                            \n                                initFrame\n                            \n                            \n                                initMenus\n                            \n                            \n                                initNavigationBar\n                            \n                            \n                                initPreferences\n                            \n                            \n                                initPropertyPanel\n                            \n                            \n                                initResourcePanel\n                            \n                            \n                                initStatusBar\n                            \n                            \n                                initStyle\n                            \n                            \n                                initStyleMode\n                            \n                            \n                                initWorkArea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/app.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Container\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/app.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFlowTable\n                        \n                    \n                \n            \n            \n                \ninitFlowTable()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initFrame\n                        \n                    \n                \n            \n            \n                \ninitFrame()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initMenus\n                        \n                    \n                \n            \n            \n                \ninitMenus()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNavigationBar\n                        \n                    \n                \n            \n            \n                \ninitNavigationBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPreferences\n                        \n                    \n                \n            \n            \n                \ninitPreferences()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPropertyPanel\n                        \n                    \n                \n            \n            \n                \ninitPropertyPanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initResourcePanel\n                        \n                    \n                \n            \n            \n                \ninitResourcePanel(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStatusBar\n                        \n                    \n                \n            \n            \n                \ninitStatusBar()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyle\n                        \n                    \n                \n            \n            \n                \ninitStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStyleMode\n                        \n                    \n                \n            \n            \n                \ninitStyleMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initWorkArea\n                        \n                    \n                \n            \n            \n                \ninitWorkArea()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/app.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Container } from 'inversify';\nimport { AppearanceType } from '@cosmic/core/common/appearance';\nimport { AppearanceService } from '@cosmic/workbench/services/appearance-service';\nimport { MenuGroupService } from '@cosmic/workbench/services/menu-group-service';\nimport { BaseMenu } from './base-menu/base-menu';\nimport {applicationMenus} from './base-menu/config';\nimport Navigation from '../ui/components/navigation/navigation-bar.svelte';\nimport StatusBar from '../ui/components/status/status-bar.svelte';\nimport ResourcePage from '../ui/components/resource/resource.svelte';\nimport PropertyPanel from '../ui/components/property/proterty.svelte';\nimport SplitBoardView from '@cosmic/core/browser/layout/split-board.view';\nimport SplitItemView from '@cosmic/core/browser/layout/split-item.view';\nexport default class App {\n  private container: Container;\n  private context = new Map();\n  constructor(private root: HTMLElement) {\n    this.container = new Container({ defaultScope: 'Singleton' });\n    this.context.set('container', this.container);\n    this.initPreferences();\n    this.initStyle();\n  }\n  bootstrap(): void {\n    this.initNavigationBar();\n    this.initFlowTable();\n    this.initStatusBar();\n  }\n\n  initPreferences(): void {\n    this.container.bind(AppearanceService).to(AppearanceService);\n    this.container.bind(MenuGroupService).to(MenuGroupService);\n  }\n\n  initStyle(): void {\n    // this.container.bind(ColorSet).to(ColorSet);\n    // const colorSetRoot = document.createElement('style');\n    // this.container.bind(ColorSetRoot).toDynamicValue(() => colorSetRoot);\n    // this.root.appendChild(colorSetRoot);\n    // this.container.get(ColorSet);\n    const aps = this.container.get(AppearanceService);\n    aps.onModeChanged((type: AppearanceType) => this.initStyleMode(type));\n    this.initStyleMode(AppearanceType.dark);\n  }\n  initStyleMode(type: AppearanceType): void {\n    if (type === AppearanceType.dark) {\n      document.body.classList.add('mode-dark');\n    } else {\n      document.body.classList.remove('mode-dark');\n    }\n  }\n\n  initFrame(): void {\n    // to do sth.\n\n  }\n\n  initNavigationBar(): void {\n    // to do sth.\n    const navigationBar = new Navigation({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    this.initMenus();\n  }\n\n  initMenus(): void {\n    const header = document.querySelector('#main-header');\n    const groupMenu = this.container.get(MenuGroupService);\n    groupMenu.initContainer(header as HTMLElement);\n    for (const menu of applicationMenus) {\n      groupMenu.getMenuInsatance().init(menu.title, menu.items);\n    }\n  }\n\n  initFlowTable(): void {\n    const splitBoard = new SplitBoardView().setFlow('1');\n    const view0 = new SplitItemView().setContent(document.createElement('div'));\n    const view1 = new SplitItemView().setContent(document.createElement('div'));\n    const view2 = new SplitItemView().setContent(document.createElement('div'));\n    splitBoard.addColumn(view0);\n    splitBoard.addColumn(view1);\n    splitBoard.addColumn(view2);\n    splitBoard.applySplit('horizontal', [20, 60, 20]);\n\n    this.root.appendChild(splitBoard.root);\n    this.initResourcePanel(view0.contentView);\n    this.initPropertyPanel(view2.contentView);\n  }\n\n  initResourcePanel(container: HTMLElement): void {\n    new ResourcePage({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initPropertyPanel(container: HTMLElement): void {\n    new PropertyPanel({\n      target: container,\n      props: {},\n      context: this.context,\n    });\n  }\n\n  initWorkArea(): void {\n    // to do sth.\n  }\n\n  initStatusBar(): void {\n    new StatusBar({\n      target: this.root,\n      props: {},\n      context: this.context,\n    });\n    // to do sth.\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppearanceService.html":{"url":"classes/AppearanceService.html","title":"class - AppearanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppearanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/appearance-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Private\n                                evt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onModeChanged\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                updateMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppearanceType\n\n                    \n                \n                \n                    \n                        Default value : AppearanceType.dark\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        evt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter2()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/appearance-service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onModeChanged\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModeChanged(fn: (type: AppearanceType) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        type\n                        \n                    \n                \n            \n            \n                \n                    \n                    type()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMode(type: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/appearance-service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable, inject, ContainerModule } from 'inversify';\nimport { EventEmitter2 } from 'eventemitter2';\n\nimport { AppearanceType } from '@cosmic/core/common/appearance';\n\n\n@injectable()\n/** 外观设置服务 */\nexport class AppearanceService {\n  private _type: AppearanceType = AppearanceType.dark;\n  private evt = new EventEmitter2()\n\n  public updateMode(type: AppearanceType) {\n    if (this._type !== type) {\n      this._type = type;\n      this.evt.emit('onModeChanged', type);\n    }\n  }\n  public onModeChanged(fn: (type: AppearanceType) => void) {\n    this.evt.on('onModeChanged', fn);\n\n  }\n  public type() {\n    return this._type;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseMenu.html":{"url":"classes/BaseMenu.html","title":"class - BaseMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/base-menu/base-menu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                menuInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(groupMenuService: MenuGroupService, menuItems: Array)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/base-menu/base-menu.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupMenuService\n                                                  \n                                                        \n                                                                        MenuGroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        menuItems\n                                                  \n                                                        \n                                                                        Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/base-menu/base-menu.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    initMenu(menuItems: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/base-menu/base-menu.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuItems\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { MenuGroupService } from '@cosmic/workbench/services/menu-group-service';\nimport type { Menu, MenuItemConfig } from '../menu';\n\nexport class BaseMenu {\n    private menuInstance!: Menu;\n    constructor(private groupMenuService: MenuGroupService, menuItems: Array) {\n        this.groupMenuService = groupMenuService;\n\n    }\n\n    public initMenu(menuItems: Array):void {\n        this.menuInstance = this.groupMenuService.getMenuInsatance();\n        this.menuInstance.init('文件', menuItems);\n        \n    }\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColorRef.html":{"url":"classes/ColorRef.html","title":"class - ColorRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColorRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/common/color-ref.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                anyColor\n                            \n                            \n                                    Private\n                                darkColor\n                            \n                            \n                                    Private\n                                lightColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                color\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(anyColor: Color, lightColor?: Color, darkColor?: Color)\n                    \n                \n                        \n                            \n                                Defined in src/core/common/color-ref.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        anyColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lightColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        darkColor\n                                                  \n                                                        \n                                                                    Color\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        anyColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        darkColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lightColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/core/common/color-ref.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        color\n                        \n                    \n                \n            \n            \n                \n                    \n                    color(appearanceType: AppearanceType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/common/color-ref.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appearanceType\n                                    \n                                                AppearanceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type * as Color from 'color';\nimport { AppearanceType } from './appearance';\n\nexport default class ColorRef {\n  private anyColor: Color;\n  private lightColor: Color;\n  private darkColor: Color;\n\n  constructor(anyColor: Color, lightColor?: Color, darkColor?: Color) {\n    this.anyColor =  anyColor;\n    this.lightColor = lightColor || anyColor;\n    this.darkColor = darkColor || anyColor;\n  }\n\n  public color(appearanceType: AppearanceType) {\n    switch(appearanceType) {\n      case AppearanceType.any:\n        return this.anyColor;\n      case AppearanceType.light:\n        return this.lightColor;\n      case AppearanceType.dark:\n        return this.darkColor;\n      default:\n        return this.anyColor;\n    }\n  }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISettings.html":{"url":"interfaces/ISettings.html","title":"interface - ISettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/settings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            check\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import ElectronStore from 'electron-store';\n\ninterface ISettings {\n  check: boolean;\n}\n\nconst settings = new ElectronStore({\n  defaults: {\n    check: false,\n  },\n});\n\nexport default settings;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Menu.html":{"url":"classes/Menu.html","title":"class - Menu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Menu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                container\n                            \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                menuItems\n                            \n                            \n                                    Private\n                                menuSvelte\n                            \n                            \n                                    Private\n                                    Readonly\n                                meunsWritable\n                            \n                            \n                                    Private\n                                name\n                            \n                            \n                                    Private\n                                    Readonly\n                                nameWritable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMenu\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                registerItem\n                            \n                            \n                                    Public\n                                removeItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: HTMLElement, id: string)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/menu/menu.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuSvelte\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        meunsWritable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : writable([])\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        nameWritable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : writable('')\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(name: string, config: MenuItemConfig[])\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                MenuItemConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerItem(config: MenuItemConfig, index: number, group?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                MenuItemConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItem(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/desktop/menu/menu.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MenuItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import MenuSvelte from './menu.svelte';\nimport type { MenuItemConfig } from './menu-item';\nimport { MenuItem } from './menu-item';\nimport { writable } from 'svelte/store';\n\nexport default class Menu {\n    public readonly container!: HTMLElement;\n    public readonly id!: string;\n    private name!: string;\n    private menuItems!: MenuItem[];\n    private menuSvelte: any;\n    private readonly context = new Map();\n    private readonly meunsWritable =  writable([]);\n    private readonly nameWritable =  writable('');\n    constructor(container: HTMLElement, id: string) {\n        this.container = container;\n        this.id = id;\n        this.menuItems = [];\n        this.context.set('menus', this.meunsWritable);\n        this.context.set('name', this.nameWritable);\n    }\n\n    public init(name: string, config: MenuItemConfig[]): void {\n        this.name = name;\n        for (const menuItem of config) {\n            this.menuItems.push(new MenuItem(menuItem));\n        }\n        return this.createMenu();\n    }\n\n    public destroy(): void {\n        while (this.container.firstChild) {\n            this.container.removeChild(this.container.firstChild);\n        }\n        return;\n    }\n\n    public registerItem(config: MenuItemConfig, index: number, group?: string): void {\n        this.menuItems.splice(index, 0, new MenuItem(config));\n        this.meunsWritable.set([...this.menuItems]);\n    }\n\n    public removeItem(index: number): MenuItem {\n        const menuItem = this.menuItems[index];\n        this.meunsWritable.set(this.menuItems = this.menuItems.filter((_, i) => index !== i));\n        return menuItem;\n    }\n\n    private createMenu(): void {\n        this.menuSvelte = new MenuSvelte({\n            target: this.container,\n            context: this.context,\n        });\n        this.nameWritable.set(this.name);\n        this.meunsWritable.set(this.menuItems);\n    }\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuGroupService.html":{"url":"classes/MenuGroupService.html","title":"class - MenuGroupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuGroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/services/menu-group-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                meuns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMenuInsatance\n                            \n                            \n                                    Public\n                                initContainer\n                            \n                            \n                                    Public\n                                removeMenuInstances\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/workbench/services/menu-group-service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/menu-group-service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        meuns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/services/menu-group-service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getMenuInsatance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenuInsatance()\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/menu-group-service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Menu\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initContainer\n                        \n                    \n                \n            \n            \n                \n                    \n                    initContainer(container: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/menu-group-service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeMenuInstances\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeMenuInstances(menu: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/workbench/services/menu-group-service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { injectable } from 'inversify';\nimport { Menu } from '../desktop/menu';\n\n@injectable()\nexport class MenuGroupService {\n    private container!: HTMLElement;\n    private meuns!: Menu[];\n    constructor() {\n        this.meuns = [];\n    }\n\n    public initContainer(container: HTMLElement): void {\n        if (this.container) {\n            return;\n        }\n        this.container = container;\n    }\n\n    public getMenuInsatance(): Menu {\n        const menuContainer = document.createElement('div');\n        const id = Date.now() + '' + this.meuns.length;\n        this.container.append(menuContainer);\n        const menu = new Menu(menuContainer, id);\n        this.meuns.push(menu);\n        return menu;\n    }\n\n    public removeMenuInstances(menu: Menu): void {\n        this.container.removeChild(menu.container);\n        this.meuns = this.meuns.filter(item => item.id === menu.id);\n        this.container.removeChild(menu.container);\n    }\n\n\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItem.html":{"url":"classes/MenuItem.html","title":"class - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu-item.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                callback\n                            \n                            \n                                    Private\n                                children\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                title\n                            \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MenuItemConfig)\n                    \n                \n                        \n                            \n                                Defined in src/workbench/desktop/menu/menu-item.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MenuItemConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        callback\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuCommonFunction\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItemType\n\n                    \n                \n                    \n                        \n                                Defined in src/workbench/desktop/menu/menu-item.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {uuid} from '../utils';\n/* eslint-disable no-shadow */\nexport enum MenuItemType {\n    group,\n    item\n}\n\nexport type MenuCommonFunction = (menu: MenuItem, context: any) => void;\n\nexport interface MenuItemConfig {\n    title: string;\n    type: MenuItemType;\n    callback: MenuCommonFunction;\n    command?: string;\n}\n\nexport class MenuItem {\n    public readonly id!: string;\n    private title!:string;\n    private type!: MenuItemType;\n    private callback: MenuCommonFunction;\n    private children!: MenuItem[];\n    constructor(config: MenuItemConfig) {\n        this.id = uuid();\n        const {title, type, callback} = config;\n        if (type === MenuItemType.group) {\n            this.children = [];\n        }\n        this.title = title;\n        this.type = type;\n        this.callback = callback;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemConfig.html":{"url":"interfaces/MenuItemConfig.html","title":"interface - MenuItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workbench/desktop/menu/menu-item.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            command\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         MenuCommonFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuCommonFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         MenuItemType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItemType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {uuid} from '../utils';\n/* eslint-disable no-shadow */\nexport enum MenuItemType {\n    group,\n    item\n}\n\nexport type MenuCommonFunction = (menu: MenuItem, context: any) => void;\n\nexport interface MenuItemConfig {\n    title: string;\n    type: MenuItemType;\n    callback: MenuCommonFunction;\n    command?: string;\n}\n\nexport class MenuItem {\n    public readonly id!: string;\n    private title!:string;\n    private type!: MenuItemType;\n    private callback: MenuCommonFunction;\n    private children!: MenuItem[];\n    constructor(config: MenuItemConfig) {\n        this.id = uuid();\n        const {title, type, callback} = config;\n        if (type === MenuItemType.group) {\n            this.children = [];\n        }\n        this.title = title;\n        this.type = type;\n        this.callback = callback;\n    }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardController.html":{"url":"classes/SplitBoardController.html","title":"class - SplitBoardController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeId\n                            \n                            \n                                    Private\n                                expandActive\n                            \n                            \n                                    Private\n                                expandLeaveHandler\n                            \n                            \n                                    Private\n                                expandMouseUpHandler\n                            \n                            \n                                    Private\n                                expandMoveHandler\n                            \n                            \n                                    Private\n                                expandType\n                            \n                            \n                                    Private\n                                startX\n                            \n                            \n                                    Private\n                                startY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeExpand\n                            \n                            \n                                    Public\n                                checkExpandState\n                            \n                            \n                                    Private\n                                liveResize\n                            \n                            \n                                    Public\n                                onMouseDown\n                            \n                            \n                                    Public\n                                setActiveState\n                            \n                            \n                                    Private\n                                unactiveExpand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(view: SplitBoardView)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.controller.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        view\n                                                  \n                                                        \n                                                                        SplitBoardView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandLeaveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMouseUpHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandMoveHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.controller.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        activeExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    activeExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkExpandState\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkExpandState(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        liveResize\n                        \n                    \n                \n            \n            \n                \n                    \n                    liveResize(clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onMouseDown\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseDown(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setActiveState\n                        \n                    \n                \n            \n            \n                \n                    \n                    setActiveState(index: number, startX: number, startY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        unactiveExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    unactiveExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { directionType } from './split-board.view';\nimport type SplitBoardView from './split-board.view';\nimport type SplitItemView from './split-item.view';\n\nexport default class SplitBoardController {\n    private expandMoveHandler!: (event: MouseEvent) => void;\n    private expandLeaveHandler!: (event: MouseEvent) => void;\n    private expandMouseUpHandler!: (event: MouseEvent) => void;\n\n    private startX = 0;\n    private startY = 0;\n    private activeId = -1;\n\n    private expandActive = false;\n    private expandType = 0; // 是否超过偏移值 0 / 1 expand hor | 2 expand ver | 3 merge hor | 4 merge ver\n\n    constructor(private view: SplitBoardView) {\n        this.expandMoveHandler = (event: MouseEvent) => {\n            this.liveResize(event.clientX, event.clientY);\n            this.checkExpandState(event.clientX, event.clientY);\n        };\n        this.expandLeaveHandler = (event: MouseEvent) => { this.unactiveExpand(); };\n        this.expandMouseUpHandler = (event: MouseEvent) => { this.unactiveExpand(); };\n        this.view.root.addEventListener('mousedown', (event: MouseEvent) => {\n            this.onMouseDown(event);\n        });\n    }\n    public onMouseDown(event: MouseEvent): void {\n        const target = event.target as HTMLElement;\n        let index = -1;\n        this.view.items.forEach((item, i) => {\n            if (target && item.root == target.parentElement && target.classList.contains('split-expand')) index = i;\n        });\n        if (index === -1) {\n            return;\n        }\n        if (index > -1) {\n            this.setActiveState(index, event.clientX, event.clientY);\n        }\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    public setActiveState(index: number, startX: number, startY: number) {\n        // 锚点mousedown\n        this.startX = startX;\n        this.startY = startY;\n        this.activeExpand();\n        this.activeId = index;\n    }\n    private activeExpand() {\n        this.view.root.addEventListener('mousemove', this.expandMoveHandler);\n        this.view.root.addEventListener('mouseleave', this.expandLeaveHandler);\n        this.view.root.addEventListener('mouseup', this.expandMouseUpHandler);\n        this.expandActive = true;\n        this.expandType = 0;\n        this.view.setCursor('crosshair');\n    }\n    private unactiveExpand() {\n        if (this.expandActive) {\n            this.view.root.removeEventListener('mousemove', this.expandMoveHandler);\n            this.view.root.removeEventListener('mouseleave', this.expandLeaveHandler);\n            this.view.root.removeEventListener('mouseup', this.expandMouseUpHandler);\n            this.view.cancelForMerge();\n            this.expandActive = false;\n            this.expandType = 0;\n            this.view.setCursor('');\n        }\n    }\n    private liveResize(clientX: number, clientY: number) {\n        const item = this.view.items[this.activeId];\n        if (this.expandType == 1 && this.view.direction == directionType.col) {\n            // horizontal expand column\n            this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n        } else if (this.expandType == 2 && this.view.direction == directionType.row) {\n            // vertical expand row\n            this.view.resizeAt(this.activeId, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n        }\n\n    }\n    public checkExpandState(clientX: number, clientY: number) {\n        const offsetX = this.startX - clientX;\n        const offsetY = this.startY - clientY;\n        /** expand mode */\n        if (this.expandType == 0 && offsetX > 0 && offsetY > 0 && (offsetX > 5 || offsetY > 5)) {\n            if (offsetX > offsetY) {\n                this.view.setCursor('col-resize');\n            } else {\n                this.view.setCursor('row-resize');\n            }\n        }\n        /** merge mode */\n        if (offsetX  5) {\n            this.view.setCursor('w-resize');\n            this.view.waitForMergeAtItem(this.activeId, 'w');\n            return;\n        }\n\n        if (offsetY  5) {\n            this.view.setCursor('n-resize');\n            this.view.waitForMergeAtItem(this.activeId, 'n');\n            return;\n        }\n\n        if (this.expandType) return;\n        /** do expand */\n        if (offsetX > 30) {\n            this.expandType = 1;\n            this.view.setCursor('col-resize');\n            this.view.splitColumnAt(this.activeId, clientX, clientY);\n            return;\n        }\n        if (offsetY > 30) {\n            this.expandType = 2;\n            this.view.setCursor('row-resize');\n            this.view.splitRowAt(this.activeId, clientX, clientY);\n        }\n        if (\n            (this.expandType == 1 && this.view.direction == directionType.row) ||\n            (this.expandType == 2 && this.view.direction == directionType.col)\n        ) {\n            this.unactiveExpand();\n        }\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitBoardView.html":{"url":"classes/SplitBoardView.html","title":"class - SplitBoardView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitBoardView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-board.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _waitForMergeItem\n                            \n                            \n                                    Public\n                                controller\n                            \n                            \n                                    Public\n                                direction\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Private\n                                splitInstance\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addColumn\n                            \n                            \n                                    Public\n                                addRow\n                            \n                            \n                                    Public\n                                applySplit\n                            \n                            \n                                    Public\n                                cancelForMerge\n                            \n                            \n                                    Private\n                                checkDirection\n                            \n                            \n                                    Private\n                                destorySplit\n                            \n                            \n                                    Private\n                                getExpandResizes\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Public\n                                insertItemAt\n                            \n                            \n                                    Public\n                                resizeAt\n                            \n                            \n                                    Public\n                                setCursor\n                            \n                            \n                                    Public\n                                splitColumnAt\n                            \n                            \n                                    Public\n                                splitRowAt\n                            \n                            \n                                    Private\n                                startToExpand\n                            \n                            \n                                    Public\n                                waitForMergeAtItem\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-board.view.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _waitForMergeItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitItemView | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        controller\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SplitBoardController\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        direction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         directionType\n\n                    \n                \n                \n                    \n                        Default value : directionType.col\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitItemView[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        splitInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Split.Instance | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-board.view.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addColumn\n                        \n                    \n                \n            \n            \n                \n                    \n                    addColumn(item: SplitItemView)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addRow\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRow(item: SplitItemView)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applySplit\n                        \n                    \n                \n            \n            \n                \n                    \n                    applySplit(direction: \"vertical\" | \"horizontal\", sizes?: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"vertical\" | \"horizontal\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'horizontal'\n                                    \n\n                                \n                                \n                                    sizes\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkDirection\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkDirection(type: directionType)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                directionType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        destorySplit\n                        \n                    \n                \n            \n            \n                \n                    \n                    destorySplit()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getExpandResizes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getExpandResizes(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        insertItemAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertItemAt(item: SplitItemView, pos?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SplitItemView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pos\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resizeAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    resizeAt(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:159\n                \n            \n\n\n            \n                \n                    live resize after expanded\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCursor\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCursor(type: string | \"row-resize\" | \"col-resize\" | \"crosshair\" | \"e-resize\" | \"w-resize\" | \"s-resize\" | \"n-resize\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            string | \"row-resize\" | \"col-resize\" | \"crosshair\" | \"e-resize\" | \"w-resize\" | \"s-resize\" | \"n-resize\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        splitColumnAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    splitColumnAt(index: number, clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        splitRowAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    splitRowAt(index: number, clientX: number, clientY: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        startToExpand\n                        \n                    \n                \n            \n            \n                \n                    \n                    startToExpand(index: number, start: number, length: number, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMergeAtItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMergeAtItem(index: number, direction: \"w\" | \"e\" | \"n\" | \"s\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-board.view.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"n\" | \"s\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view'; \nimport { injectable, inject } from 'inversify';\nimport SplitItemView from './split-item.view';\nimport SplitBoardController from './split-board.controller';\nimport Split from 'split.js';\n\nexport const lowBoardRoot = Symbol.for('FlowTableRoot');\n\nexport enum directionType {\n    'col',\n    'row'\n}\n\n@injectable()\n/** Split Board View */\nexport default class SplitBoardView extends View {\n    public items: SplitItemView[] = [];\n    public direction : directionType = directionType.col;\n    private splitInstance: Split.Instance | null = null;\n    public controller: SplitBoardController;\n    private _waitForMergeItem: SplitItemView | null = null;\n    constructor() {\n        super();\n        this.init();\n        this.controller = new SplitBoardController(this);\n    }\n    private init() {\n        this.root.classList.add('split-board', 'flex', 'flex-nowrap', 'overflow-hidden');\n        // this.root.style.margin = '0 4px';\n    }\n    public addRow(item: SplitItemView):void {\n        if (!this.checkDirection(directionType.row)) {\n            console.warn('direction is not right when added row', item);\n            return;\n        }\n        this.direction = directionType.row;\n        this.root.classList.remove('flex-row');\n        this.root.classList.add('flex-col');\n        this.insertItemAt(item);\n        this.applySplit('vertical');\n    }\n    public addColumn(item: SplitItemView): void {\n        if (!this.checkDirection(directionType.col)) {\n            console.warn('direction is not right when added col', item);\n            return;\n        }\n        this.direction = directionType.col;\n        this.root.classList.remove('flex-col');\n        this.root.classList.add('flex-row');\n        this.insertItemAt(item);\n        this.applySplit();\n\n    }\n    public insertItemAt(item: SplitItemView, pos?: number):void {\n        pos = pos === undefined ? this.items.length : pos;\n        this.items.splice(pos, 0, item);\n        if(pos == 0) {\n            this.root.appendChild(item.root);\n        } else {\n            this.items[pos-1].root.after(item.root);\n        }\n    }\n\n    public setCursor(type: '' | 'row-resize' | 'col-resize' | 'crosshair' | 'e-resize' | 'w-resize' | 's-resize' | 'n-resize' = ''):void {\n        this.root.style.cursor = type;\n    }\n    public waitForMergeAtItem(index: number, direction: 'w' | 'e' | 'n' | 's'):void {\n        if (this._waitForMergeItem== this.items[index]) {\n            return;\n        }\n        this.cancelForMerge();\n        if (this.items[index]) {\n            this.items[index].waitForMerge(direction);\n            this._waitForMergeItem = this.items[index];\n        }\n    }\n    public cancelForMerge():void {\n        if (this._waitForMergeItem) {\n            this._waitForMergeItem.cancelWaitForMerge();\n            this._waitForMergeItem = null;\n        }\n    }\n    private checkDirection(type: directionType) {\n        if (this.items.length > 1 && this.direction !== type) {\n            return false;\n        }\n        return true;\n    }\n    // public removeColumn(item: SplitItemView) {\n    //     // do sth.\n    // }\n    // public removeRow(item: SplitItemView) {\n    //     // do sth.\n    // }\n    public applySplit(direction: 'vertical' | 'horizontal' = 'horizontal', sizes?: number[]):void {\n        this.destorySplit();\n        this.splitInstance = Split(Array.prototype.slice.call(this.root.children), {\n            sizes,\n            // sizes: [30, 70],\n            minSize: 15,\n            direction,\n            snapOffset: 0,\n            gutterStyle: () => direction == 'vertical' ? {height: '3px'} : {width: '3px'},\n        });\n    }\n\n    private destorySplit() {\n        this.splitInstance && this.splitInstance.destroy();\n        this.splitInstance = null;\n    }\n    // 切分列\n    public splitColumnAt(index: number, clientX: number, clientY: number):void {\n        const item = this.items[index];\n        if (!this.checkDirection(directionType.col)) { // 列切分行\n            const newBoard = new SplitBoardView().setFlow('1');\n            const contentView = item.contentView;\n            item.replaceContent(newBoard.root);\n            const newItemView = new SplitItemView().setContent(contentView);\n            const newEmptyView = new SplitItemView().setContent(document.createElement('div'));\n            item.hideExpandButton(); // 不再使用该item的拉伸按钮\n            newBoard.addColumn(newItemView);\n            // newBoard.addColumn(newEmptyView);\n            newBoard.controller.setActiveState(0, clientX, clientY);\n            newBoard.controller.checkExpandState(clientX, clientY);\n            return;\n        }\n        // 列扩展列\n        this.startToExpand(index, item.root.getBoundingClientRect().left, item.root.clientWidth, clientX);\n    }\n    // 切分行\n    public splitRowAt(index: number, clientX: number, clientY: number):void {\n        const item = this.items[index];\n        if (!this.checkDirection(directionType.row)) { // 行切分列\n            const newBoard = new SplitBoardView().setFlow('1');\n            const contentView = item.contentView;\n            item.replaceContent(newBoard.root);\n            const newItemView = new SplitItemView().setContent(contentView);\n            const newEmptyView = new SplitItemView().setContent(document.createElement('div'));\n            item.hideExpandButton(); // 不再使用该item的拉伸按钮\n            newBoard.addRow(newItemView);\n            // newBoard.addRow(newEmptyView);\n            newBoard.controller.setActiveState(0, clientX, clientY);\n            newBoard.controller.checkExpandState(clientX, clientY);\n            return;\n        }\n        // 行切分行\n        this.startToExpand(index, item.root.getBoundingClientRect().top, item.root.clientHeight, clientY);\n    }\n\n    private startToExpand(index: number, start: number, length: number, position: number) {\n        const newSizes = this.getExpandResizes(index, start, length, position);\n        const newItem = new SplitItemView().setContent(document.createElement('div'));\n        this.destorySplit();\n        this.insertItemAt(newItem, index + 1);\n        this.applySplit(this.direction == directionType.col ? 'horizontal' : 'vertical', newSizes);\n    }\n\n    /** live resize after expanded  */\n    public resizeAt(index: number, start: number, length: number, position: number):void {\n        if (!this.splitInstance) return;\n        // const item = this.items[index];\n        let max = length;\n        if (this.items[index +1]) {\n            max += this.items[index +1].root[\n                this.direction == directionType.col ? 'clientWidth': 'clientHeight'\n            ];\n        }\n        const r = (position - start) / max;\n        if (position - start  {\n            sum += size;\n            if (i == index || i == index +1) return;\n            other += size;\n        });\n        let newSize = 0;\n        const newSizes: number[] = [];\n        this.splitInstance.getSizes().forEach((size, i) => {\n            if (index == i) {\n                newSize = (sum - other) * r;\n                newSizes.push(newSize);\n            } else if (index + 1 == i) {\n                newSizes.push(sum - other - newSize);\n            }else if (index !== i) {\n                newSizes.push(size);\n            }\n        });\n        this.splitInstance.setSizes(newSizes);\n    }\n\n\n    private getExpandResizes(index: number, start: number, length: number, position: number) {\n        const r =  (position - start) / length;\n        if (r = 1) return;\n        const newSizes: number[] = [];\n        this.splitInstance && this.splitInstance.getSizes().forEach((size, i) => {\n            if (index !== i) {\n                newSizes.push(size);\n                return;\n            }\n            const w =  size * r;\n            newSizes.push(w, size-w);\n        });\n        return newSizes;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SplitItemView.html":{"url":"classes/SplitItemView.html","title":"class - SplitItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SplitItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/layout/split-item.view.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        View\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bgColorClassName\n                            \n                            \n                                    Private\n                                _growClassName\n                            \n                            \n                                    Private\n                                _shrinkClassName\n                            \n                            \n                                    Public\n                                contentView\n                            \n                            \n                                    Private\n                                expand\n                            \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addExpandButton\n                            \n                            \n                                    Public\n                                cancelWaitForMerge\n                            \n                            \n                                    Public\n                                hideExpandButton\n                            \n                            \n                                    Public\n                                isShrink\n                            \n                            \n                                    Public\n                                replaceContent\n                            \n                            \n                                    Public\n                                setContent\n                            \n                            \n                                    Private\n                                setDefaultClass\n                            \n                            \n                                    Public\n                                setGrow\n                            \n                            \n                                    Public\n                                setShrink\n                            \n                            \n                                    Public\n                                waitForMerge\n                            \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/layout/split-item.view.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _bgColorClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['bg-cgray-100', 'dark:bg-cgray-800']\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _growClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _shrinkClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SplitExpand\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/layout/split-item.view.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                Inherited from         View\n\n                            \n                        \n                    \n                        \n                                Defined in         View:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    addExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancelWaitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelWaitForMerge()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideExpandButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExpandButton()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:70\n                \n            \n\n\n            \n                \n                    To hide expand button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    isShrink()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        replaceContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContent(contentView: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentView\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SplitItemView\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultClass()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setGrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    setGrow(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-grow'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setShrink\n                        \n                    \n                \n            \n            \n                \n                    \n                    setShrink(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'flex-shrink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForMerge\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForMerge(direction: \"w\" | \"e\" | \"s\" | \"n\")\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/layout/split-item.view.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                            \"w\" | \"e\" | \"s\" | \"n\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Inherited from         View\n\n                \n            \n            \n                \n                        Defined in         View:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import View from '../view';\nimport { directionType } from './split-board.view';\nimport SplitExpand from './split-expand.svelte';\n\nenum directionStyles {\n    'w' = 'merge-w',\n    'e' = 'merge-e',\n    's' = 'merge-s',\n    'n' = 'merge-n'\n}\n\nexport default class SplitItemView extends View {\n    private _growClassName = '';\n    private _shrinkClassName = '';\n    private _bgColorClassName: string[] = ['bg-cgray-100', 'dark:bg-cgray-800'];\n\n    public contentView!: HTMLElement;\n    private expand!: SplitExpand;\n\n    constructor() {\n        super();\n        this.addExpandButton();\n        this.setDefaultClass();\n\n    }\n\n    public setContent(contentView: HTMLElement): SplitItemView {\n        this.contentView = contentView;\n        this.root.classList.add('split-item', 'flex');\n        contentView.classList.add('flex', 'flex-1');\n        return this.prepend(contentView);\n    }\n\n    public replaceContent(contentView: HTMLElement): SplitItemView {\n        this.root.replaceChild(contentView, this.contentView);\n        this.contentView = contentView;\n        contentView.classList.add('flex', 'flex-1');\n        return this;\n    }\n\n    public setGrow(className = 'flex-grow'): void {\n        this.root.classList.remove(this._shrinkClassName);\n        this._shrinkClassName = '';\n        this._growClassName = className;\n        this.root.classList.add(this._growClassName);\n    }\n\n    public setShrink(className = 'flex-shrink'): void {\n        this.root.classList.remove(this._growClassName);\n        this._growClassName = '';\n        this._shrinkClassName = className;\n        this.root.classList.add(this._shrinkClassName);\n    }\n\n    public isShrink(): boolean {\n        return !!this._growClassName;\n    }\n\n    private setDefaultClass() {\n        this.root.classList.add('flex-grow', 'rounded-xl');\n        this.root.classList.add('relative');\n        this.root.classList.add(...this._bgColorClassName);\n\n    }\n\n    private addExpandButton() {\n        this.expand = new SplitExpand({ target: this.root });\n    }\n    /** To hide expand button */\n    public hideExpandButton(): void {\n        this.expand.expandHidden = true;\n    }\n\n    public waitForMerge(direction: 'w' | 'e' | 's' | 'n'): void {\n        this.cancelWaitForMerge();\n        this.root.classList.add('wait-for-merge');\n        this.expand.mergeDirection = directionStyles[direction];\n    }\n\n    public cancelWaitForMerge(): void {\n        this.root.classList.remove('wait-for-merge');\n        this.expand.mergeDirection = '';\n    }\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Test.html":{"url":"classes/Test.html","title":"class - Test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Test\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/parts/test.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                print\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        print\n                        \n                    \n                \n            \n            \n                \n                    \n                    print(target: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/parts/test.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Test {\n  public print(target: string) {\n    console.log(`test ok: ${target}`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/View.html":{"url":"classes/View.html","title":"class - View","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  View\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/view.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                prepend\n                            \n                            \n                                setFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(root?: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/view.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/view.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(child: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    child\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepend\n                        \n                    \n                \n            \n            \n                \nprepend(...childs: HTMLElement[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    childs\n                                    \n                                            HTMLElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFlow\n                        \n                    \n                \n            \n            \n                \nsetFlow(type: FlowValue)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/view.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                FlowValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        type FlowValue = '1' | 'auto' | 'initial' | 'none';\n\nexport default class View {\n    public root: HTMLElement;\n    constructor(root?: HTMLElement) {\n        this.root = root || document.createElement('div');\n    }\n    setFlow(type: FlowValue) {\n        this.root.classList.remove('flex-1', 'flex-auto', 'flex-initial', 'flex-none');\n        this.root.classList.add(`flex-${type}`);\n        return this;\n    }\n    append(child: HTMLElement) {\n        this.root.appendChild(child);\n        return this;\n    }\n    prepend(...childs: HTMLElement[]) {\n        this.root.prepend(...childs);\n        return this;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeightMap.html":{"url":"interfaces/WeightMap.html","title":"interface - WeightMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WeightMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [index: string]:        number\n\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:11\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        interface classConfig {\n    id: string,\n    class: string[];\n}\n\ninterface stateConfig {\n    id: string,\n    classes: classConfig[];\n    weight?: number\n}\ninterface WeightMap {\n    [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n    'undefined': 100,\n    'default': 200,\n    'focus': 300,\n    'hover': 400,\n    'active': 600,\n    'disabled': 800,\n};\nexport class classBuilder {\n    private orderedConfigs: stateConfig[] = [];\n    constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n        configs.forEach((config: stateConfig) => {\n            this.insertConfig(config);\n        });\n    }\n    public clear(): void {\n        this.orderedConfigs = [];\n    }\n    public addConfig(config: stateConfig): void {\n        this.insertConfig(config);\n    }\n    private insertConfig(config: stateConfig) {\n        const c = this.normalizeWeight(config);\n        let cursor = 0;\n        while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/classBuilder.html":{"url":"classes/classBuilder.html","title":"class - classBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  classBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                orderedConfigs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addConfig\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Private\n                                insertConfig\n                            \n                            \n                                    Private\n                                normalizeWeight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configs: stateConfig[], weightMap: WeightMap)\n                    \n                \n                        \n                            \n                                Defined in src/core/browser/class-builder.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                        stateConfig[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weightMap\n                                                  \n                                                        \n                                                                        WeightMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orderedConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         stateConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/browser/class-builder.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    addConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConfig(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        normalizeWeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    normalizeWeight(config: stateConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/browser/class-builder.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                stateConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         stateConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        interface classConfig {\n    id: string,\n    class: string[];\n}\n\ninterface stateConfig {\n    id: string,\n    classes: classConfig[];\n    weight?: number\n}\ninterface WeightMap {\n    [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n    'undefined': 100,\n    'default': 200,\n    'focus': 300,\n    'hover': 400,\n    'active': 600,\n    'disabled': 800,\n};\nexport class classBuilder {\n    private orderedConfigs: stateConfig[] = [];\n    constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n        configs.forEach((config: stateConfig) => {\n            this.insertConfig(config);\n        });\n    }\n    public clear(): void {\n        this.orderedConfigs = [];\n    }\n    public addConfig(config: stateConfig): void {\n        this.insertConfig(config);\n    }\n    private insertConfig(config: stateConfig) {\n        const c = this.normalizeWeight(config);\n        let cursor = 0;\n        while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/classConfig.html":{"url":"interfaces/classConfig.html","title":"interface - classConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  classConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n    id: string,\n    class: string[];\n}\n\ninterface stateConfig {\n    id: string,\n    classes: classConfig[];\n    weight?: number\n}\ninterface WeightMap {\n    [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n    'undefined': 100,\n    'default': 200,\n    'focus': 300,\n    'hover': 400,\n    'active': 600,\n    'disabled': 800,\n};\nexport class classBuilder {\n    private orderedConfigs: stateConfig[] = [];\n    constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n        configs.forEach((config: stateConfig) => {\n            this.insertConfig(config);\n        });\n    }\n    public clear(): void {\n        this.orderedConfigs = [];\n    }\n    public addConfig(config: stateConfig): void {\n        this.insertConfig(config);\n    }\n    private insertConfig(config: stateConfig) {\n        const c = this.normalizeWeight(config);\n        let cursor = 0;\n        while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            createWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            mainWindow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/index.ts\n            \n            variable\n            notification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/logger.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            interface\n            ISettings\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/settings.ts\n            \n            variable\n            settings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            class\n            classBuilder\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            classConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            stateConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            interface\n            WeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/class-builder.ts\n            \n            variable\n            defaultWeightMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.controller.ts\n            \n            class\n            SplitBoardController\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            class\n            SplitBoardView\n            \n                3 %\n                (1/26)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-board.view.ts\n            \n            variable\n            lowBoardRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/layout/split-item.view.ts\n            \n            class\n            SplitItemView\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            function\n            makeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BgColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            BorderColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlAccentColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlBackgroundColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlDisabledColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlForbiddenColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            ControlHighlightColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            FourthBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            GridBackgroundColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            LabelColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SecondaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemBlueColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemGrayColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemOrangeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemPinkColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemRedColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            SystemYellowColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryBgColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TertiaryLabelColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/style/ui-color.ts\n            \n            variable\n            TextFieldBackground\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/browser/view.ts\n            \n            class\n            View\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/color-ref.ts\n            \n            class\n            ColorRef\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/parts/ioc/inject.ts\n            \n            function\n            inject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/parts/test.ts\n            \n            class\n            Test\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/workbench/desktop/app.ts\n            \n            class\n            App\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/workbench/desktop/base-menu/base-menu.ts\n            \n            class\n            BaseMenu\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/workbench/desktop/base-menu/config.ts\n            \n            variable\n            applicationMenus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/desktop/main.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu-item.ts\n            \n            class\n            MenuItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu-item.ts\n            \n            interface\n            MenuItemConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/workbench/desktop/menu/menu.ts\n            \n            class\n            Menu\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/workbench/desktop/utils/utils.ts\n            \n            variable\n            uuid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workbench/services/appearance-service.ts\n            \n            class\n            AppearanceService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/workbench/services/menu-group-service.ts\n            \n            class\n            MenuGroupService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @types/color : ^3.0.1\n        \n            color : ^3.1.3\n        \n            electron-log : ^4.3.1\n        \n            electron-store : ^7.0.2\n        \n            electron-updater : ^4.3.5\n        \n            eventemitter2 : ^6.4.4\n        \n            inversify : ^5.1.1\n        \n            keycode : ^2.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            smelte : ^1.1.5\n        \n            split.js : ^1.6.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppearanceType   (src/.../appearance.ts)\n                        \n                        \n                            directionStyles   (src/.../split-item.view.ts)\n                        \n                        \n                            directionType   (src/.../split-board.view.ts)\n                        \n                        \n                            MenuItemType   (src/.../menu-item.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/common/appearance.ts\n    \n        \n            \n                \n                    \n                        \n                        AppearanceType\n                    \n                \n                    \n                        \n                            模式类型\n\n                        \n                    \n                        \n                            \n                                 any\n                            \n                        \n                        \n                            \n                                 light\n                            \n                        \n                        \n                            \n                                 dark\n                            \n                        \n            \n        \n\n    src/core/browser/layout/split-item.view.ts\n    \n        \n            \n                \n                    \n                        \n                        directionStyles\n                    \n                \n                        \n                            \n                                 w\n                            \n                        \n                        \n                            \n                                Value : merge-w\n                            \n                        \n                        \n                            \n                                 e\n                            \n                        \n                        \n                            \n                                Value : merge-e\n                            \n                        \n                        \n                            \n                                 s\n                            \n                        \n                        \n                            \n                                Value : merge-s\n                            \n                        \n                        \n                            \n                                 n\n                            \n                        \n                        \n                            \n                                Value : merge-n\n                            \n                        \n            \n        \n\n    src/core/browser/layout/split-board.view.ts\n    \n        \n            \n                \n                    \n                        \n                        directionType\n                    \n                \n                        \n                            \n                                 col\n                            \n                        \n                        \n                            \n                                 row\n                            \n                        \n            \n        \n\n    src/workbench/desktop/menu/menu-item.ts\n    \n        \n            \n                \n                    \n                        \n                        MenuItemType\n                    \n                \n                        \n                            \n                                 group\n                            \n                        \n                        \n                            \n                                 item\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            inject   (src/.../inject.ts)\n                        \n                        \n                            makeColor   (src/.../ui-color.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/parts/ioc/inject.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inject\n                        \n                    \n                \n            \n            \n                \ninject(token)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        makeColor\n                        \n                    \n                \n            \n            \n                \nmakeColor(anyColorHex, lightColorHex?, darkColorHex?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anyColorHex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    darkColorHex\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCosmic Design\n\n\n\n\n\n🚧 ing...\n\nThe Repository\nCosmic design is a concrete practice of D2R.\nThis repository is where we develop it together with the community. Not only do we work on code and issues here, we also publish our roadmap , development guide. This source code is available to everyone under the standard MIT license.\nAbout Cosmic Design\n\n🚧 ing...\n\nHow it works\nThe template required a minimum dependencies. Only Vite is used for building, nothing more.\nProject Structure\nThe structure of this template is very similar to the structure of a monorepo.\nThe entire source code of the program is divided into three modules (packages) that are bundled each independently:\n\nsrc/core\nInclude common dependencies, such as components, utils, ipc.\nsrc/app\nElectron main script.\nsrc/workbench\nElectron web page.\n\nCosmic Components\n\nComponents StoryBook\nsrc/core/components\n\nCompile App\nNext step is run  packaging and compilation a ready for distribution Electron app for macOS, Windows and Linux with \"auto update\" support out of the box. \nTo do this, using the electron-builder:\n\nIn npm script compile: This script is configured to compile the application as quickly as possible. It is not ready for distribution, is compiled only for the current platform and is used for debugging.\nIn GitHub Action: The application is compiled for any platform and ready-to-distribute files are automatically added to the draft GitHub release. \n\nContribution\nSee Wiki Contributing\n\nSource Code Organization\nUser Interface\nColor Set\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 qiansc\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/stateConfig.html":{"url":"interfaces/stateConfig.html","title":"interface - stateConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  stateConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/browser/class-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:         classConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         classConfig[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface classConfig {\n    id: string,\n    class: string[];\n}\n\ninterface stateConfig {\n    id: string,\n    classes: classConfig[];\n    weight?: number\n}\ninterface WeightMap {\n    [index: string]: number;\n}\n\nconst defaultWeightMap: WeightMap = {\n    'undefined': 100,\n    'default': 200,\n    'focus': 300,\n    'hover': 400,\n    'active': 600,\n    'disabled': 800,\n};\nexport class classBuilder {\n    private orderedConfigs: stateConfig[] = [];\n    constructor(configs: stateConfig[], private weightMap: WeightMap = defaultWeightMap) {\n        configs.forEach((config: stateConfig) => {\n            this.insertConfig(config);\n        });\n    }\n    public clear(): void {\n        this.orderedConfigs = [];\n    }\n    public addConfig(config: stateConfig): void {\n        this.insertConfig(config);\n    }\n    private insertConfig(config: stateConfig) {\n        const c = this.normalizeWeight(config);\n        let cursor = 0;\n        while (this.orderedConfigs[cursor] && this.orderedConfigs[cursor].weight! \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FlowValue   (src/.../view.ts)\n                        \n                        \n                            MenuCommonFunction   (src/.../menu-item.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/browser/view.ts\n    \n    \n        \n            \n                \n                    \n                    FlowValue\n                \n            \n            \n                \n                        \"1\" | \"auto\" | \"initial\" | \"none\"\n\n                \n            \n        \n    \n    src/workbench/desktop/menu/menu-item.ts\n    \n    \n        \n            \n                \n                    \n                    MenuCommonFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (src/.../main.ts)\n                        \n                        \n                            applicationMenus   (src/.../config.ts)\n                        \n                        \n                            BgColor   (src/.../ui-color.ts)\n                        \n                        \n                            BorderColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlAccentColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlDisabledColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlForbiddenColor   (src/.../ui-color.ts)\n                        \n                        \n                            ControlHighlightColor   (src/.../ui-color.ts)\n                        \n                        \n                            createWindow   (src/.../index.ts)\n                        \n                        \n                            defaultWeightMap   (src/.../class-builder.ts)\n                        \n                        \n                            FourthBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            GridBackgroundColor   (src/.../ui-color.ts)\n                        \n                        \n                            isProd   (src/.../index.ts)\n                        \n                        \n                            isProd   (src/.../logger.ts)\n                        \n                        \n                            LabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            logger   (src/.../logger.ts)\n                        \n                        \n                            lowBoardRoot   (src/.../split-board.view.ts)\n                        \n                        \n                            mainWindow   (src/.../index.ts)\n                        \n                        \n                            notification   (src/.../index.ts)\n                        \n                        \n                            SecondaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            SecondaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            settings   (src/.../settings.ts)\n                        \n                        \n                            SystemBlueColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemGrayColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemOrangeColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemPinkColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemRedColor   (src/.../ui-color.ts)\n                        \n                        \n                            SystemYellowColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryBgColor   (src/.../ui-color.ts)\n                        \n                        \n                            TertiaryLabelColor   (src/.../ui-color.ts)\n                        \n                        \n                            TextFieldBackground   (src/.../ui-color.ts)\n                        \n                        \n                            uuid   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workbench/desktop/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new App(document.body)\n                    \n                \n\n\n        \n    \n\n    src/workbench/desktop/base-menu/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applicationMenus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        title: '文件',\n        items: [\n            {\n                title: '打开文件',\n                type: MenuItemType.group,\n                callback: (item, context) => console.log(item),\n            },\n            {\n                title: '保存',\n                type: MenuItemType.group,\n                callback: (item, context) => console.log(item),\n            },\n\n            {\n                title: '另存为',\n                type: MenuItemType.group,\n                callback: (item, context) => console.log(item),\n            },\n        ],\n    },\n]\n                    \n                \n\n\n        \n    \n\n    src/core/browser/style/ui-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#E0E0E0', '#E0E0E0', '#1F1F1F')\n                    \n                \n\n            \n                \n                    三级背景色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BorderColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D9D9D9', '#D9D9D9', '#D9D9D9')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlAccentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#5580c0', '#5580c0', '#5580c0')\n                    \n                \n\n            \n                \n                    高亮色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#FFFFFF', '#5D5F61')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlDisabledColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F9F9F9', '#F9F9F9', '#464749')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlForbiddenColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ControlHighlightColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#ffae2b', '#ffae2b', '#ffae2b')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FourthBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#BABABA', '#BABABA', '#454545')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GridBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#F2F2F2', '#F2F2F2', '#2E2F30')\n                    \n                \n\n            \n                \n                    组件色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#E0E0E0')\n                    \n                \n\n            \n                \n                    三级标签色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#D7D7D7', '#D7D7D7', '#272728')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SecondaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#000000', '#000000', '#808080')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemBlueColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#729cd4', '#729cd4', '#729cd4')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemGrayColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c0c0c1', '#c0c0c1', '#c0c0c1')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemOrangeColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemPinkColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#c4666f', '#c4666f', '#c4666f')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemRedColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d00000', '#d00000', '#d00000')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SystemYellowColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#d1905d', '#d1905d', '#d1905d')\n                    \n                \n\n            \n                \n                    辅助色\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryBgColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#C6C6C6', '#C6C6C6', '#393939')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TertiaryLabelColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#3F3F3F', '#3F3F3F', '#3F3F3F')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TextFieldBackground\n                        \n                    \n                \n            \n                \n                    \n                        Default value : makeColor('#FFFFFF', '#F2F2F2', '#454545')\n                    \n                \n\n\n        \n    \n\n    src/app/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createWindow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  mainWindow = new BrowserWindow({\n    width: 900,\n    height: 680,\n    webPreferences: {\n      devTools: isProd ? false : true,\n      contextIsolation: true,\n      enableRemoteModule: false,\n      preload:  join(__dirname, 'preload.js'),\n    },\n  });\n\n  const url =\n    // process.env.NODE_ENV === \"production\"\n    isProd\n      ? // in production, use the statically build version of our application\n      `file://${join(__dirname, 'dist/workbench/desktop/', 'index.html')}`\n      : // in dev, target the host and port of the local rollup web server\n      'http://localhost:5000';\n\n  mainWindow.loadURL(url).catch((err: any) => {\n    logger.error(JSON.stringify(err));\n    app.quit();\n  });\n\n  if (!isProd) mainWindow.webContents.openDevTools();\n\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainWindow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BrowserWindow | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Notification | null\n\n                    \n                \n\n\n        \n    \n\n    src/core/browser/class-builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultWeightMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WeightMap\n\n                    \n                \n                \n                    \n                        Default value : {\n    'undefined': 100,\n    'default': 200,\n    'focus': 300,\n    'hover': 400,\n    'active': 600,\n    'disabled': 800,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/utils/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production' || !/[\\\\/]electron/.exec(process.execPath)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log\n                    \n                \n\n\n        \n    \n\n    src/core/browser/layout/split-board.view.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lowBoardRoot\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('FlowTableRoot')\n                    \n                \n\n\n        \n    \n\n    src/app/utils/settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ElectronStore({\n  defaults: {\n    check: false,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/workbench/desktop/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): string => {\n    const s: string[] | number[] = [];\n    const hexDigits = '0123456789abcdef';\n    for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
